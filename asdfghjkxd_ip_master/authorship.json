[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    mainClass.set(\"juke.Juke\")","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"    archiveBaseName \u003d \"juke\"","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"checkstyle {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"asdfghjkxd":22,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"E|T|splashdown|2022-04-24T00:00|2022-04-25T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"D|T|finish cs career|9999-12-31T00:00","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"T|F|finish cs2100 lecture","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"E|F|very big event oh no|2023-12-25T00:00|2023-12-26T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"T|F|oh no is this a bug","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"T|F|thing","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"T|F|event","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"T|F|bye","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":8}},{"path":"src/main/java/juke/Juke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commands.JukeExceptionCommand;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.parsers.JukeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.ui.Ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" * Juke Virtual Assistant","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"public class Juke {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /** Represents the longest string that can be printed. */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    public static final int MAX_STRING_LENGTH \u003d 35;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * Runs when this Java file is compiled and executed. This method is used to start {@code Juke}","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * and begin the request-response cycle.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args CLI Arguments","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"            Juke jukeAssistant \u003d new Juke();","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"            jukeAssistant.start();","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (JukeInitialisationException | JukeStorageException","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"                 | JukeParseException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"            // program should not continue if it cannot initialise properly","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"            // or if there are issues with retrieving data from the datafile","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"            new JukeExceptionCommand(ex).execute(Response.of());","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * Starts the UI for Juke.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    private void start() {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        Application.launch(Ui.class);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":42}},{"path":"src/main/java/juke/commands/JukeAddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.Juke;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.utils.StringUtils;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * Action that adds a Task to the {@code TaskList}.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeAddTaskCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code TaskList} to manage all tasks. */","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code JukeTask} to add. */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    private final JukeTask task;","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeAddTaskAction}","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task {@code JukeTask} to add","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeAddTaskCommand(TaskList taskList, JukeTask task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * Carries out an action when the command is executed.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there are any errors encountered when reading the data file","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList.addTask(this.task);","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        return response.withJuke(","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"                StringUtils.wrap(\"Task added: \" + this.task, Juke.MAX_STRING_LENGTH));","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":44}},{"path":"src/main/java/juke/commands/JukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortOrderEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.arguments.JukeIllegalCommandArgumentException;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"import juke.parsers.DateTimeParser;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"import juke.parsers.Parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeDeadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeEvent;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTodo;","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":" * Abstract class used to dispatch commands to the respective commands.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class JukeCommand extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /** Regex to detect \"|\" in the topic, which is a reserved character for the datafile. */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String ILLEGAL_TOPIC_REGEX \u003d \".*\\\\|.*\";","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates the specified {@code JukeCommand} of interest.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command Raw command from the user input","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Corresponding {@code JukeCommand} object","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    public static JukeCommand of(String command, TaskList taskList) throws JukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"        return JukeCommand.dispatchCommand(Parser.parseBySpace(command), taskList);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     * Dispatches the commands to the necessary subclasses of {@code JukeCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Corresponding {@code JukeCommand} object","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if the argument provided is not understood","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeCommand dispatchCommand(String[] args, TaskList taskList) throws JukeIllegalArgumentException {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeException(\"Oh no! No commands are present!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"        String mainCommand \u003d args[0];","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"        switch (mainCommand) {","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"        case \"list\":","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukePrintCommand(taskList);","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeExitCommand();","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.mark(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.unmark(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.delete(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.todo(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.deadline(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"        case \"event\":","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.event(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"        case \"find\":","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.find(args, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"        case \"sort\":","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"            return JukeCommand.sort(args, taskList);","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"            // exits the switch and throws an exception in the proceeding line","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I do not understand that command!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeMarkTaskDoneCommand} object.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeMarkTaskDoneCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeMarkTaskDoneCommand mark(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your mark command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"mark [task number]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"                int i \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"                return new JukeMarkTaskDoneCommand(taskList, i - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! You must input a valid task number \"","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"                                                               + \"for the command \\\"mark\\\"!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeMarkTaskUndoneCommand} object.","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeMarkTaskUndoneCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeMarkTaskUndoneCommand unmark(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your unmark command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"unmark [task number]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"                int i \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-08-20"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"                return new JukeMarkTaskUndoneCommand(taskList, i - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2023-08-20"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! You must input a valid task number \"","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"                                                               + \"for the command \\\"unmark\\\"!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeDeleteTaskCommand} object.","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeDeleteTaskCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeDeleteTaskCommand delete(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your delete command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"delete [task number]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"                int i \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"                return new JukeDeleteTaskCommand(taskList, i - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! You must input a valid task number \"","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"                                                               + \"for the command \\\"unmark\\\"!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeAddTaskCommand} object.","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeAddTaskCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeAddTaskCommand todo(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"asdfghjkxd"},"content":"            // contains only the command text","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your todo command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"todo [description]\");","lastModifiedDate":"2023-08-21"},{"lineNumber":160,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":161,"author":{"gitId":"asdfghjkxd"},"content":"            // concatenate back the string","lastModifiedDate":"2023-08-21"},{"lineNumber":162,"author":{"gitId":"asdfghjkxd"},"content":"            String newArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":163,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"asdfghjkxd"},"content":"            if (Pattern.matches(JukeCommand.ILLEGAL_TOPIC_REGEX, newArgs)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! The topic cannot contain the character \\\"|\\\"!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"asdfghjkxd"},"content":"            JukeTask jt \u003d new JukeTodo(newArgs);","lastModifiedDate":"2023-08-21"},{"lineNumber":169,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeAddTaskCommand(taskList, jt);","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":171,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeAddTaskCommand} object.","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeAddTaskCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeAddTaskCommand deadline(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"asdfghjkxd"},"content":"        // concatenate back the string","lastModifiedDate":"2023-08-21"},{"lineNumber":182,"author":{"gitId":"asdfghjkxd"},"content":"        String newDeadlineArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":183,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":184,"author":{"gitId":"asdfghjkxd"},"content":"        // check if fulfills regex","lastModifiedDate":"2023-08-21"},{"lineNumber":185,"author":{"gitId":"asdfghjkxd"},"content":"        if (!Parser.isMatchByString(newDeadlineArgs)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":186,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your deadline command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":187,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"deadline [description] /by [DD(-/)MM(-/)YYYY HH(-:)MM \"","lastModifiedDate":"2023-08-27"},{"lineNumber":188,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"or DD(-/)MM(-/)YYYY]\\n(..) -\u003e any of\");","lastModifiedDate":"2023-08-27"},{"lineNumber":189,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":190,"author":{"gitId":"asdfghjkxd"},"content":"            String[] parsedArguments \u003d Parser.parseByByString(newDeadlineArgs);","lastModifiedDate":"2023-08-26"},{"lineNumber":191,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":192,"author":{"gitId":"asdfghjkxd"},"content":"            if (Pattern.matches(JukeCommand.ILLEGAL_TOPIC_REGEX, parsedArguments[0])) {","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! The topic cannot contain the character \\\"|\\\"!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":194,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":195,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":196,"author":{"gitId":"asdfghjkxd"},"content":"            JukeTask jt \u003d new JukeDeadline(parsedArguments[0], DateTimeParser.parse(parsedArguments[1]));","lastModifiedDate":"2023-08-26"},{"lineNumber":197,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeAddTaskCommand(taskList, jt);","lastModifiedDate":"2023-08-26"},{"lineNumber":198,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":199,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeAddTaskCommand} object.","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeAddTaskCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeAddTaskCommand event(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"asdfghjkxd"},"content":"        // concatenate back the string","lastModifiedDate":"2023-08-21"},{"lineNumber":210,"author":{"gitId":"asdfghjkxd"},"content":"        String newEventArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-08-21"},{"lineNumber":211,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":212,"author":{"gitId":"asdfghjkxd"},"content":"        // check if fulfills regex","lastModifiedDate":"2023-08-21"},{"lineNumber":213,"author":{"gitId":"asdfghjkxd"},"content":"        if (!Parser.isMatchFromToString(newEventArgs)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":214,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your event command!\",","lastModifiedDate":"2023-08-26"},{"lineNumber":215,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"event [description] /from [DD(-/)MM(-/)YYYY HH(-:)MM \"","lastModifiedDate":"2023-08-27"},{"lineNumber":216,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"or DD(-/)MM(-/)YYYY]\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":217,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"/to [DD(-/)MM(-/)YYYY HH(-:)MM or DD(-/)\"","lastModifiedDate":"2023-08-27"},{"lineNumber":218,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"MM(-/)YYYY]\\n(..) -\u003e any of\");","lastModifiedDate":"2023-08-27"},{"lineNumber":219,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":220,"author":{"gitId":"asdfghjkxd"},"content":"            String[] parsedArguments \u003d Parser.parseByFromToString(newEventArgs);","lastModifiedDate":"2023-08-26"},{"lineNumber":221,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":222,"author":{"gitId":"asdfghjkxd"},"content":"            if (Pattern.matches(JukeCommand.ILLEGAL_TOPIC_REGEX, parsedArguments[0])) {","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! The topic cannot contain the character \\\"|\\\"!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":224,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":225,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":226,"author":{"gitId":"asdfghjkxd"},"content":"            LocalDateTime startTime \u003d DateTimeParser.parse(parsedArguments[1]);","lastModifiedDate":"2023-09-08"},{"lineNumber":227,"author":{"gitId":"asdfghjkxd"},"content":"            LocalDateTime endTime \u003d DateTimeParser.parse(parsedArguments[2]);","lastModifiedDate":"2023-09-08"},{"lineNumber":228,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":229,"author":{"gitId":"asdfghjkxd"},"content":"            if (endTime.isBefore(startTime)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":230,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeIllegalArgumentException(\"Oh no! The \\\"to\\\" date cannot be before the \"","lastModifiedDate":"2023-08-26"},{"lineNumber":231,"author":{"gitId":"asdfghjkxd"},"content":"                                                               + \"\\\"from\\\" date!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":232,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":233,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":234,"author":{"gitId":"asdfghjkxd"},"content":"            JukeTask jt \u003d new JukeEvent(parsedArguments[0], startTime, endTime);","lastModifiedDate":"2023-09-08"},{"lineNumber":235,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeAddTaskCommand(taskList, jt);","lastModifiedDate":"2023-08-26"},{"lineNumber":236,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":237,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":238,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":239,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":240,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a {@code JukeFindTaskCommand} object.","lastModifiedDate":"2023-09-02"},{"lineNumber":241,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":242,"author":{"gitId":"asdfghjkxd"},"content":"     * @param args Parsed arguments","lastModifiedDate":"2023-09-02"},{"lineNumber":243,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object which manages all tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":244,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeFindTaskCommand} object","lastModifiedDate":"2023-09-02"},{"lineNumber":245,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":246,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeFindTaskCommand find(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":247,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":248,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your find command!\",","lastModifiedDate":"2023-08-27"},{"lineNumber":249,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"find [word]\");","lastModifiedDate":"2023-08-27"},{"lineNumber":250,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":251,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":252,"author":{"gitId":"asdfghjkxd"},"content":"        String newFindArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 1, args.length));","lastModifiedDate":"2023-08-27"},{"lineNumber":253,"author":{"gitId":"asdfghjkxd"},"content":"        return new JukeFindTaskCommand(taskList, newFindArgs);","lastModifiedDate":"2023-08-27"},{"lineNumber":254,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":255,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":256,"author":{"gitId":"asdfghjkxd"},"content":"    private static JukeSortListCommand sort(String[] args, TaskList taskList) {","lastModifiedDate":"2023-09-11"},{"lineNumber":257,"author":{"gitId":"asdfghjkxd"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-11"},{"lineNumber":258,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your sort command!\",","lastModifiedDate":"2023-09-11"},{"lineNumber":259,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"sort [a/asc/ascending | \"","lastModifiedDate":"2023-09-11"},{"lineNumber":260,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"d/desc/descending] \"","lastModifiedDate":"2023-09-11"},{"lineNumber":261,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"[d/desc/description | \"","lastModifiedDate":"2023-09-11"},{"lineNumber":262,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"dl/deadline | \"","lastModifiedDate":"2023-09-11"},{"lineNumber":263,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"s/startstart date | \"","lastModifiedDate":"2023-09-11"},{"lineNumber":264,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"e/end/end date]\");","lastModifiedDate":"2023-09-11"},{"lineNumber":265,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":266,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":267,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":268,"author":{"gitId":"asdfghjkxd"},"content":"            String newSortArgs \u003d String.join(\" \", Arrays.copyOfRange(args, 2, args.length));","lastModifiedDate":"2023-09-11"},{"lineNumber":269,"author":{"gitId":"asdfghjkxd"},"content":"            SortOrderEnum sortOrder \u003d SortOrderEnum.ofOrder(args[1].toLowerCase());","lastModifiedDate":"2023-09-11"},{"lineNumber":270,"author":{"gitId":"asdfghjkxd"},"content":"            SortTypeEnum sortType \u003d SortTypeEnum.ofType(newSortArgs.toLowerCase());","lastModifiedDate":"2023-09-11"},{"lineNumber":271,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeSortListCommand(sortOrder, sortType, taskList);","lastModifiedDate":"2023-09-11"},{"lineNumber":272,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2023-09-11"},{"lineNumber":273,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalCommandArgumentException(\"Oh no! I cannot understand your sort command!\",","lastModifiedDate":"2023-09-11"},{"lineNumber":274,"author":{"gitId":"asdfghjkxd"},"content":"                                                          \"sort [a/asc/ascending | \"","lastModifiedDate":"2023-09-11"},{"lineNumber":275,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"d/desc/descending] \"","lastModifiedDate":"2023-09-11"},{"lineNumber":276,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"[d/desc/description | \"","lastModifiedDate":"2023-09-11"},{"lineNumber":277,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"dl/deadline | \"","lastModifiedDate":"2023-09-11"},{"lineNumber":278,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"s/startstart date | \"","lastModifiedDate":"2023-09-11"},{"lineNumber":279,"author":{"gitId":"asdfghjkxd"},"content":"                                                                  + \"e/end/end date]\");","lastModifiedDate":"2023-09-11"},{"lineNumber":280,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":281,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":282,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":283,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":284,"author":{"gitId":"asdfghjkxd"},"content":"     * Carries out an action when the command is executed.","lastModifiedDate":"2023-08-27"},{"lineNumber":285,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":286,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":287,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":288,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeException or any of its subclasses if there are any issues encountered","lastModifiedDate":"2023-09-08"},{"lineNumber":289,"author":{"gitId":"asdfghjkxd"},"content":"     *     during the execution of code","lastModifiedDate":"2023-09-08"},{"lineNumber":290,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":291,"author":{"gitId":"asdfghjkxd"},"content":"    public abstract Response execute(Response response) throws JukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":292,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":292}},{"path":"src/main/java/juke/commands/JukeDeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.Juke;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.utils.StringUtils;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * Action that deletes a Task from the {@code TaskList}.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDeleteTaskCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code TaskList} to manage all tasks. */","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /** JukeTask to remove. */","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    private final int task;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeDeleteTaskCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} instance","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Index of task to delete","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDeleteTaskCommand(TaskList taskList, int task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * Carries out an action when the command is executed.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there are any errors encountered when reading the data file","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        JukeTask jt \u003d this.taskList.deleteTask(this.task);","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        return response.withJuke(","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"                StringUtils.wrap(\"Task deleted: \" + jt, Juke.MAX_STRING_LENGTH));","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":44}},{"path":"src/main/java/juke/commands/JukeExceptionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.Juke;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.utils.StringUtils;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * Action class that corresponds to an error action.","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeExceptionCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /** Error description. */","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    private final Exception exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeExceptionCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     * @param exception Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeExceptionCommand(JukeException exception) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"        this.exception \u003d exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * Carries out an action when the command is executed.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        return response.withJuke(","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"                StringUtils.wrap(exception.toString(), Juke.MAX_STRING_LENGTH));","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":35}},{"path":"src/main/java/juke/commands/JukeExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.Juke;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.utils.StringUtils;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * Action that is invoked when the user wishes to quit the assistant.","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeExitCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    /** The farewell statement used by the assistant when the user decides to quit the assistant. */","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String EXIT_STRING \u003d \"Goodbye!\";","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeExitCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeExitCommand() {}","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * Carries out an action when the command is executed.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        return response.withJuke(","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"                StringUtils.wrap(JukeExitCommand.EXIT_STRING, Juke.MAX_STRING_LENGTH));","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":30}},{"path":"src/main/java/juke/commands/JukeFindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.Juke;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.utils.StringUtils;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" * Action that finds a Task in the {@code TaskList} according to the","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" * task description.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeFindTaskCommand extends JukeCommand {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code TaskList} to manage all tasks. */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /** Word of interest to search. */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    private final String word;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeFindTaskCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} instance","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @param word Word of interest to search","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeFindTaskCommand(TaskList taskList, String word) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        this.word \u003d word;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * Carries out an action when the command is executed.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        List\u003cJukeTask\u003e foundTasks \u003d this.taskList.findTask(this.word);","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"            stringBuilder.append(\"Sorry! I could not find any task with the word \\\"\")","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"                    .append(this.word)","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"                    .append(\"\\\" in the task list!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"            stringBuilder.append(\"Found them! Here are some of the tasks in your task list that contain the \"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"                    + \"word \\\"\")","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"                    .append(this.word)","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"                    .append(\"\\\":\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"            for (JukeTask t : foundTasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"                stringBuilder.append(t)","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"        return response.withJuke(","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"                StringUtils.wrap(stringBuilder.toString(), Juke.MAX_STRING_LENGTH));","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":63}},{"path":"src/main/java/juke/commands/JukeMarkTaskDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.Juke;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.utils.StringUtils;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" * Action that marks a {@code JukeTask} as done.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeMarkTaskDoneCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code TaskList} that manages the tasks. */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** The index of the task of interest. */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    private final int index;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeMarkTaskDoneCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} that manages the tasks","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of the Task to act on","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeMarkTaskDoneCommand(TaskList taskList, int index) {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     * Carries out an action when the command is executed.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there are any errors encountered when reading the data file","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList.setAsComplete(this.index);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        return response.withJuke(","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"                StringUtils.wrap(\"Task marked as done: \" + this.taskList.getTaskInformation(this.index),","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"                                 Juke.MAX_STRING_LENGTH));","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":44}},{"path":"src/main/java/juke/commands/JukeMarkTaskUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.Juke;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.utils.StringUtils;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" * Action that marks a {@code JukeTask} as undone.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeMarkTaskUndoneCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code TaskList} that manages the tasks. */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** The index of the task of interest. */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    private final int index;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeMarkTaskUndoneCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} that manages the tasks","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of the Task to act on","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeMarkTaskUndoneCommand(TaskList taskList, int index) {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     * Carries out an action when the command is executed.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there are any errors encountered when reading the data file","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList.setAsIncomplete(this.index);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        return response.withJuke(","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"                StringUtils.wrap(\"Task marked as undone: \" + this.taskList.getTaskInformation(this.index),","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"                                 Juke.MAX_STRING_LENGTH));","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":44}},{"path":"src/main/java/juke/commands/JukePrintCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * Action that invokes a print action on the command line.","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"public class JukePrintCommand extends JukeCommand {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /** Object to print. */","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    private final JukeObject printTarget;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukePrintCommand}.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     * @param printTarget {@code Object} to print","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    public JukePrintCommand(JukeObject printTarget) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"        this.printTarget \u003d printTarget;","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * Carries out an action when the command is executed.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        return response.withJuke(printTarget.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":32}},{"path":"src/main/java/juke/commands/JukeSortListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commands;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortOrderEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" * Action that sorts the {@code TaskList}.","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeSortListCommand extends JukeCommand {","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code SortOrderEnum} to sort the {@code TaskList} by (order). */","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    private final SortOrderEnum sortOrder;","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code SortTypeEnum} to sort the {@code TaskList} on (fields). */","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    private final SortTypeEnum sortType;","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /** {@code TaskList} to manage all tasks. */","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructs an sort list command.","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder {@code SortOrderEnum} enum that describes the order of sorting","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType {@code SortTypeEnum} enum that describes the type of sorting","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskList {@code TaskList} object to sort","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeSortListCommand(SortOrderEnum sortOrder, SortTypeEnum sortType, TaskList taskList) {","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        this.sortOrder \u003d sortOrder;","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        this.sortType \u003d sortType;","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * Carries out an action when the command is executed.","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     * @param response {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} object that contains response from Juke and the user","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if there are any errors encountered when sorting","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    public Response execute(Response response) {","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"            this.taskList.sort(this.sortOrder, this.sortType);","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"            return response.withJuke(\"Your task list is now sorted!\\n\\n\" + this.taskList);","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (JukeIllegalArgumentException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"            return response.withJuke(e.toString());","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"asdfghjkxd":51}},{"path":"src/main/java/juke/commons/classes/JukeObject.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.classes;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Abstract Class that represents objects that Juke can handle.","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * This class has no functionality, and is merely present for subclassing relationships.","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class JukeObject {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":9}},{"path":"src/main/java/juke/commons/enums/SortOrderEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.enums;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Enumeration on the order in which to sort the {@code TaskList} by.","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public enum SortOrderEnum {","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /** Ascending order sort. */","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    ASCENDING(1),","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /** Descending order sort. */","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    DESCENDING(-1);","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /** Comparator multiplier to dictate order of sort, 1 for ascending and -1 for descending. */","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    private final int multiplier;","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructs a {@code SortOrderEnum} object. This method cannot be invoked by the user.","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    SortOrderEnum(int multiplier) {","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"        this.multiplier \u003d multiplier;","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses the input string into a {@code SortOrderEnum} enum.","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @param order String representing the order to sort by","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code SortOrderEnum} enum value","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    public static SortOrderEnum ofOrder(String order) {","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        String lowerCaseOrder \u003d order.toLowerCase().strip();","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        switch (lowerCaseOrder) {","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        case \"a\":","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        case \"asc\":","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"        case \"ascending\":","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"            return SortOrderEnum.ASCENDING;","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"        case \"d\":","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"        case \"desc\":","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        case \"descending\":","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"            return SortOrderEnum.DESCENDING;","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"            throw new IllegalArgumentException(\"Oh no! The sort order you entered is invalid!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the multiplier for the specified {@code SortOrderEnum} enum.","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"     * @return 1 if the sort is ascending, -1 if the sort is descending","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    public int getMultiplier() {","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"        return this.multiplier;","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"asdfghjkxd":53}},{"path":"src/main/java/juke/commons/enums/SortTypeEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.enums;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Enumeration on the type of sort to be performed on the {@code TaskList}.","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public enum SortTypeEnum {","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /** Sort by description of task. */","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    DESCRIPTION,","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /** Sort by start date of task. */","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    START_DATE,","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /** Sort by end date of task. */","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    END_DATE,","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** Sort by deadline of task. */","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    DEADLINE;","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses the input string into a {@code SortTypeEnum} enum.","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * @param type String representing the type of sort to perform","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code SortTypeEnum} enum value","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    public static SortTypeEnum ofType(String type) {","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"        String lowerCaseType \u003d type.toLowerCase().strip();","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"        switch (lowerCaseType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        case \"d\":","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        case \"desc\":","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        case \"description\":","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"            return SortTypeEnum.DESCRIPTION;","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        case \"s\":","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        case \"start\":","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"        case \"start date\":","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"            return SortTypeEnum.START_DATE;","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"        case \"e\":","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"        case \"end\":","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        case \"end date\":","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"            return SortTypeEnum.END_DATE;","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        case \"dl\":","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"            return SortTypeEnum.DEADLINE;","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"            throw new IllegalArgumentException(\"Oh no! The sort type you entered is invalid!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"asdfghjkxd":47}},{"path":"src/main/java/juke/commons/interfaces/Savable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.interfaces;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Denotes a class that can be saved to the datafile.","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public interface Savable {","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the string which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    String save();","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"asdfghjkxd":13}},{"path":"src/main/java/juke/commons/interfaces/TaskSortable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.interfaces;","lastModifiedDate":"2023-09-11"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortOrderEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * Defines a contract whereby objects of generic type {@code T extends JukeTask} can be sorted.","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" *","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" * @param \u003cT\u003e Generic type that extends {@code JukeTask}","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"public interface TaskSortable\u003cT extends JukeTask\u003e {","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * Sorts the objects of type {@code T} in the specified order and by the specified type.","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder the order to sort the tasks by","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType the type of sort to perform on the tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    int sortBy(T task, SortOrderEnum sortOrder, SortTypeEnum sortType);","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"asdfghjkxd":21}},{"path":"src/main/java/juke/commons/utils/StringUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.commons.utils;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Utility class that provides methods for manipulating Strings.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class StringUtils {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * Wraps the given text to the specified length. Text is automatically","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * delimited by the carriage return character.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * Inspiration for this method comes from:","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * \u003ca href\u003d\"https://stackoverflow.com/questions/41056517/breaking-a-long-url-to-several-line-in-javadoc\"\u003e...\u003c/a\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     * @param text Text to wrap","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     * @param maxWrap Max number of characters that can exist on a line","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Text wrapped to the specified maxWrap length","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    public static String wrap(String text, int maxWrap) {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"        StringTokenizer tokenizer \u003d new StringTokenizer(text, \" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"        StringBuilder lineBuilder \u003d new StringBuilder(text.length());","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"        int lineCounter \u003d 0;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"        while (tokenizer.hasMoreTokens()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"            String nextWord \u003d tokenizer.nextToken();","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"            if (nextWord.length() + lineCounter \u003e maxWrap) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"                lineBuilder.append(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"                lineCounter \u003d 0;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"            lineBuilder.append(nextWord).append(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"            lineCounter +\u003d nextWord.length();","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"        return lineBuilder.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":39}},{"path":"src/main/java/juke/exceptions/JukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Base Exception class for which all other Juke Exceptions are based on.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Note that as this program is expected to parse any and all errors into a readable","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * format before being thrown back to the user through {@code JukeExceptionAction},","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * almost all exceptions should be unchecked and be caught only by the main event","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * loop which executes the Actions.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" *","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * @see java.lang.RuntimeException","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeException extends RuntimeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /** Error description. */","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    private final String error;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"        this.error \u003d error;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of the {@code JukeException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representing the exception this object is encapsulating","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        return this.error;","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":35}},{"path":"src/main/java/juke/exceptions/JukeInitialisationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Exception that encapsulates the situation whereby Juke cannot","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * properly instantiate and should therefore exit.","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * All {@code JukeInitialisationExceptions} and subclasses of it should cause","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * the program to exit, as there is no way for the program to continue","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * if it cannot initialise the variables and data it needs to work.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeInitialisationException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeInitialisationException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeInitialisationException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":20}},{"path":"src/main/java/juke/exceptions/JukeStateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents the error when the user tries to modify the state of any","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * {@code JukeObject} unsuccessfully.","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeStateException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeStateException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeStateException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":16}},{"path":"src/main/java/juke/exceptions/arguments/JukeIllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.arguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Exception that is thrown when illegal argument(s) is/are used anywhere.","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeIllegalArgumentException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeIllegalArgumentException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error Description","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeIllegalArgumentException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of {@code JukeIllegalArgumentException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of the exception","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"        return super.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":27}},{"path":"src/main/java/juke/exceptions/arguments/JukeIllegalCommandArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.arguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Exception that is thrown when an illegal command argument is entered into","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" * the command line.","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeIllegalCommandArgumentException extends JukeIllegalArgumentException {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"    /** String representing the expected arguments for a command. */","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"    private final String expectedArguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeIllegalCommandArgumentException}","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error Description","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     * @param expectedArguments Expected arguments","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeIllegalCommandArgumentException(String error, String expectedArguments) {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"        this.expectedArguments \u003d expectedArguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of {@code JukeIllegalCommandArgumentException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of the exception","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        return super.toString() + \"\\nUsage: \" + expectedArguments;","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":31}},{"path":"src/main/java/juke/exceptions/parsers/JukeDataFileParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error with the parsing the datafile.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDataFileParseException extends JukeParseException {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeDataFileParseException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDataFileParseException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":15}},{"path":"src/main/java/juke/exceptions/parsers/JukeDateFormatParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error with the parsing of some datetime input.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDateFormatParseException extends JukeParseException {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeDateFormatParseException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDateFormatParseException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":15}},{"path":"src/main/java/juke/exceptions/parsers/JukeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error thrown when any parser encounters an error with parsing","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * some input data.","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeParseException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeParseException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeParseException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":18}},{"path":"src/main/java/juke/exceptions/storage/JukeStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Represents a generic error with the storing, retrieving or modifying of data","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" * in the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeStorageException extends JukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeStorageException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeStorageException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":18}},{"path":"src/main/java/juke/exceptions/storage/JukeStorageReadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error with the reading data from the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeStorageReadException extends JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeStorageReadException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeStorageReadException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":15}},{"path":"src/main/java/juke/exceptions/storage/JukeStorageWriteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.exceptions.storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an error with the writing of data to the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeStorageWriteException extends JukeStorageException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeStorageWriteException}.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"     * @param error Error description","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeStorageWriteException(String error) {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"        super(error);","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":15}},{"path":"src/main/java/juke/parsers/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.parsers.JukeDateFormatParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * Parses Datetime Strings into the relevant {@code LocalDateTime} objects.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"public class DateTimeParser extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /** Regex for recognising DateTime inputs. */","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String DATETIME_REGEX \u003d \"^(0?[1-9]|[12][0-9]|3[01])(\\\\/|-)(0?[1-9]|1[0-2])(\\\\/|-)\\\\d{4} \"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"            + \"([01]?[0-9]|2[0-3])?(-|:)?[0-5][0-9]$\";","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /** Regex for recognising Date inputs. */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String DATE_REGEX \u003d \"^(0?[1-9]|[12][0-9]|3[01])(\\\\/|-)(0?[1-9]|1[0-2])(\\\\/|-)\\\\d{4}\";","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"     * Checks if the input date is of the correct Date format.","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * @param date Input date","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the String is a valid Date format, else false","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"        return Pattern.matches(DateTimeParser.DATE_REGEX, date);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * Checks if the input date is of the correct DateTime format.","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * @param datetime Input datetime","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the String is a valid DateTime format, else false","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    public static boolean isValidDateTime(String datetime) {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        return Pattern.matches(DateTimeParser.DATETIME_REGEX, datetime);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses the input String into a {@code LocalDateTime} object, provided that the","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     * string meets the requirement of either being a valid Date or DateTime.","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"     * @param datetime Input date/datetime string","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code LocalDateTime} object representing the input datetime","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"    public static LocalDateTime parse(String datetime) {","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"        // strip the datetime first to avoid any errors","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"        datetime \u003d datetime.strip();","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"        if (isValidDateTime(datetime)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"            String[] dateTimeSplit \u003d datetime.split(\" \");","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"            String[] parsedDate \u003d dateTimeSplit[0].split(\"\\\\/|-\");","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"            boolean isMatchingRegex \u003d Pattern.matches(\"\\\\d{4}\", dateTimeSplit[1]);","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"            String[] parsedTime \u003d isMatchingRegex","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"                    ? new String[]{dateTimeSplit[1].substring(0, 2), dateTimeSplit[1].substring(2, 4)}","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"                    : dateTimeSplit[1].split(\"-|:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"            return LocalDateTime.parse(parsedDate[2] + \"-\" + parsedDate[1] + \"-\" + parsedDate[0] + \"T\"","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"                                               + parsedTime[0] + \":\" + parsedTime[1] + \":00\");","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (isValidDate(datetime)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"            String[] date \u003d datetime.split(\"\\\\/|-\");","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"            return LocalDateTime.parse(date[2] + \"-\" + date[1] + \"-\" + date[0] + \"T00:00:00\");","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        throw new JukeDateFormatParseException(\"Oh no! I cannot understand the date format you have given me!\\nEnsure \"","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"                                                       + \"that datetimes are given as such: DD(/-)MM(/-)YYYY[ \"","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"                                                       + \"HH(:-)MM],\\nwhere (...) represents the set of acceptable \"","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"                                                       + \"symbols and [...] represents\\noptional arguments.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses stored datafile representation of {@code LocalDateTime}","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     * objects into actual {@code LocalDateTime} objects.","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"     * @param dateTimeString Stored string","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code LocalDateTime} object","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"    public static LocalDateTime fromDateTimeString(String dateTimeString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"            return LocalDateTime.parse(dateTimeString);","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeDateFormatParseException(\"Oh no! I cannot understand the date format you have given me!\"","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"                                                           + \"\\nEnsure that datetimes are given as such: \"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"                                                           + \"YYYY-MM-DDTHH:MM\");","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":89}},{"path":"src/main/java/juke/parsers/FileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.parsers.JukeDataFileParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeDeadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeEvent;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTodo;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" * Contains methods used to parse the datafile back into {@code JukeTask} objects.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" * This parser may not be instantiated. All methods are exposed via","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":" * static methods.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class FileParser extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /** Regex String used to parse the datafile lines. */","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String FILE_SEPARATOR_REGEX \u003d \"\\\\|\";","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses a single task into a {@code JukeTask} object.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Single task to parse","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeTask} object","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeDataFileParseException if there are errors with parsing the datafile","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    public static JukeTask parseTask(String task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        String[] data \u003d task.split(FileParser.FILE_SEPARATOR_REGEX);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        if (data.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeDataFileParseException(\"Oh no! Data \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"        switch (data[0]) {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"        case \"T\":","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"            if (data.length !\u003d 3) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeDataFileParseException(\"Oh no! Todo \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeTodo(data[2], data[1].equals(\"T\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        case \"D\":","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"            if (data.length !\u003d 4) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeDataFileParseException(\"Oh no! Deadline \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeDeadline(data[2], DateTimeParser.fromDateTimeString(data[3]), data[1].equals(\"T\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"        case \"E\":","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"            if (data.length !\u003d 5) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeDataFileParseException(\"Oh no! Event \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"            LocalDateTime start \u003d DateTimeParser.fromDateTimeString(data[3]);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"            LocalDateTime end \u003d DateTimeParser.fromDateTimeString(data[4]);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"            if (start.isAfter(end)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeDataFileParseException(\"Oh no! Event start date cannot be after the end date!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"            return new JukeEvent(data[2], start, end, data[1].equals(\"T\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeDataFileParseException(\"Oh no! Data \\\"\" + task + \"\\\" cannot be parsed!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":66}},{"path":"src/main/java/juke/parsers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * Contains methods used to parse the commands given by the user. Note that excessive whitespaces surrounding","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" * command arguments will be ignored and the command will be treated as if there were no excessive","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" * whitespaces in the first place, mimicking how commands are parsed in shells like zsh and bash.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" * This parser may not be instantiated. All methods are exposed via static methods.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class Parser extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /** String regex for splitting a command by any number of spaces. */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String SPACE_REGEX \u003d \"\\\\s+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * String regex for checking a command by \"/by\", preceded or proceeded by any number of whitespaces","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * or characters.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String CHECKING_BY_STRING_REGEX \u003d \".*\\\\s+/by\\\\s+.*\";","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    /** String regex for splitting a command by \"/by\", preceded or proceeded by any number of whitespaces. */","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String SPLITTING_BY_STRING_REGEX \u003d \"\\\\s+/by\\\\s+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     * String regex for checking a command for \"/from\" and \"/to\", preceded or proceeded by any number of whitespaces","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     * or characters.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String CHECKING_FROM_TO_STRING_REGEX \u003d \".*\\\\s+/from\\\\s+.*\\\\s+/to\\\\s+.*\";","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * String regex for splitting a command by \"/from\" and \"/to\", , preceded or proceeded by any number of whitespaces.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String SPLITTING_FROM_TO_STRING_REGEX \u003d \"\\\\s+/from\\\\s+|\\\\s+/to\\\\s+\";","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses a command by a space. This method is used to obtain the first command in the command chain.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command Raw Command","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Parsed array of Strings which represents the tokens in the command.","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    public static String[] parseBySpace(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"        return command.strip().split(Parser.SPACE_REGEX);","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses a command by the String \"/by\". This method is to be invoked only on a cleaned String where","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"     * the first starting command is discarded.","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command Processed Command","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Parsed array of String which represents the parsed tokens in the command","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    public static String[] parseByByString(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"        return command.strip().split(Parser.SPLITTING_BY_STRING_REGEX);","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"     * Parses a command by the String \"/from\" and \"/to\". This method is to be invoked only on a","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"     * cleaned String where the first starting command is discarded.","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command Processed Command","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Parsed array of String which represents the parsed tokens in the command","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"    public static String[] parseByFromToString(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        return command.strip().split(Parser.SPLITTING_FROM_TO_STRING_REGEX);","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"     * Checks if the input string matches the \"/by\" sequence.","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command String to check","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the input string matches, else false","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"    public static boolean isMatchByString(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"        return Pattern.matches(Parser.CHECKING_BY_STRING_REGEX, command);","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"     * Checks if the input string matches the \"/from ... /to\" sequence.","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"     * @param command String to check","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the input string matches, else false","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"    public static boolean isMatchFromToString(String command) {","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"        return Pattern.matches(Parser.CHECKING_FROM_TO_STRING_REGEX, command);","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":89}},{"path":"src/main/java/juke/responses/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.responses;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":" * Simple class that represents the responses from Juke or the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"public class Response extends JukeObject {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"    /** Represents the input message from the user. */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"    private final String inputMessage;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    /** Represents the output message from Juke. */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    private final String outputMessage;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructs an instance of {@code Response}.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     * @param inputMessage User input","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     * @param outputMessage Juke output","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    public Response(String inputMessage, String outputMessage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"        this.inputMessage \u003d inputMessage;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"        this.outputMessage \u003d outputMessage;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns a {@code Response} containing the response from the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     * @param inputMessage User response","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} containing the response from the user","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    public static Response ofUser(String inputMessage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        return new Response(inputMessage, null);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns a {@code Response} containing the response from Juke.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * @param outputMessage Juke response","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} containing the response from Juke","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"    public static Response ofJuke(String outputMessage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        return new Response(null, outputMessage);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"     * Composes a {@code Response} with the user\u0027s input message. If called with a Response object that","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"     * already has a user input, then the user input will be overwritten.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"     * @param inputMessage User input","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} with the user\u0027s input message","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"    public Response withUser(String inputMessage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"        return new Response(inputMessage, this.outputMessage);","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"     * Composes a {@code Response} with Juke\u0027s output message. If called with a Response object that","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"     * already has a Juke output, then the Juke output will be overwritten.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"     * @param outputMessage Juke output","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} with Juke\u0027s output message","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"    public Response withJuke(String outputMessage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"        return new Response(this.inputMessage, outputMessage);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns a {@code Response} with no input or output messages.","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Response} with no input or output messages","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"    public static Response of() {","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"        return new Response(null, null);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the input message from the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representing the input message from the user","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"    public String getInputMessage() {","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"        return this.inputMessage;","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the output message from Juke.","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representing the output message from Juke","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"    public String getOutputMessage() {","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"        return this.outputMessage;","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":94}},{"path":"src/main/java/juke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.List;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageReadException;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageWriteException;","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"import juke.parsers.FileParser;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":" * Manages the storage and retrieval of data from the data file.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"public class Storage extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    /** Path to the data directory. */","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    private static final Path DIRECTORY_PATH \u003d Paths.get(\"./data\");","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    /** Path to the data file. */","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    private static final Path FILE_PATH \u003d Paths.get(\"./data/tasks.txt\");","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code Storage}. Prevents external instantiation through","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     * any methods other than {@code Storage.of()}.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    private Storage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"        super();","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code Storage} and creates the files","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     * and directories required if necessary.","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code Storage} instance","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeInitialisationException if the directories or files cannot be","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     *     created or initialised","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    public static Storage of() throws JukeInitialisationException {","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"        // if the directory does not exist, create the directory","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"        if (!Files.exists(Storage.DIRECTORY_PATH)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"                Files.createDirectory(Storage.DIRECTORY_PATH);","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeInitialisationException(\"Oh no! I am unable to create a directory to store your \"","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"                                                              + \"tasks! Please try again later!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"        if (!Files.exists(Storage.FILE_PATH)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"            // if the dir exist but file doesn\u0027t, then just create the file","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"                Files.createFile(Storage.FILE_PATH);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"                throw new JukeInitialisationException(\"Oh no! I am unable to create a datafile to store your \"","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"                                                              + \"tasks! Please try again later!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        // the file and directory should exist if execution reaches here","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"        assert Files.exists(Storage.FILE_PATH);","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"        assert Files.exists(Storage.DIRECTORY_PATH);","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"        return new Storage();","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns a list of saved task from the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"     * @return List of {@code JukeTasks} retrieved","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException If the file could not be opened or processed for any reason","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"    public List\u003cJukeTask\u003e read() throws JukeStorageReadException {","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"        try (BufferedReader br \u003d Files.newBufferedReader(Storage.FILE_PATH)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"            String curr;","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"            List\u003cJukeTask\u003e tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"            while ((curr \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"                tasks.add(FileParser.parseTask(curr));","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"            return tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeStorageReadException(\"Oh no! I am unable to understand the data stored \"","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"                                                       + \"in the datafile!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"     * Writes the list of tasks into the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"     * @param tasks List of {@code JukeTasks} to write","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException If the file could not be opened or written to for any reason","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"    public void write(List\u003cJukeTask\u003e tasks) throws JukeStorageWriteException {","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"        try (BufferedWriter bw \u003d Files.newBufferedWriter(Storage.FILE_PATH)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"            for (JukeTask t : tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"                bw.write(t.save());","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"                bw.newLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeStorageWriteException(\"Oh no! I cannot save your data to the datafile!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":112}},{"path":"src/main/java/juke/tasks/JukeDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortOrderEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeStateException;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" * Represents a Deadline task. Deadline tasks contain a deadline which is","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" * represented by a {@code LocalDateTime} object.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDeadline extends JukeTask {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** String which represents the Task Identifier. */","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String TASK_DESCRIPTOR \u003d \"[D] \";","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /** Deadline for Task. */","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeDeadline}.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Task description","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @param deadline Deadline for task","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDeadline(String task, LocalDateTime deadline) {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        super(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeDeadline}.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Task description","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * @param deadline Deadline for task","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     * @param isCompleted Status of completion of the task","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the task is already completed","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDeadline(String task, LocalDateTime deadline, boolean isCompleted) {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        this(task, deadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"            this.setAsComplete();","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the string which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"        return \"D\" + super.save() + \"|\" + deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares this {@code JukeDeadline}\u0027s deadline with respect to the localDateTime object passed in. This method","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"     * is mainly used for sorting, and should not be invoked directly by the user.","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"     * @param localDateTime {@code LocalDateTime} object to compare with","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeDeadline}\u0027s deadline is before the localDateTime object passed in, 0 if they are","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"     *     the same, and 1 if this {@code JukeDeadline}\u0027s deadline is after the localDateTime object passed in","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"    public int compareDeadline(LocalDateTime localDateTime) {","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"        return localDateTime.compareTo(this.deadline);","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares this {@code JukeTask} object with the specified {@code JukeTask} object for order.","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder the order to sort the tasks by","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType the type of sort to perform on the tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"     * @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"     *     the specified object.","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"    public int sortBy(JukeTask task, SortOrderEnum sortOrder, SortTypeEnum sortType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"        switch (sortType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"        case DESCRIPTION:","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"            return super.sortBy(task, sortOrder, sortType);","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"        case END_DATE:","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"            return this.compareDeadlineOrEndDate(task, sortOrder);","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"        case START_DATE:","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"            return this.compareStartDate(task, sortOrder);","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list on that field!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares the start date between this {@code JukeDeadline} object with another {@code JukeTask} object.","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder the order to sort the tasks by","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeDeadline} object is before the {@code JukeTask} object passed in, 0 if they are the","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"     *     same, and 1 if this {@code JukeDeadline} object is after the {@code JukeTask} object passed in","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"    private int compareStartDate(JukeTask task, SortOrderEnum sortOrder) {","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"        if (task instanceof JukeEvent) {","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"            // deadlines are assumed to have an infinitely early start date","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"            // and is hence always before any event task","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"            return -1 * sortOrder.getMultiplier();","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeDeadline) {","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"            // deadlines are of equal priority when compared to other deadlines","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"            return 0;","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeTodo) {","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"            // todos are assumed to have a smaller but infinitely early start date","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"            // and are hence before after any deadline task","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"            return sortOrder.getMultiplier();","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"            // should not reach here, unless there are other unknown subclasses of JukeTask","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list with an unknown task within it!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares this {@code JukeDeadline}\u0027s deadline or end date with respect to the input {@code JukeEvent} object.","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder the order to sort the tasks by","lastModifiedDate":"2023-09-11"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeDeadline}\u0027s deadline or end date is before the {@code JukeEvent} object passed in,","lastModifiedDate":"2023-09-11"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"     *     0 if they are the same, and 1 if this {@code JukeDeadline}\u0027s deadline or end date is after the","lastModifiedDate":"2023-09-11"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"     *     {@code JukeEvent} object passed in","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"    private int compareDeadlineOrEndDate(JukeTask task, SortOrderEnum sortOrder) {","lastModifiedDate":"2023-09-11"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"        if (task instanceof JukeEvent) {","lastModifiedDate":"2023-09-11"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"            JukeEvent event \u003d (JukeEvent) task;","lastModifiedDate":"2023-09-11"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"            return event.compareEndTime(this.deadline) * sortOrder.getMultiplier();","lastModifiedDate":"2023-09-11"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeDeadline) {","lastModifiedDate":"2023-09-11"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"            JukeDeadline deadline \u003d (JukeDeadline) task;","lastModifiedDate":"2023-09-11"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"            return this.deadline.compareTo(deadline.deadline) * sortOrder.getMultiplier();","lastModifiedDate":"2023-09-11"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeTodo) {","lastModifiedDate":"2023-09-11"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"            // since todos have an infinitely early deadline, they are always considered to be before events","lastModifiedDate":"2023-09-11"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"            return sortOrder.getMultiplier();","lastModifiedDate":"2023-09-11"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"            // should not reach here, unless there are other unknown subclasses of JukeTask","lastModifiedDate":"2023-09-11"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list with an unknown task within it!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of this {@code JukeDeadline} object","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation","lastModifiedDate":"2023-08-26"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"        return JukeDeadline.TASK_DESCRIPTOR","lastModifiedDate":"2023-09-08"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"                + super.toString()","lastModifiedDate":"2023-09-08"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"                + \" (by: \"","lastModifiedDate":"2023-09-08"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"asdfghjkxd"},"content":"                + \" hrs)\";","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":159,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":159}},{"path":"src/main/java/juke/tasks/JukeEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortOrderEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.interfaces.TaskSortable;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeStateException;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" * Represents an Event task. Event tasks contain both a startTime and endTime","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * deadline, which are represented by {@code LocalDateTime} objects.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeEvent extends JukeTask implements TaskSortable\u003cJukeTask\u003e {","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /** String which represents the Task Identifier. */","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String TASK_DESCRIPTOR \u003d \"[E] \";","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /** Start Time. */","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /** End Time. */","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeEvent}.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskName Task description","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * @param startTime Start date/time","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     * @param endTime End date/time","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeEvent(String taskName, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"        super(taskName);","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeEvent}.","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskName Task description","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     * @param startTime Start date/time","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"     * @param endTime End date/time","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"     * @param isCompleted Status of completion of the task","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the task is already completed","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeEvent(String taskName, LocalDateTime startTime, LocalDateTime endTime, boolean isCompleted) {","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"        this(taskName, startTime, endTime);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"            // the event should have a start date that is before the end date","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"            assert startTime.isBefore(endTime);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"            this.setAsComplete();","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the string which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"        return \"E\" + super.save() + \"|\" + startTime + \"|\" + endTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares the input {@code LocalDateTime} object with the end time of this {@code JukeDeadline} object. This","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"     * method is mainly used for sorting, and should not be invoked directly by the user.","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"     * @param dateTime input {@code LocalDateTime} object","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if the input {@code LocalDateTime} object is before the end time of this {@code JukeDeadline} object,","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"     *     0 if they are the same, and 1 if the input {@code LocalDateTime} object is after the end time of this","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     *     deadline","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"    public int compareEndTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"        return dateTime.compareTo(this.endTime);","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares this {@code JukeEvent} object with the specified {@code JukeTask} object.","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder the order to sort the tasks by","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType the type of sort to perform on the tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"     * @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"     *     the specified object.","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"    public int sortBy(JukeTask task, SortOrderEnum sortOrder, SortTypeEnum sortType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"        switch (sortType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"        case DESCRIPTION:","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"            return super.sortBy(task, sortOrder, sortType);","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"        case END_DATE:","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"            return this.compareDeadlineOrEndDate(task, sortOrder);","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"        case START_DATE:","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"            return this.compareStartDate(task, sortOrder);","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list on that field!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares this {@code JukeDeadline}\u0027s deadline or end date with respect to the input {@code JukeEvent} object.","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"     * This method exists only for sorting.","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder the order to sort the tasks by","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeDeadline}\u0027s deadline or end date is before the {@code JukeEvent} object passed in,","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"     *     0 if they are the same, and 1 if this {@code JukeDeadline}\u0027s deadline or end date is after the","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"     *     {@code JukeEvent} object passed in","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"    private int compareDeadlineOrEndDate(JukeTask task, SortOrderEnum sortOrder) {","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"        if (task instanceof JukeEvent) {","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"            JukeEvent event \u003d (JukeEvent) task;","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"            return this.endTime.compareTo(event.endTime) * sortOrder.getMultiplier();","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeDeadline) {","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"            JukeDeadline deadline \u003d (JukeDeadline) task;","lastModifiedDate":"2023-09-11"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"            int otherDeadlineComparedToSelf \u003d deadline.compareDeadline(this.endTime);","lastModifiedDate":"2023-09-11"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"            return otherDeadlineComparedToSelf * sortOrder.getMultiplier();","lastModifiedDate":"2023-09-11"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeTodo) {","lastModifiedDate":"2023-09-11"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"            // since todos have an infinitely early deadline, they are always considered to be before events","lastModifiedDate":"2023-09-11"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"            // and so events are always after todos, subjected to the constraints of the sort order","lastModifiedDate":"2023-09-11"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"            return sortOrder.getMultiplier();","lastModifiedDate":"2023-09-11"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"            // should not reach here, unless there are other unknown subclasses of JukeTask","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list with an unknown task within it!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares the start date between this {@code JukeDeadline} object with another {@code JukeTask} object.","lastModifiedDate":"2023-09-11"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder the order to sort the tasks by","lastModifiedDate":"2023-09-11"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeDeadline} object is before the {@code JukeTask} object passed in, 0 if they are the","lastModifiedDate":"2023-09-11"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"     *     same, and 1 if this {@code JukeDeadline} object is after the {@code JukeTask} object passed in","lastModifiedDate":"2023-09-11"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"    private int compareStartDate(JukeTask task, SortOrderEnum sortOrder) {","lastModifiedDate":"2023-09-11"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"        if (task instanceof JukeEvent) {","lastModifiedDate":"2023-09-11"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"            JukeEvent event \u003d (JukeEvent) task;","lastModifiedDate":"2023-09-11"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"            return this.startTime.compareTo(event.startTime) * sortOrder.getMultiplier();","lastModifiedDate":"2023-09-11"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeDeadline || task instanceof JukeTodo) {","lastModifiedDate":"2023-09-11"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"            // since todos have an infinitely early deadline, they are always considered to be before events","lastModifiedDate":"2023-09-11"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"            // and so events are always after todos, subjected to the constraints of the sort order","lastModifiedDate":"2023-09-11"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"            return sortOrder.getMultiplier();","lastModifiedDate":"2023-09-11"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"            // should not reach here, unless there are other unknown subclasses of JukeTask","lastModifiedDate":"2023-09-11"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list with an unknown task within it!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of this {@code JukeEvent} object","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":161,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":162,"author":{"gitId":"asdfghjkxd"},"content":"        return JukeEvent.TASK_DESCRIPTOR","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"asdfghjkxd"},"content":"                + super.toString()","lastModifiedDate":"2023-09-08"},{"lineNumber":164,"author":{"gitId":"asdfghjkxd"},"content":"                + \" (from \" + startTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\"))","lastModifiedDate":"2023-09-08"},{"lineNumber":165,"author":{"gitId":"asdfghjkxd"},"content":"                + \" hrs to \" + endTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")) + \" hrs)\";","lastModifiedDate":"2023-09-08"},{"lineNumber":166,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":167}},{"path":"src/main/java/juke/tasks/JukeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortOrderEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.interfaces.Savable;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.interfaces.TaskSortable;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeStateException;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" * Abstract Class that represents a task that the user adds to {@code Juke}.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class JukeTask extends JukeObject implements TaskSortable\u003cJukeTask\u003e, Savable {","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"    /** Icon to display when the task is completed. */","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String COMPLETED_INDICATOR \u003d \"[✓] \";","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /** Icon to display when the task not completed. */","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String INCOMPLETE_INDICATOR \u003d \"[ ] \";","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    /** Task description. */","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    private final String taskName;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    /** Boolean to check if the task is completed */","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeTask}.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * @param taskName Task description","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeTask(String taskName) {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     * Marks a task as complete.","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the task is already completed","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"    public void setAsComplete() throws JukeStateException {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeStateException(\"Oh no! The task selected is already completed!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"            this.isCompleted \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"     * Marks a task as incomplete.","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the task is already incomplete","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    public void setAsIncomplete() throws JukeStateException {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"        if (!this.isCompleted) {","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeStateException(\"The task selected is already not completed!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"            this.isCompleted \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the string which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"        return (this.isCompleted ? \"|T|\" : \"|F|\") + this.taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"     * Checks if the task description contains the word being queried. All subclassses of","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"     * {@code JukeTask} will reuse this method for checking.","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     * @param word Keyword to check","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the task description contains the keyword, false otherwise","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"    public boolean stringMatches(String word) {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"        return this.taskName.contains(word);","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"     * Converts the task object to a String representation.","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of JukeTask","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"        return (this.isCompleted ? JukeTask.COMPLETED_INDICATOR : JukeTask.INCOMPLETE_INDICATOR) + taskName;","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares this {@code JukeTask} object with the specified {@code JukeTask} object for order. This method","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"     * can only compare this {@code JukeTask} with another {@code JukeTask} object based on the descriptions of the","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"     * tasks.","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"     * This method is present mainly for polymorphism and method reuse.","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder the order to sort the tasks by","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType the type of sort to perform on the tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"     * @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"     *     the specified object.","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"    public int sortBy(JukeTask task, SortOrderEnum sortOrder, SortTypeEnum sortType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"        switch (sortOrder) {","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"        case ASCENDING:","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"            return this.taskName.compareTo(task.taskName);","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"        case DESCENDING:","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"            return this.taskName.compareTo(task.taskName) * -1;","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list in that order!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":117}},{"path":"src/main/java/juke/tasks/JukeTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortOrderEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":" * Represents a Todo task. Todo tasks do not have any deadlines.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeTodo extends JukeTask {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"    /** String which represents the Task Identifier. */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String TASK_DESCRIPTOR \u003d \"[T] \";","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructor to create a {@code JukeTodo}.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Task description","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeTodo(String task) {","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"        super(task);","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code JukeTodo}.","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Task description","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * @param isCompleted Status of completion of the task","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeTodo(String task, boolean isCompleted) {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        super(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"            this.setAsComplete();","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns the string which represents this object when it is saved into the datafile.","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     * @return Datafile representation of this object","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    public String save() {","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        return \"T\" + super.save();","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares this {@code JukeTodo} object with the specified {@code JukeTask} object.","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder the order to sort the tasks by","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType the type of sort to perform on the tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     * @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"     *     the specified object.","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    public int sortBy(JukeTask task, SortOrderEnum sortOrder, SortTypeEnum sortType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"        switch (sortType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"        case DESCRIPTION:","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"            return super.sortBy(task, sortOrder, sortType);","lastModifiedDate":"2023-09-11"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"        case END_DATE:","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"        case START_DATE:","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"            return this.compareStartDate(task, sortOrder);","lastModifiedDate":"2023-09-11"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list on that field!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"     * Compares the start date between this {@code JukeTodo} object with another {@code JukeTask} object.","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task the {@code JukeTask} object to be compared with","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder the order to sort the tasks by","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"     * @return -1 if this {@code JukeDeadline} object is before the {@code JukeTask} object passed in, 0 if they are the","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     *     same, and 1 if this {@code JukeDeadline} object is after the {@code JukeTask} object passed in","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"    private int compareStartDate(JukeTask task, SortOrderEnum sortOrder) {","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"        if (task instanceof JukeEvent || task instanceof JukeDeadline) {","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"            // todos are assumed to have an infinitely early start date","lastModifiedDate":"2023-09-11"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"            // and is hence always before any event task; and","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"            // deadlines have a larger but infinitely early start date","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"            return -1 * sortOrder.getMultiplier();","lastModifiedDate":"2023-09-11"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"        } else if (task instanceof JukeTodo) {","lastModifiedDate":"2023-09-11"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"            // todos are of equal priority when compared to other todos","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"            return 0;","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"            // should not reach here, unless there are other unknown subclasses of JukeTask","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list with an unknown task within it!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of this {@code JukeTodo} object","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"        return JukeTodo.TASK_DESCRIPTOR + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":102}},{"path":"src/main/java/juke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.classes.JukeObject;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortOrderEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.enums.SortTypeEnum;","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commons.utils.StringUtils;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeStateException;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.arguments.JukeIllegalArgumentException;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"import juke.storage.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":" * Manages {@code JukeTasks}. This class handles the addition/deletion/manipulation of","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":" * other child {@code JukeTasks} subsumed under its control.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"public class TaskList extends JukeObject {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /** Header for {@code TaskList} String representation. */","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String TASK_LIST_HEADER \u003d \"Here\u0027s your list of tasks:\\n\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    /** String representation of the {@code TaskList} when it is empty. */","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    private static final String NO_TASKS_PRESENT_STRING \u003d \"No Tasks Present!\";","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /** Max number of characters on a line. */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    private static final int MAX_LINE_LENGTH \u003d 35;","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    /** List of JukeTasks under this {@code TaskList}\u0027s control. */","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    private final LinkedList\u003cJukeTask\u003e tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * {@code Storage} instance in charge of storing, retrieving and modifying data.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code TaskList} that initialises the tasks within","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * this {@code TaskList}.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     * @param storage The storage object that manages any I/O operations on the datafile","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there is are any issues with retrieving data from the datafile","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    private TaskList(Storage storage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        this.tasks \u003d new LinkedList\u003c\u003e(storage.read());","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates an instance of {@code TaskList}, from existing saved tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code TaskList} object","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there is are any issues with retrieving data from the datafile","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    public static TaskList of(Storage storageManager) {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"        return new TaskList(storageManager);","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"     * Adds a task.","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task {@code JukeTask} object.","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"     * @return true if the task is added, else false","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there is are any issues with retrieving data from the datafile","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"    public boolean addTask(JukeTask task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        int lengthOfTasks \u003d this.tasks.size();","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"        boolean isSuccess \u003d this.tasks.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"        if (isSuccess) {","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"            assert this.tasks.size() \u003d\u003d lengthOfTasks + 1;","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"            this.storage.write(this.tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"        return isSuccess;","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"     * Deletes a task by index.","lastModifiedDate":"2023-08-21"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"     * @param task Index of {@code JukeTask} object","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeTask} deleted if the task is successfully deleted, else throws an exception","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if the input argument is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there is are any issues with retrieving data from the datafile","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeTask deleteTask(int task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"            JukeTask returnedTask \u003d this.tasks.get(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"            int lengthOfTasks \u003d this.tasks.size();","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"            if (this.tasks.remove(returnedTask)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"                assert this.tasks.size() \u003d\u003d lengthOfTasks - 1;","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"                this.storage.write(this.tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"            return returnedTask;","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-08-21"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! The task index you have provided is not valid!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"     * Sets a task as complete.","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of task to act on.","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if the input argument is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the user tries to mark a completed task as completed again","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there is an issue with storing the changes","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"    public void setAsComplete(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"        if (index \u003c 0 || index \u003e this.tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I do not have such task recorded!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"        this.tasks.get(index).setAsComplete();","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"        this.storage.write(this.tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"     * Sets a task as incomplete.","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of task to act on.","lastModifiedDate":"2023-08-20"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if the input argument is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStateException if the user tries to mark an incomplete task as incompleted again","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeStorageException if there is an issue with storing the changes","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"    public void setAsIncomplete(int index) throws JukeStorageException {","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"        if (index \u003c 0 || index \u003e this.tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I do not have such task recorded!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"        this.tasks.get(index).setAsIncomplete();","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"        this.storage.write(this.tasks);","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns information of the task at the specified index.","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"     * @param index Index of task to act on.","lastModifiedDate":"2023-08-20"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"     * @throws JukeIllegalArgumentException if the input argument is invalid","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"    public String getTaskInformation(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"        if (index \u003c 0 || index \u003e this.tasks.size()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I do not have such task recorded!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"        return this.tasks.get(index).toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"     * Finds all tasks that match the specified word.","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"     * @param word Word of interest","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code List} of {@code JukeTask} objects whose subject matches the word","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"asdfghjkxd"},"content":"    public List\u003cJukeTask\u003e findTask(String word) {","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"asdfghjkxd"},"content":"        List\u003cJukeTask\u003e wordMatches \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":159,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"asdfghjkxd"},"content":"        for (JukeTask t : this.tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"asdfghjkxd"},"content":"            if (t.stringMatches(word)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":162,"author":{"gitId":"asdfghjkxd"},"content":"                wordMatches.add(t);","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"asdfghjkxd"},"content":"        return wordMatches;","lastModifiedDate":"2023-09-08"},{"lineNumber":167,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":170,"author":{"gitId":"asdfghjkxd"},"content":"     * Sorts the tasks in the {@code TaskList} by the specified {@code SortOrderEnum} and {@code SortTypeEnum}.","lastModifiedDate":"2023-09-11"},{"lineNumber":171,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":172,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortOrder {@code SortOrderEnum} enum that describes the order of sorting","lastModifiedDate":"2023-09-11"},{"lineNumber":173,"author":{"gitId":"asdfghjkxd"},"content":"     * @param sortType {@code SortTypeEnum} enum that describes the type of sorting","lastModifiedDate":"2023-09-11"},{"lineNumber":174,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":175,"author":{"gitId":"asdfghjkxd"},"content":"    public final void sort(SortOrderEnum sortOrder, SortTypeEnum sortType) {","lastModifiedDate":"2023-09-11"},{"lineNumber":176,"author":{"gitId":"asdfghjkxd"},"content":"        // stores the original copy of the tasks for error recovery","lastModifiedDate":"2023-09-11"},{"lineNumber":177,"author":{"gitId":"asdfghjkxd"},"content":"        List\u003cJukeTask\u003e originalTasks \u003d new LinkedList\u003c\u003e(this.tasks);","lastModifiedDate":"2023-09-11"},{"lineNumber":178,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":179,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":180,"author":{"gitId":"asdfghjkxd"},"content":"            this.tasks.sort((task1, task2) -\u003e task1.sortBy(task2, sortOrder, sortType));","lastModifiedDate":"2023-09-11"},{"lineNumber":181,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IllegalArgumentException | UnsupportedOperationException | ClassCastException ex) {","lastModifiedDate":"2023-09-11"},{"lineNumber":182,"author":{"gitId":"asdfghjkxd"},"content":"            // if there is an error, revert the changes","lastModifiedDate":"2023-09-11"},{"lineNumber":183,"author":{"gitId":"asdfghjkxd"},"content":"            this.tasks.clear();","lastModifiedDate":"2023-09-11"},{"lineNumber":184,"author":{"gitId":"asdfghjkxd"},"content":"            this.tasks.addAll(originalTasks);","lastModifiedDate":"2023-09-11"},{"lineNumber":185,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeIllegalArgumentException(\"Oh no! I cannot sort the list!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":186,"author":{"gitId":"asdfghjkxd"},"content":"        } finally {","lastModifiedDate":"2023-09-11"},{"lineNumber":187,"author":{"gitId":"asdfghjkxd"},"content":"            // save any changes made to the task list","lastModifiedDate":"2023-09-11"},{"lineNumber":188,"author":{"gitId":"asdfghjkxd"},"content":"            this.storage.write(this.tasks);","lastModifiedDate":"2023-09-11"},{"lineNumber":189,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":190,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":191,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":192,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":193,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns String representation of the {@code TaskList}. This consists of all the tasks","lastModifiedDate":"2023-08-27"},{"lineNumber":194,"author":{"gitId":"asdfghjkxd"},"content":"     * managed by this {@code TaskList}.","lastModifiedDate":"2023-08-27"},{"lineNumber":195,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":196,"author":{"gitId":"asdfghjkxd"},"content":"     * @return String representation of this {@code TaskList}.","lastModifiedDate":"2023-08-27"},{"lineNumber":197,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":198,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":199,"author":{"gitId":"asdfghjkxd"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":200,"author":{"gitId":"asdfghjkxd"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":201,"author":{"gitId":"asdfghjkxd"},"content":"            return TaskList.NO_TASKS_PRESENT_STRING;","lastModifiedDate":"2023-09-03"},{"lineNumber":202,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":203,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":204,"author":{"gitId":"asdfghjkxd"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-08-20"},{"lineNumber":205,"author":{"gitId":"asdfghjkxd"},"content":"        builder.append(TaskList.TASK_LIST_HEADER);","lastModifiedDate":"2023-08-27"},{"lineNumber":206,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":207,"author":{"gitId":"asdfghjkxd"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":208,"author":{"gitId":"asdfghjkxd"},"content":"            String built \u003d (i + 1) + \". \" + this.tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":209,"author":{"gitId":"asdfghjkxd"},"content":"            builder.append(StringUtils.wrap(built, TaskList.MAX_LINE_LENGTH));","lastModifiedDate":"2023-09-03"},{"lineNumber":210,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":211,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":212,"author":{"gitId":"asdfghjkxd"},"content":"        return builder.toString().strip();","lastModifiedDate":"2023-09-03"},{"lineNumber":213,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":214,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":214}},{"path":"src/main/java/juke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.ui.windows.MainWindow;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * User interface of Juke. Extends {@link Application} to allow","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" * JavaFX to run this class like a GUI application.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"public class Ui extends Application {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    /** Height of the window. */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    public static final double WINDOW_HEIGHT \u003d 700.0d;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    /** Width of the window. */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    public static final double WINDOW_WIDTH \u003d 450.0d;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * Starts the JavaFX application.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     *     the application scene can be set. Applications may create","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     *     other stages, if needed, but they will not be primary stages.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"            // specify the overall look of the window","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"            // window is non-resizable with a height of 700px and a width of 450px","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"            stage.setTitle(MainWindow.APPLICATION_NAME);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"            stage.setMinHeight(Ui.WINDOW_HEIGHT);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"            stage.setMinWidth(Ui.WINDOW_WIDTH);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"            stage.show();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeInitialisationException(\"I cannot initialise! There was an issue loading the necessary \"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"                                                          + \"FXML files to load up the GUI!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"asdfghjkxd":51}},{"path":"src/main/java/juke/ui/components/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.ui.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" * Abstract class that is used to represent a dialog box that is","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" * displayed to the user through the GUI.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"public abstract class DialogBox extends HBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     * Inverts the order of the widgets within this dialog box. This method is left here as a quick way","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"     * to reverse the order of the child widgets. This method will be deprecated in the future.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    @Deprecated","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    public void flip() {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"        ObservableList\u003cNode\u003e childWidgets \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"        FXCollections.reverse(childWidgets);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"        this.getChildren().setAll(childWidgets);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a dialog box that represents the user\u0027s inputs.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"     * @param text Text to render in the dialog box","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code UserDialog} object","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    public static DialogBox ofUser(String text) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        return new UserDialog(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * Creates a dialog box that represents Juke\u0027s outputs.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     * @param text Text to render in the dialog box","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeDialog} object","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"    public static DialogBox ofJuke(String text) {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        return new JukeDialog(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":45}},{"path":"src/main/java/juke/ui/components/JukeDialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.ui.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.Juke;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" * Represents a dialog box containing Juke\u0027s response.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDialog extends DialogBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** Container for the dialog box contents. */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    private StackPane dialogBubble;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /** Background of the dialog box contents. */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    private Region backgroundRegion;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    /** Text within the dialog box. */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    private Label textLabel;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    /** Profile image to display in the chat. */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    private ImageView displayImage;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructs an instance of {@code JukeDialog}.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * @param text Text to display in the dialog box","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    public JukeDialog(String text) {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Juke.class.getResource(\"/view/JukeDialog.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"            textLabel.setText(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"            this.backgroundRegion.maxHeightProperty().bind(this.textLabel.heightProperty().add(25.0d));","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"            this.backgroundRegion.minHeightProperty().bind(this.textLabel.heightProperty().add(25.0d));","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"            this.backgroundRegion.minWidthProperty().bind(this.textLabel.widthProperty().add(25.0d));","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"            this.backgroundRegion.maxWidthProperty().bind(this.textLabel.widthProperty().add(25.0d));","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeInitialisationException(\"I cannot initialise! There was an issue loading the necessary \"","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"                                                          + \"FXML files to load up the GUI!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":54}},{"path":"src/main/java/juke/ui/components/UserDialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.ui.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.Juke;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":" * Represents a dialog box containing the user\u0027s message.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"public class UserDialog extends DialogBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    /** Container for the dialog box contents. */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"    private StackPane dialogBubble;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    /** Background of the dialog box contents. */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    private Region backgroundRegion;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    /** Text within the dialog box. */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    private Label textLabel;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    /** Profile image to display in the chat. */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    private ImageView displayImage;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"     * Constructs an instance of {@code UserDialog}.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"     * @param text Text to display in the dialog box","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"    public UserDialog(String text) {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Juke.class.getResource(\"/view/UserDialog.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"            textLabel.setText(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"            this.backgroundRegion.maxHeightProperty().bind(this.textLabel.heightProperty().add(25.0d));","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"            this.backgroundRegion.minHeightProperty().bind(this.textLabel.heightProperty().add(25.0d));","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"            this.backgroundRegion.minWidthProperty().bind(this.textLabel.widthProperty().add(25.0d));","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"            this.backgroundRegion.maxWidthProperty().bind(this.textLabel.widthProperty().add(25.0d));","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"            throw new JukeInitialisationException(\"I cannot initialise! There was an issue loading the necessary \"","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"                                                          + \"FXML files to load up the GUI!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":54}},{"path":"src/main/java/juke/ui/windows/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.ui.windows;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commands.JukeCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commands.JukeExceptionCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.commands.JukeExitCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.JukeInitialisationException;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.parsers.JukeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.storage.JukeStorageException;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"import juke.responses.Response;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"import juke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"import juke.ui.components.DialogBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":" * Controller class for the main window of the application.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"    /** Name of the application. */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    public static final String APPLICATION_NAME \u003d \"Juke\";","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    /** Offset for the widgets. */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    public static final double OFFSETS \u003d 1.5d;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"    /** Storage object that handles the loading and saving of tasks. */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    /** TaskList object that handles the manipulation of tasks. */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    /** ScrollPane container that contains a scrollable object. */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"    /** VBox container that contains the dialog bubbles. */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    /** TextField that accepts user input. */","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"    private TextField inputField;","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    /** Button that submits the user input. */","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"    private Button submitButton;","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"     * Initialises the core services of Juke, such as the","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"     * Storage and TaskList services.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"    private void initialiseCoreServices() {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"            // init services","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"            this.storage \u003d Storage.of();","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"            this.taskList \u003d TaskList.of(this.storage);","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (JukeInitialisationException | JukeStorageException","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"                 | JukeParseException ex) {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"            this.dialogContainer.getChildren().add(DialogBox.ofJuke(ex.getMessage()));","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"            this.exit();","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"     * Initialises the main window and configures it with the specified","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"     * parameters.","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"        // anchor the widgets to the parent layout\u0027s edges","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"        AnchorPane.setTopAnchor(this.scrollPane, MainWindow.OFFSETS);","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"        AnchorPane.setBottomAnchor(this.submitButton, MainWindow.OFFSETS);","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"        AnchorPane.setBottomAnchor(this.inputField, MainWindow.OFFSETS);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"        AnchorPane.setRightAnchor(this.submitButton, MainWindow.OFFSETS);","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"        AnchorPane.setLeftAnchor(this.inputField, MainWindow.OFFSETS);","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"        // anchor the scroll","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"        // add the introductory dialog to the dialog container","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"        this.dialogContainer.getChildren().add(this.getIntroductoryDialog());","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"        // handle user inputs","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"        this.submitButton.setOnMouseClicked((event) -\u003e this.handleInput());","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"        this.inputField.setOnAction((event) -\u003e this.handleInput());","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"        // initialise core services after setting the handlers","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"        this.initialiseCoreServices();","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"     * Dispatches the command and acts on it.","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"    private void handleInput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"        String inputCommand \u003d this.inputField.getText();","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"            Response response \u003d Response.ofUser(inputCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"            JukeCommand action \u003d JukeCommand.of(inputCommand, this.taskList);","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"            if (action instanceof JukeExitCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"                exit();","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"            Response returns \u003d action.execute(response);","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"            String inputMessage \u003d returns.getInputMessage();","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"            String outputMessage \u003d returns.getOutputMessage();","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"            if (inputMessage !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"                DialogBox userDialog \u003d getAsUserInput(inputMessage);","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"                this.dialogContainer.getChildren().addAll(userDialog);","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"            if (outputMessage !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"                DialogBox jukeDialog \u003d getAsJukeOutput(outputMessage);","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"                this.dialogContainer.getChildren().addAll(jukeDialog);","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"        } catch (JukeException ex) {","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"            Response returns \u003d new JukeExceptionCommand(ex).execute(Response.ofUser(inputCommand));","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"            this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"                    getAsUserInput(returns.getInputMessage()),","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"                    getAsJukeOutput(returns.getOutputMessage()));","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"        } finally {","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"            this.inputField.clear();","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns a UserDialog object that contains the inputs given by","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"     * the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"     * @param userInput User input","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code UserDialog} object","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"    private DialogBox getAsUserInput(String userInput) {","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"        return DialogBox.ofUser(userInput);","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns a JukeDialog object that contains the outputs returned by","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"     * Juke.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"     * @param jukeOutput Juke output","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeDialog} object","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"    private DialogBox getAsJukeOutput(String jukeOutput) {","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"        return DialogBox.ofJuke(jukeOutput);","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"asdfghjkxd"},"content":"     * Returns a DialogBox object that contains the introductory message","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"asdfghjkxd"},"content":"     * when the user first starts Juke.","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"asdfghjkxd"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"asdfghjkxd"},"content":"     * @return {@code JukeDialog} object with the introductory message","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"asdfghjkxd"},"content":"    private DialogBox getIntroductoryDialog() {","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"asdfghjkxd"},"content":"        String introductoryMessage \u003d \"Hello! I\u0027m Juke (J|ava D|uke)!\\nWhat can I do for you today?\";","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"asdfghjkxd"},"content":"        return this.getAsJukeOutput(introductoryMessage);","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"asdfghjkxd"},"content":"     * Forces an exit of the application. This may be deprecated in the future","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"asdfghjkxd"},"content":"     * if the application is to deprecate support for the \"bye\" command.","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"asdfghjkxd"},"content":"    private void exit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"asdfghjkxd"},"content":"        System.exit(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":174}},{"path":"src/main/resources/view/JukeDialog.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.geometry.Pos?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"450.0\"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"         prefWidth\u003d\"450.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cImageView fx:id\u003d\"displayImage\" fitHeight\u003d\"100.0d\" fitWidth\u003d\"100.0d\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cclip\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cCircle radius\u003d\"50.0d\" centerX\u003d\"50.0\" centerY\u003d\"50.0\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cImage url\u003d\"@/images/DaDuke.png\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cStackPane fx:id\u003d\"dialogBubble\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cRegion fx:id\u003d\"backgroundRegion\" maxWidth\u003d\"350.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"                    \u003cbackground\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"                        \u003cBackground\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"                            \u003cfills\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"                                \u003cBackgroundFill fill\u003d\"lightblue\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"                                    \u003cradii\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"                                        \u003cCornerRadii radius\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"                                    \u003c/radii\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"                                \u003c/BackgroundFill\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"                            \u003c/fills\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"                        \u003c/Background\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"                    \u003c/background\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"                \u003c/Region\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cLabel fx:id\u003d\"textLabel\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cInsets top\u003d\"10.0\" right\u003d\"5.0\" bottom\u003d\"10.0\" left\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"            prefHeight\u003d\"700.0\" prefWidth\u003d\"450.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"juke.ui.windows.MainWindow\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"      \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"                  prefHeight\u003d\"670.0\" prefWidth\u003d\"450.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" \u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"         \u003c/content\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"      \u003cTextField fx:id\u003d\"inputField\" layoutY\u003d\"670.0\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"                 maxWidth\u003d\"1.7976931348623157E308\" onAction\u003d\"#handleInput\" prefHeight\u003d\"25.0\"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"                 prefWidth\u003d\"370.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"      \u003cButton fx:id\u003d\"submitButton\" layoutX\u003d\"374.0\" layoutY\u003d\"671.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"              onMouseClicked\u003d\"#handleInput\" prefHeight\u003d\"25.0\" prefWidth\u003d\"75.0\" text\u003d\"Submit\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":24}},{"path":"src/main/resources/view/UserDialog.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.geometry.Pos?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"450.0\"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"         prefWidth\u003d\"450.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cStackPane fx:id\u003d\"dialogBubble\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cRegion fx:id\u003d\"backgroundRegion\" maxWidth\u003d\"350.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"                    \u003cbackground\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"                        \u003cBackground\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"                            \u003cfills\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"                                \u003cBackgroundFill fill\u003d\"lightgreen\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"                                    \u003cradii\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"                                        \u003cCornerRadii radius\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"                                    \u003c/radii\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"                                \u003c/BackgroundFill\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"                            \u003c/fills\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"                        \u003c/Background\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"                    \u003c/background\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"                \u003c/Region\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cLabel fx:id\u003d\"textLabel\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cImageView fx:id\u003d\"displayImage\" fitHeight\u003d\"100.0d\" fitWidth\u003d\"100.0d\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cclip\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cCircle radius\u003d\"50.0d\" centerX\u003d\"50.0\" centerY\u003d\"50.0\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"                \u003cImage url\u003d\"@/images/DaUser.png\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    \u003calignment\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cPos fx:constant\u003d\"TOP_RIGHT\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"    \u003c/alignment\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        \u003cInsets top\u003d\"10.0\" right\u003d\"5.0\" bottom\u003d\"10.0\" left\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"asdfghjkxd":46}},{"path":"src/test/java/juke/parsers/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.parsers.JukeDateFormatParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":" * Tests for the DateTimeParser class.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isValidDate} method with valid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDate_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"        Assertions.assertTrue(DateTimeParser.isValidDate(\"15-02-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(DateTimeParser.isValidDate(\"15/02/2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isValidDate} method with invalid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDate_invalidDate_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"32-12-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"12-14-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"12-05-1000000\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isValidDate} method with whitespace-leading or whitespace-trailing","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"     * commands.","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDate_whitespaced_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"  15-02-2023  \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"  15/02/2023  \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isValidDate} method with excessively whitespaced commands.","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDate_excessivelyWhitespaced_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"  15   -   02   -   2023  \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"  15   /   02   /   2023  \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isValidDate} method with illegal symbols.","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDate_illegalSymbols_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15?02?2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15|02|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isValidDate} method with gibberish inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDate_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15002/2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15002|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDate(\"15002-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isValidDateTime} method with valid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDateTime_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(DateTimeParser.isValidDateTime(\"15-02-2023 15-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(DateTimeParser.isValidDateTime(\"15/02/2023 15-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(DateTimeParser.isValidDateTime(\"15-02-2023 15:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(DateTimeParser.isValidDateTime(\"15/02/2023 15:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isValidDateTime} method with invalid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDateTime_whitespaced_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15-02-2023 15-23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15/02/2023 15-23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15-02-2023 15:23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15/02/2023 15:23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isValidDateTime} method with excessively whitespaced inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDateTime_excessivelyWhitespaced_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15   -   02   -   2023   15   -   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15   /   02   /   2023   15   -   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15   -   02   -   2023   15   :   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"   15   /   02   /   2023   15   :   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isValidDateTime} method with illegal symbols.","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDateTime_illegalSymbols_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15?02?2023 14?23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15|02|2023 14|23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15?02?2023 14|23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15|02|2023 14?23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isValidDateTime} method with gibberish inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"    public void isValidDateTime_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15002/2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15002|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(DateTimeParser.isValidDateTime(\"15002-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parse} method with valid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"    public void parse_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"15-02-2023\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"15/02/2023\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"15-02-2023\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"15/02/2023\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"15-02-2023 15-23\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"15/02/2023 15-23\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"15-02-2023 15:23\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"15/02/2023 15:23\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parse} method with whitespace-leading or trailing inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"    public void parse_whitespace_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"   15-02-2023   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"   15/02/2023   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"   15-02-2023   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T00:00\", DateTimeParser.parse(\"   15/02/2023   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"   15-02-2023 15-23   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"   15/02/2023 15-23   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"   15-02-2023 15:23   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(\"2023-02-15T15:23\", DateTimeParser.parse(\"   15/02/2023 15:23   \").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parse} method with excessively whitespaced inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":162,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":163,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"asdfghjkxd"},"content":"    public void parse_excessiveWhitespaces_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"asdfghjkxd"},"content":"                \"   15   -   02   -   2023   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"asdfghjkxd"},"content":"                \"   15   /   02   /   2023   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"asdfghjkxd"},"content":"                \"   15   -   02   -   2023   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"asdfghjkxd"},"content":"                \"   15   /   02   /   2023   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"asdfghjkxd"},"content":"                \"   15   -   02   -   2023   15   -   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":176,"author":{"gitId":"asdfghjkxd"},"content":"                \"   15   /   02   /   2023   15   -   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"asdfghjkxd"},"content":"                \"   15   -   02   -   2023   15   :   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":179,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"asdfghjkxd"},"content":"                \"   15   /   02   /   2023   15   :   23   \"));","lastModifiedDate":"2023-08-27"},{"lineNumber":181,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":182,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parse} method with gibberish inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":185,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":186,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":187,"author":{"gitId":"asdfghjkxd"},"content":"    public void parse_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":188,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002/2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":189,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":190,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002-2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":191,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002/2023 14-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":192,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002/2023 14:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":193,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002|2023 14-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":194,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002|2023 14:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":195,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002-2023 14-23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":196,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15002-2023 14:23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":197,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":198,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":199,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":200,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parse} method with illegal symbols.","lastModifiedDate":"2023-08-27"},{"lineNumber":201,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":202,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":203,"author":{"gitId":"asdfghjkxd"},"content":"    public void parse_illegalSymbols_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":204,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15|02|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":205,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15?02?2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":206,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15|02|2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":207,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15?02?2023\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":208,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15|02|2023 14|23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":209,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15?02?2023 14?23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":210,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15|02|2023 14?23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":211,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e DateTimeParser.parse(\"15?02?2023 14|23\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":212,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":213,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":213}},{"path":"src/test/java/juke/parsers/FileParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.parsers.JukeDataFileParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"import juke.exceptions.parsers.JukeDateFormatParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeDeadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeEvent;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"import juke.tasks.JukeTodo;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":" * Tests for the FileParser class.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"public class FileParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseTask} method with valid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseTask_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"        Assertions.assertEquals(new JukeTodo(\"testing\", false).toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"                                FileParser.parseTask(\"T|F|testing\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(new JukeDeadline(\"testing\", DateTimeParser","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"                             .fromDateTimeString(\"2027-07-15T15:34\"), false).toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"                     FileParser.parseTask(\"D|F|testing|2027-07-15T15:34\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(new JukeEvent(","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"                \"testing\", DateTimeParser.fromDateTimeString(\"2027-07-15T15:34\"),","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"                DateTimeParser.fromDateTimeString(\"2027-08-15T15:34\"), false).toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"                     FileParser.parseTask(\"E|F|testing|2027-07-15T15:34|2027-08-15T15:34\").toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseTask} method with gibberish commands.","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseTask_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(\"this is obviously wrong\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(\"T|Ftesting\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(\"D|Ftesting|2027-07-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(\"D|Ftesting|10000-07-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"                \"E|Ftesting|2027-07-15T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"                \"E|Ftesting|203414-07-15T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"                \"E|Ftesting|2027-07-15T15:34|200202-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseTask} method with invalid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseTask_illegalDates_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(\"D|F|testing|202020-07-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(\"D|F|testing|2020-100-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"                 \"D|F|testing|2020-07-2132131321T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"                \"E|F|testing|203414-07-15T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"                \"E|F|testing|2020-420-15T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"                \"E|F|testing|2020-07-200T15:34|2027-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"                \"E|F|testing|2020-07-15T15:34|202721412-08-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"                \"E|F|testing|2020-07-15T15:34|2020-800-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDateFormatParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"                \"E|F|testing|2020-07-15T15:34|2020-08-222323T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"        assertThrows(JukeDataFileParseException.class, () -\u003e FileParser.parseTask(","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"                \"E|F|testing|2020-08-15T15:34|2020-07-15T15:34\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":76}},{"path":"src/test/java/juke/parsers/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.parsers;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":" * Tests for the Parser class.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseBySpace} method with valid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseBySpace_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseBySpace(\"test command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"test\");","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseBySpace} method with whitespace-leading or whitespace-trailing inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseBySpace_withWhitespaces_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseBySpace(\"    tested command    \");","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"tested\");","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseBySpace} method with excessively whitespaced inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseBySpace_excessivelyWhitespaced_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseBySpace(\"    tested   command    \");","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"tested\");","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"command\");","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseBySpace} method with gibberish inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseBySpace_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseBySpace(\"thisshouldnotwork\");","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"thisshouldnotwork\");","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseByByString} method with valid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByByString_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByByString(\"string /by time\");","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"time\");","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseByByString} method with whitespace-leading or","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"asdfghjkxd"},"content":"     * whitespace-trailing inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByByString_withWhitespaces_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByByString(\"     string /by time     \");","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"time\");","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseByByString} method with excessively whitespaced inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByByString_excessivelyWhitespaced_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByByString(\"     string   /by   time     \");","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"time\");","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseByByString} method with gibberish inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByByString_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByByString(\"string/bytime\");","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string/bytime\");","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseByFromToString} method with valid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByFromToString_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByFromToString(\"string /from now /to later\");","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 3);","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"now\");","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[2], \"later\");","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseByFromToString} method with whitespace-leading or","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"asdfghjkxd"},"content":"     * whitespace-trailing inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByFromToString_withWhitespaces_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByFromToString(\"   string /from now /to later   \");","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 3);","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"now\");","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[2], \"later\");","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseByFromToString} method with excessively whitespaced inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":127,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByFromToString_excessivelyWhitespaced_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":130,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByFromToString(\"   string   /from   now   /to   later   \");","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 3);","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string\");","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[1], \"now\");","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[2], \"later\");","lastModifiedDate":"2023-08-27"},{"lineNumber":135,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":137,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":138,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code parseByFromToString} method with gibberish inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"asdfghjkxd"},"content":"    public void parseByFromToString_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"asdfghjkxd"},"content":"        String[] parsed \u003d Parser.parseByFromToString(\"string/fromnow/tolater\");","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed.length, 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"asdfghjkxd"},"content":"        assertEquals(parsed[0], \"string/fromnow/tolater\");","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isMatchByString} method with valid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"asdfghjkxd"},"content":"    public void isMatchByString_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(Parser.isMatchByString(\"testing /by test\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(Parser.isMatchByString(\"testing /by test more than one item\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(Parser.isMatchByString(\"testing more than one argument /by test\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isMatchByString} method with gibberish inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"asdfghjkxd"},"content":"    public void isMatchByString_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":162,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(Parser.isMatchByString(\"testing/bytest\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":163,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(Parser.isMatchByString(\"testing/by test\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(Parser.isMatchByString(\"testing /bytest\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isMatchFromToString} method with valid inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"asdfghjkxd"},"content":"    public void isMatchFromToString_normal_success() {","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(Parser.isMatchFromToString(\"testing /from testdate /to enddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(Parser.isMatchFromToString(\"testing more than one arg /from testdate /to enddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(Parser.isMatchFromToString(\"testing /from testdate more than one /to enddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(Parser.isMatchFromToString(\"testing /from testdate /to enddate more than one\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":176,"author":{"gitId":"asdfghjkxd"},"content":"        assertTrue(Parser.isMatchFromToString(\"testing /from testdate more than one  /to enddate more \"","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"asdfghjkxd"},"content":"                                                      + \"than one\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":179,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"asdfghjkxd"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":181,"author":{"gitId":"asdfghjkxd"},"content":"     * Tests for the {@code isMatchFromToString} method with gibberish inputs.","lastModifiedDate":"2023-08-27"},{"lineNumber":182,"author":{"gitId":"asdfghjkxd"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"asdfghjkxd"},"content":"    @Test","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"asdfghjkxd"},"content":"    public void isMatchFromToString_gibberish_failure() {","lastModifiedDate":"2023-08-27"},{"lineNumber":185,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(Parser.isMatchFromToString(\"testing/fromtestdate/toenddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":186,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(Parser.isMatchFromToString(\"testing/from testdate/toenddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":187,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(Parser.isMatchFromToString(\"testing/fromtestdate/to enddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":188,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(Parser.isMatchFromToString(\"testing/fromtestdate /to enddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":189,"author":{"gitId":"asdfghjkxd"},"content":"        assertFalse(Parser.isMatchFromToString(\"testing /from testdate/toenddate\"));","lastModifiedDate":"2023-08-27"},{"lineNumber":190,"author":{"gitId":"asdfghjkxd"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":191,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":191}},{"path":"src/test/java/juke/tasks/JukeDeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeDeadlineTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":4}},{"path":"src/test/java/juke/tasks/JukeEventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeEventTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":4}},{"path":"src/test/java/juke/tasks/JukeListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeListTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":4}},{"path":"src/test/java/juke/tasks/JukeTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeTaskTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":4}},{"path":"src/test/java/juke/tasks/JukeTodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"package juke.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"public class JukeTodoTest {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"asdfghjkxd":4}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"E|F|splashdown|2022-04-24T00:00|2022-04-25T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"D|F|finish cs career|9999-12-31T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"T|F|finish cs2100 lecture","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"E|F|very big event oh no|2023-12-25T00:00|2023-12-26T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"T|F|complete tp","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"D|F|go to bed|9999-12-31T23:59","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"E|F|go to prom|2023-08-09T00:00|2023-08-10T00:00","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"asdfghjkxd":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asdfghjkxd"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"asdfghjkxd"},"content":"todo complete tp","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"asdfghjkxd"},"content":"deadline go to bed /by 31-12-9999 23:59","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"asdfghjkxd"},"content":"event go to prom /from 09-08-2023 /to 10-08-2023","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"asdfghjkxd"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"asdfghjkxd"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"asdfghjkxd"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"asdfghjkxd"},"content":"unmark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"asdfghjkxd"},"content":"unmark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"asdfghjkxd"},"content":"mark 1000","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"asdfghjkxd"},"content":"unmark 1000","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"asdfghjkxd"},"content":"todo","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"asdfghjkxd"},"content":"deadline","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"asdfghjkxd"},"content":"event","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"deadline /malformed","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"event /malformed /request","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"asdfghjkxd":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"asdfghjkxd"},"content":"# set up the tasks.txt file","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"asdfghjkxd"},"content":"if [ -e \"./data/tasks.txt\" ]","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"asdfghjkxd"},"content":"then","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"asdfghjkxd"},"content":"  echo \"E|T|splashdown|2022-04-24T00:00|2022-04-25T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"asdfghjkxd"},"content":"D|F|finish cs career|9999-12-31T00:00","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"asdfghjkxd"},"content":"T|F|finish cs2100 lecture","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"asdfghjkxd"},"content":"E|F|very big event oh no|2023-12-25T00:00|2023-12-26T00:00\" \u003e ./data/tasks.txt","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"asdfghjkxd"},"content":"fi","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"asdfghjkxd"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"asdfghjkxd"},"content":"if ! javac -cp \\","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/actions:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/arguments:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/storage:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/parsers:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/storage:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/tasks:\\","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/core \\","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"asdfghjkxd"},"content":"-Xlint:none -d ../bin \\","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/actions/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/arguments/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/exceptions/storage/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/parsers/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/storage/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/tasks/*.java \\","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"asdfghjkxd"},"content":"../src/main/java/juke/core/*.java","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"asdfghjkxd"},"content":"java -classpath ../bin main.java.Juke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"asdfghjkxd"},"content":"# compare the output to the expected output, ignoring ending whitespaces, since the output generates them but the","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"asdfghjkxd"},"content":"# expected file erases them","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"asdfghjkxd"},"content":"diff ACTUAL.TXT EXPECTED.TXT -b --ignore-blank-lines","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"asdfghjkxd":33,"-":30}}]
