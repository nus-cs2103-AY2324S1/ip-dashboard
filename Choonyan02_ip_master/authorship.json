[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Choonyan02"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Choonyan02":1,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":" * Represents the main class for the Duke chatbot application.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Choonyan02"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Choonyan02"},"content":"public class Duke {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"Choonyan02"},"content":"    private final String name \u003d \"Paimon\";","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"Choonyan02"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Choonyan02"},"content":"     * Greets the user, handles user interactions, and displays farewell message upon exit.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Choonyan02"},"content":"    public void greetAndFarewell() {","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"Choonyan02"},"content":"        Ui.greetings();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Choonyan02"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"Choonyan02"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"Choonyan02"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"Choonyan02"},"content":"            Ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Choonyan02"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"Choonyan02"},"content":"                Parser.readTask(command, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Choonyan02"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"Choonyan02"},"content":"                Ui.showError(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Choonyan02"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"Choonyan02"},"content":"            Ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Choonyan02"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"Choonyan02"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"Choonyan02"},"content":"        scanner.close();","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"Choonyan02"},"content":"        Ui.exit();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Choonyan02"},"content":"     * Entry point of the Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Choonyan02"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Choonyan02"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"Choonyan02"},"content":"        Duke chatBot \u003d new Duke();","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"Choonyan02"},"content":"        chatBot.greetAndFarewell();","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"Choonyan02"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Choonyan02":45}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":" * Represents a custom exception specific to the Duke chatbot application.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Choonyan02"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Choonyan02"},"content":"     * @param msg The error message associated with the exception.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Choonyan02"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"Choonyan02"},"content":"        super(msg);","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Choonyan02"},"content":"     * Returns a formatted string representation of the exception.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Choonyan02"},"content":"     * @return A formatted string containing the error message.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Choonyan02"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"Choonyan02"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"Choonyan02"},"content":"        return \" ☹ OOPS!!! \" + super.getMessage();","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"Choonyan02"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Choonyan02":26}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Choonyan02"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Choonyan02"},"content":"     * Reads and processes the user command.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Choonyan02"},"content":"     * If it is modifying a task, perform it straight away, else, call addTask.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Choonyan02"},"content":"     * @param command The user command.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Choonyan02"},"content":"     * @param tasklist The task list to perform actions on.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Choonyan02"},"content":"     * @throws DukeException If there\u0027s an issue with the command or task processing.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Choonyan02"},"content":"    public static void readTask(String command, TaskList tasklist) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Choonyan02"},"content":"        String[] commandSplit \u003d command.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Choonyan02"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Choonyan02"},"content":"            Ui.listTasks(tasklist);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Choonyan02"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Choonyan02"},"content":"            tasklist.findTasks(commandSplit[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Choonyan02"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Choonyan02"},"content":"                if (command.startsWith(\"todo\") ||","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Choonyan02"},"content":"                        command.startsWith(\"deadline\") ||","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Choonyan02"},"content":"                        command.startsWith(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Choonyan02"},"content":"                    addTask(command, tasklist);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Choonyan02"},"content":"                } else if (command.startsWith(\"mark\") ||","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Choonyan02"},"content":"                        command.startsWith(\"unmark\") ||","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Choonyan02"},"content":"                        command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Choonyan02"},"content":"                    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Choonyan02"},"content":"                        if (commandSplit.length \u003e 2 || Integer.parseInt(commandSplit[1]) \u003e tasklist.taskCount()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Choonyan02"},"content":"                            throw new DukeException(\"Please enter a valid number\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Choonyan02"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Choonyan02"},"content":"                        int index \u003d Integer.parseInt(commandSplit[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Choonyan02"},"content":"                        if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Choonyan02"},"content":"                            Ui.markTask(tasklist.getTask(index));","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Choonyan02"},"content":"                            tasklist.markTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Choonyan02"},"content":"                        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Choonyan02"},"content":"                            Ui.unMarkTask(tasklist.getTask(index));","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Choonyan02"},"content":"                            tasklist.unMarkTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Choonyan02"},"content":"                        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Choonyan02"},"content":"                            Ui.deleteTask(tasklist.getTask(index), tasklist.taskCount());","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Choonyan02"},"content":"                            tasklist.deleteTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Choonyan02"},"content":"                            return;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Choonyan02"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Choonyan02"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Choonyan02"},"content":"                        throw new DukeException(\"Please enter a valid number\");","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Choonyan02"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Choonyan02"},"content":"                        throw new DukeException(\"Please enter a valid number\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Choonyan02"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Choonyan02"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Choonyan02"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Choonyan02"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Choonyan02"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Choonyan02"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Choonyan02"},"content":"     * Add task to the task list based on the command.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Choonyan02"},"content":"     * @param command The user command.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Choonyan02"},"content":"     * @param tasklist The task list to perform actions on.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Choonyan02"},"content":"     * @throws DukeException If there\u0027s an issue with the command or task processing.","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Choonyan02"},"content":"    private static void addTask(String command, TaskList tasklist) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Choonyan02"},"content":"        if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Choonyan02"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Choonyan02"},"content":"                String taskDescription \u003d command.substring(5);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Choonyan02"},"content":"                if (taskDescription.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Choonyan02"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Choonyan02"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Choonyan02"},"content":"                Task t \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Choonyan02"},"content":"                tasklist.addTask(t);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Choonyan02"},"content":"                Ui.addTask(t, tasklist.taskCount());","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Choonyan02"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Choonyan02"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Choonyan02"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Choonyan02"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Choonyan02"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Choonyan02"},"content":"                String[] taskAndDeadline \u003d command.substring(9).split(\" /by \");","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Choonyan02"},"content":"                if (taskAndDeadline[0].length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Choonyan02"},"content":"                    throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Choonyan02"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Choonyan02"},"content":"                Task t \u003d new Deadline(taskAndDeadline[0], taskAndDeadline[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Choonyan02"},"content":"                tasklist.addTask(t);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Choonyan02"},"content":"                Ui.addTask(t, tasklist.taskCount());","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Choonyan02"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Choonyan02"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Choonyan02"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Choonyan02"},"content":"                throw new DukeException(\"The deadline is not specified.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Choonyan02"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Choonyan02"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Choonyan02"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Choonyan02"},"content":"                String[] taskAndDate \u003d command.substring(6).split(\" /from | /to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Choonyan02"},"content":"                if (taskAndDate[0].length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Choonyan02"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Choonyan02"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"Choonyan02"},"content":"                Task t \u003d new Event(taskAndDate[0], taskAndDate[1], taskAndDate[2]);","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"Choonyan02"},"content":"                tasklist.addTask(t);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Choonyan02"},"content":"                Ui.addTask(t, tasklist.taskCount());","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Choonyan02"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Choonyan02"},"content":"                throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Choonyan02"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Choonyan02"},"content":"                throw new DukeException(\"The dates of an event cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"Choonyan02"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"Choonyan02"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"Choonyan02"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"Choonyan02"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"Choonyan02"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Choonyan02":112}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Choonyan02"},"content":" * Handles saving and loading tasks to/from a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Choonyan02"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Choonyan02"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Choonyan02"},"content":"     * Saves the list of tasks to a serialized file.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Choonyan02"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Choonyan02"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Choonyan02"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Choonyan02"},"content":"            FileOutputStream file \u003d new FileOutputStream(\"savedTasks.ser\");","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Choonyan02"},"content":"            ObjectOutputStream output \u003d new ObjectOutputStream(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Choonyan02"},"content":"            output.writeObject(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Choonyan02"},"content":"            output.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Choonyan02"},"content":"            file.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Choonyan02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Choonyan02"},"content":"            System.out.println(\"file error occurred when saving\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Choonyan02"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Choonyan02"},"content":"     * Loads tasks from a serialized file.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Choonyan02"},"content":"     * @return The list of loaded tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Choonyan02"},"content":"     * @throws FileNotFoundException If the file is not found.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Choonyan02"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Choonyan02"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Choonyan02"},"content":"            FileInputStream file \u003d new FileInputStream(\"savedTasks.ser\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Choonyan02"},"content":"            ObjectInputStream output \u003d new ObjectInputStream(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Choonyan02"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Choonyan02"},"content":"            ArrayList\u003cTask\u003e tasks \u003d (ArrayList\u003cTask\u003e) output.readObject();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Choonyan02"},"content":"            output.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Choonyan02"},"content":"            file.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Choonyan02"},"content":"            return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Choonyan02"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Choonyan02"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Choonyan02"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Choonyan02"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Choonyan02":48}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Choonyan02"},"content":" * Represents the user interface for interacting with the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Choonyan02"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Choonyan02"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Choonyan02"},"content":"     * Displays a greeting message.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Choonyan02"},"content":"    public static void greetings() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Choonyan02"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\" Hello! I\u0027m Paimon\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Choonyan02"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Choonyan02"},"content":"     * Displays an exit message.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Choonyan02"},"content":"    public static void exit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Choonyan02"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Choonyan02"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Choonyan02"},"content":"     * Displays a message indicating that a task has been added.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Choonyan02"},"content":"     * @param task The added task.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Choonyan02"},"content":"     * @param taskCount The current number of tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Choonyan02"},"content":"    public static void addTask(Task task, int taskCount) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\"   \" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\" Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Choonyan02"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Choonyan02"},"content":"     * @param task The marked task.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Choonyan02"},"content":"    public static void markTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\"   \" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Choonyan02"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Choonyan02"},"content":"     * @param task The marked task.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Choonyan02"},"content":"    public static void unMarkTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\"   \" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Choonyan02"},"content":"     * Displays a message indicating that a task has been deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Choonyan02"},"content":"     * @param task The deleted task.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Choonyan02"},"content":"     * @param count The updated number of tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Choonyan02"},"content":"    public static void deleteTask(Task task, int count) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\"   \" + task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\" Now you have \" + (count - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Choonyan02"},"content":"     * Displays a message indicating that no existing tasks were found.","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Choonyan02"},"content":"    public static void noTaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Choonyan02"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\"No existing tasks, creating new task list...\");","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Choonyan02"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Choonyan02"},"content":"     * Displays matching tasks based on a keyword search.","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Choonyan02"},"content":"     * @param tasks The list of matching tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Choonyan02"},"content":"    public static void findTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Choonyan02"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Choonyan02"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Choonyan02"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Choonyan02"},"content":"     * Displays the list of tasks in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Choonyan02"},"content":"     * @param taskList The task list to display.","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"Choonyan02"},"content":"    public static void listTasks(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Choonyan02"},"content":"        for (int i \u003d 0; i \u003c taskList.taskCount(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Choonyan02"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + taskList.getTask(i).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"Choonyan02"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"Choonyan02"},"content":"     * Displays a separator line.","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"Choonyan02"},"content":"    public static void showLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(\"---------------------------------------------------------------\");","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"Choonyan02"},"content":"     * Displays an error message for a DukeException.","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"Choonyan02"},"content":"     * @param e The DukeException to display.","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"Choonyan02"},"content":"    public static void showError(DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"Choonyan02"},"content":"        System.out.println(e.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"Choonyan02"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Choonyan02":123}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":" * Represents a task with a description, completion status, and a deadline date.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Choonyan02"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Choonyan02"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"Choonyan02"},"content":"    private LocalDate deadline \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Choonyan02"},"content":"     * Constructs a deadline task with the specified description and deadline date.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Choonyan02"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Choonyan02"},"content":"     * @param by The deadline date in the format \"yyyy-MM-dd\".","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Choonyan02"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"Choonyan02"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"Choonyan02"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Choonyan02"},"content":"        this.deadline \u003d LocalDate.parse(by, inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Choonyan02"},"content":"     * Returns a string representation of the deadline task, including its completion status icon, description, and deadline date.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Choonyan02"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Choonyan02"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"Choonyan02"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"Choonyan02"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Choonyan02"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(outputFormatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"Choonyan02"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Choonyan02":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":" * Represents a task with a description, completion status, and an event duration.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Choonyan02"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Choonyan02"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"Choonyan02"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Choonyan02"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Choonyan02"},"content":"     * Constructs an event task with the specified description, start date, and end date.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Choonyan02"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Choonyan02"},"content":"     * @param from The start date of the event in the format \"yyyy-MM-dd\".","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Choonyan02"},"content":"     * @param to The end date of the event in the format \"yyyy-MM-dd\".","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Choonyan02"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"Choonyan02"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"Choonyan02"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-mm-dd\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Choonyan02"},"content":"        this.from \u003d LocalDate.parse(from, inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Choonyan02"},"content":"        this.to \u003d LocalDate.parse(to, inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Choonyan02"},"content":"     * Returns a string representation of the event task, including its completion status icon, description, start date, and end date.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Choonyan02"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Choonyan02"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"Choonyan02"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"Choonyan02"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Choonyan02"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(outputFormatter) + \" to: \" + to.format(outputFormatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"Choonyan02"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Choonyan02":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Choonyan02"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Choonyan02"},"content":"    protected String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"Choonyan02"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Choonyan02"},"content":"     * Constructs a task with the specified description.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Choonyan02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Choonyan02"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"Choonyan02"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"Choonyan02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Choonyan02"},"content":"     * Returns an icon representing the completion status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Choonyan02"},"content":"     * @return \"X\" if the task is done, \" \" (space) if the task is not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Choonyan02"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"Choonyan02"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Choonyan02"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Choonyan02"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Choonyan02"},"content":"    public String getDesc() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Choonyan02"},"content":"        return this.description;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Choonyan02"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Choonyan02"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"Choonyan02"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Choonyan02"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Choonyan02"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"Choonyan02"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Choonyan02"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Choonyan02"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Choonyan02"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Choonyan02"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Choonyan02"},"content":"     * Returns a string representation of the task, including its completion status icon and description.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Choonyan02"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Choonyan02"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"Choonyan02"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"Choonyan02"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Choonyan02":71}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Choonyan02"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Choonyan02"},"content":" * Represents a list of tasks and provides methods to manage tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Choonyan02"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Choonyan02"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Choonyan02"},"content":"    private int taskNum \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Choonyan02"},"content":"    Storage store \u003d new Storage();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"Choonyan02"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Choonyan02"},"content":"     * Constructs a TaskList by loading tasks from storage (if available).","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Choonyan02"},"content":"     * If storage is not available, displays a message indicating no tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Choonyan02"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Choonyan02"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Choonyan02"},"content":"            this.tasks \u003d store.loadTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Choonyan02"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Choonyan02"},"content":"            Ui.noTaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Choonyan02"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Choonyan02"},"content":"        this.taskNum \u003d this.tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Choonyan02"},"content":"     * Adds a task to the task list and updates storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Choonyan02"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Choonyan02"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Choonyan02"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Choonyan02"},"content":"        this.taskNum +\u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Choonyan02"},"content":"        store.saveTasks(this.tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Choonyan02"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Choonyan02"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Choonyan02"},"content":"    public int taskCount() {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Choonyan02"},"content":"        return this.taskNum;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Choonyan02"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Choonyan02"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"Choonyan02"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Choonyan02"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Choonyan02"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Choonyan02"},"content":"     * Marks a task as done at the specified index and updates storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Choonyan02"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"Choonyan02"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"Choonyan02"},"content":"        store.saveTasks(this.tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Choonyan02"},"content":"        this.tasks.get(index).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Choonyan02"},"content":"     * Marks a task as not done at the specified index and updates storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Choonyan02"},"content":"     * @param index The index of the task to mark as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Choonyan02"},"content":"    public void unMarkTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Choonyan02"},"content":"        store.saveTasks(this.tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Choonyan02"},"content":"        this.tasks.get(index).markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Choonyan02"},"content":"     * Deletes a task at the specified index, updates task count, and updates storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Choonyan02"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Choonyan02"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Choonyan02"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"Choonyan02"},"content":"        this.taskNum -\u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"Choonyan02"},"content":"        store.saveTasks(this.tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"Choonyan02"},"content":"     * Searches for tasks containing the specified keyword and displays the found tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"Choonyan02"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"Choonyan02"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"Choonyan02"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"Choonyan02"},"content":"        for (Task tsk : this.tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"Choonyan02"},"content":"            if (tsk.getDesc().contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"Choonyan02"},"content":"                foundTasks.add(tsk);","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"Choonyan02"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"Choonyan02"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"Choonyan02"},"content":"        Ui.findTasks(foundTasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"Choonyan02"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Choonyan02":104}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":" * Represents a to-do task with a description and completion status.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"Choonyan02"},"content":"     * Constructs a to-do task with the specified description.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"Choonyan02"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Choonyan02"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"Choonyan02"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Choonyan02"},"content":"     * Returns a string representation of the to-do task, including its completion status icon and description.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Choonyan02"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Choonyan02"},"content":"     * @return A formatted string representing the to-do task.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Choonyan02"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"Choonyan02"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"Choonyan02"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"Choonyan02"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Choonyan02":26}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Choonyan02"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Choonyan02"},"content":" * Test class for the TaskList class.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Choonyan02"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Choonyan02"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"Choonyan02"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Choonyan02"},"content":"     * Test adding a task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Choonyan02"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Choonyan02"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Choonyan02"},"content":"        int initialTaskCount \u003d taskList.taskCount();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"Choonyan02"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"Choonyan02"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Choonyan02"},"content":"        assertEquals(initialTaskCount + 1, taskList.taskCount());","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Choonyan02"},"content":"     * Test marking a task as done in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Choonyan02"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Choonyan02"},"content":"    public void testMarkTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Choonyan02"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"Choonyan02"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"Choonyan02"},"content":"        taskList.markTask(0);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Choonyan02"},"content":"        assertTrue(taskList.getTask(0).isDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Choonyan02"},"content":"     * Test marking a task as not done in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Choonyan02"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Choonyan02"},"content":"    public void testUnMarkTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Choonyan02"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"Choonyan02"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"Choonyan02"},"content":"        taskList.markTask(0);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"Choonyan02"},"content":"        assertTrue(taskList.getTask(0).isDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Choonyan02"},"content":"        taskList.unMarkTask(0);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Choonyan02"},"content":"        assertFalse(taskList.getTask(0).isDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Choonyan02"},"content":"     * Test deleting a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Choonyan02"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Choonyan02"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Choonyan02"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Choonyan02"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Choonyan02"},"content":"        int initialTaskCount \u003d taskList.taskCount();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Choonyan02"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Choonyan02"},"content":"        assertEquals(initialTaskCount - 1, taskList.taskCount());","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Choonyan02"},"content":"     * Test getting the count of tasks in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Choonyan02"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"Choonyan02"},"content":"    public void testTaskCount() {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"Choonyan02"},"content":"        int initialTaskCount \u003d taskList.taskCount();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"Choonyan02"},"content":"        Task task1 \u003d new Task(\"Task 1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Choonyan02"},"content":"        Task task2 \u003d new Task(\"Task 2\");","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Choonyan02"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"Choonyan02"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"Choonyan02"},"content":"        assertEquals(initialTaskCount + 2, taskList.taskCount());","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Choonyan02"},"content":"     * Test getting a specific task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Choonyan02"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Choonyan02"},"content":"    public void testGetTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"Choonyan02"},"content":"        int initialTaskCount \u003d taskList.taskCount();","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"Choonyan02"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"Choonyan02"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"Choonyan02"},"content":"        assertEquals(task, taskList.getTask(initialTaskCount));","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"Choonyan02"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Choonyan02":85}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":" * Test class for the Todo class.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Choonyan02"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Choonyan02"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Choonyan02"},"content":"     * Test the toString method for a not done task.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Choonyan02"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"Choonyan02"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"Choonyan02"},"content":"        Todo task1 \u003d new Todo(\"eat potato\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Choonyan02"},"content":"        assert task1.toString().equals(\"[T][ ] eat potato\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Choonyan02"},"content":"     * Test marking a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Choonyan02"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"Choonyan02"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"Choonyan02"},"content":"        Todo task1 \u003d new Todo(\"eat potato\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"Choonyan02"},"content":"        task1.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"Choonyan02"},"content":"        assert task1.toString().equals(\"[T][X] eat potato\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"Choonyan02"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"Choonyan02"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Choonyan02"},"content":"     * Test marking a task as not done after it\u0027s marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Choonyan02"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Choonyan02"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Choonyan02"},"content":"    public void testMarkAsNotDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Choonyan02"},"content":"        Todo task1 \u003d new Todo(\"eat potato\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Choonyan02"},"content":"        task1.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Choonyan02"},"content":"        assert task1.toString().equals(\"[T][X] eat potato\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Choonyan02"},"content":"        task1.markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Choonyan02"},"content":"        assert task1.toString().equals(\"[T][ ] eat potato\");","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Choonyan02"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Choonyan02"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"Choonyan02":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Choonyan02"},"content":"todo borrow book","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"Choonyan02"},"content":"deadline return books /by June 6th","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"Choonyan02"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"Choonyan02"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"Choonyan02"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"Choonyan02"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"Choonyan02"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"Choonyan02":7}}]
