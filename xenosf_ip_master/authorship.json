[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"   * Deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"  protected String deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"   * Constructor for Deadline task.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"   * @param description Description of task","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"   * @param deadline    Deadline for task","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"  public DeadlineTask(String description, String deadline) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"    super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"    this.deadline \u003d deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"   * Constructor for deadline task, specifying completion status.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"   * @param description Description of task","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"   * @param isDone      Boolean representing task completion status","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"   * @param deadline    Deadline for task","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"  public DeadlineTask(String description, String deadline, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"    super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"    this.deadline \u003d deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"   * Returns Deadline task formatted with type and status icon","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"   * @return Task formatted as a string.","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"  @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"  public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"    return String.format(\"\u003cD\u003e%s (BY: %s)\", super.toString(), this.deadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"   * Parses save file data into a deadline task instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"   * @param data line from save file","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"   * @return Task instance","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"   * @throws InvalidTaskDataException if data is not in the expected format","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"  public static DeadlineTask fromData(String data) throws InvalidTaskDataException {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"     /*","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"       expected format:","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"       completed: 1, incomplete: 0","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"       deadline: D || 1/0 || deadline || description","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"    String[] splitData \u003d data.split(DELIMITER_REGEX, 4);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"    if (splitData.length \u003c 4) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"      throw new InvalidTaskDataException();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"    String taskType \u003d splitData[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"    String taskCompleted \u003d splitData[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"    String taskDeadline \u003d splitData[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"    String taskDescription \u003d splitData[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"    if (!taskCompleted.equals(\"1\") \u0026\u0026 !taskCompleted.equals(\"0\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"      throw new InvalidTaskDataException();","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"    boolean isCompleted \u003d taskCompleted.equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"    return new DeadlineTask(taskDescription, taskDeadline, isCompleted);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"xenosf"},"content":"   * Parses deadline task instance into save file string data","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"xenosf"},"content":"   * @return Task data as string","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"  public String toData() {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"xenosf"},"content":"     /*","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"xenosf"},"content":"       expected format:","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"xenosf"},"content":"       completed: 1, incomplete: 0","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"xenosf"},"content":"       deadline: D || 1/0 || deadline || description","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"xenosf"},"content":"    String taskCompleted \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"xenosf"},"content":"    return String.join(DELIMITER, \"D\", taskCompleted, this.deadline, this.description) + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"xenosf":84}},{"path":"src/main/java/Dude.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":" * Dude (Duke, but renamed)","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"public class Dude {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"  // Save-file related constants","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"   * Path to save file","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"  static final String SAVE_FILE_PATH \u003d \"./data/dude.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"  // Messages","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"  static String logo \u003d","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"    \" _|    _| _    O\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"      \"(_||_|(_|(/_  /İ\\\\\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"      \"------------  ```\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"  static String border \u003d \"-----------------------------------------------------------\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"  static String hello \u003d logo +","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"    \"Hello! I\u0027m dude.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"    \"What can I do for you?\";","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"  static String goodbye \u003d","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"    \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"  static String taskListPrefix \u003d \"Here\u0027s your tasks list:\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"  static String emptyTaskList \u003d \"You currently have no tasks in your list.\";","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"  static String addedTask \u003d \"Got it! I\u0027ve added this task:\\n\\t%s\\nYou now have a total of %d task(s).\";","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"  static String deletedTask \u003d \"Got it! I\u0027ve removed this task:\\n\\t%s\\nYou now have a total of %d task(s).\";","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"  static String markedAsDonePrefix \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\";","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"  static String markedAsNotDonePrefix \u003d \"Got it. I\u0027ve marked this task as not done:\\n\\t\";","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"   * Tasks stored by user.","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"  public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"   * Add task to tasks list.","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"   * @param task Task to add","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"   * @throws SaveFileException if error saving","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"  public static void addTask(Task task) throws SaveFileException {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"    tasks.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"    saveToSaveFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"   * Remove task from tasks list.","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"   * @param index 1-based index of task to remove","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"   * @return Removed task","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"   * @throws SaveFileException if error saving","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"  public static Task removeTask(int index) throws TaskOutOfBoundsException, SaveFileException {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"      Task removedTask \u003d tasks.remove(index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"      saveToSaveFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"      return removedTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"      throw new TaskOutOfBoundsException();","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"   * Get number of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"xenosf"},"content":"   * @return Number of tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"xenosf"},"content":"  public static int getNumTasks() {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"xenosf"},"content":"    return tasks.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"xenosf"},"content":"   * Get task from list.","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"xenosf"},"content":"   * @param index 1-based index of task to get.","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"xenosf"},"content":"   * @throws TaskOutOfBoundsException if task number does not exist","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"xenosf"},"content":"  public static Task getTask(int index) throws TaskOutOfBoundsException {","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"xenosf"},"content":"    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"xenosf"},"content":"      return tasks.get(index - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"xenosf"},"content":"    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"xenosf"},"content":"      throw new TaskOutOfBoundsException();","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"xenosf"},"content":"   * Gets list of all tasks as a string.","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"xenosf"},"content":"   * @return Tasks list formatted as a string.","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"xenosf"},"content":"  public static String getTasksList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"xenosf"},"content":"    if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"xenosf"},"content":"      return emptyTaskList;","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"xenosf"},"content":"    StringBuilder tasksList \u003d new StringBuilder(taskListPrefix);","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"xenosf"},"content":"    for (int i \u003d 0; i \u003c getNumTasks(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"xenosf"},"content":"      String taskNumberPrefix \u003d String.format(\"%3s-\", i + 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"xenosf"},"content":"      String taskStr \u003d taskNumberPrefix + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"xenosf"},"content":"      tasksList.append(taskStr);","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"xenosf"},"content":"    return tasksList.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"xenosf"},"content":"   * Parses command with task number with format `{cmd} {index}`, getting corresponding task.","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"xenosf"},"content":"   * @param input command.","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"xenosf"},"content":"   * @return index of task with index specified in commands","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"xenosf"},"content":"   * @throws InvalidTaskIndexException if index is invalid","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"xenosf"},"content":"   * @throws TaskIndexMissingException if index is not specified","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"xenosf"},"content":"  public static int parseTaskIndexCommand(String input) throws InvalidTaskIndexException, TaskIndexMissingException {","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"xenosf"},"content":"    String[] splitInput \u003d input.split(\" \", 3);","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"xenosf"},"content":"    if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"xenosf"},"content":"      // task number not specified","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"xenosf"},"content":"      throw new TaskIndexMissingException();","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"xenosf"},"content":"    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"xenosf"},"content":"      String specifiedTask \u003d splitInput[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"xenosf"},"content":"      try {","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"xenosf"},"content":"        int index \u003d Integer.parseInt(specifiedTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"xenosf"},"content":"        getTask(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"xenosf"},"content":"        return index;","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"xenosf"},"content":"      } catch (NumberFormatException | TaskOutOfBoundsException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"xenosf"},"content":"        // cannot parse number from input","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"xenosf"},"content":"        throw new InvalidTaskIndexException(specifiedTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"xenosf"},"content":"      }","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"xenosf"},"content":"   * Parses delete commands.","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"xenosf"},"content":"   * @param input delete command.","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"xenosf"},"content":"   * @throws DudeException if parsing task from command fails","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"xenosf"},"content":"  public static void parseDelete(String input) throws DudeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"xenosf"},"content":"    int taskToDelete \u003d parseTaskIndexCommand(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"xenosf"},"content":"    Task task \u003d removeTask(taskToDelete);","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"xenosf"},"content":"    printMessage(String.format(deletedTask, task, getNumTasks()));","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"xenosf"},"content":"   * Parses mark commands.","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"xenosf"},"content":"   * @param input mark command.","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"xenosf"},"content":"   * @throws DudeException if parsing task from command fails","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"xenosf"},"content":"  public static void parseMark(String input) throws DudeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"xenosf"},"content":"    int taskToMark \u003d parseTaskIndexCommand(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"xenosf"},"content":"    Task task \u003d getTask(taskToMark);","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"xenosf"},"content":"    task.markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"xenosf"},"content":"    printMessage(markedAsDonePrefix + task);","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"xenosf"},"content":"   * Parses unmark commands.","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"xenosf"},"content":"   * @param input unmark command.","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"xenosf"},"content":"   * @throws DudeException if parsing task from command fails","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"xenosf"},"content":"  public static void parseUnmark(String input) throws DudeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"xenosf"},"content":"    int taskToUnmark \u003d parseTaskIndexCommand(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"xenosf"},"content":"    Task task \u003d getTask(taskToUnmark);","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"xenosf"},"content":"    task.markAsNotDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"xenosf"},"content":"    printMessage(markedAsNotDonePrefix + task);","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"xenosf"},"content":"   * Parses todo task command.","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":176,"author":{"gitId":"xenosf"},"content":"   * @param input command.","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"xenosf"},"content":"   * @throws TaskDescriptionMissingException if task description is missing","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"xenosf"},"content":"  public static void parseTodo(String input) throws TaskDescriptionMissingException, SaveFileException {","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"xenosf"},"content":"    String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"xenosf"},"content":"    if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"xenosf"},"content":"      // task description not specified","lastModifiedDate":"2023-08-23"},{"lineNumber":183,"author":{"gitId":"xenosf"},"content":"      throw new TaskDescriptionMissingException();","lastModifiedDate":"2023-08-24"},{"lineNumber":184,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"xenosf"},"content":"    String description \u003d splitInput[1].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"xenosf"},"content":"    Task task \u003d new ToDoTask(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"xenosf"},"content":"    addTask(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"xenosf"},"content":"    printMessage(String.format(addedTask, task, getNumTasks()));","lastModifiedDate":"2023-08-24"},{"lineNumber":189,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"xenosf"},"content":"   * Parses deadline task command.","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"xenosf"},"content":"   * @param input command.","lastModifiedDate":"2023-08-23"},{"lineNumber":196,"author":{"gitId":"xenosf"},"content":"   * @throws TaskDescriptionMissingException if task description is missing","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"xenosf"},"content":"   * @throws TaskDeadlineMissingException    if task deadline is missing","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":199,"author":{"gitId":"xenosf"},"content":"  public static void parseDeadline(String input)","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"xenosf"},"content":"    throws TaskDescriptionMissingException, TaskDeadlineMissingException, SaveFileException {","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"xenosf"},"content":"    String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"xenosf"},"content":"    if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"xenosf"},"content":"      // task description not specified","lastModifiedDate":"2023-08-23"},{"lineNumber":204,"author":{"gitId":"xenosf"},"content":"      throw new TaskDescriptionMissingException();","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"xenosf"},"content":"    String[] splitDeadline \u003d splitInput[1].split(\"/by\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":207,"author":{"gitId":"xenosf"},"content":"    if (splitDeadline.length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":208,"author":{"gitId":"xenosf"},"content":"      // deadline not specified","lastModifiedDate":"2023-08-23"},{"lineNumber":209,"author":{"gitId":"xenosf"},"content":"      throw new TaskDeadlineMissingException();","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"xenosf"},"content":"    String description \u003d splitDeadline[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":212,"author":{"gitId":"xenosf"},"content":"    String deadline \u003d splitDeadline[1].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":213,"author":{"gitId":"xenosf"},"content":"    Task task \u003d new DeadlineTask(description, deadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":214,"author":{"gitId":"xenosf"},"content":"    addTask(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":215,"author":{"gitId":"xenosf"},"content":"    printMessage(String.format(addedTask, task, getNumTasks()));","lastModifiedDate":"2023-08-24"},{"lineNumber":216,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":217,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":218,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":219,"author":{"gitId":"xenosf"},"content":"   * Parses event task command.","lastModifiedDate":"2023-08-23"},{"lineNumber":220,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":221,"author":{"gitId":"xenosf"},"content":"   * @param input command.","lastModifiedDate":"2023-08-23"},{"lineNumber":222,"author":{"gitId":"xenosf"},"content":"   * @throws TaskDescriptionMissingException if task description is missing","lastModifiedDate":"2023-08-24"},{"lineNumber":223,"author":{"gitId":"xenosf"},"content":"   * @throws EventStartMissingException      if event start is missing","lastModifiedDate":"2023-08-24"},{"lineNumber":224,"author":{"gitId":"xenosf"},"content":"   * @throws EventEndMissingException        if event end is missing","lastModifiedDate":"2023-08-24"},{"lineNumber":225,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":226,"author":{"gitId":"xenosf"},"content":"  public static void parseEvent(String input)","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"xenosf"},"content":"    throws TaskDescriptionMissingException, EventStartMissingException, EventEndMissingException, SaveFileException {","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"xenosf"},"content":"    String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":229,"author":{"gitId":"xenosf"},"content":"    if (splitInput.length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":230,"author":{"gitId":"xenosf"},"content":"      // task description not specified","lastModifiedDate":"2023-08-23"},{"lineNumber":231,"author":{"gitId":"xenosf"},"content":"      throw new TaskDescriptionMissingException();","lastModifiedDate":"2023-08-24"},{"lineNumber":232,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":233,"author":{"gitId":"xenosf"},"content":"    String[] splitStart \u003d splitInput[1].split(\"/from\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":234,"author":{"gitId":"xenosf"},"content":"    if (splitStart.length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":235,"author":{"gitId":"xenosf"},"content":"      // start date not specified","lastModifiedDate":"2023-08-23"},{"lineNumber":236,"author":{"gitId":"xenosf"},"content":"      throw new EventStartMissingException();","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"xenosf"},"content":"    String[] splitEnd \u003d splitStart[1].split(\"/to\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":239,"author":{"gitId":"xenosf"},"content":"    if (splitEnd.length \u003c 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":240,"author":{"gitId":"xenosf"},"content":"      // end date not specified","lastModifiedDate":"2023-08-23"},{"lineNumber":241,"author":{"gitId":"xenosf"},"content":"      throw new EventEndMissingException();","lastModifiedDate":"2023-08-24"},{"lineNumber":242,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":243,"author":{"gitId":"xenosf"},"content":"    String description \u003d splitStart[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":244,"author":{"gitId":"xenosf"},"content":"    String start \u003d splitEnd[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":245,"author":{"gitId":"xenosf"},"content":"    String end \u003d splitEnd[1].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":246,"author":{"gitId":"xenosf"},"content":"    Task task \u003d new EventTask(description, start, end);","lastModifiedDate":"2023-08-23"},{"lineNumber":247,"author":{"gitId":"xenosf"},"content":"    addTask(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":248,"author":{"gitId":"xenosf"},"content":"    printMessage(String.format(addedTask, task, getNumTasks()));","lastModifiedDate":"2023-08-24"},{"lineNumber":249,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":250,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":251,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":252,"author":{"gitId":"xenosf"},"content":"   * Parse input and act accordingly.","lastModifiedDate":"2023-08-23"},{"lineNumber":253,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":254,"author":{"gitId":"xenosf"},"content":"   * @param input Input to parse.","lastModifiedDate":"2023-08-23"},{"lineNumber":255,"author":{"gitId":"xenosf"},"content":"   * @return `true` if a subsequent command can be taken, `false` if not (i.e. quit)","lastModifiedDate":"2023-08-23"},{"lineNumber":256,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":257,"author":{"gitId":"xenosf"},"content":"  public static boolean parseInput(String input) throws DudeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":258,"author":{"gitId":"xenosf"},"content":"    // extract command (strip leading and trailing whitespace, take first word)","lastModifiedDate":"2023-08-23"},{"lineNumber":259,"author":{"gitId":"xenosf"},"content":"    String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":260,"author":{"gitId":"xenosf"},"content":"    String cmdString \u003d splitInput[0].toLowerCase();","lastModifiedDate":"2023-08-24"},{"lineNumber":261,"author":{"gitId":"xenosf"},"content":"    try {","lastModifiedDate":"2023-08-24"},{"lineNumber":262,"author":{"gitId":"xenosf"},"content":"      DudeCommand cmd \u003d DudeCommand.valueOf(cmdString);","lastModifiedDate":"2023-08-24"},{"lineNumber":263,"author":{"gitId":"xenosf"},"content":"      switch (cmd) {","lastModifiedDate":"2023-08-23"},{"lineNumber":264,"author":{"gitId":"xenosf"},"content":"        case bye:","lastModifiedDate":"2023-08-24"},{"lineNumber":265,"author":{"gitId":"xenosf"},"content":"          // quit","lastModifiedDate":"2023-08-23"},{"lineNumber":266,"author":{"gitId":"xenosf"},"content":"          // Print shutdown greeting","lastModifiedDate":"2023-08-23"},{"lineNumber":267,"author":{"gitId":"xenosf"},"content":"          printMessage(goodbye);","lastModifiedDate":"2023-08-23"},{"lineNumber":268,"author":{"gitId":"xenosf"},"content":"          return false;","lastModifiedDate":"2023-08-23"},{"lineNumber":269,"author":{"gitId":"xenosf"},"content":"        case list:","lastModifiedDate":"2023-08-24"},{"lineNumber":270,"author":{"gitId":"xenosf"},"content":"          // list tasks","lastModifiedDate":"2023-08-23"},{"lineNumber":271,"author":{"gitId":"xenosf"},"content":"          printMessage(getTasksList());","lastModifiedDate":"2023-08-23"},{"lineNumber":272,"author":{"gitId":"xenosf"},"content":"          break;","lastModifiedDate":"2023-08-23"},{"lineNumber":273,"author":{"gitId":"xenosf"},"content":"        case mark:","lastModifiedDate":"2023-08-24"},{"lineNumber":274,"author":{"gitId":"xenosf"},"content":"          // mark as done","lastModifiedDate":"2023-08-24"},{"lineNumber":275,"author":{"gitId":"xenosf"},"content":"          parseMark(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":276,"author":{"gitId":"xenosf"},"content":"          break;","lastModifiedDate":"2023-08-24"},{"lineNumber":277,"author":{"gitId":"xenosf"},"content":"        case unmark:","lastModifiedDate":"2023-08-24"},{"lineNumber":278,"author":{"gitId":"xenosf"},"content":"          // mark as not done","lastModifiedDate":"2023-08-24"},{"lineNumber":279,"author":{"gitId":"xenosf"},"content":"          parseUnmark(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":280,"author":{"gitId":"xenosf"},"content":"          break;","lastModifiedDate":"2023-08-23"},{"lineNumber":281,"author":{"gitId":"xenosf"},"content":"        case delete:","lastModifiedDate":"2023-08-24"},{"lineNumber":282,"author":{"gitId":"xenosf"},"content":"        case remove: // alias because I keep typing remove lol","lastModifiedDate":"2023-08-24"},{"lineNumber":283,"author":{"gitId":"xenosf"},"content":"          parseDelete(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":284,"author":{"gitId":"xenosf"},"content":"          break;","lastModifiedDate":"2023-08-24"},{"lineNumber":285,"author":{"gitId":"xenosf"},"content":"        case todo:","lastModifiedDate":"2023-08-24"},{"lineNumber":286,"author":{"gitId":"xenosf"},"content":"          // add todo task to list","lastModifiedDate":"2023-08-23"},{"lineNumber":287,"author":{"gitId":"xenosf"},"content":"          parseTodo(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":288,"author":{"gitId":"xenosf"},"content":"          break;","lastModifiedDate":"2023-08-23"},{"lineNumber":289,"author":{"gitId":"xenosf"},"content":"        case deadline:","lastModifiedDate":"2023-08-24"},{"lineNumber":290,"author":{"gitId":"xenosf"},"content":"          // add deadline task to list","lastModifiedDate":"2023-08-23"},{"lineNumber":291,"author":{"gitId":"xenosf"},"content":"          parseDeadline(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":292,"author":{"gitId":"xenosf"},"content":"          break;","lastModifiedDate":"2023-08-23"},{"lineNumber":293,"author":{"gitId":"xenosf"},"content":"        case event:","lastModifiedDate":"2023-08-24"},{"lineNumber":294,"author":{"gitId":"xenosf"},"content":"          // add event task to list","lastModifiedDate":"2023-08-23"},{"lineNumber":295,"author":{"gitId":"xenosf"},"content":"          parseEvent(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":296,"author":{"gitId":"xenosf"},"content":"          break;","lastModifiedDate":"2023-08-23"},{"lineNumber":297,"author":{"gitId":"xenosf"},"content":"        default:","lastModifiedDate":"2023-08-23"},{"lineNumber":298,"author":{"gitId":"xenosf"},"content":"      }","lastModifiedDate":"2023-08-24"},{"lineNumber":299,"author":{"gitId":"xenosf"},"content":"    } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":300,"author":{"gitId":"xenosf"},"content":"      // invalid command entered","lastModifiedDate":"2023-08-24"},{"lineNumber":301,"author":{"gitId":"xenosf"},"content":"      throw new InvalidCommandException();","lastModifiedDate":"2023-08-23"},{"lineNumber":302,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":303,"author":{"gitId":"xenosf"},"content":"    return true;","lastModifiedDate":"2023-08-23"},{"lineNumber":304,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":305,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":306,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":307,"author":{"gitId":"xenosf"},"content":"   * Format and print given message/prompt to console.","lastModifiedDate":"2023-08-23"},{"lineNumber":308,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":309,"author":{"gitId":"xenosf"},"content":"   * @param message Message to print. Lines separated by \\n.","lastModifiedDate":"2023-08-23"},{"lineNumber":310,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":311,"author":{"gitId":"xenosf"},"content":"  public static void printMessage(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":312,"author":{"gitId":"xenosf"},"content":"    String[] lines \u003d message.split(\"\\\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":313,"author":{"gitId":"xenosf"},"content":"    String prefix \u003d \"  \";","lastModifiedDate":"2023-08-23"},{"lineNumber":314,"author":{"gitId":"xenosf"},"content":"    String output \u003d border + prefix +","lastModifiedDate":"2023-08-23"},{"lineNumber":315,"author":{"gitId":"xenosf"},"content":"      String.join(\"\\n\" + prefix, lines) +","lastModifiedDate":"2023-08-23"},{"lineNumber":316,"author":{"gitId":"xenosf"},"content":"      \"\\n\" + border;","lastModifiedDate":"2023-08-23"},{"lineNumber":317,"author":{"gitId":"xenosf"},"content":"    System.out.println(output);","lastModifiedDate":"2023-08-23"},{"lineNumber":318,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":319,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":320,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":321,"author":{"gitId":"xenosf"},"content":"   * Create new empty save file at SAVE_FILE_PATH if it does not already exist.","lastModifiedDate":"2023-08-30"},{"lineNumber":322,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":323,"author":{"gitId":"xenosf"},"content":"   * @throws SaveFileException if file cannot be created","lastModifiedDate":"2023-08-30"},{"lineNumber":324,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":325,"author":{"gitId":"xenosf"},"content":"  public static void createSaveFile() throws SaveFileException {","lastModifiedDate":"2023-08-30"},{"lineNumber":326,"author":{"gitId":"xenosf"},"content":"    File saveFile \u003d new File(SAVE_FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":327,"author":{"gitId":"xenosf"},"content":"    File parent \u003d saveFile.getParentFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":328,"author":{"gitId":"xenosf"},"content":"    // check \u0026 create parent dir(s)","lastModifiedDate":"2023-08-30"},{"lineNumber":329,"author":{"gitId":"xenosf"},"content":"    if (parent !\u003d null \u0026\u0026 !parent.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":330,"author":{"gitId":"xenosf"},"content":"      parent.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":331,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":332,"author":{"gitId":"xenosf"},"content":"    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":333,"author":{"gitId":"xenosf"},"content":"      // create save file","lastModifiedDate":"2023-08-30"},{"lineNumber":334,"author":{"gitId":"xenosf"},"content":"      saveFile.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":335,"author":{"gitId":"xenosf"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":336,"author":{"gitId":"xenosf"},"content":"      throw new SaveFileException(\"Error creating save file: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":337,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":338,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":339,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":340,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":341,"author":{"gitId":"xenosf"},"content":"   * Reads save file contents and sets list of Task instances.","lastModifiedDate":"2023-08-30"},{"lineNumber":342,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":343,"author":{"gitId":"xenosf"},"content":"   * @throws SaveFileException        if there is an error reading the file","lastModifiedDate":"2023-08-30"},{"lineNumber":344,"author":{"gitId":"xenosf"},"content":"   * @throws InvalidTaskDataException if the text data format is invalid","lastModifiedDate":"2023-08-30"},{"lineNumber":345,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":346,"author":{"gitId":"xenosf"},"content":"  public static void readSaveFile() throws SaveFileException, InvalidTaskDataException {","lastModifiedDate":"2023-08-30"},{"lineNumber":347,"author":{"gitId":"xenosf"},"content":"    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":348,"author":{"gitId":"xenosf"},"content":"      File f \u003d new File(SAVE_FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":349,"author":{"gitId":"xenosf"},"content":"      Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":350,"author":{"gitId":"xenosf"},"content":"      ArrayList\u003cTask\u003e readTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":351,"author":{"gitId":"xenosf"},"content":"      while (s.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":352,"author":{"gitId":"xenosf"},"content":"        String data \u003d s.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":353,"author":{"gitId":"xenosf"},"content":"        if (data.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":354,"author":{"gitId":"xenosf"},"content":"          continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":355,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":356,"author":{"gitId":"xenosf"},"content":"        String taskType \u003d data.split(Task.DELIMITER_REGEX)[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":357,"author":{"gitId":"xenosf"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":358,"author":{"gitId":"xenosf"},"content":"          case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":359,"author":{"gitId":"xenosf"},"content":"            readTasks.add(ToDoTask.fromData(data));","lastModifiedDate":"2023-08-30"},{"lineNumber":360,"author":{"gitId":"xenosf"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":361,"author":{"gitId":"xenosf"},"content":"          case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":362,"author":{"gitId":"xenosf"},"content":"            readTasks.add(DeadlineTask.fromData(data));","lastModifiedDate":"2023-08-30"},{"lineNumber":363,"author":{"gitId":"xenosf"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":364,"author":{"gitId":"xenosf"},"content":"          case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":365,"author":{"gitId":"xenosf"},"content":"            readTasks.add(EventTask.fromData(data));","lastModifiedDate":"2023-08-30"},{"lineNumber":366,"author":{"gitId":"xenosf"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":367,"author":{"gitId":"xenosf"},"content":"          default:","lastModifiedDate":"2023-08-30"},{"lineNumber":368,"author":{"gitId":"xenosf"},"content":"            throw new InvalidTaskDataException();","lastModifiedDate":"2023-08-30"},{"lineNumber":369,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":370,"author":{"gitId":"xenosf"},"content":"      }","lastModifiedDate":"2023-08-30"},{"lineNumber":371,"author":{"gitId":"xenosf"},"content":"      tasks \u003d readTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":372,"author":{"gitId":"xenosf"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":373,"author":{"gitId":"xenosf"},"content":"      throw new SaveFileException(\"Error reading save file: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":374,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":375,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":376,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":377,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":378,"author":{"gitId":"xenosf"},"content":"   * Saves current list of tasks to save file.","lastModifiedDate":"2023-08-30"},{"lineNumber":379,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":380,"author":{"gitId":"xenosf"},"content":"   * @throws SaveFileException if there is an error saving the file","lastModifiedDate":"2023-08-30"},{"lineNumber":381,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":382,"author":{"gitId":"xenosf"},"content":"  public static void saveToSaveFile() throws SaveFileException {","lastModifiedDate":"2023-08-30"},{"lineNumber":383,"author":{"gitId":"xenosf"},"content":"    StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":384,"author":{"gitId":"xenosf"},"content":"    for (int i \u003d 1; i \u003c\u003d getNumTasks(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":385,"author":{"gitId":"xenosf"},"content":"      s.append(getTask(i).toData());","lastModifiedDate":"2023-08-30"},{"lineNumber":386,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":387,"author":{"gitId":"xenosf"},"content":"    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":388,"author":{"gitId":"xenosf"},"content":"      FileWriter fw \u003d new FileWriter(SAVE_FILE_PATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":389,"author":{"gitId":"xenosf"},"content":"      fw.write(s.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":390,"author":{"gitId":"xenosf"},"content":"      fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":391,"author":{"gitId":"xenosf"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":392,"author":{"gitId":"xenosf"},"content":"      throw new SaveFileException(\"Error writing save file: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":393,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":394,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":395,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":396,"author":{"gitId":"xenosf"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2023-08-22"},{"lineNumber":397,"author":{"gitId":"xenosf"},"content":"    Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":398,"author":{"gitId":"xenosf"},"content":"    try {","lastModifiedDate":"2023-08-30"},{"lineNumber":399,"author":{"gitId":"xenosf"},"content":"      // Startup","lastModifiedDate":"2023-08-30"},{"lineNumber":400,"author":{"gitId":"xenosf"},"content":"      createSaveFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":401,"author":{"gitId":"xenosf"},"content":"      printMessage(hello); // Print startup greeting","lastModifiedDate":"2023-08-30"},{"lineNumber":402,"author":{"gitId":"xenosf"},"content":"      readSaveFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":403,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":404,"author":{"gitId":"xenosf"},"content":"      // Input loop -- wait for input, respond, repeat","lastModifiedDate":"2023-08-23"},{"lineNumber":405,"author":{"gitId":"xenosf"},"content":"      boolean shouldContinue \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":406,"author":{"gitId":"xenosf"},"content":"      while (shouldContinue) {","lastModifiedDate":"2023-08-23"},{"lineNumber":407,"author":{"gitId":"xenosf"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":408,"author":{"gitId":"xenosf"},"content":"          // read user input","lastModifiedDate":"2023-08-23"},{"lineNumber":409,"author":{"gitId":"xenosf"},"content":"          String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":410,"author":{"gitId":"xenosf"},"content":"          shouldContinue \u003d parseInput(input);","lastModifiedDate":"2023-08-23"},{"lineNumber":411,"author":{"gitId":"xenosf"},"content":"        } catch (DudeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":412,"author":{"gitId":"xenosf"},"content":"          printMessage(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":413,"author":{"gitId":"xenosf"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":414,"author":{"gitId":"xenosf"},"content":"      }","lastModifiedDate":"2023-08-23"},{"lineNumber":415,"author":{"gitId":"xenosf"},"content":"    } catch (DudeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":416,"author":{"gitId":"xenosf"},"content":"      printMessage(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":417,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":418,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":419,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"xenosf":419}},{"path":"src/main/java/DudeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":" * Commands to be entered into Dude.","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"public enum DudeCommand {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"  list,","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"  todo,","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"  deadline,","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"  event,","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"  mark,","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"  unmark,","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"  remove,","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"  delete,","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"  bye,","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"xenosf":14}},{"path":"src/main/java/DudeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":" * Exception specific to Dude (Duke)","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"public class DudeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"   * Constructor for Dude exception with message","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"   * @param message Human-readable error message.","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"  public DudeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"    super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"   * Constructor for Dude exception with default message","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"  public DudeException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"    super(\"An error occurred. :(\");","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"xenosf":21}},{"path":"src/main/java/EventEndMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class EventEndMissingException extends DudeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  public EventEndMissingException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"    super(\"Please specify the event end date after the task\\n description and start date, prefixed by `\\\\to`.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"xenosf":5}},{"path":"src/main/java/EventStartMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class EventStartMissingException extends DudeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  public EventStartMissingException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"    super(\"Please specify the event start date after the task\\ndescription, prefixed by `\\\\from`.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"xenosf":5}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"   * Start time","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"  protected String startTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"   * End time","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"  protected String endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"   * Constructor for Event task.","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"   * @param description Description of task","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"   * @param startTime   Start time of event","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"   * @param endTime     End time of event","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"  public EventTask(String description, String startTime, String endTime) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"    super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"    this.startTime \u003d startTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"    this.endTime \u003d endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"   * Constructor for Event task, specifying completion status.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"   * @param description Description of task","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"   * @param startTime   Start time of event","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"   * @param endTime     End time of event","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"   * @param isDone      Boolean representing task completion status","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"  public EventTask(String description, String startTime, String endTime, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"    super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"    this.startTime \u003d startTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"    this.endTime \u003d endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"   * Gets Event task formatted with type and status icon","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"   * @return Task formatted as a string.","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"  @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"  public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"    return String.format(\"\u003cE\u003e%s (FROM: %s, TO: %s)\", super.toString(), this.startTime, this.endTime);","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"   * Parses save file data into an event task instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"   * @param data line from save file","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"   * @return Task instance","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"   * @throws InvalidTaskDataException if data is not in the expected format","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"  public static EventTask fromData(String data) throws InvalidTaskDataException {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"     /*","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"       expected format:","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"       completed: 1, incomplete: 0","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"       event: E || 1/0 || start || end || description","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"    String[] splitData \u003d data.split(DELIMITER_REGEX, 5);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"    if (splitData.length \u003c 5) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"      throw new InvalidTaskDataException();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"xenosf"},"content":"    String taskType \u003d splitData[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"    String taskCompleted \u003d splitData[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"    String taskStart \u003d splitData[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"xenosf"},"content":"    String taskEnd \u003d splitData[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"    String taskDescription \u003d splitData[4];","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"xenosf"},"content":"    if (!taskCompleted.equals(\"1\") \u0026\u0026 !taskCompleted.equals(\"0\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"xenosf"},"content":"      throw new InvalidTaskDataException();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"xenosf"},"content":"    boolean isCompleted \u003d taskCompleted.equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"xenosf"},"content":"    return new EventTask(taskDescription, taskStart, taskEnd, isCompleted);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"xenosf"},"content":"   * Parses event task instance into save file string data","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"xenosf"},"content":"   * @return Task data as string","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"xenosf"},"content":"  public String toData() {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"xenosf"},"content":"     /*","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"xenosf"},"content":"       expected format:","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"xenosf"},"content":"       completed: 1, incomplete: 0","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"xenosf"},"content":"       event: E || 1/0 || start || end || description","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"xenosf"},"content":"    String taskCompleted \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"xenosf"},"content":"    return String.join(DELIMITER, \"E\", taskCompleted,","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"xenosf"},"content":"      this.startTime, this.endTime, this.description) + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"xenosf":95}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class InvalidCommandException extends DudeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  public InvalidCommandException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"    super(","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"      \"I don\u0027t know what that means.\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"        \"Try checking if you\u0027ve typed the command correctly.\"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"    );","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"xenosf":8}},{"path":"src/main/java/InvalidTaskDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class InvalidTaskDataException extends DudeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  public InvalidTaskDataException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"    super(","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"      \"Could not read task(s) from saved data.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"        + \"The format is possibly corrupted.\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"        + \"Try checking the file at \"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"        + Dude.SAVE_FILE_PATH","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"        + \" and try again,\\n\"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"        + \"or delete the file to start over.\"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"    );","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"xenosf":12}},{"path":"src/main/java/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class InvalidTaskIndexException extends DudeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  public InvalidTaskIndexException(String index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"    super(","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"      String.format(\"I can\u0027t find the task numbered \\\"%s\\\".\\nTry checking if you\u0027ve typed the correct task number.\",","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"        index)","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"    );","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"xenosf":8}},{"path":"src/main/java/SaveFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class SaveFileException extends DudeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  public SaveFileException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"    super(","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"      message","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"    );","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"xenosf":7}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"  protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"   * Delimiter regex for save file data","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"  public static final String DELIMITER \u003d \"  ||  \";","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"   * Delimiter regex for save file data","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"  public static final String DELIMITER_REGEX \u003d \"  \\\\|\\\\|  \";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"   * Constructor for task.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"   * @param description Description of task","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"  public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"    this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"   * Constructor for task, specifying completion status.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"   * @param description Description of task","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"   * @param isDone      Boolean representing task completion status","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"  public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"    this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"    this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"   * Gets text status icon of task\u0027s completion status.","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"   * @return space if not done; X if done.","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"    return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"   * Gets task formatted with status icon","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"   * @return Task formatted as a string. e.g. [X] completed task","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"  @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"  public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"    return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"   * Marks task as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"  public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"   * Marks task as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"  public void markAsNotDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"   * Parses save file data into a Task instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"xenosf"},"content":"   * @param data line from save file","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"   * @return Task instance","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"xenosf"},"content":"   * @throws InvalidTaskDataException if data is not in the expected format","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"xenosf"},"content":"  public static Task fromData(String data) throws InvalidTaskDataException {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"xenosf"},"content":"     /*","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"xenosf"},"content":"       expected format:","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"xenosf"},"content":"       completed: 1, incomplete: 0","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"xenosf"},"content":"       todo: T || 1/0 || description","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"xenosf"},"content":"    String[] splitData \u003d data.split(DELIMITER_REGEX, 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"xenosf"},"content":"    if (splitData.length \u003c 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"xenosf"},"content":"      throw new InvalidTaskDataException();","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"xenosf"},"content":"    String taskType \u003d splitData[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"xenosf"},"content":"    String taskCompleted \u003d splitData[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"xenosf"},"content":"    String taskDescription \u003d splitData[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"xenosf"},"content":"    if (!taskCompleted.equals(\"1\") \u0026\u0026 !taskCompleted.equals(\"0\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"xenosf"},"content":"      throw new InvalidTaskDataException();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"xenosf"},"content":"    boolean isCompleted \u003d taskCompleted.equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"xenosf"},"content":"    return new Task(taskDescription, isCompleted);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"xenosf"},"content":"   * Parses To Do task instance into save file string data","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"xenosf"},"content":"   * @return Task data as string","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"xenosf"},"content":"  public String toData() {","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"xenosf"},"content":"     /*","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"xenosf"},"content":"       expected format:","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"xenosf"},"content":"       completed: 1, incomplete: 0","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"xenosf"},"content":"       todo: T || 1/0 || description","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"xenosf"},"content":"    String taskCompleted \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"xenosf"},"content":"    return String.join(DELIMITER, \"T\", taskCompleted, this.description) + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"xenosf":111}},{"path":"src/main/java/TaskDeadlineMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class TaskDeadlineMissingException extends DudeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  public TaskDeadlineMissingException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"    super(\"Please specify a task deadline after the task\\ndescription, prefixed by `\\\\by`.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"xenosf":5}},{"path":"src/main/java/TaskDescriptionMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class TaskDescriptionMissingException extends DudeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  public TaskDescriptionMissingException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"    super(\"Please specify a task description.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"xenosf":5}},{"path":"src/main/java/TaskIndexMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class TaskIndexMissingException extends DudeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  public TaskIndexMissingException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"    super(\"Please specify a task number.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"xenosf":5}},{"path":"src/main/java/TaskOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class TaskOutOfBoundsException extends IndexOutOfBoundsException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  public TaskOutOfBoundsException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"    super(\"Task number out of bounds.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"xenosf":5}},{"path":"src/main/java/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"   * Constructor for ToDo task.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"   * @param description Description of task","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"  public ToDoTask(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"    super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"   * Constructor for ToDo task, specifying completion status.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"   * @param description Description of task","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"   * @param isDone      Boolean representing task completion status","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"  public ToDoTask(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"    super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"   * Gets Todo task formatted with type and status icon","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"   * @return Task formatted as a string","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"  @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"  public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"    return \"\u003cT\u003e\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"xenosf"},"content":"   * Parses save file data into a To Do task instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"xenosf"},"content":"   * @param data line from save file","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"xenosf"},"content":"   * @return Task instance","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"xenosf"},"content":"   * @throws InvalidTaskDataException if data is not in the expected format","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"xenosf"},"content":"  public static ToDoTask fromData(String data) throws InvalidTaskDataException {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"xenosf"},"content":"     /*","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"xenosf"},"content":"       expected format:","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"xenosf"},"content":"       completed: 1, incomplete: 0","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"xenosf"},"content":"       todo: T || 1/0 || description","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"xenosf"},"content":"    String[] splitData \u003d data.split(DELIMITER_REGEX, 3);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"xenosf"},"content":"    if (splitData.length \u003c 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"xenosf"},"content":"      throw new InvalidTaskDataException();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"xenosf"},"content":"    String taskType \u003d splitData[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"xenosf"},"content":"    String taskCompleted \u003d splitData[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"xenosf"},"content":"    String taskDescription \u003d splitData[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"xenosf"},"content":"    if (!taskCompleted.equals(\"1\") \u0026\u0026 !taskCompleted.equals(\"0\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"xenosf"},"content":"      throw new InvalidTaskDataException();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"xenosf"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"xenosf"},"content":"    boolean isCompleted \u003d taskCompleted.equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"xenosf"},"content":"    return new ToDoTask(taskDescription, isCompleted);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"xenosf"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"xenosf"},"content":"  /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"xenosf"},"content":"   * Parses To Do task instance into save file string data","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"xenosf"},"content":"   *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"xenosf"},"content":"   * @return Task data as string","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"xenosf"},"content":"   */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"xenosf"},"content":"  public String toData() {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"xenosf"},"content":"     /*","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"xenosf"},"content":"       expected format:","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"xenosf"},"content":"       completed: 1, incomplete: 0","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"xenosf"},"content":"       todo: T || 1/0 || description","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"xenosf"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"xenosf"},"content":"    String taskCompleted \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"xenosf"},"content":"    return String.join(DELIMITER, \"T\", taskCompleted, this.description) + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"xenosf"},"content":"  }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"xenosf"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"xenosf":73}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xenosf"},"content":"qwertyuiop","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"xenosf"},"content":"hello.....","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"xenosf"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"xenosf"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"xenosf"},"content":"todo learn how to use the deadline command /by now","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"xenosf"},"content":"deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"xenosf"},"content":"deaDline discussion post","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"xenosf"},"content":"deadline essay /by sunday 2359","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"xenosf"},"content":"event","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"xenosf"},"content":"event anyhow","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"xenosf"},"content":"event project meeting /to 1330h /from 1300h","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"xenosf"},"content":"event project meeting /from mon 1300h /to 1330h","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"xenosf"},"content":"event party /from mon 2200h /to tue 0330h","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"xenosf"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"xenosf"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"xenosf"},"content":"mark 5","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"xenosf"},"content":"mark 81 483","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"xenosf"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"xenosf"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"xenosf"},"content":"todo a","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"xenosf"},"content":"todo b","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"todo c","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"xenosf"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"xenosf"},"content":"remove 2","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"xenosf"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"xenosf"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"xenosf"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"xenosf":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"xenosf"},"content":"java -classpath ..\\bin Dude \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xenosf":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"xenosf"},"content":"java -classpath ../bin Dude \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xenosf":1,"-":37}}]
