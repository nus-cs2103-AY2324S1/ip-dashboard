[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wjacobw":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"    version \u003d \u002717.0.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"wjacobw"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"wjacobw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"wjacobw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"wjacobw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"wjacobw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"wjacobw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"wjacobw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wjacobw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wjacobw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wjacobw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wjacobw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"wjacobw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"wjacobw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"wjacobw"},"content":"application {","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"wjacobw"},"content":"    mainClass.set(\"seedu.Duke\")","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wjacobw":25,"-":42}},{"path":"runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"then","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"    mkdir ../bin","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"fi","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":"# delete output from previous run","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wjacobw"},"content":"then","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"fi","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wjacobw"},"content":"then","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wjacobw"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wjacobw"},"content":"    exit 1","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wjacobw"},"content":"fi","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wjacobw"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wjacobw"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wjacobw"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wjacobw"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wjacobw"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wjacobw"},"content":"then","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wjacobw"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wjacobw"},"content":"    exit 0","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wjacobw"},"content":"else","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wjacobw"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wjacobw"},"content":"    exit 1","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wjacobw"},"content":"fi","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wjacobw":35}},{"path":"src/main/java/data/zenith.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"deadline eat /by 03/04/2003 |1","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"event nus boxing /from 03/04/2003/to 04/05/2004 |0","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"event nus boxing /from 03/04/2003/to 04/05/2004 |0","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"event nus boxing /from 03/04/2003/to 04/05/2004 |0","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"deadline eat /by 03/04/2003 |0","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"todo study    |0","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":"event nus boxing /from 03/04/2003/to 04/05/2004 |0","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":"event nus boxing /from 03/04/2003/to 04/05/2004 |0","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"todo study  |0","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"wjacobw":10}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"     * Constructs a Deadline object with the specified description and deadline date.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"     * @param by          The deadline date.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"        super(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"wjacobw"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wjacobw"},"content":"     * Changes the format of a LocalDate to \"dd LLLL yyyy\".","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wjacobw"},"content":"     * @param date The LocalDate to be formatted.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wjacobw"},"content":"     * @return The formatted date as a string.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"wjacobw"},"content":"    public String changeFormat(LocalDate date) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wjacobw"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd LLLL yyyy\");","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wjacobw"},"content":"        String dateFormatted \u003d date.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wjacobw"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wjacobw"},"content":"     * Gets the deadline date of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wjacobw"},"content":"     * @return The deadline date.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"wjacobw"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wjacobw"},"content":"        return this.by;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"wjacobw"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"wjacobw"},"content":"     * @return A string representation including task type, description, and deadline date.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"wjacobw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"wjacobw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"wjacobw"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + changeFormat(by) + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"wjacobw":50}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"public class Duke extends Application{","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"    public Duke() throws Exception{","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"        String filePath \u003d \"/Users/william/Desktop/ip/src/main/java/data/zenith.txt\";","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"            LoadFile loadFile \u003d new LoadFile(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wjacobw"},"content":"            loadFile.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wjacobw"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wjacobw"},"content":"            ui.greet();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wjacobw"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wjacobw"},"content":"            taskList.Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wjacobw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wjacobw"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"wjacobw"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"wjacobw"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"wjacobw"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"wjacobw"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"wjacobw"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"wjacobw"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"wjacobw"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"wjacobw"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wjacobw":40,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"        super(message);","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"wjacobw":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"import java.time.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"import java.time.format.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":" * Represents a task with a specific event duration.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"     * Constructs an Event object with the specified description, start date, and end date.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"     * @param from        The start date of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wjacobw"},"content":"     * @param by          The end date of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wjacobw"},"content":"    public Event(String description, LocalDate from, LocalDate by) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wjacobw"},"content":"        super(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"wjacobw"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"wjacobw"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"wjacobw"},"content":"     * Gets the end date of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wjacobw"},"content":"     * @return The end date.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wjacobw"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wjacobw"},"content":"        return this.by;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wjacobw"},"content":"     * Gets the start date of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"wjacobw"},"content":"     * @return The start date.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"wjacobw"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wjacobw"},"content":"        return this.from;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"wjacobw"},"content":"     * Changes the format of a LocalDate to \"dd LLLL yyyy\".","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"wjacobw"},"content":"     * @param date The LocalDate to be formatted.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"wjacobw"},"content":"     * @return The formatted date as a string.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"wjacobw"},"content":"    public String changeFormat(LocalDate date) {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wjacobw"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd LLLL yyyy\");","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wjacobw"},"content":"        String dateFormatted \u003d date.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wjacobw"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"wjacobw"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"wjacobw"},"content":"     * @return A string representation including task type, description, start date, and end date.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"wjacobw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"wjacobw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"wjacobw"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + changeFormat(from) + \" to: \" + changeFormat(by) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"wjacobw":64}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"wjacobw":8}},{"path":"src/main/java/duke/LoadFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":" * Represents a class for loading data from a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"public class LoadFile {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wjacobw"},"content":"    private String filepath;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"    private File file;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":"     * Constructs a LoadFile object with the specified file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wjacobw"},"content":"     * @param filepath The file path to the data file.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wjacobw"},"content":"    public LoadFile(String filepath)  {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wjacobw"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wjacobw"},"content":"     * Gets the loaded file.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"wjacobw"},"content":"     * @return The loaded file.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"wjacobw"},"content":"    public File getFile() {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wjacobw"},"content":"        return this.file;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wjacobw"},"content":"     * Gets the file path of the data file.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wjacobw"},"content":"     * @return The file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"wjacobw"},"content":"    public String getFilepath() {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wjacobw"},"content":"        return this.filepath;","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"wjacobw"},"content":"     * Loads data from the specified file and processes it into tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"wjacobw"},"content":"     * @throws FileNotFoundException If the specified file is not found.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"wjacobw"},"content":"    public void load() throws FileNotFoundException {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wjacobw"},"content":"        File f \u003d new File(getFilepath());","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wjacobw"},"content":"        this.file \u003d f;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wjacobw"},"content":"        Scanner s \u003d new Scanner(getFile());","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wjacobw"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wjacobw"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wjacobw"},"content":"            TaskList task \u003d new TaskList(line);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"wjacobw"},"content":"            task.load();","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"wjacobw"},"content":"        s.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wjacobw":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":" * Represents a parser for user input in the Duke program.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wjacobw"},"content":"    private String str;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"    private String arr[];","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"    BufferedReader reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"    List\u003cTask\u003e list;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wjacobw"},"content":"     * Constructs a Parser object with the specified list of tasks and reads user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wjacobw"},"content":"     * @param list The list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wjacobw"},"content":"     * @throws Exception If an error occurs while reading user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wjacobw"},"content":"    public Parser(List\u003cTask\u003e list) throws Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wjacobw"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wjacobw"},"content":"        this.str \u003d reader.readLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wjacobw"},"content":"        this.arr \u003d str.split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wjacobw"},"content":"     * Gets the user input string.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wjacobw"},"content":"     * @return The user input string.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wjacobw"},"content":"    public String getStr() {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wjacobw"},"content":"        return this.str;","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"wjacobw"},"content":"     * Gets an array containing the user input split into two parts.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"wjacobw"},"content":"     * @return An array containing user input parts.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"wjacobw"},"content":"    public String[] getArr() {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wjacobw"},"content":"        return this.arr;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wjacobw":45}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"public class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"    protected String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wjacobw"},"content":"     * Constructs a Task object with the specified description and marks it as incomplete.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"wjacobw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wjacobw"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wjacobw"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"wjacobw"},"content":"    public boolean idDone() {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wjacobw"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"wjacobw"},"content":"     * Gets the status icon for the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wjacobw"},"content":"     * @return \"X\" if the task is done, \" \" (space) if it is not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wjacobw"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"wjacobw"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"wjacobw"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"wjacobw"},"content":"     * @return The task description.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"wjacobw"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"wjacobw"},"content":"        return description;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"wjacobw"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"wjacobw"},"content":"    public void finish() {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"wjacobw"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"wjacobw"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"wjacobw"},"content":"    public void unfinish() {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"wjacobw"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"wjacobw"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"wjacobw"},"content":"     * @return A string with the task\u0027s status icon and description.","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"wjacobw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"wjacobw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"wjacobw"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"wjacobw":70}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"import java.nio.channels.FileChannel;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wjacobw"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wjacobw"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wjacobw"},"content":"    String task;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wjacobw"},"content":"    private static List\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wjacobw"},"content":"     * Trims leading and trailing spaces from a string.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wjacobw"},"content":"     * @param input The input string to be trimmed.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"wjacobw"},"content":"     * @return The trimmed string or null if input is null.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"wjacobw"},"content":"    public static String trimString(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wjacobw"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wjacobw"},"content":"            return null; // Handle null input if needed","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wjacobw"},"content":"        return input.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wjacobw"},"content":"     * Converts a string representation of a task into a Task object and adds it to the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"wjacobw"},"content":"     * @param str The string representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"wjacobw"},"content":"    private static void StringToArray(String str) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"wjacobw"},"content":"        // might need to add corrupted file exception","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"wjacobw"},"content":"        String arr[] \u003d str.split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"wjacobw"},"content":"        if (arr[0].equals(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wjacobw"},"content":"            String firstFrom \u003d arr[1].substring(arr[1].indexOf(\"/from\") + 6); //","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"wjacobw"},"content":"            String secondFrom \u003d firstFrom.substring(0, firstFrom.indexOf(\"/to\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wjacobw"},"content":"            String firstTo \u003d arr[1].substring(arr[1].indexOf(\"/to\")+ 4);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wjacobw"},"content":"            String secondTo \u003d firstTo.substring(0, firstTo.indexOf(\"|\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"wjacobw"},"content":"            String content \u003d arr[1].substring(0, arr[1].indexOf(\"/from \"));","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"wjacobw"},"content":"            String done \u003d firstTo.substring(firstTo.indexOf(\"|\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"wjacobw"},"content":"            String fromDate \u003d secondFrom.substring(0, secondFrom.indexOf(\"/\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"wjacobw"},"content":"            String firstFromMonth \u003d secondFrom.substring(secondFrom.indexOf(\"/\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"wjacobw"},"content":"            String fromMonth \u003d firstFromMonth.substring(0, firstFromMonth.indexOf(\"/\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wjacobw"},"content":"            String fromYear \u003d firstFromMonth.substring(firstFromMonth.indexOf(\"/\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"wjacobw"},"content":"            String toDate \u003d secondTo.substring(0, secondTo.indexOf(\"/\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"wjacobw"},"content":"            String firstToMonth \u003d secondTo.substring(secondTo.indexOf(\"/\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"wjacobw"},"content":"            String toMonth \u003d firstToMonth.substring(0, firstToMonth.indexOf(\"/\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"wjacobw"},"content":"            String toYear \u003d firstToMonth.substring(firstToMonth.indexOf(\"/\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"wjacobw"},"content":"            toYear \u003d toYear.substring(0, toYear.indexOf(\" \"));","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"wjacobw"},"content":"            LocalDate to \u003d LocalDate.of(Integer.parseInt(trimString(toYear)), Integer.parseInt(toMonth), Integer.parseInt(toDate));","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"wjacobw"},"content":"            LocalDate from \u003d LocalDate.of(Integer.parseInt(trimString(fromYear)), Integer.parseInt(fromMonth), Integer.parseInt(fromDate));","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"wjacobw"},"content":"            if (done.equals(\"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"wjacobw"},"content":"                Event event \u003d new Event(content, from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"wjacobw"},"content":"                event.finish();","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"wjacobw"},"content":"                list.add(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"wjacobw"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"wjacobw"},"content":"                Event event \u003d new Event(content, from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"wjacobw"},"content":"                list.add(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"wjacobw"},"content":"        else if (arr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"wjacobw"},"content":"            String firstBy \u003d arr[1].substring(arr[1].indexOf(\"/by\") + 4);","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"wjacobw"},"content":"            String secondBy \u003d firstBy.substring(0, firstBy.indexOf(\"|\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"wjacobw"},"content":"            String done \u003d firstBy.substring(firstBy.indexOf(\"|\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"wjacobw"},"content":"            String byDate \u003d secondBy.substring(0, secondBy.indexOf(\"/\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"wjacobw"},"content":"            String firstByMonth \u003d secondBy.substring(secondBy.indexOf(\"/\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"wjacobw"},"content":"            String byMonth \u003d firstByMonth.substring(0, firstByMonth.indexOf(\"/\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"wjacobw"},"content":"            String byYear \u003d firstByMonth.substring(firstByMonth.indexOf(\"/\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"wjacobw"},"content":"            byYear \u003d byYear.substring(0, byYear.indexOf(\" \"));","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"wjacobw"},"content":"            LocalDate by \u003d LocalDate.of(Integer.parseInt(byYear), Integer.parseInt(byMonth), Integer.parseInt(byDate));","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"wjacobw"},"content":"            Deadline deadline \u003d new Deadline(arr[1].substring(0, arr[1].indexOf(\"/by \")), by);","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"wjacobw"},"content":"            if (done.equals(\"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"wjacobw"},"content":"                deadline.finish();","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"wjacobw"},"content":"                list.add(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"wjacobw"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"wjacobw"},"content":"                list.add(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"wjacobw"},"content":"        else if (arr[0].equals(\"todo\")){","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"wjacobw"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"wjacobw"},"content":"                String firstTodo \u003d arr[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"wjacobw"},"content":"                String secondToDo \u003d firstTodo.substring(0, firstTodo.indexOf(\"|\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"wjacobw"},"content":"                String done \u003d firstTodo.substring(firstTodo.indexOf(\"|\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"wjacobw"},"content":"                Todo todo \u003d new Todo(secondToDo);","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"wjacobw"},"content":"                if (done.equals(\"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"wjacobw"},"content":"                    todo.finish();","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"wjacobw"},"content":"                    list.add(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"wjacobw"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"wjacobw"},"content":"                    list.add(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"wjacobw"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"wjacobw"},"content":"            } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"wjacobw"},"content":"                Ui specify \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"wjacobw"},"content":"                specify.specify();","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"wjacobw"},"content":"     * Handles user input and performs various actions based on the input.","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"wjacobw"},"content":"     * @throws Exception If an error occurs during execution.","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"wjacobw"},"content":"    public void Answer() throws Exception{ // just a reader for additional files inputted by the users.","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"wjacobw"},"content":"        // my plan is to make sure every line inputted by the user, it is saved to the zenith.txt file directly.","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"wjacobw"},"content":"        // But to show the users the list, need to first load the data to a class storage containing the copied","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"wjacobw"},"content":"        // data of zenith.txt","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"wjacobw"},"content":"        String zenithData \u003d \"src/main/java/data/zenith.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"wjacobw"},"content":"        Parser parser \u003d new Parser(list);","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"wjacobw"},"content":"        //BufferedReader reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"wjacobw"},"content":"        //String str \u003d reader.readLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"wjacobw"},"content":"        //String arr[] \u003d str.split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"wjacobw"},"content":"        String arr[];","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"wjacobw"},"content":"        String onetwo \u003d list.size() \u003e 1? \" tasks\": \" task\";","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"wjacobw"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"wjacobw"},"content":"        if (parser.getStr().equals(\"bye\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"wjacobw"},"content":"            Ui bye \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"wjacobw"},"content":"            bye.bye();","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"wjacobw"},"content":"        else if (parser.getStr().equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"wjacobw"},"content":"            List();","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"wjacobw"},"content":"            ui.currentlist((list.size()), onetwo);","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"wjacobw"},"content":"            Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"wjacobw"},"content":"        } else if (parser.getArr()[0].equals(\"delete\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"wjacobw"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"wjacobw"},"content":"                arr \u003d parser.getArr();","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"wjacobw"},"content":"                list.get(Integer.parseInt(arr[1]) - 1).getDescription();","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"wjacobw"},"content":"                ui.remove(list.get(Integer.parseInt(arr[1]) - 1).toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"wjacobw"},"content":"                list.remove(Integer.parseInt(arr[1]) - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"wjacobw"},"content":"                ui.currentlist((list.size()), onetwo);","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"wjacobw"},"content":"                refreshData();","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"wjacobw"},"content":"            catch(NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"wjacobw"},"content":"                ui.numExc();","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"wjacobw"},"content":"            catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"wjacobw"},"content":"                ui.indexOut();","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":164,"author":{"gitId":"wjacobw"},"content":"        else if (parser.getArr()[0].equals(\"mark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":165,"author":{"gitId":"wjacobw"},"content":"            //arr[1].length() \u003d\u003d 1 \u0026\u0026 isNumeric(arr[1])","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"wjacobw"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"wjacobw"},"content":"                arr \u003d parser.getArr();","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"wjacobw"},"content":"                ui.mark(list.size(), onetwo, list.get(Integer.parseInt(arr[1]) - 1).getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":169,"author":{"gitId":"wjacobw"},"content":"                list.get(Integer.parseInt(arr[1]) - 1).getDescription();","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(\"Noted. I\u0027ve marked this task: \");","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(\"    [X] \" + list.get(Integer.parseInt(arr[1]) - 1).getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"wjacobw"},"content":"                list.get(Integer.parseInt(arr[1]) - 1).finish();","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(\"Now you have \" + list.size() + onetwo +  \" in the list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"wjacobw"},"content":"                refreshData();","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"wjacobw"},"content":"            catch(NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"wjacobw"},"content":"                ui.numExc();","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"wjacobw"},"content":"            catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"wjacobw"},"content":"                ui.indexOut();","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"wjacobw"},"content":"        } else if (parser.getArr()[0].equals(\"unmark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"wjacobw"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"wjacobw"},"content":"                arr \u003d parser.getArr();","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"wjacobw"},"content":"                list.get(Integer.parseInt(arr[1]) - 1).getDescription();","lastModifiedDate":"2023-09-02"},{"lineNumber":190,"author":{"gitId":"wjacobw"},"content":"                ui.unmark(list.size(), onetwo, list.get(Integer.parseInt(arr[1]) - 1).getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2023-09-02"},{"lineNumber":192,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(\"    [] \" + list.get(Integer.parseInt(arr[1]) - 1).getDescription());","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"wjacobw"},"content":"                list.get(Integer.parseInt(arr[1]) - 1).unfinish();","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(\"Now you have \" + list.size() + onetwo +  \" in the list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"wjacobw"},"content":"                refreshData();","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"wjacobw"},"content":"            catch(NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"wjacobw"},"content":"                ui.numExc();","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"wjacobw"},"content":"            catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"wjacobw"},"content":"                ui.indexOut();","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":207,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"wjacobw"},"content":"        else if (parser.getArr()[0].equals(\"find\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":209,"author":{"gitId":"wjacobw"},"content":"            String subString \u003d parser.getArr()[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":210,"author":{"gitId":"wjacobw"},"content":"            List\u003cTask\u003e matchingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":211,"author":{"gitId":"wjacobw"},"content":"            for (Task task: list) {","lastModifiedDate":"2023-09-03"},{"lineNumber":212,"author":{"gitId":"wjacobw"},"content":"                if (task.getDescription().contains(subString)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":213,"author":{"gitId":"wjacobw"},"content":"                    matchingList.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":214,"author":{"gitId":"wjacobw"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":215,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":216,"author":{"gitId":"wjacobw"},"content":"            ui.matchingList(matchingList);","lastModifiedDate":"2023-09-03"},{"lineNumber":217,"author":{"gitId":"wjacobw"},"content":"            Answer();","lastModifiedDate":"2023-09-03"},{"lineNumber":218,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":220,"author":{"gitId":"wjacobw"},"content":"        else if (parser.getArr()[0].equals(\"event\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":221,"author":{"gitId":"wjacobw"},"content":"            arr \u003d parser.getArr();","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"wjacobw"},"content":"            String firstFrom \u003d arr[1].substring(arr[1].indexOf(\"/from\") + 6);","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"wjacobw"},"content":"            String secondFrom \u003d firstFrom.substring(0, firstFrom.indexOf(\"/to\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"wjacobw"},"content":"            String to \u003d arr[1].substring(arr[1].indexOf(\"/to\")+ 4);","lastModifiedDate":"2023-09-02"},{"lineNumber":225,"author":{"gitId":"wjacobw"},"content":"            //System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":226,"author":{"gitId":"wjacobw"},"content":"            //System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":227,"author":{"gitId":"wjacobw"},"content":"            String content \u003d arr[1].substring(0, arr[1].indexOf(\"/from \"));","lastModifiedDate":"2023-09-02"},{"lineNumber":228,"author":{"gitId":"wjacobw"},"content":"            String toDate \u003d to.substring(0, to.indexOf(\"/\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":229,"author":{"gitId":"wjacobw"},"content":"            String firstToMonth \u003d to.substring(to.indexOf(\"/\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":230,"author":{"gitId":"wjacobw"},"content":"            String toMonth \u003d firstToMonth.substring(0, firstToMonth.indexOf(\"/\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":231,"author":{"gitId":"wjacobw"},"content":"            String toYear \u003d firstToMonth.substring(firstToMonth.indexOf(\"/\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":232,"author":{"gitId":"wjacobw"},"content":"            LocalDate secondTo \u003d LocalDate.of(Integer.parseInt(toYear), Integer.parseInt(toMonth), Integer.parseInt(toDate));","lastModifiedDate":"2023-09-02"},{"lineNumber":233,"author":{"gitId":"wjacobw"},"content":"            String fromDate \u003d secondFrom.substring(0, secondFrom.indexOf(\"/\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"wjacobw"},"content":"            String firstFromMonth \u003d secondFrom.substring(secondFrom.indexOf(\"/\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":235,"author":{"gitId":"wjacobw"},"content":"            String fromMonth \u003d firstFromMonth.substring(0, firstFromMonth.indexOf(\"/\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":236,"author":{"gitId":"wjacobw"},"content":"            String fromYear \u003d firstFromMonth.substring(firstFromMonth.indexOf(\"/\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":237,"author":{"gitId":"wjacobw"},"content":"            fromYear \u003d fromYear.substring(0, fromYear.indexOf(\" \"));","lastModifiedDate":"2023-09-02"},{"lineNumber":238,"author":{"gitId":"wjacobw"},"content":"            LocalDate from \u003d LocalDate.of(Integer.parseInt(fromYear), Integer.parseInt(fromMonth), Integer.parseInt(fromDate));","lastModifiedDate":"2023-09-02"},{"lineNumber":239,"author":{"gitId":"wjacobw"},"content":"            Event event \u003d new Event(content, from, secondTo);","lastModifiedDate":"2023-09-02"},{"lineNumber":240,"author":{"gitId":"wjacobw"},"content":"            //System.out.println(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":241,"author":{"gitId":"wjacobw"},"content":"            ui.add(event, list.size(), onetwo);","lastModifiedDate":"2023-09-02"},{"lineNumber":242,"author":{"gitId":"wjacobw"},"content":"            list.add(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":243,"author":{"gitId":"wjacobw"},"content":"            //System.out.println(\"Now you have \" + list.size() + onetwo +  \" in the list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":244,"author":{"gitId":"wjacobw"},"content":"            //System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":245,"author":{"gitId":"wjacobw"},"content":"            appendToFile(zenithData, parser.getStr());","lastModifiedDate":"2023-09-02"},{"lineNumber":246,"author":{"gitId":"wjacobw"},"content":"            refreshData();","lastModifiedDate":"2023-09-02"},{"lineNumber":247,"author":{"gitId":"wjacobw"},"content":"            Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":248,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":249,"author":{"gitId":"wjacobw"},"content":"        } else if (parser.getArr()[0].equals(\"deadline\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":250,"author":{"gitId":"wjacobw"},"content":"            arr \u003d parser.getArr();","lastModifiedDate":"2023-09-02"},{"lineNumber":251,"author":{"gitId":"wjacobw"},"content":"            String by \u003d arr[1].substring(arr[1].indexOf(\"/by\") + 4);","lastModifiedDate":"2023-09-02"},{"lineNumber":252,"author":{"gitId":"wjacobw"},"content":"            //System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":253,"author":{"gitId":"wjacobw"},"content":"            //System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":254,"author":{"gitId":"wjacobw"},"content":"            String byDate \u003d by.substring(0, by.indexOf(\"/\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":255,"author":{"gitId":"wjacobw"},"content":"            String firstByMonth \u003d by.substring(by.indexOf(\"/\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":256,"author":{"gitId":"wjacobw"},"content":"            String byMonth \u003d firstByMonth.substring(0, firstByMonth.indexOf(\"/\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":257,"author":{"gitId":"wjacobw"},"content":"            String byYear \u003d firstByMonth.substring(firstByMonth.indexOf(\"/\") + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":258,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":259,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":260,"author":{"gitId":"wjacobw"},"content":"            LocalDate secondBy \u003d LocalDate.of(Integer.parseInt(byYear), Integer.parseInt(byMonth), Integer.parseInt(byDate));","lastModifiedDate":"2023-09-02"},{"lineNumber":261,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":262,"author":{"gitId":"wjacobw"},"content":"            Deadline deadline \u003d new Deadline(arr[1].substring(0, arr[1].indexOf(\"/by \")), secondBy);","lastModifiedDate":"2023-09-02"},{"lineNumber":263,"author":{"gitId":"wjacobw"},"content":"            //System.out.println(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":264,"author":{"gitId":"wjacobw"},"content":"            ui.add(deadline, list.size(), onetwo);","lastModifiedDate":"2023-09-02"},{"lineNumber":265,"author":{"gitId":"wjacobw"},"content":"            list.add(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":266,"author":{"gitId":"wjacobw"},"content":"            //System.out.println(\"Now you have \" + list.size() + onetwo +  \" in the list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":267,"author":{"gitId":"wjacobw"},"content":"            //System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":268,"author":{"gitId":"wjacobw"},"content":"            //appendToFile(zenithData, str);","lastModifiedDate":"2023-09-02"},{"lineNumber":269,"author":{"gitId":"wjacobw"},"content":"            refreshData();","lastModifiedDate":"2023-09-02"},{"lineNumber":270,"author":{"gitId":"wjacobw"},"content":"            Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":271,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":272,"author":{"gitId":"wjacobw"},"content":"        else if (parser.getArr()[0].equals(\"todo\")){","lastModifiedDate":"2023-09-02"},{"lineNumber":273,"author":{"gitId":"wjacobw"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":274,"author":{"gitId":"wjacobw"},"content":"                arr \u003d parser.getArr();","lastModifiedDate":"2023-09-02"},{"lineNumber":275,"author":{"gitId":"wjacobw"},"content":"                Todo todo \u003d new Todo(arr[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":276,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":277,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(\"Got it. I\u0027ve added this task:\");//  no following words after","lastModifiedDate":"2023-09-02"},{"lineNumber":278,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":279,"author":{"gitId":"wjacobw"},"content":"                list.add(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":280,"author":{"gitId":"wjacobw"},"content":"                ui.add(todo, list.size(), onetwo);","lastModifiedDate":"2023-09-02"},{"lineNumber":281,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(\"Now you have \" + list.size() + onetwo +  \" in the list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":282,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":283,"author":{"gitId":"wjacobw"},"content":"                appendToFile(zenithData, parser.getStr());","lastModifiedDate":"2023-09-02"},{"lineNumber":284,"author":{"gitId":"wjacobw"},"content":"                refreshData();","lastModifiedDate":"2023-09-02"},{"lineNumber":285,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":286,"author":{"gitId":"wjacobw"},"content":"            } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2023-09-02"},{"lineNumber":287,"author":{"gitId":"wjacobw"},"content":"                ui.specify();","lastModifiedDate":"2023-09-02"},{"lineNumber":288,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":289,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":290,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":291,"author":{"gitId":"wjacobw"},"content":"        else if(parser.getArr()[0].isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":292,"author":{"gitId":"wjacobw"},"content":"            try { // if empty string","lastModifiedDate":"2023-09-02"},{"lineNumber":293,"author":{"gitId":"wjacobw"},"content":"                arr \u003d parser.getArr();","lastModifiedDate":"2023-09-02"},{"lineNumber":294,"author":{"gitId":"wjacobw"},"content":"                System.out.println(arr[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":295,"author":{"gitId":"wjacobw"},"content":"            } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":296,"author":{"gitId":"wjacobw"},"content":"                ui.blank();","lastModifiedDate":"2023-09-02"},{"lineNumber":297,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(\"Don\u0027t just input blank space\");","lastModifiedDate":"2023-09-02"},{"lineNumber":298,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":299,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":300,"author":{"gitId":"wjacobw"},"content":"        } else { // not the correct format","lastModifiedDate":"2023-09-02"},{"lineNumber":301,"author":{"gitId":"wjacobw"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":302,"author":{"gitId":"wjacobw"},"content":"                throw new DukeException(\"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":303,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":304,"author":{"gitId":"wjacobw"},"content":"            catch (DukeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":305,"author":{"gitId":"wjacobw"},"content":"                ui.format();","lastModifiedDate":"2023-09-02"},{"lineNumber":306,"author":{"gitId":"wjacobw"},"content":"                //System.out.println(\"Please input the correct format\");","lastModifiedDate":"2023-09-02"},{"lineNumber":307,"author":{"gitId":"wjacobw"},"content":"                Answer();","lastModifiedDate":"2023-09-02"},{"lineNumber":308,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":309,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":310,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":311,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":312,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":313,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":314,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":315,"author":{"gitId":"wjacobw"},"content":"     * Appends text to a specified file.","lastModifiedDate":"2023-09-03"},{"lineNumber":316,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":317,"author":{"gitId":"wjacobw"},"content":"     * @param filePath      The path to the file to which text will be appended.","lastModifiedDate":"2023-09-03"},{"lineNumber":318,"author":{"gitId":"wjacobw"},"content":"     * @param textToAppend  The text to append to the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":319,"author":{"gitId":"wjacobw"},"content":"     * @throws IOException  If an I/O error occurs.","lastModifiedDate":"2023-09-03"},{"lineNumber":320,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":321,"author":{"gitId":"wjacobw"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":322,"author":{"gitId":"wjacobw"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-09-02"},{"lineNumber":323,"author":{"gitId":"wjacobw"},"content":"        fw.write(\"\\n\" + textToAppend);","lastModifiedDate":"2023-09-02"},{"lineNumber":324,"author":{"gitId":"wjacobw"},"content":"        fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":325,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":326,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":327,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":328,"author":{"gitId":"wjacobw"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":329,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":330,"author":{"gitId":"wjacobw"},"content":"    public void List() {","lastModifiedDate":"2023-09-02"},{"lineNumber":331,"author":{"gitId":"wjacobw"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":332,"author":{"gitId":"wjacobw"},"content":"        ui.list(list);","lastModifiedDate":"2023-09-02"},{"lineNumber":333,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":334,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":335,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":336,"author":{"gitId":"wjacobw"},"content":"     * Converts a date string from \"yyyy-MM-dd\" format to \"dd/MM/yyyy\" format.","lastModifiedDate":"2023-09-03"},{"lineNumber":337,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":338,"author":{"gitId":"wjacobw"},"content":"     * @param inputDateStr The input date string in \"yyyy-MM-dd\" format.","lastModifiedDate":"2023-09-03"},{"lineNumber":339,"author":{"gitId":"wjacobw"},"content":"     * @return The date string in \"dd/MM/yyyy\" format.","lastModifiedDate":"2023-09-03"},{"lineNumber":340,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":341,"author":{"gitId":"wjacobw"},"content":"    public static String convertDateFormat(String inputDateStr) {","lastModifiedDate":"2023-09-02"},{"lineNumber":342,"author":{"gitId":"wjacobw"},"content":"        // Split the input date string by the \u0027-\u0027 delimiter","lastModifiedDate":"2023-09-02"},{"lineNumber":343,"author":{"gitId":"wjacobw"},"content":"        String[] parts \u003d inputDateStr.split(\"-\");","lastModifiedDate":"2023-09-02"},{"lineNumber":344,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":345,"author":{"gitId":"wjacobw"},"content":"        // Ensure that there are three parts (year, month, day)","lastModifiedDate":"2023-09-02"},{"lineNumber":346,"author":{"gitId":"wjacobw"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2023-09-02"},{"lineNumber":347,"author":{"gitId":"wjacobw"},"content":"            return \"Invalid date format\";","lastModifiedDate":"2023-09-02"},{"lineNumber":348,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":349,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":350,"author":{"gitId":"wjacobw"},"content":"        // Reorder the parts to form the desired output format","lastModifiedDate":"2023-09-02"},{"lineNumber":351,"author":{"gitId":"wjacobw"},"content":"        String day \u003d parts[2];","lastModifiedDate":"2023-09-02"},{"lineNumber":352,"author":{"gitId":"wjacobw"},"content":"        String month \u003d parts[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":353,"author":{"gitId":"wjacobw"},"content":"        String year \u003d parts[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":354,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":355,"author":{"gitId":"wjacobw"},"content":"        // Concatenate the parts with \u0027/\u0027 separator","lastModifiedDate":"2023-09-02"},{"lineNumber":356,"author":{"gitId":"wjacobw"},"content":"        String outputDateStr \u003d day + \"/\" + month + \"/\" + year;","lastModifiedDate":"2023-09-02"},{"lineNumber":357,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":358,"author":{"gitId":"wjacobw"},"content":"        return outputDateStr;","lastModifiedDate":"2023-09-02"},{"lineNumber":359,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":360,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":361,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":362,"author":{"gitId":"wjacobw"},"content":"     * Refreshes the data in the storage file to match the current list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":363,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":364,"author":{"gitId":"wjacobw"},"content":"    private static void refreshData() {","lastModifiedDate":"2023-09-02"},{"lineNumber":365,"author":{"gitId":"wjacobw"},"content":"        String zenithData \u003d \"src/main/java/data/zenith.txt\";","lastModifiedDate":"2023-09-02"},{"lineNumber":366,"author":{"gitId":"wjacobw"},"content":"        SimpleDateFormat outputFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2023-09-02"},{"lineNumber":367,"author":{"gitId":"wjacobw"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":368,"author":{"gitId":"wjacobw"},"content":"            FileChannel fileChannel \u003d FileChannel.open(Paths.get(zenithData),","lastModifiedDate":"2023-09-02"},{"lineNumber":369,"author":{"gitId":"wjacobw"},"content":"                    StandardOpenOption.WRITE);","lastModifiedDate":"2023-09-02"},{"lineNumber":370,"author":{"gitId":"wjacobw"},"content":"            fileChannel.truncate(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":371,"author":{"gitId":"wjacobw"},"content":"            fileChannel.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":372,"author":{"gitId":"wjacobw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":373,"author":{"gitId":"wjacobw"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":374,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":375,"author":{"gitId":"wjacobw"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-09-02"},{"lineNumber":376,"author":{"gitId":"wjacobw"},"content":"            String done \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":377,"author":{"gitId":"wjacobw"},"content":"            String by \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":378,"author":{"gitId":"wjacobw"},"content":"            String from \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":379,"author":{"gitId":"wjacobw"},"content":"            String to \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":380,"author":{"gitId":"wjacobw"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2023-09-02"},{"lineNumber":381,"author":{"gitId":"wjacobw"},"content":"            String type \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":382,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":383,"author":{"gitId":"wjacobw"},"content":"            if (task.isDone \u003d\u003d true) {","lastModifiedDate":"2023-09-02"},{"lineNumber":384,"author":{"gitId":"wjacobw"},"content":"                done \u003d \" |1\";","lastModifiedDate":"2023-09-02"},{"lineNumber":385,"author":{"gitId":"wjacobw"},"content":"            }// Perform your task processing here","lastModifiedDate":"2023-09-02"},{"lineNumber":386,"author":{"gitId":"wjacobw"},"content":"            else {","lastModifiedDate":"2023-09-02"},{"lineNumber":387,"author":{"gitId":"wjacobw"},"content":"                done \u003d \" |0\";","lastModifiedDate":"2023-09-02"},{"lineNumber":388,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":389,"author":{"gitId":"wjacobw"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2023-09-02"},{"lineNumber":390,"author":{"gitId":"wjacobw"},"content":"                from \u003d \"/from \" + convertDateFormat(((Event) task).getFrom().toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":391,"author":{"gitId":"wjacobw"},"content":"                to \u003d \"/to \" + convertDateFormat(((Event) task).getBy().toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":392,"author":{"gitId":"wjacobw"},"content":"                type \u003d \"event \";","lastModifiedDate":"2023-09-02"},{"lineNumber":393,"author":{"gitId":"wjacobw"},"content":"                String string \u003d type + description + from + to  + done;","lastModifiedDate":"2023-09-02"},{"lineNumber":394,"author":{"gitId":"wjacobw"},"content":"                try {","lastModifiedDate":"2023-09-02"},{"lineNumber":395,"author":{"gitId":"wjacobw"},"content":"                    appendToFile(zenithData, string);","lastModifiedDate":"2023-09-02"},{"lineNumber":396,"author":{"gitId":"wjacobw"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":397,"author":{"gitId":"wjacobw"},"content":"                catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":398,"author":{"gitId":"wjacobw"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":399,"author":{"gitId":"wjacobw"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":400,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":401,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":402,"author":{"gitId":"wjacobw"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-09-02"},{"lineNumber":403,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":404,"author":{"gitId":"wjacobw"},"content":"                by \u003d \"/by \" + convertDateFormat(((Deadline) task).getBy().toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":405,"author":{"gitId":"wjacobw"},"content":"                type \u003d \"deadline \";","lastModifiedDate":"2023-09-02"},{"lineNumber":406,"author":{"gitId":"wjacobw"},"content":"                String string \u003d type + description + by + done;","lastModifiedDate":"2023-09-02"},{"lineNumber":407,"author":{"gitId":"wjacobw"},"content":"                try {","lastModifiedDate":"2023-09-02"},{"lineNumber":408,"author":{"gitId":"wjacobw"},"content":"                    appendToFile(zenithData, string);","lastModifiedDate":"2023-09-02"},{"lineNumber":409,"author":{"gitId":"wjacobw"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":410,"author":{"gitId":"wjacobw"},"content":"                catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":411,"author":{"gitId":"wjacobw"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":412,"author":{"gitId":"wjacobw"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":413,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":414,"author":{"gitId":"wjacobw"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2023-09-02"},{"lineNumber":415,"author":{"gitId":"wjacobw"},"content":"                type \u003d \"todo \";","lastModifiedDate":"2023-09-02"},{"lineNumber":416,"author":{"gitId":"wjacobw"},"content":"                String string \u003d type + description + done;","lastModifiedDate":"2023-09-02"},{"lineNumber":417,"author":{"gitId":"wjacobw"},"content":"                try {","lastModifiedDate":"2023-09-02"},{"lineNumber":418,"author":{"gitId":"wjacobw"},"content":"                    appendToFile(zenithData, string);","lastModifiedDate":"2023-09-02"},{"lineNumber":419,"author":{"gitId":"wjacobw"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":420,"author":{"gitId":"wjacobw"},"content":"                catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":421,"author":{"gitId":"wjacobw"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":422,"author":{"gitId":"wjacobw"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":423,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":424,"author":{"gitId":"wjacobw"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":425,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":426,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":427,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":428,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":429,"author":{"gitId":"wjacobw"},"content":"     * Constructs a TaskList object with a specified task.","lastModifiedDate":"2023-09-03"},{"lineNumber":430,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":431,"author":{"gitId":"wjacobw"},"content":"     * @param task The initial task for the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":432,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":433,"author":{"gitId":"wjacobw"},"content":"    public TaskList(String task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":434,"author":{"gitId":"wjacobw"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-02"},{"lineNumber":435,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":436,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":437,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":438,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":439,"author":{"gitId":"wjacobw"},"content":"     * Constructs an empty TaskList object.","lastModifiedDate":"2023-09-03"},{"lineNumber":440,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":441,"author":{"gitId":"wjacobw"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":442,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":443,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":444,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":445,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":446,"author":{"gitId":"wjacobw"},"content":"     * Gets the current task.","lastModifiedDate":"2023-09-03"},{"lineNumber":447,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":448,"author":{"gitId":"wjacobw"},"content":"     * @return The current task.","lastModifiedDate":"2023-09-03"},{"lineNumber":449,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":450,"author":{"gitId":"wjacobw"},"content":"    public String getTask() {","lastModifiedDate":"2023-09-02"},{"lineNumber":451,"author":{"gitId":"wjacobw"},"content":"        return this.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":452,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":453,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":454,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":455,"author":{"gitId":"wjacobw"},"content":"     * Loads tasks from the task string into the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":456,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":457,"author":{"gitId":"wjacobw"},"content":"    public void load() {","lastModifiedDate":"2023-09-02"},{"lineNumber":458,"author":{"gitId":"wjacobw"},"content":"        StringToArray(getTask());","lastModifiedDate":"2023-09-02"},{"lineNumber":459,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":460,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wjacobw":460}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"    protected String by;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":"        super(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"wjacobw":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"import java.util.List;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":" * Represents the user interface for the Duke program.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wjacobw"},"content":"    public Ui() {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"     * Displays a message asking the user to specify the content of a todo list item.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wjacobw"},"content":"    public void specify() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Please specify the content of the todo list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"wjacobw"},"content":"     * Displays a message indicating that a task has been removed.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"wjacobw"},"content":"     * @param task The removed task.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"wjacobw"},"content":"    public void remove(String task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wjacobw"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wjacobw"},"content":"     * Displays a message asking the user to input an integer to select a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wjacobw"},"content":"    public void numExc() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"to pick which task to do, please input an integer\");","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"wjacobw"},"content":"     * Displays a message indicating that the specified task index does not exist in the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"wjacobw"},"content":"    public void indexOut() {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"currently, your task list does not contain the task with the index you just inputted\");","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"wjacobw"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"wjacobw"},"content":"     * @param list The list of tasks to display.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"wjacobw"},"content":"    public void list(List\u003cTask\u003e list) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"wjacobw"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"wjacobw"},"content":"        for (Task thing: list) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"wjacobw"},"content":"            System.out.println(index +\". \" + thing.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"wjacobw"},"content":"            index++;","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"wjacobw"},"content":"     * Displays the matching list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"wjacobw"},"content":"     * @param list The matching list of tasks to display.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"wjacobw"},"content":"    public void matchingList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"wjacobw"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"wjacobw"},"content":"        for (Task thing: list) {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"wjacobw"},"content":"            System.out.println(index +\". \" + thing.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"wjacobw"},"content":"            index++;","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"wjacobw"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"wjacobw"},"content":"     * Displays a message indicating that the user input was a blank space.","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"wjacobw"},"content":"    public void blank() {","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Don\u0027t just input blank space\");","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"wjacobw"},"content":"     * Displays a message indicating that the user input was not in the correct format.","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"wjacobw"},"content":"    public void format() {","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Please input the correct format\");","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"wjacobw"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"wjacobw"},"content":"     * @param size        The size of the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"wjacobw"},"content":"     * @param onetwo      \"task\" if there is only one task, \"tasks\" otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"wjacobw"},"content":"     * @param description The description of the marked task.","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"wjacobw"},"content":"    public void mark(int size, String onetwo, String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Noted. I\u0027ve marked this task: \");","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"    [X] \" + description);","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Now you have \" + size + onetwo +  \" in the list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"wjacobw"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"wjacobw"},"content":"     * @param size        The size of the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"wjacobw"},"content":"     * @param onetwo      \"task\" if there is only one task, \"tasks\" otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"wjacobw"},"content":"     * @param description The description of the unmarked task.","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"wjacobw"},"content":"    public void unmark(int size, String onetwo, String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"    [ ] \" + description);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Now you have \" + size + onetwo +  \" in the list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"wjacobw"},"content":"     * Displays a message indicating the current number of tasks in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"wjacobw"},"content":"     * @param size   The size of the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"wjacobw"},"content":"     * @param onetwo \"task\" if there is only one task, \"tasks\" otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"wjacobw"},"content":"    public void currentlist(int size, String onetwo) {","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Now you have \" + size + onetwo +  \" in the list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"wjacobw"},"content":"     * Displays a message indicating that a task has been added to the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"wjacobw"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"wjacobw"},"content":"     * @param task   The added task.","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"wjacobw"},"content":"     * @param size   The size of the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"wjacobw"},"content":"     * @param onetwo \"task\" if there is only one task, \"tasks\" otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"wjacobw"},"content":"    public void add(Task task, int size, String onetwo) {","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"wjacobw"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Now you have \" + size + onetwo +  \" in the list\");","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"wjacobw"},"content":"     * Displays a farewell message.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"wjacobw"},"content":"    public void bye() {","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"wjacobw"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"wjacobw"},"content":"     * Displays a greeting message.","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"wjacobw"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"wjacobw"},"content":"    public void greet() {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"Hello, I\u0027m Zenith\" );","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"wjacobw"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wjacobw":161}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":"public class EventTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wjacobw"},"content":"    public void toString_success() throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"        assertEquals(\"[E][ ] nus boxing(from: 03 April 2003 to: 04 May 2004)\", new Event(\"nus boxing\", LocalDate.of(2003, 04, 03), LocalDate.of(2004, 05, 04)).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"    public void changeFormat_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wjacobw"},"content":"        assertEquals(LocalDate.of(2003, 4, 3).toString(), \"2003-04-03\");","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"wjacobw":22}},{"path":"src/test/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"wjacobw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"wjacobw"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"wjacobw"},"content":"public class Todo {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"wjacobw"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"wjacobw"},"content":"    public void toString_success() throws Exception {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"wjacobw"},"content":"        assertEquals(\"[D][ ] nus boxing(by: 03 April 2003)\", new Deadline(\"nus boxing\", LocalDate.of(2003, 04, 03)).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"wjacobw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"wjacobw"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"wjacobw"},"content":"    public void changeFormat_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"wjacobw"},"content":"        assertEquals(LocalDate.of(2003, 4, 3).toString(), \"2003-04-03\");","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"wjacobw"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"wjacobw"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"wjacobw":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wjacobw"},"content":"todo study","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wjacobw"},"content":"mark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wjacobw"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wjacobw"},"content":"bye","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wjacobw":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wjacobw"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wjacobw":1,"-":20}}]
