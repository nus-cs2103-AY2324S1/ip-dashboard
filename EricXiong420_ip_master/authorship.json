[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"    mainClass.set(\"hachi.Launcher\")","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"    archiveBaseName \u003d \"hachi\"","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"    toolVersion \u003d \u002710.12.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"EricXiong420":21,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"E | 1 | birthday | 2023-04-05 | 2024-04-05","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"D | 0 | submit essay | 2023-08-07","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"T | 0 | get ripped","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"D | 1 | finish cs2103 thing | 2023-09-23","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"E | 0 | date with a hottie | 2023-09-15 | 2023-09-30","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"EricXiong420":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"# Hachi User Guide","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"### A task list you\u0027ll want to go back to!","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"### Three different types of tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"You can add **Todos**, **Deadlines** and **Events** to keep track of ","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"those pesky tasks that you know you\u0027ll forget in an hour!","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"You can mark all three done, or undone.","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"What\u0027s more, **Deadlines** and **Events** allow you to include dates, for easy reference!","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"### Advanced search and filter options","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"You can easily list out all of the tasks, or filter them by certain keywords, or the date! Neat, isn\u0027t it?","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"### Text-based UI,  with a graphical twist","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"I know all of you out there love how typing makes all of the tasks really quick and easy to accomplish.","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"But we\u0027re adding that along with a beautiful GUI ","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"where a dog named \"Hachi\" will be handling all of your tasks. Sooo cute.","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"### `bye` - Exits app","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"Exits the app.","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"### `list` - Lists tasks","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"Lists out the tasks, their names, dates, and completion status.","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"Add the keyword `sort name` to sort the results alphabetically by their names.","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"`list`","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"or","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"`list sort name`","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"### `mark` - Marks completion","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"Marks a task as completed.","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"`mark (task number)`","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"### `unmark` - Marks non-completion","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"Marks a task as not completed.","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"`unmark (task number)`","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"Removes a task from existence.","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"`delete (task number)`","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"### `todo` - Creates a Todo task","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"EricXiong420"},"content":"Adds a new Todo task, which stores its name.","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"EricXiong420"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"EricXiong420"},"content":"`todo (task name)`","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"EricXiong420"},"content":"### `deadline` - Creates a Deadline task","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"EricXiong420"},"content":"Adds a new Deadline task, which stores its name and deadline date.","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"EricXiong420"},"content":"`deadline (task name) /by (deadline, in yyyy-mm-dd format)`","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"EricXiong420"},"content":"### `event` - Creates an Event task","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"EricXiong420"},"content":"Adds a new Event task, which stores its name, start date, and end date.","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"EricXiong420"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"EricXiong420"},"content":"`event (task name) /from (start date, in yyyy-mm-dd format) (end date, in yyyy-mm-dd format)`","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"EricXiong420"},"content":"### `search-date` - Filters tasks by date","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"EricXiong420"},"content":"Lists out the tasks which have a deadline before the specified date, or for","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"EricXiong420"},"content":"which the specified date falls between the start date and the end date. ","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"EricXiong420"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"EricXiong420"},"content":"`search-date (date, in yyyy-mm-dd format)`","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"EricXiong420"},"content":"### `find` - Filters tasks by name","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"EricXiong420"},"content":"Lists out the tasks which contains the exact given string of text.","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"EricXiong420"},"content":"Example of usage:","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":107,"author":{"gitId":"EricXiong420"},"content":"`find (name)`","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"EricXiong420":84,"-":23}},{"path":"src/main/java/exceptions/DateFormatWrongException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class DateFormatWrongException extends HachiException {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public DateFormatWrongException(String date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"Your date is in the wrong format (%s). \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"                \"Please enter the date in this format: yyyy-mm-dd\", date));","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"EricXiong420":8}},{"path":"src/main/java/exceptions/DateWrongOrderException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"public class DateWrongOrderException extends HachiException {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"    public DateWrongOrderException(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"Your end date (%s) is before your start date (%s). \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"                \"Are you sure you entered them in the right order?\",","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"                endDate.format(DateTimeFormatter.ISO_DATE),","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"                startDate.format(DateTimeFormatter.ISO_DATE)));","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"EricXiong420":13}},{"path":"src/main/java/exceptions/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class EmptyDeadlineException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public EmptyDeadlineException(String task) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! The /by of a %s cannot be empty.\", task));","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/EmptyNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class EmptyNumberException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public EmptyNumberException(String check) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! Please indicate which task you wish to %s\", check));","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class EmptyTaskException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public EmptyTaskException(String task) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! The description of a %s cannot be empty.\", task));","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/EventDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class EventDateException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public EventDateException(String missing) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! Missing %s. Please input using this format: \" +","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"                        \"\\\"event \u003cdescription\u003e /from \u003cstart date\u003e /to \u003cend date\u003e\\\"\", missing));","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":8}},{"path":"src/main/java/exceptions/HachiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class HachiException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public HachiException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class InvalidArgumentException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public InvalidArgumentException(String cmd) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"Invalid argument for command \\\"%s\\\"\", cmd));","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class InvalidCommandException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public InvalidCommandException(String cmd) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what \\\"%s\\\" means :-(\", cmd));","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/NoDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class NoDeadlineException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public NoDeadlineException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(\"☹ OOPS!!! Missing deadline, please input using this format:\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"                \" \\\"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":8}},{"path":"src/main/java/exceptions/NumberOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class NumberOutOfBoundsException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public NumberOutOfBoundsException(int num) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! Task number is out of bounds. You only have %d tasks currently.\", num));","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/TooManyArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class TooManyArgumentsException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public TooManyArgumentsException(String cmd, int expected, int actual) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! Expected %d arguments for command \\\"%s\\\", instead got %d\",","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"                expected, cmd, actual));","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":8}},{"path":"src/main/java/hachi/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import exceptions.TooManyArgumentsException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":" * Represents the \"bye\" command.","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    public ByeCommand(String[] arguments) {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"        super(arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    public String execute() throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"        checkArgumentLength(getArguments().length);","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    protected void checkArgumentLength(int argumentLength) throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003e 0) {","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"            throw new TooManyArgumentsException(COMMAND_WORD, 0, argumentLength);","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"EricXiong420":29}},{"path":"src/main/java/hachi/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":" * Parent abstract command class.","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"    private String[] arguments;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"    public Command(String[] arguments) {","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"    public String[] getArguments() {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"        return arguments;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    public abstract String execute() throws HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"    protected abstract void checkArgumentLength(int argumentLength) throws HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"EricXiong420":24}},{"path":"src/main/java/hachi/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":" * Represents a Deadline object, extending the Task object.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":" * Includes an additional field to track the deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":" * Overrides its representations in storage and in string format.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"     * Constructor for the Deadline object.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"     * @param deadline Deadline of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    public Deadline(String taskName, LocalDate deadline) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"        super(taskName);","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"     * Checks if supplied date is before the deadline","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"     * @return true if given date is before deadline, false otherwise","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"    public boolean isDateWithinRange(LocalDate date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"        return date.compareTo(deadline) \u003c\u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"     * Converts hachi.Deadline object to its string representation when stored in the hard drive.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"     * @return String representation when stored in text file on user\u0027s hard drive","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"    public String toData() {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"        return \"D\" + \" | \" + super.toData() + \" | \" + deadline.format(DateTimeFormatter.ISO_DATE);","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"                deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":49}},{"path":"src/main/java/hachi/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import exceptions.DateFormatWrongException;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import exceptions.EmptyDeadlineException;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import exceptions.EmptyTaskException;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"import exceptions.NoDeadlineException;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":" * Represents the \"deadline\" command.","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"     * Constructor method for the DeadlineCommand class.","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"     * @param arguments The arguments passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"     * @param taskList The task list passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"     * @param storage The storage used by the app.","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"    public DeadlineCommand(String[] arguments, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"        super(arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"    public String execute() throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"        checkArgumentLength(getArguments().length);","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"        String[] arguments \u003d getArguments();","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"        int byIndex \u003d Parser.getWordIndex(\"/by\", arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"            throw new NoDeadlineException();","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"        if (byIndex \u003d\u003d arguments.length - 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"            throw new EmptyDeadlineException(\"deadline\");","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        String deadlineTask \u003d String.join(\" \",","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"                Arrays.copyOfRange(arguments, 0, byIndex));","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"        String deadlineDate \u003d String.join(\" \",","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"                Arrays.copyOfRange(arguments, byIndex + 1, arguments.length));","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"            Deadline dl \u003d new Deadline(deadlineTask, LocalDate.parse(deadlineDate));","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"            taskList.add(dl);","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"            storage.updateTaskFile(taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"            return \"Got it. I\u0027ve added this task:\\n   \" + dl","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"                    + String.format(\"\\nNow you have %d tasks in the list.\", taskList.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"            throw new DateFormatWrongException(deadlineDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"    protected void checkArgumentLength(int argumentLength) throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003c 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"            throw new EmptyTaskException(DeadlineCommand.COMMAND_WORD);","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"EricXiong420":68}},{"path":"src/main/java/hachi/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import exceptions.EmptyNumberException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import exceptions.TooManyArgumentsException;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":" * Represents the \"delete\" command.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     * Constructor method for the DeleteCommand class.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     * @param arguments The arguments passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"     * @param taskList The task list passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"     * @param storage The storage used by the app.","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"    public DeleteCommand(String[] arguments, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        super(arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"    public String execute() throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        checkArgumentLength(getArguments().length);","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"            int i \u003d Parser.parseTaskNumber(getArguments()[0], taskList.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"            Task t \u003d taskList.remove(i);","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"            storage.updateTaskFile(taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"            return \"Noted. I\u0027ve removed this task:\\n   \" + t","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"                    + String.format(\"\\nNow you have %d tasks in the list.\", taskList.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"            throw new InvalidArgumentException(DeleteCommand.COMMAND_WORD);","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"    protected void checkArgumentLength(int argumentLength) throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003e 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"            throw new TooManyArgumentsException(DeleteCommand.COMMAND_WORD, 1, argumentLength);","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003c 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"            throw new EmptyNumberException(DeleteCommand.COMMAND_WORD);","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"EricXiong420":54}},{"path":"src/main/java/hachi/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":" * A custom control for use by JavaFX. Appears as a dialogue box in the graphical interface.","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"    private Label text;","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     * Constructor for the DialogBox class.","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     * @param l The text of the dialog box.","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"     * @param iv The picture to display.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"    private void flip() {","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"    public static DialogBox getHachiDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"        db.flip();","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"        return db;","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"EricXiong420":57}},{"path":"src/main/java/hachi/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import exceptions.DateWrongOrderException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":" * Represents a Event object, extending the Task object.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":" * Includes two additional fields to track the start and end date.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":" * Overrides its representations in storage and in string format.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"     * @param taskName Name of the event.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     * @param startDate Start date of the event.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     * @param endDate End date of the event.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"     * @throws DateWrongOrderException If the provided dates are in the wrong order.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    public Event(String taskName, LocalDate startDate, LocalDate endDate) throws DateWrongOrderException {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"        super(taskName);","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        if (startDate.isAfter(endDate)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"            throw new DateWrongOrderException(startDate, endDate);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"     * Checks if supplied date is during the event","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"     * @return true if given date is during the event, false otherwise","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"    public boolean isDateWithinRange(LocalDate date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"        return date.compareTo(startDate) \u003e\u003d 0 \u0026\u0026 date.compareTo(endDate) \u003c\u003d 0;","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"     * Converts hachi.Event object to its string representation when stored in the hard drive.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"     * @return String representation when stored in text file on user\u0027s hard drive","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"    public String toData() {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"        return \"E\" + \" | \" + super.toData() + \" | \" + startDate.format(DateTimeFormatter.ISO_DATE)","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"                + \" | \" + endDate.format(DateTimeFormatter.ISO_DATE);","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"                startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")),","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"                endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":60}},{"path":"src/main/java/hachi/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import exceptions.DateFormatWrongException;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import exceptions.EmptyTaskException;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import exceptions.EventDateException;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":" * Represents the \"event\" command.","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"     * Constructor method for the EventCommand class.","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"     * @param arguments The arguments passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"     * @param taskList The task list passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"     * @param storage The storage used by the app.","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    public EventCommand(String[] arguments, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"        super(arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"    public String execute() throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"        checkArgumentLength(getArguments().length);","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"        String[] arguments \u003d getArguments();","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"        int fromIndex \u003d Parser.getWordIndex(\"/from\", arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"        int toIndex \u003d Parser.getWordIndex(\"/to\", arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        // catching event date exceptions","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"        if (fromIndex \u003d\u003d -1 \u0026\u0026 toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"            throw new EventDateException(\"/from and /to\");","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"        } else if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"            throw new EventDateException(\"/to\");","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        } else if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"            throw new EventDateException(\"/from\");","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"        String eventTask \u003d String.join(\" \",","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"                Arrays.copyOfRange(arguments, 0, fromIndex));","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"        String eventStartDate \u003d String.join(\" \",","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"                Arrays.copyOfRange(arguments, fromIndex + 1, toIndex));","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"        String eventEndDate \u003d String.join(\" \",","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"                Arrays.copyOfRange(arguments, toIndex + 1, arguments.length));","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"        // catching more specific exceptions regarding the input content","lastModifiedDate":"2023-09-15"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"        if (eventTask.equals(\"\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"            throw new EmptyTaskException(\"event\");","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"        } else if (eventStartDate.equals(\"\") \u0026\u0026 eventEndDate.equals(\"\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"            throw new EventDateException(\"start date and end date\");","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"        } else if (eventEndDate.equals(\"\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"            throw new EventDateException(\"end date\");","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"        } else if (eventStartDate.equals(\"\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"            throw new EventDateException(\"start date\");","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":69,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"EricXiong420"},"content":"            Event ev \u003d new Event(eventTask, LocalDate.parse(eventStartDate),","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"EricXiong420"},"content":"                    LocalDate.parse(eventEndDate));","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"EricXiong420"},"content":"            taskList.add(ev);","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"EricXiong420"},"content":"            storage.updateTaskFile(taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"EricXiong420"},"content":"            return \"Got it. I\u0027ve added this task:\\n   \" + ev","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"EricXiong420"},"content":"                    + String.format(\"\\nNow you have %d tasks in the list.\", taskList.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"EricXiong420"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"EricXiong420"},"content":"            throw new DateFormatWrongException(eventStartDate + \", \" + eventEndDate);","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"EricXiong420"},"content":"    protected void checkArgumentLength(int argumentLength) throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003c 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"EricXiong420"},"content":"            throw new EmptyTaskException(EventCommand.COMMAND_WORD);","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"EricXiong420":87}},{"path":"src/main/java/hachi/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":" * Represents the \"find\" command.","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"     * Constructor method for the FindCommand class.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"     * @param arguments The arguments passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"     * @param taskList The task list passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"    public FindCommand(String[] arguments, TaskList taskList) {","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"        super(arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    public String execute() throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"        checkArgumentLength(getArguments().length);","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"        String str \u003d String.join(\" \", getArguments());","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"        taskList.iter(task -\u003e {","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"            if (task.isStringWithinTaskName(str)) {","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"        });","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"            return \"No tasks found! Maybe try changing your search terms.\";","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"            return new TaskList(filteredTasks).toString();","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"    protected void checkArgumentLength(int argumentLength) throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003c 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"            throw new HachiException(\"Please include the word or words you are searching for!\");","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"EricXiong420":49}},{"path":"src/main/java/hachi/Hachi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":" * A task list app that allows the user to add Todos, Deadlines, and Events.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":" * The app saves the list locally on the computer, and thus can remember tasks entered previously.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":" * The user can add tasks, delete tasks, mark tasks as done, list all tasks, and search for them by date and name.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"public class Hachi {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"    private static final String DEFAULT_TASK_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"     * Overloaded constructor for the Hachi class.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     * Initialises the UI, Storage, and uses the default filePath to store the tasks at.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"    public Hachi() {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"        filePath \u003d DEFAULT_TASK_PATH;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"     * Overloaded constructor for the Hachi class.","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"     * Initialises the UI, Storage, and takes in a filePath to store the tasks at.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"     * @param filePath The relative location to store the text file for the tasks in.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"    public Hachi(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"     * Returns the appropriate response for the user input.","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"     * @throws HachiException The appropriate exception when one does appear","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"    public String getInputResponse(String input) throws HachiException {","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        TaskList taskList \u003d storage.getTaskList();","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"        Command cmd \u003d Parser.parse(input, taskList, storage);","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"        return cmd.execute();","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"EricXiong420":47}},{"path":"src/main/java/hachi/JavaFx.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":" * Implements a graphical user interface using Java FX.","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"public class JavaFx extends Application {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"    private Hachi hachi;","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/person.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"    private Image hachiImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/akita.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"        hachi \u003d new Hachi();","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"        helloWorld.setFont(new Font(\"Arial\", 24));","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"        Scene scene \u003d new Scene(mainLayout); // Setting the scene to be our Label","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"        stage.setTitle(\"Hachi\");","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"EricXiong420"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"EricXiong420"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"EricXiong420"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"EricXiong420"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"EricXiong420"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"EricXiong420"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"EricXiong420"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"EricXiong420"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"EricXiong420"},"content":"        });","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"EricXiong420"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"EricXiong420"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"EricXiong420"},"content":"        });","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"EricXiong420"},"content":"        // Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"EricXiong420"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"EricXiong420"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"EricXiong420"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":98,"author":{"gitId":"EricXiong420"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"EricXiong420"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"EricXiong420"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"EricXiong420"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"EricXiong420"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"EricXiong420"},"content":"                DialogBox.getHachiDialog(dukeText, new ImageView(hachiImage))","lastModifiedDate":"2023-09-10"},{"lineNumber":104,"author":{"gitId":"EricXiong420"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":105,"author":{"gitId":"EricXiong420"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"EricXiong420"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"EricXiong420"},"content":"            return hachi.getInputResponse(input);","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"EricXiong420"},"content":"        } catch (HachiException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"EricXiong420"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-15"},{"lineNumber":113,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"EricXiong420":115}},{"path":"src/main/java/hachi/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"public class Launcher {","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"        Application.launch(JavaFx.class, args);","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"EricXiong420":12}},{"path":"src/main/java/hachi/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import exceptions.TooManyArgumentsException;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":" * Represents the \"list\" command.","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"     * Constructor method for the ListCommand class.","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"     * @param arguments The arguments passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"     * @param taskList The task list passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"    public ListCommand(String[] arguments, TaskList taskList) {","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"        super(arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    public String execute() throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"        String[] arguments \u003d getArguments();","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"        checkArgumentLength(arguments.length);","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"        if (!arguments[0].isEmpty() \u0026\u0026 !arguments[0].equals(\"sort\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"            throw new InvalidArgumentException(COMMAND_WORD);","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"        } else if (!arguments[1].isEmpty() \u0026\u0026 arguments[1].equals(\"name\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"            taskList.sort((x, y) -\u003e x.compareName(y));","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"        return taskList.toString();","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"    protected void checkArgumentLength(int argumentLength) throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003e 2) {","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"            throw new TooManyArgumentsException(COMMAND_WORD, 0, argumentLength);","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"EricXiong420":44}},{"path":"src/main/java/hachi/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import exceptions.EmptyNumberException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import exceptions.TooManyArgumentsException;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":" * Represents the \"mark\" command.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     * Constructor method for the MarkCommand class.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     * @param arguments The arguments passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"     * @param taskList The task list passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"     * @param storage The storage used by the app.","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"    public MarkCommand(String[] arguments, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        super(arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"    public String execute() throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        checkArgumentLength(getArguments().length);","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"            int i \u003d Parser.parseTaskNumber(getArguments()[0], taskList.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"            Task t \u003d taskList.mark(i);","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"            storage.updateTaskFile(taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"            return \"Nice! I\u0027ve marked this task as done\\n   \" + t;","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"            throw new InvalidArgumentException(MarkCommand.COMMAND_WORD);","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"    protected void checkArgumentLength(int argumentLength) throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003e 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"            throw new TooManyArgumentsException(COMMAND_WORD, 0, argumentLength);","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003c 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"            throw new EmptyNumberException(MarkCommand.COMMAND_WORD);","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"EricXiong420":53}},{"path":"src/main/java/hachi/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import exceptions.DateFormatWrongException;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"import exceptions.NumberOutOfBoundsException;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":" * Provides all the parsing methods for the other classes to parse user commands.","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     * Parses the user command, and returns the appropriate Command object.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     * @param cmd The raw user command.","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"     * @param taskList The application taskList.","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"     * @param storage The application storage.","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"     * @return A Command object that corresponds to the command passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    public static Command parse(String cmd, TaskList taskList, Storage storage)","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"            throws InvalidCommandException {","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"        String[] words \u003d cmd.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"        String[] arguments \u003d Arrays.copyOfRange(words, 1, words.length);","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"            return new ByeCommand(arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"            return new ListCommand(arguments, taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"            return new MarkCommand(arguments, taskList, storage);","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"            return new UnmarkCommand(arguments, taskList, storage);","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"            return new DeleteCommand(arguments, taskList, storage);","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"            return new TodoCommand(arguments, taskList, storage);","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"            return new DeadlineCommand(arguments, taskList, storage);","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"            return new EventCommand(arguments, taskList, storage);","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"        case SearchdateCommand.COMMAND_WORD:","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"            return new SearchdateCommand(arguments, taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"            return new FindCommand(arguments, taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"        default:","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"            throw new InvalidCommandException(commandWord);","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"     * Returns the index of a given string within a given list of strings.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"     * @param word The given string to find the index of.","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"     * @param arg The list of string within which to search for the given string.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"     * @return The index of the given string. If string is not found, returns -1.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"    public static int getWordIndex(String word, String[] arg) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"        for (int i \u003d 0; i \u003c arg.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"            if (arg[i].equals(word)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"EricXiong420"},"content":"                index \u003d i;","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"EricXiong420"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"EricXiong420"},"content":"        return index;","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"EricXiong420"},"content":"     * Converts a list of tasks in string format to a TaskList object.","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"EricXiong420"},"content":"     * @param ls The list of tasks in string format","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"EricXiong420"},"content":"     * @return The corresponding TaskList object","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"     * @throws HachiException If the text is unable to be converted to task","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"EricXiong420"},"content":"    public static TaskList parseTaskList(List\u003cString\u003e ls) throws HachiException {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"EricXiong420"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"EricXiong420"},"content":"        for (String s : ls) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"EricXiong420"},"content":"            result.add(convertTextToTask(s));","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"EricXiong420"},"content":"        return new TaskList(result);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"EricXiong420"},"content":"     * Converts a number that is in string format into a number in integer format. Throws an error","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"EricXiong420"},"content":"     * if the task number exceeds the total number of tasks in the file.","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"EricXiong420"},"content":"     * @param num The number in string format","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"EricXiong420"},"content":"     * @param numOfTasks The total number of tasks in the file.","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"EricXiong420"},"content":"     * @return The number in integer format","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"EricXiong420"},"content":"     * @throws NumberFormatException If the number passed in cannot be parsed into an integer.","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"EricXiong420"},"content":"     * @throws NumberOutOfBoundsException If the task number exceeds the total number of tasks in the file.","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"EricXiong420"},"content":"    public static int parseTaskNumber(String num, int numOfTasks)","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"EricXiong420"},"content":"            throws NumberFormatException, NumberOutOfBoundsException {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"EricXiong420"},"content":"        int number \u003d Integer.parseInt(num);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"EricXiong420"},"content":"        if (number \u003e numOfTasks || number \u003c 0) {","lastModifiedDate":"2023-09-15"},{"lineNumber":103,"author":{"gitId":"EricXiong420"},"content":"            throw new NumberOutOfBoundsException(numOfTasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"EricXiong420"},"content":"        return number - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"EricXiong420"},"content":"    private static Task convertTextToTask(String txt) throws HachiException {","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"EricXiong420"},"content":"        String[] s \u003d txt.split(\" \\\\| \"); // need to escape | character as it means something in regex","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"EricXiong420"},"content":"        Task temp; // Initialises the Task to be returned","lastModifiedDate":"2023-09-15"},{"lineNumber":111,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":112,"author":{"gitId":"EricXiong420"},"content":"        // set Task to the respective task type","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"EricXiong420"},"content":"            switch (s[0]) {","lastModifiedDate":"2023-09-15"},{"lineNumber":115,"author":{"gitId":"EricXiong420"},"content":"            case \"T\":","lastModifiedDate":"2023-09-15"},{"lineNumber":116,"author":{"gitId":"EricXiong420"},"content":"                if (s.length \u003e 3) {","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"EricXiong420"},"content":"                    throw new HachiException(","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"EricXiong420"},"content":"                            \"Todo stored in the wrong format! Please check the file at \u0027data/tasks.txt\u0027\");","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"EricXiong420"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"EricXiong420"},"content":"                temp \u003d new Todo(s[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"EricXiong420"},"content":"                break;","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"EricXiong420"},"content":"            case \"D\":","lastModifiedDate":"2023-09-15"},{"lineNumber":123,"author":{"gitId":"EricXiong420"},"content":"                if (s.length \u003e 4) {","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"EricXiong420"},"content":"                    throw new HachiException(","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"EricXiong420"},"content":"                            \"Deadline stored in the wrong format! Please check the file at \u0027data/tasks.txt\u0027\");","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"EricXiong420"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"EricXiong420"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"EricXiong420"},"content":"                    temp \u003d new Deadline(s[2], LocalDate.parse(s[3]));","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"EricXiong420"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"EricXiong420"},"content":"                    throw new DateFormatWrongException(s[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"EricXiong420"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"EricXiong420"},"content":"                break;","lastModifiedDate":"2023-09-15"},{"lineNumber":133,"author":{"gitId":"EricXiong420"},"content":"            case \"E\":","lastModifiedDate":"2023-09-15"},{"lineNumber":134,"author":{"gitId":"EricXiong420"},"content":"                if (s.length \u003e 5) {","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"EricXiong420"},"content":"                    throw new HachiException(","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"EricXiong420"},"content":"                            \"Event stored in the wrong format! Please check the file at \u0027data/tasks.txt\u0027\");","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"EricXiong420"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"EricXiong420"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"EricXiong420"},"content":"                    temp \u003d new Event(s[2], LocalDate.parse(s[3]), LocalDate.parse(s[4]));","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"EricXiong420"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"EricXiong420"},"content":"                    throw new DateFormatWrongException(s[3] + \", \" + s[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"EricXiong420"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"EricXiong420"},"content":"                break;","lastModifiedDate":"2023-09-15"},{"lineNumber":144,"author":{"gitId":"EricXiong420"},"content":"            default:","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"EricXiong420"},"content":"                throw new HachiException(\"Task code not recognised! May be in the wrong format.\"","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"EricXiong420"},"content":"                        + \"Please check the file at \u0027data/tasks.txt\u0027\");","lastModifiedDate":"2023-09-15"},{"lineNumber":147,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"EricXiong420"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"EricXiong420"},"content":"            throw new HachiException(\"Task stored in the wrong format! Please check the file at \u0027data/tasks.txt\u0027\");","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"EricXiong420"},"content":"        assert s[1].equals(\"1\") || s[1].equals(\"0\") : \"Second number should only be 1 or 0\";","lastModifiedDate":"2023-09-15"},{"lineNumber":153,"author":{"gitId":"EricXiong420"},"content":"        // mark task based on \u00270\u0027 or \u00271\u0027 in the file","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"EricXiong420"},"content":"        if (s[1].equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"EricXiong420"},"content":"            temp.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"EricXiong420"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"EricXiong420"},"content":"            temp.unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"EricXiong420"},"content":"        return temp;","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"EricXiong420":163}},{"path":"src/main/java/hachi/SearchdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import exceptions.DateFormatWrongException;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import exceptions.TooManyArgumentsException;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":" * Represents the \"search-date\" command.","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"public class SearchdateCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    public static final String COMMAND_WORD \u003d \"search-date\";","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     * Constructor method for the SearchdateCommand class.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     * @param arguments The arguments passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"     * @param taskList The task list passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    public SearchdateCommand(String[] arguments, TaskList taskList) {","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"        super(arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"    public String execute() throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"        checkArgumentLength(getArguments().length);","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"        LocalDate searchDate \u003d LocalDate.parse(getArguments()[0]);","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        ArrayList\u003cTask\u003e filteredDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"        taskList.iter(task -\u003e {","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"            if (task.isDateWithinRange(searchDate)) {","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"                filteredDates.add(task);","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"        });","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"        return new TaskList(filteredDates).toString();","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"    protected void checkArgumentLength(int argumentLength) throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003e 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"            throw new TooManyArgumentsException(SearchdateCommand.COMMAND_WORD, 1, argumentLength);","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003c 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"            throw new DateFormatWrongException(\"\");","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"EricXiong420":51}},{"path":"src/main/java/hachi/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":" * Handles all the tasks related to saving and loading data from the local storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":" * Provides methods to obtain information about the task list from the file, as well as for updating the file.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    private static String DEFAULT_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    private Path currentPath;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"     * Overloaded constructor for the Storage class.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"     * Initialises the currentPath variable using the default path.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    public Storage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"        this(DEFAULT_PATH);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"     * Overloaded constructor for the Storage class.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"     * Initialises the currentPath variable, taking in the filePath variable if passed in.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"     * @param filePath","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"        currentPath \u003d path;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"     * Reads the text from the task text file and returns it as a task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"     * Creates the directory and file for storage if it doesn\u0027t already exist.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"     * @return The saved task list in storage, as a TaskList object","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"     * @throws HachiException","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"    public TaskList getTaskList() throws HachiException {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        if (!Files.exists(currentPath)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"                Files.createDirectories(currentPath.getParent());","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"                Files.createFile(currentPath);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"            return Parser.parseTaskList(Files.readAllLines(currentPath));","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"            throw new HachiException(\"Unable to read file\");","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"    private static void appendToFile(File file, String textToAdd) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"        FileWriter fw \u003d new FileWriter(file, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"        fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"EricXiong420"},"content":"     * Updates the task list file in storage with the new task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"EricXiong420"},"content":"     * Takes in a taskList and converts it to text form, and writes it to the storage file.","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"EricXiong420"},"content":"     * @param taskList The updated task list to be saved to storage","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"EricXiong420"},"content":"    public void updateTaskFile(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"EricXiong420"},"content":"        File taskPath \u003d currentPath.toFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"EricXiong420"},"content":"        // clear file first","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"EricXiong420"},"content":"            new FileWriter(taskPath).close();","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"EricXiong420"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"EricXiong420"},"content":"        // add every task in current task list","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"EricXiong420"},"content":"        taskList.iter(task -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"EricXiong420"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"EricXiong420"},"content":"                appendToFile(taskPath, task.toData() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"EricXiong420"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"EricXiong420"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"EricXiong420"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"EricXiong420":94}},{"path":"src/main/java/hachi/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":" * Represents the individual tasks in the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":" * Includes their completion status, name, and various methods.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"public class Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"    private boolean isCompleted \u003d false;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"    private String taskName \u003d \"\";","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    public void mark() {","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"     * Method to be overriden by tasks that have dates. For tasks without, always returns false.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"     * @return false","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"    public boolean isDateWithinRange(LocalDate date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"     * Returns true if string is within the task name.","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"     * @return true if string is within the task name.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"    public boolean isStringWithinTaskName(String str) {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"        return taskName.contains(str);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"     * Compares the task name lexicographically to that of another Task.","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"     * @param otherTask The other task to compare the name to.","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"     * @return a negative number if this task is alphabetically smaller, 0 if equal, positive if bigger.","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"    public int compareName(Task otherTask) {","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"        return this.taskName.compareTo(otherTask.taskName);","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"     * Converts Task object to its string representation when stored in the hard drive.","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"     * @return String representation when stored in text file on user\u0027s hard drive","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"    public String toData() {","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"        return (isCompleted ? \"1\" : \"0\") + \" | \" + taskName;","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"EricXiong420"},"content":"        String checkbox \u003d \"[\" + (isCompleted ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"EricXiong420"},"content":"        return checkbox + \" \" + taskName;","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":72}},{"path":"src/main/java/hachi/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":" * Wrapper class that handles all interaction with the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":" * Internally stores the task list as an ArrayList of Tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     * Marks the specified task as completed.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"     * @param i The task number.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"     * @return The marked Task for chaining.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"    public Task mark(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        taskList.get(i).mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"        return taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"     * Marks the specified task as not completed.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"     * @param i The task number.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"     * @return The unmarked Task for chaining.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"    public Task unmark(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"        taskList.get(i).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"        return taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"     * Removes the specified task.","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"     * @param i The task number.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"     * @return The removed Task for chaining.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"    public Task remove(int i) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"        return taskList.remove(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"     * Adds the provided task to the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"     * @param t The given task.","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"        taskList.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"    public ArrayList\u003cTask\u003e getArrayList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"        return this.taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"     * Applies the consumer function to every task in the task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"     * @param c The consumer function to be applied.","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"    public void iter(Consumer\u003c? super Task\u003e c) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"        taskList.forEach(c);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":70,"author":{"gitId":"EricXiong420"},"content":"     * Filters the task list, returning a task list containing only the filtered elements which","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"EricXiong420"},"content":"     * pred returns true on.","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"EricXiong420"},"content":"     * @param pred The predicate that is being used to test the elements.","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"EricXiong420"},"content":"     * @return The filtered list.","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"EricXiong420"},"content":"    public TaskList filter(Predicate\u003c? super Task\u003e pred) {","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"EricXiong420"},"content":"        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"EricXiong420"},"content":"        taskList.forEach(x -\u003e {","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"EricXiong420"},"content":"            if (pred.test(x)) {","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"EricXiong420"},"content":"                newTaskList.add(x);","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"EricXiong420"},"content":"        });","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"EricXiong420"},"content":"        return new TaskList(newTaskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"EricXiong420"},"content":"    public void sort(Comparator\u003c? super Task\u003e c) {","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"EricXiong420"},"content":"        taskList.sort(c);","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"EricXiong420"},"content":"     * Gets the size of the task list.","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"EricXiong420"},"content":"     * @return The size of the task list.","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"EricXiong420"},"content":"    public int size() {","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"EricXiong420"},"content":"        return taskList.size();","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"EricXiong420"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"EricXiong420"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"EricXiong420"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"EricXiong420"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"EricXiong420"},"content":"            result +\u003d (num + \". \" + taskList.get(i));","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"EricXiong420"},"content":"            if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"EricXiong420"},"content":"                result +\u003d \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"EricXiong420"},"content":"        return result;","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"EricXiong420":110}},{"path":"src/main/java/hachi/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":" * Represents a Todo object, extending the Task object.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":" * Overrides its representations in storage and in string format.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"        super(taskName);","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"     * Converts Todo object to its string representation when stored in the hard drive.","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"     * @return String representation when stored in text file on user\u0027s hard drive","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    public String toData() {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"        return \"T\" + \" | \" + super.toData();","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":27}},{"path":"src/main/java/hachi/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import exceptions.EmptyTaskException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":" * Represents the \"todo\" command.","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"     * Constructor method for the TodoCommand class.","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"     * @param arguments The arguments passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     * @param taskList The task list passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     * @param storage The storage used by the app.","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"    public TodoCommand(String[] arguments, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"        super(arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"    public String execute() throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"        checkArgumentLength(getArguments().length);","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"        Todo td \u003d new Todo(String.join(\" \", getArguments()));","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        taskList.add(td);","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"        storage.updateTaskFile(taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"        return \"Got it. I\u0027ve added this task:\\n   \" + td","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"                + String.format(\"\\nNow you have %d tasks in the list.\", taskList.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"    protected void checkArgumentLength(int argumentLength) throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003c 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"            throw new EmptyTaskException(TodoCommand.COMMAND_WORD);","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"EricXiong420":45}},{"path":"src/main/java/hachi/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import exceptions.EmptyNumberException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import exceptions.InvalidArgumentException;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import exceptions.TooManyArgumentsException;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"/**","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":" * Represents the \"unmark\" command.","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":" */","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     * Constructor method for the UnmarkCommand class.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     * @param arguments The arguments passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"     * @param taskList The task list passed in by the user.","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"     * @param storage The storage used by the app.","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"    public UnmarkCommand(String[] arguments, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        super(arguments);","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"    public String execute() throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        checkArgumentLength(getArguments().length);","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"            int i \u003d Parser.parseTaskNumber(getArguments()[0], taskList.size());","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"            Task t \u003d taskList.unmark(i);","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"            storage.updateTaskFile(taskList);","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n   \" + t;","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"            throw new InvalidArgumentException(MarkCommand.COMMAND_WORD);","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"    protected void checkArgumentLength(int argumentLength) throws HachiException {","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003e 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"            throw new TooManyArgumentsException(COMMAND_WORD, 0, argumentLength);","lastModifiedDate":"2023-09-15"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"        if (argumentLength \u003c 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"            throw new EmptyNumberException(MarkCommand.COMMAND_WORD);","lastModifiedDate":"2023-09-15"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"EricXiong420":53}},{"path":"src/test/java/hachi/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package hachi;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import exceptions.HachiException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import java.util.List;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    public void parseTaskList_validEvent_success() {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"        String event \u003d \"E | 1 | birthday | 2023-04-05 | 2023-04-06\";","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"        List\u003cString\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"        events.add(event);","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"            assertEquals(Parser.parseTaskList(events).toString(),","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"                    \"1. [E][X] birthday (from: Apr 05 2023 to: Apr 06 2023)\");","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"        } catch (HachiException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"            fail();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"    public void parseTaskList_invalidEvent_fail() {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"        String event \u003d \"E | 1 | birthday | 2023-04-05 | 2023-04-03\";","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"        List\u003cString\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"        events.add(event);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"            assertEquals(Parser.parseTaskList(events).toString(),","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"                    \"1. [E][X] birthday (from: Apr 05 2023 to: Apr 03 2023)\");","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"            fail();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"        } catch (HachiException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"            assertEquals(\"Your end date (2023-04-03) is before your start date (2023-04-05). \" +","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"                            \"Are you sure you entered them in the right order?\", e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"    @Test","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"    public void parseTaskList_invalidTaskFormat_fail() {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"        String event \u003d \"D | 1 | birthday | 2023-04-05 | 2023-04-03\";","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"        List\u003cString\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"        events.add(event);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"            assertEquals(Parser.parseTaskList(events).toString(),","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"                    \"1. [D][X] birthday (by: Apr 05 2023)\");","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"            fail();","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"        } catch (HachiException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"            assertEquals(\"Deadline stored in the wrong format! Please check the file at \u0027data/tasks.txt\u0027\",","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"EricXiong420":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"todo clean kitchen","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"deadline submit report /by Dec 9th","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"event santa claus /from Dec 25th /to when he leaves","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"mark 2","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"mark 3","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"unmark 3","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"list","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"java -classpath ../bin Hachi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EricXiong420":1,"-":37}}]
