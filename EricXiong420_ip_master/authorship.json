[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"T | 0 | bring back snakes","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"E | 0 | big time bomb | today | tomorrow","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"D | 1 | finish cs2103 | 29 Aug","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"EricXiong420":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"    private String deadline;","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"        super(taskName);","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"     * Converts Deadline object to its string representation when stored in the hard drive.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"     * @return String representation when stored in text file on user\u0027s hard drive","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    public String toData() {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"        return \"D\" + \" | \" + super.toData() + \" | \" + deadline;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), deadline);","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":22}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"    private String startTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"    private String endTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public Event(String taskName, String startTime, String endTime) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(taskName);","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"     * Converts Event object to its string representation when stored in the hard drive.","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"     * @return String representation when stored in text file on user\u0027s hard drive","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"    public String toData() {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"        return \"E\" + \" | \" + super.toData() + \" | \" + startTime + \" | \" + endTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), startTime, endTime);","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":24}},{"path":"src/main/java/Hachi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"import exceptions.*;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"import java.io.File;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"public class Hachi {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    private static String dataPath \u003d \"./data\";","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"    private static String taskPath \u003d \"./data/tasks.txt\";","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"    public static void main(String[] args) throws HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"        String name \u003d \"Hachi\";","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"        // creating the directory and file to store the tasks in","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"        File dataDirectory \u003d new File(dataPath);","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"        File taskFile \u003d new File(taskPath);","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"        if (!taskFile.exists()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"                return;","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"EricXiong420"},"content":"        // Obtaining tasks from stored file","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"EricXiong420"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"EricXiong420"},"content":"            Scanner fileScanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"EricXiong420"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"EricXiong420"},"content":"                tasks.add(txtToTask(fileScanner.nextLine()));","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"EricXiong420"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"EricXiong420"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"EricXiong420"},"content":"            return;","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"EricXiong420"},"content":"        // Printing opening line","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"EricXiong420"},"content":"        line();","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"EricXiong420"},"content":"        System.out.println(\"Hello! I\u0027m \" + name + \"\\nWhat can I do for you?\");","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"EricXiong420"},"content":"        line();","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"EricXiong420"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":54,"author":{"gitId":"EricXiong420"},"content":"        // repeats until user types bye, which quits the program","lastModifiedDate":"2023-08-25"},{"lineNumber":55,"author":{"gitId":"EricXiong420"},"content":"        while (true) {","lastModifiedDate":"2023-08-25"},{"lineNumber":56,"author":{"gitId":"EricXiong420"},"content":"            // getting command and argument separately","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"EricXiong420"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-25"},{"lineNumber":58,"author":{"gitId":"EricXiong420"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"EricXiong420"},"content":"            String command \u003d words[0];","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"EricXiong420"},"content":"            String[] arguments \u003d Arrays.copyOfRange(words, 1, words.length);","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"EricXiong420"},"content":"            line();","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"EricXiong420"},"content":"            try {","lastModifiedDate":"2023-08-25"},{"lineNumber":64,"author":{"gitId":"EricXiong420"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"EricXiong420"},"content":"                    if (arguments.length \u003e 0) {","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"EricXiong420"},"content":"                        throw new TooManyArgumentsException(\"bye\", 0, arguments.length);","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"EricXiong420"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"EricXiong420"},"content":"                    break;","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"EricXiong420"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"EricXiong420"},"content":"                    if (arguments.length \u003e 0) {","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"EricXiong420"},"content":"                        throw new TooManyArgumentsException(\"list\", 0, arguments.length);","lastModifiedDate":"2023-08-25"},{"lineNumber":73,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":74,"author":{"gitId":"EricXiong420"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"EricXiong420"},"content":"                        int num \u003d i + 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":76,"author":{"gitId":"EricXiong420"},"content":"                        System.out.println(num + \". \" + tasks.get(i));","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":78,"author":{"gitId":"EricXiong420"},"content":"                } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":79,"author":{"gitId":"EricXiong420"},"content":"                    if (arguments.length \u003e 1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":80,"author":{"gitId":"EricXiong420"},"content":"                        throw new TooManyArgumentsException(\"mark\", 1, arguments.length);","lastModifiedDate":"2023-08-25"},{"lineNumber":81,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":82,"author":{"gitId":"EricXiong420"},"content":"                    if (arguments.length \u003c 1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":83,"author":{"gitId":"EricXiong420"},"content":"                        throw new EmptyNumberException(\"mark\");","lastModifiedDate":"2023-08-25"},{"lineNumber":84,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":85,"author":{"gitId":"EricXiong420"},"content":"                    try {","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"EricXiong420"},"content":"                        int number \u003d Integer.parseInt(arguments[0]);","lastModifiedDate":"2023-08-25"},{"lineNumber":87,"author":{"gitId":"EricXiong420"},"content":"                        int i \u003d number - 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":88,"author":{"gitId":"EricXiong420"},"content":"                        if (number \u003e tasks.size()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":89,"author":{"gitId":"EricXiong420"},"content":"                            throw new NumberOutOfBoundsException(tasks.size());","lastModifiedDate":"2023-08-25"},{"lineNumber":90,"author":{"gitId":"EricXiong420"},"content":"                        }","lastModifiedDate":"2023-08-25"},{"lineNumber":91,"author":{"gitId":"EricXiong420"},"content":"                        tasks.get(i).mark();","lastModifiedDate":"2023-08-25"},{"lineNumber":92,"author":{"gitId":"EricXiong420"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done\");","lastModifiedDate":"2023-08-25"},{"lineNumber":93,"author":{"gitId":"EricXiong420"},"content":"                        System.out.println(\"   \" + tasks.get(i));","lastModifiedDate":"2023-08-25"},{"lineNumber":94,"author":{"gitId":"EricXiong420"},"content":"                        updateTaskFile(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"EricXiong420"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":96,"author":{"gitId":"EricXiong420"},"content":"                        throw new InvalidArgumentException(\"mark\");","lastModifiedDate":"2023-08-25"},{"lineNumber":97,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":98,"author":{"gitId":"EricXiong420"},"content":"                } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":99,"author":{"gitId":"EricXiong420"},"content":"                    if (arguments.length \u003e 1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":100,"author":{"gitId":"EricXiong420"},"content":"                        throw new TooManyArgumentsException(\"unmark\", 1, arguments.length);","lastModifiedDate":"2023-08-25"},{"lineNumber":101,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":102,"author":{"gitId":"EricXiong420"},"content":"                    if (arguments.length \u003c 1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":103,"author":{"gitId":"EricXiong420"},"content":"                        throw new EmptyNumberException(\"unmark\");","lastModifiedDate":"2023-08-25"},{"lineNumber":104,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":105,"author":{"gitId":"EricXiong420"},"content":"                    try {","lastModifiedDate":"2023-08-25"},{"lineNumber":106,"author":{"gitId":"EricXiong420"},"content":"                        int number \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-08-25"},{"lineNumber":107,"author":{"gitId":"EricXiong420"},"content":"                        int i \u003d number - 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":108,"author":{"gitId":"EricXiong420"},"content":"                        if (number \u003e tasks.size()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":109,"author":{"gitId":"EricXiong420"},"content":"                            throw new NumberOutOfBoundsException(tasks.size());","lastModifiedDate":"2023-08-25"},{"lineNumber":110,"author":{"gitId":"EricXiong420"},"content":"                        }","lastModifiedDate":"2023-08-25"},{"lineNumber":111,"author":{"gitId":"EricXiong420"},"content":"                        tasks.get(i).unmark();","lastModifiedDate":"2023-08-25"},{"lineNumber":112,"author":{"gitId":"EricXiong420"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-25"},{"lineNumber":113,"author":{"gitId":"EricXiong420"},"content":"                        System.out.println(\"   \" + tasks.get(i));","lastModifiedDate":"2023-08-25"},{"lineNumber":114,"author":{"gitId":"EricXiong420"},"content":"                        updateTaskFile(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"EricXiong420"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":116,"author":{"gitId":"EricXiong420"},"content":"                        System.out.println(\"Invalid argument for command \\\"unmark\\\"\");","lastModifiedDate":"2023-08-25"},{"lineNumber":117,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":118,"author":{"gitId":"EricXiong420"},"content":"                } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":119,"author":{"gitId":"EricXiong420"},"content":"                    if (arguments.length \u003e 1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":120,"author":{"gitId":"EricXiong420"},"content":"                        throw new TooManyArgumentsException(\"delete\", 1, arguments.length);","lastModifiedDate":"2023-08-25"},{"lineNumber":121,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":122,"author":{"gitId":"EricXiong420"},"content":"                    if (arguments.length \u003c 1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":123,"author":{"gitId":"EricXiong420"},"content":"                        throw new EmptyNumberException(\"delete\");","lastModifiedDate":"2023-08-25"},{"lineNumber":124,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":125,"author":{"gitId":"EricXiong420"},"content":"                    try {","lastModifiedDate":"2023-08-25"},{"lineNumber":126,"author":{"gitId":"EricXiong420"},"content":"                        int number \u003d Integer.parseInt(arguments[0]);","lastModifiedDate":"2023-08-25"},{"lineNumber":127,"author":{"gitId":"EricXiong420"},"content":"                        int i \u003d number - 1;","lastModifiedDate":"2023-08-25"},{"lineNumber":128,"author":{"gitId":"EricXiong420"},"content":"                        if (number \u003e tasks.size()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":129,"author":{"gitId":"EricXiong420"},"content":"                            throw new NumberOutOfBoundsException(tasks.size());","lastModifiedDate":"2023-08-25"},{"lineNumber":130,"author":{"gitId":"EricXiong420"},"content":"                        }","lastModifiedDate":"2023-08-25"},{"lineNumber":131,"author":{"gitId":"EricXiong420"},"content":"                        Task t \u003d tasks.remove(i);","lastModifiedDate":"2023-08-25"},{"lineNumber":132,"author":{"gitId":"EricXiong420"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2023-08-25"},{"lineNumber":133,"author":{"gitId":"EricXiong420"},"content":"                        System.out.println(\"   \" + t);","lastModifiedDate":"2023-08-25"},{"lineNumber":134,"author":{"gitId":"EricXiong420"},"content":"                        System.out.println(String.format(\"Now you have %d tasks in the list.\", tasks.size()));","lastModifiedDate":"2023-08-25"},{"lineNumber":135,"author":{"gitId":"EricXiong420"},"content":"                        updateTaskFile(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"EricXiong420"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":137,"author":{"gitId":"EricXiong420"},"content":"                        throw new InvalidArgumentException(\"delete\");","lastModifiedDate":"2023-08-25"},{"lineNumber":138,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":139,"author":{"gitId":"EricXiong420"},"content":"                } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":140,"author":{"gitId":"EricXiong420"},"content":"                    if (arguments.length \u003c 1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":141,"author":{"gitId":"EricXiong420"},"content":"                        throw new EmptyTaskException(\"todo\");","lastModifiedDate":"2023-08-25"},{"lineNumber":142,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":143,"author":{"gitId":"EricXiong420"},"content":"                    String todoTask \u003d String.join(\" \", arguments);","lastModifiedDate":"2023-08-25"},{"lineNumber":144,"author":{"gitId":"EricXiong420"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-25"},{"lineNumber":145,"author":{"gitId":"EricXiong420"},"content":"                    Todo td \u003d new Todo(todoTask);","lastModifiedDate":"2023-08-25"},{"lineNumber":146,"author":{"gitId":"EricXiong420"},"content":"                    tasks.add(td);","lastModifiedDate":"2023-08-25"},{"lineNumber":147,"author":{"gitId":"EricXiong420"},"content":"                    System.out.println(\"   \" + td);","lastModifiedDate":"2023-08-25"},{"lineNumber":148,"author":{"gitId":"EricXiong420"},"content":"                    System.out.println(String.format(\"Now you have %d tasks in the list.\", tasks.size()));","lastModifiedDate":"2023-08-25"},{"lineNumber":149,"author":{"gitId":"EricXiong420"},"content":"                    updateTaskFile(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":150,"author":{"gitId":"EricXiong420"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":151,"author":{"gitId":"EricXiong420"},"content":"                    if (arguments.length \u003c 1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":152,"author":{"gitId":"EricXiong420"},"content":"                        throw new EmptyTaskException(\"deadline\");","lastModifiedDate":"2023-08-25"},{"lineNumber":153,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":154,"author":{"gitId":"EricXiong420"},"content":"                    int byIndex \u003d -1;","lastModifiedDate":"2023-08-25"},{"lineNumber":155,"author":{"gitId":"EricXiong420"},"content":"                    for (int i \u003d 0; i \u003c arguments.length; i++) {","lastModifiedDate":"2023-08-25"},{"lineNumber":156,"author":{"gitId":"EricXiong420"},"content":"                        if (arguments[i].equals(\"/by\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":157,"author":{"gitId":"EricXiong420"},"content":"                            byIndex \u003d i;","lastModifiedDate":"2023-08-25"},{"lineNumber":158,"author":{"gitId":"EricXiong420"},"content":"                            break;","lastModifiedDate":"2023-08-25"},{"lineNumber":159,"author":{"gitId":"EricXiong420"},"content":"                        }","lastModifiedDate":"2023-08-25"},{"lineNumber":160,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":161,"author":{"gitId":"EricXiong420"},"content":"                    if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":162,"author":{"gitId":"EricXiong420"},"content":"                        throw new NoDeadlineException();","lastModifiedDate":"2023-08-25"},{"lineNumber":163,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":164,"author":{"gitId":"EricXiong420"},"content":"                    if (byIndex \u003d\u003d arguments.length - 1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":165,"author":{"gitId":"EricXiong420"},"content":"                        throw new EmptyDeadlineException(\"deadline\");","lastModifiedDate":"2023-08-25"},{"lineNumber":166,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":167,"author":{"gitId":"EricXiong420"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-25"},{"lineNumber":168,"author":{"gitId":"EricXiong420"},"content":"                    String deadlineTask \u003d String.join(\" \",","lastModifiedDate":"2023-08-25"},{"lineNumber":169,"author":{"gitId":"EricXiong420"},"content":"                            Arrays.copyOfRange(arguments, 0, byIndex));","lastModifiedDate":"2023-08-25"},{"lineNumber":170,"author":{"gitId":"EricXiong420"},"content":"                    String deadlineDate \u003d String.join(\" \",","lastModifiedDate":"2023-08-25"},{"lineNumber":171,"author":{"gitId":"EricXiong420"},"content":"                            Arrays.copyOfRange(arguments, byIndex + 1, arguments.length));","lastModifiedDate":"2023-08-25"},{"lineNumber":172,"author":{"gitId":"EricXiong420"},"content":"                    Deadline dl \u003d new Deadline(deadlineTask, deadlineDate);","lastModifiedDate":"2023-08-25"},{"lineNumber":173,"author":{"gitId":"EricXiong420"},"content":"                    tasks.add(dl);","lastModifiedDate":"2023-08-25"},{"lineNumber":174,"author":{"gitId":"EricXiong420"},"content":"                    System.out.println(\"   \" + dl);","lastModifiedDate":"2023-08-25"},{"lineNumber":175,"author":{"gitId":"EricXiong420"},"content":"                    System.out.println(String.format(\"Now you have %d tasks in the list.\", tasks.size()));","lastModifiedDate":"2023-08-25"},{"lineNumber":176,"author":{"gitId":"EricXiong420"},"content":"                    updateTaskFile(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"EricXiong420"},"content":"                } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":178,"author":{"gitId":"EricXiong420"},"content":"                    if (arguments.length \u003c 1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":179,"author":{"gitId":"EricXiong420"},"content":"                        throw new EmptyTaskException(\"event\");","lastModifiedDate":"2023-08-25"},{"lineNumber":180,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":181,"author":{"gitId":"EricXiong420"},"content":"                    int fromIndex \u003d -1;","lastModifiedDate":"2023-08-25"},{"lineNumber":182,"author":{"gitId":"EricXiong420"},"content":"                    int toIndex \u003d -1;","lastModifiedDate":"2023-08-25"},{"lineNumber":183,"author":{"gitId":"EricXiong420"},"content":"                    for (int i \u003d 0; i \u003c arguments.length; i++) {","lastModifiedDate":"2023-08-25"},{"lineNumber":184,"author":{"gitId":"EricXiong420"},"content":"                        if (arguments[i].equals(\"/from\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":185,"author":{"gitId":"EricXiong420"},"content":"                            fromIndex \u003d i;","lastModifiedDate":"2023-08-25"},{"lineNumber":186,"author":{"gitId":"EricXiong420"},"content":"                        } else if (arguments[i].equals(\"/to\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":187,"author":{"gitId":"EricXiong420"},"content":"                            toIndex \u003d i;","lastModifiedDate":"2023-08-25"},{"lineNumber":188,"author":{"gitId":"EricXiong420"},"content":"                        }","lastModifiedDate":"2023-08-25"},{"lineNumber":189,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":190,"author":{"gitId":"EricXiong420"},"content":"                    if (fromIndex \u003d\u003d -1 \u0026\u0026 toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":191,"author":{"gitId":"EricXiong420"},"content":"                        throw new EventDateException(\"/from and /to\");","lastModifiedDate":"2023-08-25"},{"lineNumber":192,"author":{"gitId":"EricXiong420"},"content":"                    } else if (toIndex \u003d\u003d -1){","lastModifiedDate":"2023-08-25"},{"lineNumber":193,"author":{"gitId":"EricXiong420"},"content":"                        throw new EventDateException(\"/to\");","lastModifiedDate":"2023-08-25"},{"lineNumber":194,"author":{"gitId":"EricXiong420"},"content":"                    } else if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":195,"author":{"gitId":"EricXiong420"},"content":"                        throw new EventDateException(\"/from\");","lastModifiedDate":"2023-08-25"},{"lineNumber":196,"author":{"gitId":"EricXiong420"},"content":"                    } else {","lastModifiedDate":"2023-08-25"},{"lineNumber":197,"author":{"gitId":"EricXiong420"},"content":"                        String eventTask \u003d String.join(\" \",","lastModifiedDate":"2023-08-25"},{"lineNumber":198,"author":{"gitId":"EricXiong420"},"content":"                                Arrays.copyOfRange(arguments, 0, fromIndex));","lastModifiedDate":"2023-08-25"},{"lineNumber":199,"author":{"gitId":"EricXiong420"},"content":"                        String eventStartDate \u003d String.join(\" \",","lastModifiedDate":"2023-08-25"},{"lineNumber":200,"author":{"gitId":"EricXiong420"},"content":"                                Arrays.copyOfRange(arguments, fromIndex + 1, toIndex));","lastModifiedDate":"2023-08-25"},{"lineNumber":201,"author":{"gitId":"EricXiong420"},"content":"                        String eventEndDate \u003d String.join(\" \",","lastModifiedDate":"2023-08-25"},{"lineNumber":202,"author":{"gitId":"EricXiong420"},"content":"                                Arrays.copyOfRange(arguments, toIndex + 1, arguments.length));","lastModifiedDate":"2023-08-25"},{"lineNumber":203,"author":{"gitId":"EricXiong420"},"content":"                        if (eventTask.equals(\"\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":204,"author":{"gitId":"EricXiong420"},"content":"                            throw new EmptyTaskException(\"event\");","lastModifiedDate":"2023-08-25"},{"lineNumber":205,"author":{"gitId":"EricXiong420"},"content":"                        } else if (eventStartDate.equals(\"\") \u0026\u0026 eventEndDate.equals(\"\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":206,"author":{"gitId":"EricXiong420"},"content":"                            throw new EventDateException(\"start date and end date\");","lastModifiedDate":"2023-08-25"},{"lineNumber":207,"author":{"gitId":"EricXiong420"},"content":"                        } else if (eventEndDate.equals(\"\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":208,"author":{"gitId":"EricXiong420"},"content":"                            throw new EventDateException(\"end date\");","lastModifiedDate":"2023-08-25"},{"lineNumber":209,"author":{"gitId":"EricXiong420"},"content":"                        } else if (eventStartDate.equals(\"\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":210,"author":{"gitId":"EricXiong420"},"content":"                            throw new EventDateException(\"start date\");","lastModifiedDate":"2023-08-25"},{"lineNumber":211,"author":{"gitId":"EricXiong420"},"content":"                        }","lastModifiedDate":"2023-08-25"},{"lineNumber":212,"author":{"gitId":"EricXiong420"},"content":"                        Event ev \u003d new Event(eventTask, eventStartDate, eventEndDate);","lastModifiedDate":"2023-08-25"},{"lineNumber":213,"author":{"gitId":"EricXiong420"},"content":"                        tasks.add(ev);","lastModifiedDate":"2023-08-25"},{"lineNumber":214,"author":{"gitId":"EricXiong420"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-25"},{"lineNumber":215,"author":{"gitId":"EricXiong420"},"content":"                        System.out.println(\"   \" + ev);","lastModifiedDate":"2023-08-25"},{"lineNumber":216,"author":{"gitId":"EricXiong420"},"content":"                        System.out.println(String.format(\"Now you have %d tasks in the list.\", tasks.size()));","lastModifiedDate":"2023-08-25"},{"lineNumber":217,"author":{"gitId":"EricXiong420"},"content":"                        updateTaskFile(tasks);","lastModifiedDate":"2023-08-26"},{"lineNumber":218,"author":{"gitId":"EricXiong420"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":219,"author":{"gitId":"EricXiong420"},"content":"                } else {","lastModifiedDate":"2023-08-25"},{"lineNumber":220,"author":{"gitId":"EricXiong420"},"content":"                    throw new InvalidCommandException(command);","lastModifiedDate":"2023-08-25"},{"lineNumber":221,"author":{"gitId":"EricXiong420"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":222,"author":{"gitId":"EricXiong420"},"content":"            } catch (HachiException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":223,"author":{"gitId":"EricXiong420"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-25"},{"lineNumber":224,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":225,"author":{"gitId":"EricXiong420"},"content":"            line();","lastModifiedDate":"2023-08-25"},{"lineNumber":226,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":227,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":228,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":230,"author":{"gitId":"EricXiong420"},"content":"    private static void appendToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":231,"author":{"gitId":"EricXiong420"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-08-26"},{"lineNumber":232,"author":{"gitId":"EricXiong420"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-08-26"},{"lineNumber":233,"author":{"gitId":"EricXiong420"},"content":"        fw.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":234,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":235,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":236,"author":{"gitId":"EricXiong420"},"content":"    private static void updateTaskFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":237,"author":{"gitId":"EricXiong420"},"content":"        // clear file first","lastModifiedDate":"2023-08-26"},{"lineNumber":238,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":239,"author":{"gitId":"EricXiong420"},"content":"            new FileWriter(taskPath).close();","lastModifiedDate":"2023-08-26"},{"lineNumber":240,"author":{"gitId":"EricXiong420"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":241,"author":{"gitId":"EricXiong420"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-26"},{"lineNumber":242,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":243,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":244,"author":{"gitId":"EricXiong420"},"content":"        // add every task in current task list","lastModifiedDate":"2023-08-26"},{"lineNumber":245,"author":{"gitId":"EricXiong420"},"content":"        tasks.forEach(task -\u003e {","lastModifiedDate":"2023-08-26"},{"lineNumber":246,"author":{"gitId":"EricXiong420"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":247,"author":{"gitId":"EricXiong420"},"content":"                appendToFile(taskPath, task.toData() + \"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":248,"author":{"gitId":"EricXiong420"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":249,"author":{"gitId":"EricXiong420"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-08-26"},{"lineNumber":250,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":251,"author":{"gitId":"EricXiong420"},"content":"        });","lastModifiedDate":"2023-08-26"},{"lineNumber":252,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":253,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":254,"author":{"gitId":"EricXiong420"},"content":"    private static Task txtToTask(String txt) {","lastModifiedDate":"2023-08-26"},{"lineNumber":255,"author":{"gitId":"EricXiong420"},"content":"        String[] s \u003d txt.split(\" \\\\| \"); // need to escape | character as it means something in regex","lastModifiedDate":"2023-08-26"},{"lineNumber":256,"author":{"gitId":"EricXiong420"},"content":"        Task temp \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":257,"author":{"gitId":"EricXiong420"},"content":"        // set Task to the respective task type","lastModifiedDate":"2023-08-26"},{"lineNumber":258,"author":{"gitId":"EricXiong420"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":259,"author":{"gitId":"EricXiong420"},"content":"            if (s[0].equals(\"T\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":260,"author":{"gitId":"EricXiong420"},"content":"                temp \u003d new Todo(s[2]);","lastModifiedDate":"2023-08-26"},{"lineNumber":261,"author":{"gitId":"EricXiong420"},"content":"            } else if (s[0].equals(\"D\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":262,"author":{"gitId":"EricXiong420"},"content":"                temp \u003d new Deadline(s[2], s[3]);","lastModifiedDate":"2023-08-26"},{"lineNumber":263,"author":{"gitId":"EricXiong420"},"content":"            } else if (s[0].equals(\"E\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":264,"author":{"gitId":"EricXiong420"},"content":"                temp \u003d new Event(s[2], s[3], s[4]);","lastModifiedDate":"2023-08-26"},{"lineNumber":265,"author":{"gitId":"EricXiong420"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":266,"author":{"gitId":"EricXiong420"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":267,"author":{"gitId":"EricXiong420"},"content":"            System.out.println(\"Task stored in the wrong format! Please check the file at \u0027data/tasks.txt\u0027\");","lastModifiedDate":"2023-08-26"},{"lineNumber":268,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":269,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":270,"author":{"gitId":"EricXiong420"},"content":"        // mark task based on \u00270\u0027 or \u00271\u0027 in the file","lastModifiedDate":"2023-08-26"},{"lineNumber":271,"author":{"gitId":"EricXiong420"},"content":"        if (s[1].equals(\"1\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":272,"author":{"gitId":"EricXiong420"},"content":"            temp.mark();","lastModifiedDate":"2023-08-26"},{"lineNumber":273,"author":{"gitId":"EricXiong420"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":274,"author":{"gitId":"EricXiong420"},"content":"            temp.unmark();","lastModifiedDate":"2023-08-26"},{"lineNumber":275,"author":{"gitId":"EricXiong420"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":276,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":277,"author":{"gitId":"EricXiong420"},"content":"        return temp;","lastModifiedDate":"2023-08-26"},{"lineNumber":278,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":279,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":280,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":281,"author":{"gitId":"EricXiong420"},"content":"    public static void line() {","lastModifiedDate":"2023-08-24"},{"lineNumber":282,"author":{"gitId":"EricXiong420"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-24"},{"lineNumber":283,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":284,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":285,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"EricXiong420":285}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"public class Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"    private boolean completed \u003d false;","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"    private String taskName \u003d \"\";","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"    public void mark() {","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"     * Converts Task object to its string representation when stored in the hard drive.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"     * @return String representation when stored in text file on user\u0027s hard drive","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"EricXiong420"},"content":"    public String toData() {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"        return (completed ? \"1\" : \"0\") + \" | \" + taskName;","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"EricXiong420"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"EricXiong420"},"content":"        String checkbox \u003d \"[\" + (completed ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"EricXiong420"},"content":"        return checkbox + \" \" + taskName;","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":31}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"        super(taskName);","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"     * Converts Todo object to its string representation when stored in the hard drive.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"EricXiong420"},"content":"     * @return String representation when stored in text file on user\u0027s hard drive","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"EricXiong420"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"EricXiong420"},"content":"    public String toData() {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"EricXiong420"},"content":"        return \"T\" + \" | \" + super.toData();","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"EricXiong420"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"EricXiong420"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"EricXiong420"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":21}},{"path":"src/main/java/exceptions/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class EmptyDeadlineException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public EmptyDeadlineException(String task) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! The /by of a %s cannot be empty.\", task));","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/EmptyNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class EmptyNumberException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public EmptyNumberException(String check) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! Please indicate which task you wish to %s\", check));","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class EmptyTaskException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public EmptyTaskException(String task) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! The description of a %s cannot be empty.\", task));","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/EventDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class EventDateException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public EventDateException(String missing) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! Missing %s. Please input using this format: \" +","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"                        \"\\\"event \u003cdescription\u003e /from \u003cstart date\u003e /to \u003cend date\u003e\\\"\", missing));","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":8}},{"path":"src/main/java/exceptions/HachiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class HachiException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public HachiException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class InvalidArgumentException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public InvalidArgumentException(String cmd) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"Invalid argument for command \\\"%s\\\"\", cmd));","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class InvalidCommandException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public InvalidCommandException(String cmd) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what \\\"%s\\\" means :-(\", cmd));","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/NoDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class NoDeadlineException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public NoDeadlineException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(\"☹ OOPS!!! Missing deadline, please input using this format:\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"                \" \\\"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":8}},{"path":"src/main/java/exceptions/NumberOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class NumberOutOfBoundsException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public NumberOutOfBoundsException(int num) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! Task number is out of bounds. You only have %d tasks currently.\", num));","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":7}},{"path":"src/main/java/exceptions/TooManyArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"public class TooManyArgumentsException extends HachiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"    public TooManyArgumentsException(String cmd, int expected, int actual) {","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"        super(String.format(\"☹ OOPS!!! Expected %d arguments for command \\\"%s\\\", instead got %d\",","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"                expected, cmd, actual));","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EricXiong420"},"content":"todo clean kitchen","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"EricXiong420"},"content":"deadline submit report /by Dec 9th","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"EricXiong420"},"content":"event santa claus /from Dec 25th /to when he leaves","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"EricXiong420"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"EricXiong420"},"content":"mark 2","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"EricXiong420"},"content":"mark 3","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"EricXiong420"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"EricXiong420"},"content":"unmark 3","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"EricXiong420"},"content":"list","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"EricXiong420":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"EricXiong420"},"content":"java -classpath ../bin Hachi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EricXiong420":1,"-":37}}]
