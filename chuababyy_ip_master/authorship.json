[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chuababyy":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"javafx {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"    version \u003d \u002717\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chuababyy":25,"-":43}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import duke.components.FileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"import duke.components.Parser;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import duke.components.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"import duke.exception.FileCorruptedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"import duke.exception.FileLoadException;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"import duke.exception.FileNoExistingTasksException;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":" * Represents the main class where the chatbot will run.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"    private static String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"    private TaskList fullList;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"    private final FileStorage fileStorage;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"     * Constructs a chatBot which will load any existing tasks stored in the filePath","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"     * specified.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"    public Duke() {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"        this.fileStorage \u003d new FileStorage(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"            this.fullList \u003d new TaskList(fileStorage.loadFiles());","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"            this.parser \u003d new Parser(fileStorage, fullList, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"        } catch (FileCorruptedException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"            System.out.println(\"Saved tasks is corrupted. Please start adding new tasks\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"            this.fullList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"            this.parser \u003d new Parser(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"        } catch (FileNoExistingTasksException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"            System.out.println(\"No saved tasks! Please start adding new tasks\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"            this.fullList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"            this.parser \u003d new Parser(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"        } catch (FileLoadException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"            System.out.println(\"Error when reading saved tasks. Please start adding new tasks\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"            this.fullList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"            this.parser \u003d new Parser(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"        return parser.createTaskAction(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"    public String getWelcome() {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"        return ui.showWelcome();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chuababyy":58,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":" * Class to launch the Atlas program.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"     * Constructs a new Atlas instance and runs it","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"     * @param args Command-line arguments passed in at startup","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"chuababyy":16}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"            fxmlLoader.\u003cduke.ui.MainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"chuababyy":32}},{"path":"src/main/java/duke/components/FileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.components;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"import duke.exception.FileCorruptedException;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"import duke.exception.FileLoadException;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"import duke.task.ToDos;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":" * Represents the class which handles reading and writing tasks to a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"public class FileStorage {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"     * Constructs a FileStorage object with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"     * @param filePath The path to the file used for storing tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"    public FileStorage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"     * Adds all items in the TaskList to the file in the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"        file.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"            boolean isDeleteFileSuccess \u003d file.delete();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"            if (!isDeleteFileSuccess) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"                System.out.println(\"Failed to delete previous save file!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"            boolean isCreateNewFileSuccess \u003d file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"            if (!isCreateNewFileSuccess) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"                System.out.println(\"Failed to create save file!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"                BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath, true));","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"                for (Task task : taskList.getTask()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"                    writer.append(task.toFileString()).append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"                writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"            System.out.println(\"Unable to save file\");","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"     * Returns true if the Task is completed, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"     * @param input The input representing the task\u0027s status.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"chuababyy"},"content":"    public boolean isTaskDone(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"chuababyy"},"content":"        if (input.equals(\"T\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"chuababyy"},"content":"            return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"chuababyy"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"chuababyy"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"chuababyy"},"content":"     * Returns a LocalDateTime object by converting the String provided.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"chuababyy"},"content":"     * @param date The date string to be converted.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"chuababyy"},"content":"     * @return A LocalDateTime object representing the date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"chuababyy"},"content":"    public LocalDateTime setDate(String date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"chuababyy"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"chuababyy"},"content":"            String[] dateParts \u003d date.split(\"-\");","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"chuababyy"},"content":"            String[] timePart \u003d dateParts[2].split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"chuababyy"},"content":"            int day \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"chuababyy"},"content":"            int month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"chuababyy"},"content":"            int year \u003d Integer.parseInt(timePart[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"chuababyy"},"content":"            int timeHour \u003d Integer.parseInt(timePart[1].substring(0, 2));","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"chuababyy"},"content":"            int timeMin \u003d Integer.parseInt(timePart[1].substring(2, 4));","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"chuababyy"},"content":"            return LocalDateTime.of(year, month, day, timeHour, timeMin);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"chuababyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"chuababyy"},"content":"            System.out.println(\"Wrong format for the date and/or time\");","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"chuababyy"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"chuababyy"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"chuababyy"},"content":"            System.out.println(\"Wrong format for the date and/or time\");","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"chuababyy"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"chuababyy"},"content":"     * Loads tasks from a file and returns them as a list.","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"chuababyy"},"content":"     * @return An ArrayList of Task objects creating from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"chuababyy"},"content":"     * @throws FileLoadException If there is any error loading tasks from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"chuababyy"},"content":"    public ArrayList\u003cTask\u003e loadFiles() throws FileLoadException {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"chuababyy"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"chuababyy"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"chuababyy"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"chuababyy"},"content":"            ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"chuababyy"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"chuababyy"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"chuababyy"},"content":"                String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"chuababyy"},"content":"                if (split.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"chuababyy"},"content":"                    throw new FileCorruptedException(\"Invalid record saved\");","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"chuababyy"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"chuababyy"},"content":"                boolean isDone \u003d isTaskDone(split[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"chuababyy"},"content":"                switch (split[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"chuababyy"},"content":"                case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"chuababyy"},"content":"                    if (split.length \u003e 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"chuababyy"},"content":"                        throw new FileCorruptedException(\"Invalid record saved\");","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"chuababyy"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"chuababyy"},"content":"                    ToDos temp \u003d new ToDos(split[2].trim(), isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"chuababyy"},"content":"                    tempList.add(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"chuababyy"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"chuababyy"},"content":"                case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"chuababyy"},"content":"                    if (split.length \u003e 4) {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"chuababyy"},"content":"                        throw new FileCorruptedException(\"Invalid record saved\");","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"chuababyy"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"chuababyy"},"content":"                    tempList.add(new Deadline(split[2], setDate(split[3]), isDone));","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"chuababyy"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"chuababyy"},"content":"                case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"chuababyy"},"content":"                    if (split.length \u003e 5) {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"chuababyy"},"content":"                        throw new FileCorruptedException(\"Invalid record saved\");","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"chuababyy"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"chuababyy"},"content":"                    tempList.add(new Event(split[2], setDate(split[3]), setDate(split[4]), isDone));","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"chuababyy"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"chuababyy"},"content":"                default:","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"chuababyy"},"content":"                    System.out.println(\"Not a valid input: \" + line);","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"chuababyy"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"chuababyy"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"chuababyy"},"content":"            System.out.println(tempList);","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"chuababyy"},"content":"            return tempList;","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"chuababyy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"chuababyy"},"content":"            System.out.println(\"There are no existing tasks, please use the commands to add new tasks!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"chuababyy"},"content":"            File newFile \u003d new File(filePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"chuababyy"},"content":"            newFile.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"chuababyy"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chuababyy":158}},{"path":"src/main/java/duke/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.components;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"import duke.task.ToDos;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":" * Represents the logic used to handle user inputs, and parse user","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":" * input as commands to the chatBot.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"    private FileStorage fileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"    private TaskList fullList;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"     * Constructs a Parser instance with the given file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"     * @param filepath The path to the file used for storing tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"    public Parser(String filepath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"        this.fileStorage \u003d new FileStorage(filepath);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"        this.fullList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"     * Constructs a Parser instance with the specified parameters.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"     * @param fileStorage The FileStorage object to handle file operations.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"     * @param fullList The TaskList object to store ttasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"     * @param ui The Ui object to display outputs to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"    public Parser(FileStorage fileStorage, TaskList fullList, Ui ui) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"        this.fileStorage \u003d fileStorage;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"        this.fullList \u003d fullList;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"     * Represents the various command types that can be used in the chatBot application.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"     * These command types define the actions the chatBot can perform.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"    public enum CommandType {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"        TODO, DEADLINE, EVENT, MARK, UNMARK,","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"        DELETE, LIST, BYE, UNKNOWN, EMPTY, FIND, MASS","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"     * Returns a CommandType based on the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"     * @param input User input to be parsed.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"     * @return The CommandType enum representing the parsed user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"    public CommandType parseCommand(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"            return CommandType.valueOf(input.toUpperCase());","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"            return CommandType.EMPTY;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"     * Converts a date string to a LocalDateTime object.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"chuababyy"},"content":"     * @param date The date string in the specified format.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"chuababyy"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"chuababyy"},"content":"    public LocalDateTime setDate(String date) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"chuababyy"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"chuababyy"},"content":"            return LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"chuababyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"chuababyy"},"content":"            System.out.println(\"Invalid date input. Reverting to current date and time\");","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"chuababyy"},"content":"            return LocalDateTime.now();","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"chuababyy"},"content":"     * Processes user input to create and execute task-related actions.","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"chuababyy"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"chuababyy"},"content":"     * @return {@code true} if the application should continue running. {@code false} if it should exit.","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"chuababyy"},"content":"    public String createTaskAction(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"chuababyy"},"content":"        String[] userInputParts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"chuababyy"},"content":"        String commandUser \u003d userInputParts[0];","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"chuababyy"},"content":"        CommandType command \u003d parseCommand(commandUser);","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"chuababyy"},"content":"        switch (command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"chuababyy"},"content":"        case LIST:","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"chuababyy"},"content":"            assert command !\u003d CommandType.LIST : \"Command is not LIST\";","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"chuababyy"},"content":"            if (userInputParts.length \u003e 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"chuababyy"},"content":"                return ui.showInvalidMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"chuababyy"},"content":"            return ui.showList(fullList);","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"chuababyy"},"content":"        case MARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"chuababyy"},"content":"            assert command !\u003d CommandType.MARK : \"Command is not MARK\";","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"chuababyy"},"content":"            String[] splitIndexMark \u003d input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"chuababyy"},"content":"            if (splitIndexMark.length \u003c\u003d 1 || splitIndexMark.length \u003e 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"chuababyy"},"content":"                return ui.showInvalidMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"chuababyy"},"content":"            int index \u003d Integer.parseInt(splitIndexMark[1]);","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"chuababyy"},"content":"            return fullList.markItem(index);","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"chuababyy"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"chuababyy"},"content":"            assert command !\u003d CommandType.UNMARK : \"Command is not UNMARK\";","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"chuababyy"},"content":"            String[] splitIndexUnMark \u003d input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"chuababyy"},"content":"            if (splitIndexUnMark.length \u003c\u003d 1 || splitIndexUnMark.length \u003e 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"chuababyy"},"content":"                return ui.showInvalidMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"chuababyy"},"content":"            int indexUnmark \u003d Integer.parseInt(splitIndexUnMark[1]);","lastModifiedDate":"2023-09-14"},{"lineNumber":119,"author":{"gitId":"chuababyy"},"content":"            return fullList.unMarkItem(indexUnmark);","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"chuababyy"},"content":"        case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"chuababyy"},"content":"            assert command !\u003d CommandType.TODO : \"Command is not TODO\";","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"chuababyy"},"content":"            if (userInputParts.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"chuababyy"},"content":"                return ui.showInvalidMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"chuababyy"},"content":"            ToDos toDo \u003d new ToDos(userInputParts[1].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"chuababyy"},"content":"            return fullList.addToList(toDo);","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"chuababyy"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"chuababyy"},"content":"            assert command !\u003d CommandType.DEADLINE : \"Command is not DEADLINE\";","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"chuababyy"},"content":"            String[] details \u003d userInputParts[1].split(\"/by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"chuababyy"},"content":"            String description \u003d details[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"chuababyy"},"content":"            if (details.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"chuababyy"},"content":"                return ui.showInvalidMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"chuababyy"},"content":"            LocalDateTime by \u003d setDate(details[1].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"chuababyy"},"content":"            Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"chuababyy"},"content":"            return fullList.addToList(deadline);","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"chuababyy"},"content":"        case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"chuababyy"},"content":"            assert command !\u003d CommandType.EVENT : \"Command is not EVENT\";","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"chuababyy"},"content":"            String[] det \u003d userInputParts[1].split(\"/from\");","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"chuababyy"},"content":"            if (det.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"chuababyy"},"content":"                return ui.showInvalidMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"chuababyy"},"content":"            String[] dateParts \u003d det[1].trim().split(\"/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"chuababyy"},"content":"            if (dateParts.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"chuababyy"},"content":"                return ui.showInvalidMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"chuababyy"},"content":"            String descr \u003d det[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"chuababyy"},"content":"            LocalDateTime from \u003d setDate(dateParts[0].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"chuababyy"},"content":"            LocalDateTime to \u003d setDate(dateParts[1].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"chuababyy"},"content":"            Event event \u003d new Event(descr, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"chuababyy"},"content":"            if (event.isStartBeforeEnd(from, to)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"chuababyy"},"content":"                return fullList.addToList(event);","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"chuababyy"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"chuababyy"},"content":"                return ui.showInvalidDate();","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"chuababyy"},"content":"        case DELETE:","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"chuababyy"},"content":"            assert command !\u003d CommandType.DELETE : \"Command is not DELETE\";","lastModifiedDate":"2023-09-12"},{"lineNumber":167,"author":{"gitId":"chuababyy"},"content":"            String[] split \u003d input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"chuababyy"},"content":"            if (split.length \u003c\u003d 1 || split.length \u003e 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"chuababyy"},"content":"                return ui.showInvalidMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"chuababyy"},"content":"            int ind \u003d Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"chuababyy"},"content":"            return fullList.deleteFromList(ind);","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"chuababyy"},"content":"        case FIND:","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"chuababyy"},"content":"            assert command !\u003d CommandType.FIND : \"Command is not FIND\";","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"chuababyy"},"content":"            String[] inputParts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"chuababyy"},"content":"            String keyword \u003d inputParts[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"chuababyy"},"content":"            TaskList list \u003d fullList.findTask(keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"chuababyy"},"content":"            if (list.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"chuababyy"},"content":"                return ui.showNoFind();","lastModifiedDate":"2023-09-07"},{"lineNumber":181,"author":{"gitId":"chuababyy"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"chuababyy"},"content":"                return ui.showFind(list);","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"chuababyy"},"content":"        case MASS:","lastModifiedDate":"2023-09-14"},{"lineNumber":186,"author":{"gitId":"chuababyy"},"content":"            assert command !\u003d CommandType.MASS : \"Command is not MASS\";","lastModifiedDate":"2023-09-14"},{"lineNumber":187,"author":{"gitId":"chuababyy"},"content":"            String[] inputPartsMass \u003d input.split(\" \");","lastModifiedDate":"2023-09-14"},{"lineNumber":188,"author":{"gitId":"chuababyy"},"content":"            if (inputPartsMass.length \u003c\u003d 2) {","lastModifiedDate":"2023-09-14"},{"lineNumber":189,"author":{"gitId":"chuababyy"},"content":"                return ui.showInvalidMessage();","lastModifiedDate":"2023-09-14"},{"lineNumber":190,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":191,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":192,"author":{"gitId":"chuababyy"},"content":"            String commandToBeDone \u003d inputPartsMass[1].trim();","lastModifiedDate":"2023-09-14"},{"lineNumber":193,"author":{"gitId":"chuababyy"},"content":"            boolean isDelete \u003d commandToBeDone.equals(\"delete\");","lastModifiedDate":"2023-09-14"},{"lineNumber":194,"author":{"gitId":"chuababyy"},"content":"            boolean isMark \u003d commandToBeDone.equals(\"mark\");","lastModifiedDate":"2023-09-14"},{"lineNumber":195,"author":{"gitId":"chuababyy"},"content":"            boolean isUnMark \u003d commandToBeDone.equals(\"unmark\");","lastModifiedDate":"2023-09-14"},{"lineNumber":196,"author":{"gitId":"chuababyy"},"content":"            boolean isInvalidCommand \u003d !isDelete \u0026\u0026 !isMark \u0026\u0026 !isUnMark;","lastModifiedDate":"2023-09-14"},{"lineNumber":197,"author":{"gitId":"chuababyy"},"content":"            if (isInvalidCommand) {","lastModifiedDate":"2023-09-14"},{"lineNumber":198,"author":{"gitId":"chuababyy"},"content":"                return ui.showCustomError(\"The command used after mass is not valid: \" + commandToBeDone);","lastModifiedDate":"2023-09-14"},{"lineNumber":199,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":200,"author":{"gitId":"chuababyy"},"content":"            // For testing purposes","lastModifiedDate":"2023-09-14"},{"lineNumber":201,"author":{"gitId":"chuababyy"},"content":"            for (int i \u003d 0; i \u003c inputPartsMass.length; i++) {","lastModifiedDate":"2023-09-14"},{"lineNumber":202,"author":{"gitId":"chuababyy"},"content":"                System.out.println(\"inputPartsMass \" + inputPartsMass[i]);","lastModifiedDate":"2023-09-14"},{"lineNumber":203,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":204,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":205,"author":{"gitId":"chuababyy"},"content":"            int[] indexArray \u003d new int[inputPartsMass.length - 2];","lastModifiedDate":"2023-09-14"},{"lineNumber":206,"author":{"gitId":"chuababyy"},"content":"            for (int i \u003d 2; i \u003c inputPartsMass.length; i++) {","lastModifiedDate":"2023-09-14"},{"lineNumber":207,"author":{"gitId":"chuababyy"},"content":"                int value \u003d Integer.parseInt(inputPartsMass[i].trim());","lastModifiedDate":"2023-09-14"},{"lineNumber":208,"author":{"gitId":"chuababyy"},"content":"                indexArray[i - 2] \u003d value;","lastModifiedDate":"2023-09-14"},{"lineNumber":209,"author":{"gitId":"chuababyy"},"content":"                // For testing purpose","lastModifiedDate":"2023-09-14"},{"lineNumber":210,"author":{"gitId":"chuababyy"},"content":"                System.out.println(\"inserted value: \" + value + \"indexArray: \" + indexArray[i-2]);","lastModifiedDate":"2023-09-14"},{"lineNumber":211,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":212,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":213,"author":{"gitId":"chuababyy"},"content":"            // For testing purpose","lastModifiedDate":"2023-09-14"},{"lineNumber":214,"author":{"gitId":"chuababyy"},"content":"            for (int i \u003d 0; i \u003c indexArray.length; i++) {","lastModifiedDate":"2023-09-14"},{"lineNumber":215,"author":{"gitId":"chuababyy"},"content":"                System.out.println(indexArray[i]);","lastModifiedDate":"2023-09-14"},{"lineNumber":216,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":217,"author":{"gitId":"chuababyy"},"content":"            if (isMark) {","lastModifiedDate":"2023-09-14"},{"lineNumber":218,"author":{"gitId":"chuababyy"},"content":"                return fullList.markItem(indexArray);","lastModifiedDate":"2023-09-14"},{"lineNumber":219,"author":{"gitId":"chuababyy"},"content":"            } else if (isUnMark) {","lastModifiedDate":"2023-09-14"},{"lineNumber":220,"author":{"gitId":"chuababyy"},"content":"                return fullList.unMarkItem(indexArray);","lastModifiedDate":"2023-09-14"},{"lineNumber":221,"author":{"gitId":"chuababyy"},"content":"            } else if (isDelete) {","lastModifiedDate":"2023-09-14"},{"lineNumber":222,"author":{"gitId":"chuababyy"},"content":"                return fullList.deleteFromList(indexArray);","lastModifiedDate":"2023-09-14"},{"lineNumber":223,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":224,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":225,"author":{"gitId":"chuababyy"},"content":"        case BYE:","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"chuababyy"},"content":"            assert command !\u003d CommandType.BYE : \"Command is not BYE\";","lastModifiedDate":"2023-09-12"},{"lineNumber":227,"author":{"gitId":"chuababyy"},"content":"            fileStorage.saveTasks(fullList);","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"chuababyy"},"content":"            return ui.showByeMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"chuababyy"},"content":"        case EMPTY:","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"chuababyy"},"content":"            assert command !\u003d CommandType.EMPTY : \"Command is not EMPTY\";","lastModifiedDate":"2023-09-12"},{"lineNumber":232,"author":{"gitId":"chuababyy"},"content":"            return ui.showEmptyMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"chuababyy"},"content":"        case UNKNOWN:","lastModifiedDate":"2023-09-12"},{"lineNumber":235,"author":{"gitId":"chuababyy"},"content":"            assert command !\u003d CommandType.UNKNOWN : \"Command is not UNKNOWN\";","lastModifiedDate":"2023-09-12"},{"lineNumber":236,"author":{"gitId":"chuababyy"},"content":"            return ui.showUnknownMessage();","lastModifiedDate":"2023-09-12"},{"lineNumber":237,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"chuababyy"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"chuababyy"},"content":"            return ui.showInvalidMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":240,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chuababyy":242}},{"path":"src/main/java/duke/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.components;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":" * Represents a list of Task as an ArrayList. Contains operations on the tasks in","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":" * the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"public class TaskList {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"    private static final String line \u003d \"------------------------------------\";","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"    private ArrayList\u003cTask\u003e fullList;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"     * Constructs a new TaskList by initializing a new ArrayList and","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"     * new Ui object.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"        this.fullList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"     * Constructs a new TaskList with the specified list of tasks and","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"     * initializes a new Ui object.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"     * @param fullList The list of tasks to be included in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"    public TaskList(ArrayList\u003cTask\u003e fullList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"        this.fullList \u003d fullList;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"     * Adds a specified task to the current list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"    public String addToList(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"        this.fullList.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"        return ui.showAddMessage(task, this.fullList.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"    };","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"     * Deletes a specified task from the current list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"     * @param indices The index of the task to be deleted.","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"    public String deleteFromList(int... indices) {","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"        if (indices.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"            return ui.showInvalidMessage();","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"        for (int index : indices) {","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c fullList.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"                int currSize \u003d this.fullList.size();","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"                Task item \u003d fullList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"                this.fullList.remove(item);","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"                assert this.fullList.size() \u003d\u003d currSize - 1 : \"Delete from list failed\";","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"                result.append(ui.showDeleteMessage(item, currSize - 1)).append(\u0027\\n\u0027);","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"                result.append(ui.showNoItemMessage(index)).append(\u0027\\n\u0027);","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"        return result.toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"chuababyy"},"content":"     * Marks a tasks as done from the current list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"chuababyy"},"content":"     * @param indices The array of index of the task to be marked as done.","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"chuababyy"},"content":"    public String markItem(int... indices) {","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"chuababyy"},"content":"        if (indices.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"chuababyy"},"content":"            return ui.showInvalidMessage();","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"chuababyy"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"chuababyy"},"content":"        for (int index : indices) {","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"chuababyy"},"content":"            int actualIndex \u003d index - 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"chuababyy"},"content":"            if (actualIndex \u003e\u003d 0 \u0026\u0026 actualIndex \u003c fullList.size()) {","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"chuababyy"},"content":"                Task curr \u003d fullList.get(actualIndex);","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"chuababyy"},"content":"                curr.markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"chuababyy"},"content":"                result.append(ui.showMarkMessage(curr)).append(\u0027\\n\u0027);","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"chuababyy"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"chuababyy"},"content":"                result.append(ui.showNoItemMessage(index));","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"chuababyy"},"content":"        return result.toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"chuababyy"},"content":"     * Marks a tasks as not done from the current list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"chuababyy"},"content":"     * @param indices The index of the task to be marked as not done.","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"chuababyy"},"content":"    public String unMarkItem(int... indices) {","lastModifiedDate":"2023-09-14"},{"lineNumber":101,"author":{"gitId":"chuababyy"},"content":"        if (indices.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"chuababyy"},"content":"            return ui.showInvalidMessage();","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"chuababyy"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"chuababyy"},"content":"        for (int index : indices) {","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"chuababyy"},"content":"            int actualIndex \u003d index - 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"chuababyy"},"content":"            if (actualIndex \u003e\u003d 0 \u0026\u0026 actualIndex \u003c fullList.size()) {","lastModifiedDate":"2023-09-14"},{"lineNumber":109,"author":{"gitId":"chuababyy"},"content":"                Task curr \u003d fullList.get(actualIndex);","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"chuababyy"},"content":"                curr.markNotDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"chuababyy"},"content":"                result.append(ui.showUnmarkMessage(curr)).append(\u0027\\n\u0027);","lastModifiedDate":"2023-09-14"},{"lineNumber":112,"author":{"gitId":"chuababyy"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"chuababyy"},"content":"                result.append(ui.showNoItemMessage(index));","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":115,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"chuababyy"},"content":"        return result.toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":117,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"chuababyy"},"content":"     * Returns the list of tasks in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"chuababyy"},"content":"     * @return An ArrayList containing all the current tasks in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"chuababyy"},"content":"    public ArrayList\u003cTask\u003e getTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"chuababyy"},"content":"        return this.fullList;","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"chuababyy"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"chuababyy"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"chuababyy"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"chuababyy"},"content":"        return this.fullList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"chuababyy"},"content":"     * Returns a new TaskList object with all the tasks in the current","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"chuababyy"},"content":"     * list with description that partially matches a keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"chuababyy"},"content":"     * @param keyword The keyword to match current tasks to.","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"chuababyy"},"content":"     * @return A new TaskList with all the tasks which match the keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"chuababyy"},"content":"    public TaskList findTask(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"chuababyy"},"content":"        ArrayList\u003cTask\u003e tempArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"chuababyy"},"content":"        for (Task task : fullList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"chuababyy"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"chuababyy"},"content":"                tempArray.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"chuababyy"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"chuababyy"},"content":"        return new TaskList(tempArray);","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"chuababyy"},"content":"     * Returns a formatted string representation of all the tasks in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"chuababyy"},"content":"     * @return A formatted string containing the tasks in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"chuababyy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"chuababyy"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"chuababyy"},"content":"        for (int i \u003d 0; i \u003c fullList.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"chuababyy"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"chuababyy"},"content":"            stringBuilder.append(index).append(\". \")","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"chuababyy"},"content":"                    .append(fullList.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"chuababyy"},"content":"        return line + \"\\n\" + stringBuilder.toString() + \"\\n\" + line;","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chuababyy":169}},{"path":"src/main/java/duke/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.components;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":" * Represents the class which handles user interactions and the messages","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":" * to be displayed to the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"public class Ui {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"    private final String line \u003d \"------------------------------------\";","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"    private final String chatBot \u003d \"chuababyy\";","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"    private final String commands \u003d","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"            line + \"\\n\" + \"List of commands\\n\" + \"1. todo [description]\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"                    + \"2. deadline [description] /by [deadline in DD-MM-YYYY TIME]\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"                    + \"3. event [description] /from [start date in DD-MM-YYYY TIME] \"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"                    + \"/to [end date in DD-MM-YYYY TIME]\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"                    + \"4. mark [item_number]\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"                    + \"5. unmark [item_number]\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"                    + \"6. delete [item_number]\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"                    + \"7. mass [delete/mark/unmark] [item_numbers]\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"                    + \"8. list\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"                    + \"9. bye\\n\"","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"                    + line;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"     * Constructs a Ui instance and initializes the scanner.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"    public Ui() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"     * Displays a separator line.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"    public String showLine() {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"        return line;","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"     * Displays a welcome message when the chatBot starts.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"        return (","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"                showLine() + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"                        + \"Hello! I\u0027m \" + chatBot + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"                                + \"What can I do for you?\" + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"                                        + showLine()","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"            );","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"     * Displays a message which indicates that the item to be added cannot be empty.","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"    public String showEmptyMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"        return (","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"                showLine() + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"                        + \"Item to be added cannot be empty\" + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"                                + showLine()","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"            );","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"     * Displays a message which indicates an invalid command.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"    public String showUnknownMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"        return (","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"chuababyy"},"content":"                showLine() + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"chuababyy"},"content":"                        + \"Invalid structure. Please follow the valid commands below.\\n\" + commands","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"chuababyy"},"content":"                                + showLine()","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"chuababyy"},"content":"            );","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"chuababyy"},"content":"     * Displays a message which indicates an invalid command.","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"chuababyy"},"content":"    public String showInvalidMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"chuababyy"},"content":"        return \"Invalid structure. Please follow the valid commands below.\\n\" + commands;","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"chuababyy"},"content":"     * Displays a message which indicated the item does not exist.","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"chuababyy"},"content":"    public String showNoItemMessage(int i) {","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"chuababyy"},"content":"        return showLine() + \u0027\\n\u0027 + \"No such item exists: \" + i + \u0027\\n\u0027 + showLine();","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"chuababyy"},"content":"     * Displays a goodbye message.","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"chuababyy"},"content":"    public String showByeMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"chuababyy"},"content":"        return showLine() + \u0027\\n\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"chuababyy"},"content":"                + \"Bye. Hope to see you again soon!\" + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"chuababyy"},"content":"                        + showLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"chuababyy"},"content":"     * Displays a TaskList to indicate what are the current items in the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"chuababyy"},"content":"     * @param fullList The list to be displayed.","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"chuababyy"},"content":"    public String showList(TaskList fullList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"chuababyy"},"content":"        return \"Here are the tasks in your list:\" + \u0027\\n\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"chuababyy"},"content":"                + fullList.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"chuababyy"},"content":"     * Displays a success message when the user successfully adds a task.","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"chuababyy"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"chuababyy"},"content":"     * @param size The size of the current list.","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"chuababyy"},"content":"    public String showAddMessage(Task task, int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"chuababyy"},"content":"        return showLine() + \u0027\\n\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"chuababyy"},"content":"                + \"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027 + task.toString() + \u0027\\n\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"chuababyy"},"content":"                        + \"Now you have \" + size + \" tasks in the list.\" + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"chuababyy"},"content":"                                + showLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"chuababyy"},"content":"    };","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"chuababyy"},"content":"     * Displays a success message when the user successfully deletes a task.","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"chuababyy"},"content":"     * @param task The task to be deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"chuababyy"},"content":"     * @param size The size of the current list.","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"chuababyy"},"content":"    public String showDeleteMessage(Task task, int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"chuababyy"},"content":"        return showLine() + \u0027\\n\u0027 + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"chuababyy"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"chuababyy"},"content":"                        + \"Now you have \" + size + \" tasks in the list.\" + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"chuababyy"},"content":"                                + showLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"chuababyy"},"content":"     * Displays a success message when the user successfully marks a task.","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"chuababyy"},"content":"     * @param task The task to be marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"chuababyy"},"content":"    public String showMarkMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"chuababyy"},"content":"        return showLine() + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"chuababyy"},"content":"                + \"Nice! I\u0027ve marked this task as done:\" + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"chuababyy"},"content":"                        + task.toString() + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"chuababyy"},"content":"                                + showLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"chuababyy"},"content":"     * Displays a success message when the user successfully unMarks a task.","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"chuababyy"},"content":"     * @param task The task to be unMarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"chuababyy"},"content":"    public String showUnmarkMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"chuababyy"},"content":"        return showLine() + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"chuababyy"},"content":"                + \"Ok, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"chuababyy"},"content":"                        + task.toString() + \u0027\\n\u0027","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"chuababyy"},"content":"                                + showLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"chuababyy"},"content":"     * Displays an error message when the date format is invalid.","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"chuababyy"},"content":"    public String showInvalidDate() {","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"chuababyy"},"content":"        return showLine() + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"chuababyy"},"content":"                + \"Invalid date format. Start date is after end date\" + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"chuababyy"},"content":"                        + showLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":171,"author":{"gitId":"chuababyy"},"content":"     * Displays all the tasks which have description that match a keyword.","lastModifiedDate":"2023-09-07"},{"lineNumber":172,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"chuababyy"},"content":"     * @param list The list of tasks which match.","lastModifiedDate":"2023-09-07"},{"lineNumber":174,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":175,"author":{"gitId":"chuababyy"},"content":"    public String showFind(TaskList list) {","lastModifiedDate":"2023-09-07"},{"lineNumber":176,"author":{"gitId":"chuababyy"},"content":"        return showLine() + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":177,"author":{"gitId":"chuababyy"},"content":"                + \"Here are the matching tasks in your list\" + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":178,"author":{"gitId":"chuababyy"},"content":"                + list.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":179,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":180,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":181,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":182,"author":{"gitId":"chuababyy"},"content":"     * Displays message when there are no tasks that match a given keyword.","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"chuababyy"},"content":"    public String showNoFind() {","lastModifiedDate":"2023-09-07"},{"lineNumber":185,"author":{"gitId":"chuababyy"},"content":"        return showLine() + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"chuababyy"},"content":"                + \"There are no matching tasks in your current list\" + \u0027\\n\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"chuababyy"},"content":"                + showLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":190,"author":{"gitId":"chuababyy"},"content":"    public String showCustomError(String error) {","lastModifiedDate":"2023-09-14"},{"lineNumber":191,"author":{"gitId":"chuababyy"},"content":"        return showLine() + \u0027\\n\u0027 + error + \u0027\\n\u0027 + showLine();","lastModifiedDate":"2023-09-14"},{"lineNumber":192,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":193,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"chuababyy":193}},{"path":"src/main/java/duke/exception/FileCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":" * Represents the Exception which occurs when a file has been corrupted during loading.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":" * This exception is a subclass of {@link FileLoadException}.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"public class FileCorruptedException extends FileLoadException {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"     * Constructs a new FileCorruptedException with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"     * @param message The error message indicating the cause of the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"    public FileCorruptedException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chuababyy":15}},{"path":"src/main/java/duke/exception/FileLoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":" * Represents the base exception class for file loading errors.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":" * This exception is a subclass of {@link Exception}.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"public class FileLoadException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"     * Constructs a new FileLoadException with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"     * @param message The error message indicating the cause of the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"    public FileLoadException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chuababyy":16}},{"path":"src/main/java/duke/exception/FileNoExistingTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":" * Represents the exception that indicates there are no existing tasks in a file during loading.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":" * This exception is a subclass of {@link FileLoadException}.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"public class FileNoExistingTasksException extends FileLoadException {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"     * Constructs a new FileNoExistingTasksException with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"     * @param message The error message indicating the cause of the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"    public FileNoExistingTasksException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"chuababyy":16}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":" * Represents a Deadline task. A \u003ccode\u003eDeadline\u003c/code\u003e corresponds to a Task","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":" * which has a description, deadline, and stores information whether this task","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":" * has been completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"    private DateTimeFormatter formatterSave \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"     * Constructs a new instance of a Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"     * @param description Name of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"     * @param deadline Date before which task should be completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"     * Constructs a new instance of a Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"     * @param description Name of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"     * @param deadline Date before which task should be completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"     * @param isDone {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"    public Deadline(String description, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"        return \"D\" + super.toFileString() + \" | \" + this.deadline.format(formatterSave);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + deadline.format(formatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chuababyy":54}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":" * Represents an Event task. A \u003ccode\u003eEvent\u003c/code\u003e corresponds to a Task","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":" * which has a description, from date, to date, and stores information whether this task","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":" * has been completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"    private DateTimeFormatter formatterSave \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"     * Constructs an Event task which contains a description, a start time and","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"     * an end time.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"     * @param description Event name.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"     * @param start Start time for the Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"     * @param end End time for the Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"     * Constructs an Event task which contains a description, a start time,","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"     * an end time, and whether the Event is completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"     * @param description Event name.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"     * @param start Start time for the Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"     * @param end End time for the Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"     * @param isDone {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"     * Returns {@code true} if the start date is before or same as the end date, and","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"     * returns {@code false} otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"     * @param start Start date to be compared.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"     * @param end End date to be compared.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"    public boolean isStartBeforeEnd(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"        if (start.isBefore(end) || start.equals(end)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"            return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"            return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"        return \"E\" + super.toFileString() + \" | \" + start.format(formatterSave)","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"                + \" | \" + end.format(formatterSave);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"chuababyy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"chuababyy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"chuababyy"},"content":"        return \"[E] \" + super.toString()","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"chuababyy"},"content":"                + \" (from: \" + start.format(formatter) + \" to: \" + end.format(formatter) + \")\";","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chuababyy":79}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"    private String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"     * Constructs a new Task with the specified description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"     * @param isDone {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"        assert this.isDone \u003d\u003d true : \"Error in mark done\";","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"        assert this.isDone \u003d\u003d false : \"Error in mark not done\";","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"     * Returns the status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"     * @return Description of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"     * Returns a formatted string of the task for file storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"     * @return A String representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"chuababyy"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"chuababyy"},"content":"        String doneStatus;","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"chuababyy"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"chuababyy"},"content":"            doneStatus \u003d \"T\";","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"chuababyy"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"chuababyy"},"content":"            doneStatus \u003d \"F\";","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"chuababyy"},"content":"        return \" | \" + doneStatus + \" | \" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"chuababyy"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"chuababyy"},"content":"     * @return A String representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"chuababyy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"chuababyy"},"content":"        return (isDone","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"chuababyy"},"content":"                ? \"[\" + \"X\" + \"] \" + description","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"chuababyy"},"content":"                : \"[\" + \" \" + \"] \" + description","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"chuababyy"},"content":"            );","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chuababyy":92}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":" * Represents a ToDos task. A \u003ccode\u003eToDos\u003c/code\u003e corresponds to a Task","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":" * which has a description, and stores information whether this task","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":" * has been completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"     * Constructs a new instance of a ToDos task.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"     * @param description Name of the ToDos task.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"    public ToDos(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"     * Constructs a new instance of a ToDos task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"     * @param description Name of the ToDos task.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"     * @param isDone {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"    public ToDos(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chuababyy":43}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"    private TextFlow dialogTextFlow;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"        Text textNode \u003d new Text(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"        dialogTextFlow.getChildren().add(textNode);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"        HBox.setMargin(displayPicture, new Insets(0, 10, 0, 10));","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"chuababyy":66}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"                DialogBox.getDukeDialog(d.getWelcome(), dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"chuababyy":57}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"        \u003cTextFlow fx:id\u003d\"dialogTextFlow\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"                   preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"chuababyy":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"            minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"                   prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"                    prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"chuababyy":24}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import duke.task.ToDos;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"    public void addToList_addOne_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"        ToDos toDos \u003d new ToDos(\"item 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"        taskList.addToList(toDos);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"        int initialSize \u003d taskList.getSize();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"        ToDos toDos2 \u003d new ToDos(\"item 2\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"        taskList.addToList(toDos2);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"        assertEquals(initialSize + 1, 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"    public void deleteFromList_deleteOne_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"        ToDos toDos \u003d new ToDos(\"item 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"        taskList.addToList(toDos);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"        int initialSize \u003d taskList.getSize();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"        taskList.deleteFromList(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"        assertEquals(initialSize - 1, 0);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"    public void deleteFromList_noSuchItem_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"        ToDos toDos \u003d new ToDos(\"item 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"        taskList.addToList(toDos);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"        int initialSize \u003d taskList.getSize();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"        taskList.deleteFromList(3);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"        assertEquals(initialSize, 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"    public void markItem_markOne_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"        ToDos toDos \u003d new ToDos(\"item 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"        taskList.addToList(toDos);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"        taskList.markItem(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"        assertEquals(taskList.getTask().get(0).toString(), \"[T] [ ] item 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"    public void markItem_noSuchItem_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"        ToDos toDos \u003d new ToDos(\"item 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"        taskList.addToList(toDos);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"        taskList.markItem(3);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"        assertEquals(taskList.getTask().get(0).toString(), \"[T] [ ] item 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"    public void unMarkItem_unMarkOne_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"        ToDos toDos \u003d new ToDos(\"item 1\", true);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"        taskList.addToList(toDos);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"        taskList.unMarkItem(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"        assertEquals(taskList.getTask().get(0).toString(), \"[T] [X] item 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"chuababyy"},"content":"    public void toString_list_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"chuababyy"},"content":"        ToDos toDos \u003d new ToDos(\"item 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"chuababyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"chuababyy"},"content":"        taskList.addToList(toDos);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"chuababyy"},"content":"        assertEquals(\"------------------------------------\" + \"\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"chuababyy"},"content":"                + \"1. [T] [ ] item 1\" + \"\\n\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"chuababyy"},"content":"                + \"------------------------------------\",","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"chuababyy"},"content":"                taskList.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chuababyy":79}},{"path":"src/test/java/duke/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"import duke.task.ToDos;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"public class ToDosTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"    public void toString_description_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"        ToDos toDoS \u003d new ToDos(\"item 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"        assertEquals(\"[T] [ ] item 1\", toDoS.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"    public void toFileString_description_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"        ToDos toDos \u003d new ToDos(\"item 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"        assertEquals(\"T | F | item 1\", toDos.toFileString());","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"    public void markDone_done_success() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"        ToDos toDos \u003d new ToDos(\"item 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"        toDos.markNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"        assertFalse(toDos.isDone());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"        toDos.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"        assertTrue(toDos.isDone());","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chuababyy":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"todo item 1","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"deadline item 2 /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"event item 3 /from 31 August /to 4 Sept","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"todo item 4","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"deadline item 5","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"event item 6","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"item 7","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"mark 5","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"delete 6","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"chuababyy":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chuababyy":1,"-":20}}]
