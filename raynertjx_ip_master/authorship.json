[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"# Bongo project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"3. After that, locate the `src/main/java/Bongo.java` file, right-click it, and choose `Run Bongo.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"raynertjx":2,"-":22}},{"path":"src/main/java/Bongo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"public class Bongo {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    String pathname \u003d \"data/bongo.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"    Scanner inputScanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"    enum FileAction {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"        MARK_TASK,","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"        UNMARK_TASK,","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"        ADD_TASK,","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"        DELETE_TASK","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"    public Bongo() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"        this.inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"    public void greet() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"        String welcomeMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"                \" Hello! I\u0027m Bongo!\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"        System.out.println(welcomeMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"    public void bye() {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"        String goodbyeMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"                \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"        System.out.println(goodbyeMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"        inputScanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"    public void checkIfFilesExist() {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"        File file \u003d new File(this.pathname);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"        String directoryPath \u003d file.getParent();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"raynertjx"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"raynertjx"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"raynertjx"},"content":"            boolean isDirectoryCreated \u003d directory.mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"raynertjx"},"content":"            if (isDirectoryCreated) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"raynertjx"},"content":"                System.out.println(\"Directory created: \" + directoryPath);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"raynertjx"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"raynertjx"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"raynertjx"},"content":"                boolean isFileCreated \u003d file.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"raynertjx"},"content":"                if (isFileCreated) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"raynertjx"},"content":"                    System.out.println(\"File created: \" + this.pathname);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"raynertjx"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"raynertjx"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"raynertjx"},"content":"                System.out.println(\"An error occurred while creating the file: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"raynertjx"},"content":"    public void loadTasksFromStorage() throws FileNotFoundException {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"raynertjx"},"content":"        File file \u003d new File(this.pathname);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"raynertjx"},"content":"        Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"raynertjx"},"content":"        while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"raynertjx"},"content":"            String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"raynertjx"},"content":"            String[] arr \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"raynertjx"},"content":"            for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"raynertjx"},"content":"                arr[i] \u003d arr[i].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"raynertjx"},"content":"            boolean isTaskMarkedDone \u003d arr[1].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"raynertjx"},"content":"            switch (arr[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"raynertjx"},"content":"                case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"raynertjx"},"content":"                    tasks.add(new Todo(arr[2], isTaskMarkedDone));","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"raynertjx"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"raynertjx"},"content":"                case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"raynertjx"},"content":"                    tasks.add(new Deadline(arr[2], isTaskMarkedDone, formatDateTime(arr[3])));","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"raynertjx"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"raynertjx"},"content":"                case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"raynertjx"},"content":"                    tasks.add(new Event(arr[2], isTaskMarkedDone, formatDateTime(arr[3]), formatDateTime(arr[4])));","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"raynertjx"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"raynertjx"},"content":"        fileScanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"raynertjx"},"content":"    public void appendToTextFile(Task newTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"raynertjx"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"raynertjx"},"content":"            File file \u003d new File(this.pathname);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"raynertjx"},"content":"            FileWriter fw \u003d new FileWriter(this.pathname, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"raynertjx"},"content":"            String newLine \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"raynertjx"},"content":"            String isTaskMarkedDone \u003d newTask.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"raynertjx"},"content":"            if (newTask instanceof Todo) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"raynertjx"},"content":"                newLine \u003d String.join(\" | \", \"T\", isTaskMarkedDone, newTask.description);","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"raynertjx"},"content":"            } else if (newTask instanceof Deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"raynertjx"},"content":"                Deadline newDeadline \u003d (Deadline) newTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"raynertjx"},"content":"                newLine \u003d String.join(\" | \", \"D\", isTaskMarkedDone, newDeadline.description, formatter.format(newDeadline.deadline));","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"raynertjx"},"content":"            } else if (newTask instanceof Event) {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"raynertjx"},"content":"                Event newEvent \u003d (Event) newTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"raynertjx"},"content":"                newLine \u003d String.join(\" | \", \"E\", isTaskMarkedDone, newEvent.description, formatter.format(newEvent.from), formatter.format(newEvent.to));","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"raynertjx"},"content":"            if (file.length() !\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"raynertjx"},"content":"                fw.write(String.format(\"\\n%s\", newLine));","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"raynertjx"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"raynertjx"},"content":"                fw.write(newLine);","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"raynertjx"},"content":"            fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"raynertjx"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"raynertjx"},"content":"            System.err.println(\"IOException: \" + ioe.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"raynertjx"},"content":"    public void editTextFile(FileAction action, int taskNumber) {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"raynertjx"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"raynertjx"},"content":"            File file \u003d new File(this.pathname);","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"raynertjx"},"content":"            BufferedReader fileReader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"raynertjx"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"raynertjx"},"content":"            String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"raynertjx"},"content":"            int currentLine \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"raynertjx"},"content":"            while ((line \u003d fileReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"raynertjx"},"content":"                if (currentLine \u003d\u003d taskNumber) {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"raynertjx"},"content":"                    String[] lineWordsArr \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"raynertjx"},"content":"                    for (int i \u003d 0; i \u003c lineWordsArr.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"raynertjx"},"content":"                        lineWordsArr[i] \u003d lineWordsArr[i].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"raynertjx"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"raynertjx"},"content":"                    switch (action) {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"raynertjx"},"content":"                        case MARK_TASK:","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"raynertjx"},"content":"                            lineWordsArr[1] \u003d \"1\";","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"raynertjx"},"content":"                            stringBuilder.append(String.join(\" | \", lineWordsArr)).append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"raynertjx"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"raynertjx"},"content":"                        case UNMARK_TASK:","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"raynertjx"},"content":"                            lineWordsArr[1] \u003d \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"raynertjx"},"content":"                            stringBuilder.append(String.join(\" | \", lineWordsArr)).append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"raynertjx"},"content":"                            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"raynertjx"},"content":"                        case DELETE_TASK:","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"raynertjx"},"content":"                            currentLine++;","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"raynertjx"},"content":"                            continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"raynertjx"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"raynertjx"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"raynertjx"},"content":"                    stringBuilder.append(line).append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"raynertjx"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"raynertjx"},"content":"                currentLine++;","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"raynertjx"},"content":"            fileReader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"raynertjx"},"content":"            // Write the modified content back to the file","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"raynertjx"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"raynertjx"},"content":"            fileWriter.write(stringBuilder.toString().trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"raynertjx"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"raynertjx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"raynertjx"},"content":"            System.out.println(\"Problem editing the file.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"raynertjx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"raynertjx"},"content":"    public LocalDateTime formatDateTime(String datetime) throws DateTimeParseException {","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"raynertjx"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"raynertjx"},"content":"            return LocalDateTime.parse(datetime, this.formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"raynertjx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"raynertjx"},"content":"            throw new DateTimeParseException(String.format(\"Please enter a valid datetime in the format of %s\", \"DD/MM/YYYY HHMM\"), datetime, e.getErrorIndex());","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"raynertjx"},"content":"    public void listAllTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"raynertjx"},"content":"        StringBuilder allTasks \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"raynertjx"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"raynertjx"},"content":"            allTasks.append(String.format(\" %d. %s\\n\", i + 1, tasks.get(i)));","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"raynertjx"},"content":"        String tasksList \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"raynertjx"},"content":"                \" Here are the tasks in your list:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"raynertjx"},"content":"                allTasks +","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"raynertjx"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"raynertjx"},"content":"        System.out.println(tasksList);","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"raynertjx"},"content":"    public void addTodo(String[] input) throws BongoException {","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"raynertjx"},"content":"        if (input.length \u003c\u003d 1)","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"raynertjx"},"content":"        String newTaskDesc \u003d String.join(\" \", input).substring(input[0].length() + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"raynertjx"},"content":"        this.addTask(new Todo(newTaskDesc));","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"raynertjx"},"content":"    public void addDeadline(String[] input) throws BongoException {","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"raynertjx"},"content":"        if (input.length \u003c\u003d 1)","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"raynertjx"},"content":"        String taskInput \u003d String.join(\" \", input).substring(input[0].length() + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"raynertjx"},"content":"        int index \u003d taskInput.indexOf(\"/by\");","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"raynertjx"},"content":"        if (index \u003d\u003d -1) throw new BongoException(\"OOPS!!! Please include the deadline.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"raynertjx"},"content":"        String taskDesc \u003d taskInput.substring(0, index - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"raynertjx"},"content":"        String taskDeadline \u003d taskInput.substring(index + 4);","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"raynertjx"},"content":"        LocalDateTime deadline \u003d formatDateTime(taskDeadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"raynertjx"},"content":"        this.addTask(new Deadline(taskDesc, deadline));","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"raynertjx"},"content":"    public void addEvent(String[] input) throws BongoException {","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"raynertjx"},"content":"        if (input.length \u003c\u003d 1)","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"raynertjx"},"content":"        String taskInput \u003d String.join(\" \", input).substring(input[0].length() + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"raynertjx"},"content":"        int fromIndex \u003d taskInput.indexOf(\"/from\");","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"raynertjx"},"content":"        int toIndex \u003d taskInput.indexOf(\"/to\");","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"raynertjx"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1)","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"OOPS!!! Please include the to and from date/time of the event.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"raynertjx"},"content":"        String taskDesc \u003d taskInput.substring(0, fromIndex - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"raynertjx"},"content":"        String taskFrom \u003d taskInput.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"raynertjx"},"content":"        String taskTo \u003d taskInput.substring(toIndex + 4);","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"raynertjx"},"content":"        LocalDateTime from \u003d formatDateTime(taskFrom);","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"raynertjx"},"content":"        LocalDateTime to \u003d formatDateTime(taskTo);","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"raynertjx"},"content":"        this.addTask(new Event(taskDesc, from, to));","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"raynertjx"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"raynertjx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"raynertjx"},"content":"        String echoMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"raynertjx"},"content":"                \" Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"raynertjx"},"content":"                String.format(\"  %s\\n\", newTask) +","lastModifiedDate":"2023-08-30"},{"lineNumber":224,"author":{"gitId":"raynertjx"},"content":"                String.format(\" Now you have %d tasks in the list.\\n\", tasks.size()) +","lastModifiedDate":"2023-08-30"},{"lineNumber":225,"author":{"gitId":"raynertjx"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"raynertjx"},"content":"        System.out.println(echoMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":227,"author":{"gitId":"raynertjx"},"content":"        appendToTextFile(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":228,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"raynertjx"},"content":"    public void markTaskDone(int taskIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":231,"author":{"gitId":"raynertjx"},"content":"        Task chosenTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":232,"author":{"gitId":"raynertjx"},"content":"        chosenTask.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":233,"author":{"gitId":"raynertjx"},"content":"        String taskStatusMessage \u003d \" Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":234,"author":{"gitId":"raynertjx"},"content":"                String.format(\"  %s\\n\", chosenTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":235,"author":{"gitId":"raynertjx"},"content":"        printTaskUpdateMessage(taskStatusMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":236,"author":{"gitId":"raynertjx"},"content":"        editTextFile(FileAction.MARK_TASK, taskIndex + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":237,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":238,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":239,"author":{"gitId":"raynertjx"},"content":"    public void markTaskUndone(int taskIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":240,"author":{"gitId":"raynertjx"},"content":"        Task chosenTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":241,"author":{"gitId":"raynertjx"},"content":"        chosenTask.markAsUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":242,"author":{"gitId":"raynertjx"},"content":"        String taskStatusMessage \u003d \" OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":243,"author":{"gitId":"raynertjx"},"content":"                String.format(\"  %s\\n\", chosenTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"raynertjx"},"content":"        printTaskUpdateMessage(taskStatusMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":245,"author":{"gitId":"raynertjx"},"content":"        editTextFile(FileAction.UNMARK_TASK, taskIndex + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":246,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":247,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":248,"author":{"gitId":"raynertjx"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-08-30"},{"lineNumber":249,"author":{"gitId":"raynertjx"},"content":"        Task chosenTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":250,"author":{"gitId":"raynertjx"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"raynertjx"},"content":"        String taskStatusMessage \u003d \" Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":252,"author":{"gitId":"raynertjx"},"content":"                String.format(\"  %s\\n\", chosenTask) +","lastModifiedDate":"2023-08-30"},{"lineNumber":253,"author":{"gitId":"raynertjx"},"content":"                String.format(\" Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":254,"author":{"gitId":"raynertjx"},"content":"        printTaskUpdateMessage(taskStatusMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"raynertjx"},"content":"        editTextFile(FileAction.DELETE_TASK, taskIndex + 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"raynertjx"},"content":"    public void printTaskUpdateMessage(String taskStatusMessage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"raynertjx"},"content":"        String finalMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":260,"author":{"gitId":"raynertjx"},"content":"                taskStatusMessage +","lastModifiedDate":"2023-08-30"},{"lineNumber":261,"author":{"gitId":"raynertjx"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":262,"author":{"gitId":"raynertjx"},"content":"        System.out.println(finalMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":263,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":264,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":265,"author":{"gitId":"raynertjx"},"content":"    public void processUserInput() {","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"raynertjx"},"content":"        label:","lastModifiedDate":"2023-08-30"},{"lineNumber":267,"author":{"gitId":"raynertjx"},"content":"        while (this.inputScanner.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":268,"author":{"gitId":"raynertjx"},"content":"            String[] input \u003d inputScanner.nextLine().split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":269,"author":{"gitId":"raynertjx"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":270,"author":{"gitId":"raynertjx"},"content":"                switch (input[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":271,"author":{"gitId":"raynertjx"},"content":"                    case \"bye\":","lastModifiedDate":"2023-08-30"},{"lineNumber":272,"author":{"gitId":"raynertjx"},"content":"                        this.bye();","lastModifiedDate":"2023-08-30"},{"lineNumber":273,"author":{"gitId":"raynertjx"},"content":"                        break label;","lastModifiedDate":"2023-08-30"},{"lineNumber":274,"author":{"gitId":"raynertjx"},"content":"                    case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":275,"author":{"gitId":"raynertjx"},"content":"                        this.listAllTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":276,"author":{"gitId":"raynertjx"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":277,"author":{"gitId":"raynertjx"},"content":"                    case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":278,"author":{"gitId":"raynertjx"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":279,"author":{"gitId":"raynertjx"},"content":"                    case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":280,"author":{"gitId":"raynertjx"},"content":"                        if (tasks.size() \u003d\u003d 0) throw new BongoException(\"OOPS!!! There are currently no tasks.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":281,"author":{"gitId":"raynertjx"},"content":"                        if (input.length \u003c 2) throw new BongoException(\"OOPS!!! Please include the task index.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":282,"author":{"gitId":"raynertjx"},"content":"                        int taskIndex \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":283,"author":{"gitId":"raynertjx"},"content":"                        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size())","lastModifiedDate":"2023-08-30"},{"lineNumber":284,"author":{"gitId":"raynertjx"},"content":"                            throw new BongoException(\"OOPS!!! Task does not exist.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":285,"author":{"gitId":"raynertjx"},"content":"                        if (input[0].equals(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":286,"author":{"gitId":"raynertjx"},"content":"                            this.markTaskDone(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":287,"author":{"gitId":"raynertjx"},"content":"                        } else if (input[0].equals(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":288,"author":{"gitId":"raynertjx"},"content":"                            this.markTaskUndone(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":289,"author":{"gitId":"raynertjx"},"content":"                        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":290,"author":{"gitId":"raynertjx"},"content":"                            this.deleteTask(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":291,"author":{"gitId":"raynertjx"},"content":"                        }","lastModifiedDate":"2023-08-30"},{"lineNumber":292,"author":{"gitId":"raynertjx"},"content":"                        continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":293,"author":{"gitId":"raynertjx"},"content":"                    case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":294,"author":{"gitId":"raynertjx"},"content":"                        this.addTodo(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":295,"author":{"gitId":"raynertjx"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":296,"author":{"gitId":"raynertjx"},"content":"                    case \"deadline\": {","lastModifiedDate":"2023-08-30"},{"lineNumber":297,"author":{"gitId":"raynertjx"},"content":"                        this.addDeadline(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":298,"author":{"gitId":"raynertjx"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":299,"author":{"gitId":"raynertjx"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":300,"author":{"gitId":"raynertjx"},"content":"                    case \"event\": {","lastModifiedDate":"2023-08-30"},{"lineNumber":301,"author":{"gitId":"raynertjx"},"content":"                        this.addEvent(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":302,"author":{"gitId":"raynertjx"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":303,"author":{"gitId":"raynertjx"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":304,"author":{"gitId":"raynertjx"},"content":"                    default:","lastModifiedDate":"2023-08-30"},{"lineNumber":305,"author":{"gitId":"raynertjx"},"content":"                        throw new BongoException();","lastModifiedDate":"2023-08-30"},{"lineNumber":306,"author":{"gitId":"raynertjx"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":307,"author":{"gitId":"raynertjx"},"content":"            } catch (BongoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":308,"author":{"gitId":"raynertjx"},"content":"                System.out.println(printError(e.getMessage()));","lastModifiedDate":"2023-08-30"},{"lineNumber":309,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":310,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":311,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":312,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":313,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":314,"author":{"gitId":"raynertjx"},"content":"    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2023-08-30"},{"lineNumber":315,"author":{"gitId":"raynertjx"},"content":"        Bongo bongo \u003d new Bongo();","lastModifiedDate":"2023-08-30"},{"lineNumber":316,"author":{"gitId":"raynertjx"},"content":"        bongo.checkIfFilesExist();","lastModifiedDate":"2023-08-30"},{"lineNumber":317,"author":{"gitId":"raynertjx"},"content":"        bongo.greet();","lastModifiedDate":"2023-08-30"},{"lineNumber":318,"author":{"gitId":"raynertjx"},"content":"        bongo.loadTasksFromStorage();","lastModifiedDate":"2023-08-30"},{"lineNumber":319,"author":{"gitId":"raynertjx"},"content":"        bongo.processUserInput();","lastModifiedDate":"2023-08-30"},{"lineNumber":320,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":321,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":322,"author":{"gitId":"raynertjx"},"content":"    public static String printError(String error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":323,"author":{"gitId":"raynertjx"},"content":"        return \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":324,"author":{"gitId":"raynertjx"},"content":"                String.format(\" %s\\n\", error) +","lastModifiedDate":"2023-08-30"},{"lineNumber":325,"author":{"gitId":"raynertjx"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":326,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":327,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":328,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"raynertjx":328}},{"path":"src/main/java/BongoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"public class BongoException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"    public BongoException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"    public BongoException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"raynertjx":8}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"    LocalDateTime deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"        this.validateDeadline(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"        this.validateDeadline(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"    private void validateDeadline(LocalDateTime deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"        if (deadline.isBefore(LocalDateTime.now())) throw new IllegalArgumentException(\"Deadline must be in the future.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", super.generateDateString(this.deadline));","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"raynertjx":28}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"    LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"    LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"        this.validateEventDuration(from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    public Event(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"        this.validateEventDuration(from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"    private void validateEventDuration(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"        if (from.isBefore(LocalDateTime.now()) || to.isBefore(LocalDateTime.now())) throw new IllegalArgumentException(\"Start and end of event must be in the future.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"        if (from.isAfter(to)) throw new IllegalArgumentException(\"End of event must be after start of event.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s to: %s)\", super.generateDateString(from), super.generateDateString(to));","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"raynertjx":30}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"    public String generateDateString(LocalDateTime datetime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM d, yyyy hh:mm a\");","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"        return formatter.format(datetime);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"raynertjx":34}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"    public Todo(String description) throws BongoException {","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"raynertjx":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"raynertjx":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"java -classpath ..\\bin Bongo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"raynertjx":1,"-":20}}]
