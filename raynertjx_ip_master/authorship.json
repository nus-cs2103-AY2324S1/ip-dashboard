[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"# Bongo project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"3. After that, locate the `src/main/java/bongo.Bongo.java` file, right-click it, and choose `Run bongo.Bongo.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"raynertjx":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"    mainClass.set(\"bongo.Bongo\")","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"raynertjx":6,"-":41}},{"path":"src/main/java/bongo/Bongo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"import bongo.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":" * The Bongo class, the class for the BongoBot.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"public class Bongo {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"     * Initializes Bongo object with filepath.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"     * @param filepath","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"    public Bongo(String filepath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"            storage.checkIfFilesExist();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"        } catch (BongoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"     * Runs the Bongo bot.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"raynertjx"},"content":"                Command c \u003d Parser.parse(command);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"raynertjx"},"content":"                c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"raynertjx"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"raynertjx"},"content":"            } catch (BongoException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"raynertjx"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"raynertjx"},"content":"            } finally {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"raynertjx"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"raynertjx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"raynertjx"},"content":"        Bongo bongo \u003d new Bongo(\"data/bongo.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"raynertjx"},"content":"        bongo.run();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"raynertjx":65}},{"path":"src/main/java/bongo/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.DateHelper;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"import bongo.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"import bongo.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"import bongo.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"import bongo.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"import bongo.task.Todo;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":" * A class for a AddCommand.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"    private final String[] command;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"    private Task newTask;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a AddCommand.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"     * @param command Array of strings from user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If there is a problem when initializing task.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"    public AddCommand(String[] command) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"        this.initialiseTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"     * Processes user input and initializes the respective task (Todo, Event or Deadline).","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"     * Checks if user input to create task is valid.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If task is not initialized properly.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"    private void initialiseTask() throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"        String taskInput \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"        if (command.length \u003e 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"            taskInput \u003d String.join(\" \", command).substring(command[0].length() + 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"        switch (this.command[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"            if (command.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"                throw new BongoException(\"Please include the description of your todo.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"raynertjx"},"content":"            this.newTask \u003d new Todo(taskInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"raynertjx"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"raynertjx"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"raynertjx"},"content":"            if (command.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"raynertjx"},"content":"                throw new BongoException(\"Please include the description and datetime of your deadline.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"raynertjx"},"content":"            if (command.length \u003c\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"raynertjx"},"content":"                throw new BongoException(\"Please include the datetime of your deadline.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"raynertjx"},"content":"            int index \u003d taskInput.indexOf(\"/by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"raynertjx"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"raynertjx"},"content":"                throw new BongoException(\"Please include the datetime of your deadline.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"raynertjx"},"content":"            String deadlineDesc \u003d taskInput.substring(0, index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"raynertjx"},"content":"            String deadlineStr \u003d taskInput.substring(index + 4);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"raynertjx"},"content":"            LocalDateTime deadline \u003d DateHelper.convertStringToDateTime(deadlineStr);","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"raynertjx"},"content":"            this.newTask \u003d new Deadline(deadlineDesc, deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"raynertjx"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"raynertjx"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"raynertjx"},"content":"            if (command.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"raynertjx"},"content":"                throw new BongoException(\"Please include the description and datetime of your event.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"raynertjx"},"content":"            if (command.length \u003c\u003d 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"raynertjx"},"content":"                throw new BongoException(\"Please include the datetime of your event.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"raynertjx"},"content":"            int fromIndex \u003d taskInput.indexOf(\"/from\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"raynertjx"},"content":"            int toIndex \u003d taskInput.indexOf(\"/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"raynertjx"},"content":"            if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"raynertjx"},"content":"                throw new BongoException(\"Please include the to and from datetime of the event.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"raynertjx"},"content":"            String eventDesc \u003d taskInput.substring(0, fromIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"raynertjx"},"content":"            String eventFrom \u003d taskInput.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"raynertjx"},"content":"            String eventTo \u003d taskInput.substring(toIndex + 4);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"raynertjx"},"content":"            LocalDateTime from \u003d DateHelper.convertStringToDateTime(eventFrom);","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"raynertjx"},"content":"            LocalDateTime to \u003d DateHelper.convertStringToDateTime(eventTo);","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"raynertjx"},"content":"            this.newTask \u003d new Event(eventDesc, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"raynertjx"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"raynertjx"},"content":"        default:","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException();","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"raynertjx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"raynertjx"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"raynertjx"},"content":"        ui.showAddedTask(newTask, tasks.getTotalTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"raynertjx"},"content":"        storage.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"raynertjx":97}},{"path":"src/main/java/bongo/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import bongo.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":" * A class for a Command.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"     * Execute the respective details of the Command.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"     * @param tasks   TaskList instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"     * @param ui      Ui instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"     * @param storage Storage instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If command is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws BongoException;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"     * Returns whether Command is an ExitCommand.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"     * @return Whether Command is an ExitCommand.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"raynertjx":32}},{"path":"src/main/java/bongo/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import bongo.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"import bongo.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":" * A class for a DeleteCommand.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a DeleteCommand, with a taskIndex.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"     * @param command Array of strings from user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If task index is missing.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"    public DeleteCommand(String[] command) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"        if (command.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"Please include the task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"        this.taskIndex \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"        if (tasks.getTotalTasks() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"There are currently no tasks.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getTotalTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"Task does not exist.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"        Task taskToBeDeleted \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"        tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"        ui.showDeleteTask(taskToBeDeleted, tasks.getTotalTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"        storage.edit(Storage.FileAction.DELETE_TASK, this.taskIndex + 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"raynertjx":41}},{"path":"src/main/java/bongo/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":" * A class for a ExitCommand.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"raynertjx":21}},{"path":"src/main/java/bongo/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"import bongo.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"import bongo.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":" * A class for a FindCommand.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"    private final String[] searchInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"    private String searchParam;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a FindCommand, with a searchInput.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"     * @param searchInput","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"    public FindCommand(String[] searchInput) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"        this.searchInput \u003d searchInput;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"        this.validateSearchInput();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"    private void validateSearchInput() throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"        if (this.searchInput.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"Search parameter cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"        for (int i \u003d 1; i \u003c searchInput.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"            sb.append(searchInput[i]);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"        this.searchParam \u003d sb.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d tasks.getAllTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"        for (Task currentTask : allTasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"            if (currentTask.getDescription().contains(searchParam)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"                filteredTaskList.add(currentTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"        ui.showSearchedTasks(filteredTaskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"raynertjx":49}},{"path":"src/main/java/bongo/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":" * A class for a ListCommand.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"        ui.showAllTasks(tasks.getAllTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"raynertjx":16}},{"path":"src/main/java/bongo/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import bongo.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":" * A class for a MarkCommand.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a MarkCommand, with a taskIndex.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"     * @param command Array of strings from user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If task index is missing.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"    public MarkCommand(String[] command) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"        if (command.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"Please include the task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"        this.taskIndex \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"        if (tasks.getTotalTasks() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"There are currently no tasks.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getTotalTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"Task does not exist.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"        tasks.markTaskDone(this.taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"        ui.showTaskIsDone(tasks.getTask(this.taskIndex));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"        storage.edit(Storage.FileAction.MARK_TASK, this.taskIndex + 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"raynertjx":39}},{"path":"src/main/java/bongo/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import bongo.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":" * A class for a UnmarkCommand.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a UnmarkCommand, with a taskIndex.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"     * @param command Array of strings from user command.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If task index is missing.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"    public UnmarkCommand(String[] command) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"        if (command.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"Please include the task index.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"        this.taskIndex \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"        if (tasks.getTotalTasks() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"There are currently no tasks.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getTotalTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"Task does not exist.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"        tasks.markTaskUndone(this.taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"        ui.showTaskIsUndone(tasks.getTask(this.taskIndex));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"        storage.edit(Storage.FileAction.UNMARK_TASK, this.taskIndex + 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"raynertjx":39}},{"path":"src/main/java/bongo/helper/BongoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.helper;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":" * A class for a BongoException.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"public class BongoException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a BongoException.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"    public BongoException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"    public BongoException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"raynertjx":17}},{"path":"src/main/java/bongo/helper/DateHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.helper;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":" * A utility class to help parse and format dates.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"public class DateHelper {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"    public static boolean hasTaskExpired(LocalDateTime datetime) {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"        return datetime.isBefore(LocalDateTime.now());","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"     * Helper method to convert LocalDateTime object into a datetime string.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"     * @param datetime Datetime string.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"     * @return A foramtted datetime string.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If LocalDateTime object is invalid.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"    public static String convertDateTimeToString(LocalDateTime datetime) throws BongoException {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"            return formatter.format(datetime);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"There was an error converting the datetime to a string.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"     * Helper method to convert datetime string into a LocalDateTime object.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"     * @param datetime Datetime string.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"     * @return A LocalDateTime object.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If datetime string has an invalid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"    public static LocalDateTime convertStringToDateTime(String datetime) throws BongoException {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"            return LocalDateTime.parse(datetime, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(String.format(\"Please enter a valid datetime in the format of %s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"                    \"DD/MM/YYYY HHMM.\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"raynertjx":46}},{"path":"src/main/java/bongo/helper/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.helper;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import bongo.command.AddCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import bongo.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.command.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import bongo.command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"import bongo.command.FindCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"import bongo.command.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"import bongo.command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"import bongo.command.UnmarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":" * A class for a Parser.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"     * Parses command that user inputs into the bot.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"     * Returns the Command that matches the user\u0027s input.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"     * Throws a BongoException if user enters unknown command.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"     * @param command Command from user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"     * @return A Command which corresponds to user\u0027s input.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If user gives an unknown command.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"    public static Command parse(String command) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"        String[] input \u003d command.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"        switch (input[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"        case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"            return new AddCommand(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"            return new FindCommand(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"raynertjx":49}},{"path":"src/main/java/bongo/helper/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.helper;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"import java.lang.reflect.*;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"import java.time.*;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"import bongo.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"import bongo.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"import bongo.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"import bongo.task.Todo;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":" * A class for a Storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"     * Different types of actions we can take to modify the text file.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"    public enum FileAction {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"        MARK_TASK,","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"        UNMARK_TASK,","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"        DELETE_TASK","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"    private final String pathname;","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a Storage, with a pathname.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"     * @param pathname Pathname of file.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"    public Storage(String pathname) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"        this.pathname \u003d pathname;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"     * Loads tasks into the TaskList, if there is an existing text file found.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"     * If no file is found, throws a FileNotFound Exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"     * @return An ArrayList of preloaded tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"raynertjx"},"content":"     * @throws FileNotFoundException If file is not found.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException        If datetime string has an invalid format.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"raynertjx"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"raynertjx"},"content":"        File file \u003d new File(this.pathname);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"raynertjx"},"content":"        Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"raynertjx"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"raynertjx"},"content":"        ArrayList\u003cInteger\u003e expiredTaskNumbers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"raynertjx"},"content":"        int numOfTasks \u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"raynertjx"},"content":"        while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"raynertjx"},"content":"            numOfTasks++;","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"raynertjx"},"content":"            String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"raynertjx"},"content":"            String[] arr \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"raynertjx"},"content":"            for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"raynertjx"},"content":"                arr[i] \u003d arr[i].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"raynertjx"},"content":"            boolean isTaskMarkedDone \u003d arr[1].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"raynertjx"},"content":"            LocalDateTime datetime;","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"raynertjx"},"content":"            switch (arr[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"raynertjx"},"content":"            case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"raynertjx"},"content":"                loadedTasks.add(new Todo(arr[2], isTaskMarkedDone));","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"raynertjx"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"raynertjx"},"content":"            case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"raynertjx"},"content":"                datetime \u003d DateHelper.convertStringToDateTime(arr[3]);","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"raynertjx"},"content":"                if (DateHelper.hasTaskExpired(datetime)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"raynertjx"},"content":"                    expiredTaskNumbers.add(numOfTasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"raynertjx"},"content":"                } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"raynertjx"},"content":"                    loadedTasks.add(new Deadline(arr[2], isTaskMarkedDone, DateHelper.convertStringToDateTime(arr[3])));","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"raynertjx"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"raynertjx"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"raynertjx"},"content":"            case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"raynertjx"},"content":"                datetime \u003d DateHelper.convertStringToDateTime(arr[4]);","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"raynertjx"},"content":"                if (DateHelper.hasTaskExpired(datetime)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"raynertjx"},"content":"                    expiredTaskNumbers.add(numOfTasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"raynertjx"},"content":"                } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"raynertjx"},"content":"                    loadedTasks.add(new Event(arr[2], isTaskMarkedDone, DateHelper.convertStringToDateTime(arr[3]),","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"raynertjx"},"content":"                        DateHelper.convertStringToDateTime(arr[4])));","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"raynertjx"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"raynertjx"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"raynertjx"},"content":"            default:","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"raynertjx"},"content":"                throw new BongoException(\"Error reading the text file.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"raynertjx"},"content":"        deleteExpiredTasks(expiredTaskNumbers);","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"raynertjx"},"content":"        fileScanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"raynertjx"},"content":"        return loadedTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"raynertjx"},"content":"     * Check if the data directory and text file is present.","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"raynertjx"},"content":"     * If either is not present, create it.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"raynertjx"},"content":"    public void checkIfFilesExist() {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"raynertjx"},"content":"        File file \u003d new File(this.pathname);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"raynertjx"},"content":"        String directoryPath \u003d file.getParent();","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"raynertjx"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"raynertjx"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"raynertjx"},"content":"            boolean isDirectoryCreated \u003d directory.mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"raynertjx"},"content":"            if (isDirectoryCreated) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"raynertjx"},"content":"                System.out.println(\"Directory created: \" + directoryPath);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"raynertjx"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"raynertjx"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"raynertjx"},"content":"                boolean isFileCreated \u003d file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"raynertjx"},"content":"                if (isFileCreated) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"raynertjx"},"content":"                    System.out.println(\"File created: \" + this.pathname);","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"raynertjx"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"raynertjx"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"raynertjx"},"content":"                System.out.println(\"An error occurred while creating the file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"raynertjx"},"content":"     * Appends task on a new line in the text file.","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"raynertjx"},"content":"     * @param newTask New Task to add.","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"raynertjx"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"raynertjx"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"raynertjx"},"content":"            File file \u003d new File(this.pathname);","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"raynertjx"},"content":"            FileWriter fw \u003d new FileWriter(this.pathname, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"raynertjx"},"content":"            String newLine \u003d newTask.generateStringForTextFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"raynertjx"},"content":"            if (file.length() !\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"raynertjx"},"content":"                fw.write(String.format(\"\\n%s\", newLine));","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"raynertjx"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"raynertjx"},"content":"                fw.write(newLine);","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"raynertjx"},"content":"            fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"raynertjx"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"raynertjx"},"content":"            System.err.println(\"IOException: \" + ioe.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"raynertjx"},"content":"        } catch (BongoException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"raynertjx"},"content":"            throw new RuntimeException(\"There was an error adding the task.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"raynertjx"},"content":"    public void deleteExpiredTasks(ArrayList\u003cInteger\u003e expiredTaskNumbers) {","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"raynertjx"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"raynertjx"},"content":"            File file \u003d new File(this.pathname);","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"raynertjx"},"content":"            BufferedReader fileReader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"raynertjx"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"raynertjx"},"content":"            String line;","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"raynertjx"},"content":"            int currentLine \u003d 1;","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"raynertjx"},"content":"            while ((line \u003d fileReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"raynertjx"},"content":"                if (expiredTaskNumbers.contains(currentLine)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"raynertjx"},"content":"                    currentLine++;","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"raynertjx"},"content":"                    continue;","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"raynertjx"},"content":"                } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"raynertjx"},"content":"                    stringBuilder.append(line).append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"raynertjx"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"raynertjx"},"content":"                currentLine++;","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"raynertjx"},"content":"            fileReader.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"raynertjx"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"raynertjx"},"content":"            fileWriter.write(stringBuilder.toString().trim());","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"raynertjx"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"raynertjx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"raynertjx"},"content":"            System.out.println(\"Problem editing the file.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"raynertjx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"raynertjx"},"content":"     * Edit the text that corresponds to a certain task in the text file.","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"raynertjx"},"content":"     * @param action Type of FileAction.","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"raynertjx"},"content":"     * @param taskNumber Number of task to delete.","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"raynertjx"},"content":"    public void edit(FileAction action, int taskNumber) {","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"raynertjx"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"raynertjx"},"content":"            File file \u003d new File(this.pathname);","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"raynertjx"},"content":"            BufferedReader fileReader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"raynertjx"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"raynertjx"},"content":"            String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"raynertjx"},"content":"            int currentLine \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"raynertjx"},"content":"            while ((line \u003d fileReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"raynertjx"},"content":"                if (currentLine \u003d\u003d taskNumber) {","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"raynertjx"},"content":"                    String[] lineWordsArr \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"raynertjx"},"content":"                    for (int i \u003d 0; i \u003c lineWordsArr.length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"raynertjx"},"content":"                        lineWordsArr[i] \u003d lineWordsArr[i].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"raynertjx"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"raynertjx"},"content":"                    switch (action) {","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"raynertjx"},"content":"                    case MARK_TASK:","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"raynertjx"},"content":"                        lineWordsArr[1] \u003d \"1\";","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"raynertjx"},"content":"                        stringBuilder.append(String.join(\" | \", lineWordsArr)).append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"raynertjx"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"raynertjx"},"content":"                    case UNMARK_TASK:","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"raynertjx"},"content":"                        lineWordsArr[1] \u003d \"0\";","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"raynertjx"},"content":"                        stringBuilder.append(String.join(\" | \", lineWordsArr)).append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"raynertjx"},"content":"                        break;","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"raynertjx"},"content":"                    case DELETE_TASK:","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"raynertjx"},"content":"                        currentLine++;","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"raynertjx"},"content":"                        continue;","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"raynertjx"},"content":"                    default:","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"raynertjx"},"content":"                        throw new BongoException(\"Error modifying the text file.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"raynertjx"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"raynertjx"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"raynertjx"},"content":"                    stringBuilder.append(line).append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"raynertjx"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":210,"author":{"gitId":"raynertjx"},"content":"                currentLine++;","lastModifiedDate":"2023-08-30"},{"lineNumber":211,"author":{"gitId":"raynertjx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"raynertjx"},"content":"            fileReader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":213,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"raynertjx"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"raynertjx"},"content":"            fileWriter.write(stringBuilder.toString().trim());","lastModifiedDate":"2023-08-30"},{"lineNumber":216,"author":{"gitId":"raynertjx"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":217,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":218,"author":{"gitId":"raynertjx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"raynertjx"},"content":"            System.out.println(\"Problem editing the file.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":220,"author":{"gitId":"raynertjx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":221,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":222,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":223,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"raynertjx":223}},{"path":"src/main/java/bongo/helper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.helper;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import bongo.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":" * A class for a Ui.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    private final Scanner inputScanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a Ui.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"        this.inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"     * Returns the current line of the user\u0027s input.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"     * @return Current line of user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"        return this.inputScanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"     * Adds lines to top and bottom of message.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"     * @param message User message.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"     * @return A message sandwiched between two lines.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"    private String insertLines(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"                + message","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"     * Prints a line.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"raynertjx"},"content":"     * Shows welcome message.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"raynertjx"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"raynertjx"},"content":"        String welcomeMessage \u003d \" Hello! I\u0027m Bongo!\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"raynertjx"},"content":"                + \" What can I do for you?\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"raynertjx"},"content":"        System.out.println(insertLines(welcomeMessage));","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"raynertjx"},"content":"     * Shows goodbye message.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"raynertjx"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"raynertjx"},"content":"        String goodbyeMessage \u003d \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"raynertjx"},"content":"        System.out.println(goodbyeMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"raynertjx"},"content":"        this.inputScanner.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"raynertjx"},"content":"     * Shows all tasks to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"raynertjx"},"content":"     * @param tasks All user tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"raynertjx"},"content":"    public void showAllTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"raynertjx"},"content":"        StringBuilder allTasks \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"raynertjx"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"raynertjx"},"content":"            allTasks.append(String.format(\" %d. %s\\n\", i + 1, tasks.get(i)));","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"raynertjx"},"content":"        String tasksList \u003d \" Here are the tasks in your list:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"raynertjx"},"content":"                + allTasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"raynertjx"},"content":"        System.out.println(tasksList.trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"raynertjx"},"content":"     * Shows list of tasks that user searched for.","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"raynertjx"},"content":"     * @param tasks All user tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"raynertjx"},"content":"    public void showSearchedTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"raynertjx"},"content":"        StringBuilder allTasks \u003d new StringBuilder();","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"raynertjx"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"raynertjx"},"content":"            allTasks.append(String.format(\" %d. %s\\n\", i + 1, tasks.get(i)));","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"raynertjx"},"content":"        String tasksList \u003d \" Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"raynertjx"},"content":"                + allTasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"raynertjx"},"content":"        System.out.println(tasksList.trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"raynertjx"},"content":"     * Shows user the recently added task.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"raynertjx"},"content":"     * @param newTask    New Task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"raynertjx"},"content":"     * @param totalTasks Number of total tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"raynertjx"},"content":"    public void showAddedTask(Task newTask, int totalTasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"raynertjx"},"content":"        String addedTaskMessage \u003d \" Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"raynertjx"},"content":"                + String.format(\"  %s\\n\", newTask)","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"raynertjx"},"content":"                + String.format(\" Now you have %d tasks in the list.\", totalTasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"raynertjx"},"content":"        System.out.println(addedTaskMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"raynertjx"},"content":"     * Shows user the task that was recently marked done.","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"raynertjx"},"content":"     * @param task Recently marked done task.","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"raynertjx"},"content":"    public void showTaskIsDone(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"raynertjx"},"content":"        String taskStatusMessage \u003d \" Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"raynertjx"},"content":"                + task;","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"raynertjx"},"content":"        System.out.println(taskStatusMessage.trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"raynertjx"},"content":"     * Shows user the task that was recently marked undone.","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"raynertjx"},"content":"     * @param task Recently marked undone task.","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"raynertjx"},"content":"    public void showTaskIsUndone(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"raynertjx"},"content":"        String taskStatusMessage \u003d \" OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"raynertjx"},"content":"                + task;","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"raynertjx"},"content":"        System.out.println(taskStatusMessage.trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"raynertjx"},"content":"     * Shows user the recently deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"raynertjx"},"content":"     * @param task      Task that was recently deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"raynertjx"},"content":"     * @param tasksLeft Number of tasks left.","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"raynertjx"},"content":"    public void showDeleteTask(Task task, int tasksLeft) {","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"raynertjx"},"content":"        String taskDeleteMessage \u003d \" Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"raynertjx"},"content":"                + String.format(\"  %s\\n\", task)","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"raynertjx"},"content":"                + String.format(\" Now you have %d tasks in the list.\", tasksLeft);","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"raynertjx"},"content":"        System.out.println(taskDeleteMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"raynertjx"},"content":"     * Shows user an error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"raynertjx"},"content":"     * @param errorMessage Error message that BongoException throws.","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"raynertjx"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"raynertjx"},"content":"        String finalErrorMessage \u003d \" Oh no! Bongo ran into an error :(\\n\" + String.format(\" %s\", errorMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"raynertjx"},"content":"        System.out.println(finalErrorMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"raynertjx"},"content":"     * Shows user the loading files error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"raynertjx"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"raynertjx"},"content":"        String loadingErrorMessage \u003d \"Oh no! Bongo couldn\u0027t find the files, so the following files were created:\";","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"raynertjx"},"content":"        System.out.println(loadingErrorMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"raynertjx":163}},{"path":"src/main/java/bongo/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.DateHelper;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":" * A class for a Deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a Deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"     * @param description Deadline description.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"     * @param deadline    Deadline datetime.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If deadline datetime is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"    public Deadline(String description, LocalDateTime deadline) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"        this.validateDeadline(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a Deadline, specifying whether it is done.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"     * @param description Deadline description.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"     * @param isDone      Deadline is marked done or undone.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"     * @param deadline    Deadline datetime.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If deadline datetime is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime deadline) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"        this.validateDeadline(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"     * Check if deadline provided is valid.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"     * @param deadline Deadline datetime.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If deadline is in the past.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"    private void validateDeadline(LocalDateTime deadline) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"raynertjx"},"content":"        if (deadline.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"Deadline must be in the future.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"raynertjx"},"content":"    public String generateStringForTextFile() throws BongoException {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"raynertjx"},"content":"        String isTaskMarkedDone \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"raynertjx"},"content":"        return String.join(\" | \", \"D\", isTaskMarkedDone, this.description,","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"raynertjx"},"content":"                DateHelper.convertDateTimeToString(this.deadline));","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"raynertjx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"raynertjx"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", super.generateDateString(this.deadline));","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"raynertjx":65}},{"path":"src/main/java/bongo/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.DateHelper;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":" * A class for an Event.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"     * @param description Event description.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"     * @param from        Event from datetime.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"     * @param to          Event to datetime.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If either Event from or to datetime is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"        this.validateEventDuration(from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a Event, specifying whether it is done.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"     * @param description Event description.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"     * @param isDone      Event marked done or undone.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"     * @param from        Event from datetime.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"     * @param to          Event to datetime.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If either Event from or to datetime is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"    public Event(String description, boolean isDone, LocalDateTime from, LocalDateTime to) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"        this.validateEventDuration(from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"     * Check if event to and from datetime provided is valid.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"raynertjx"},"content":"     * @param from Event from datetime.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"raynertjx"},"content":"     * @param to   Event to datetime.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"raynertjx"},"content":"     * @throws BongoException If Event from/to datetime is in the past or if Event","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"raynertjx"},"content":"     *                        from datetime is after it\u0027s to datetime.","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"raynertjx"},"content":"    private void validateEventDuration(LocalDateTime from, LocalDateTime to) throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"raynertjx"},"content":"        if (from.isBefore(LocalDateTime.now()) || to.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"Start and end of event must be in the future.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"raynertjx"},"content":"        if (from.isAfter(to)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"raynertjx"},"content":"            throw new BongoException(\"End of event must be after start of event.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"raynertjx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"raynertjx"},"content":"    public String generateStringForTextFile() throws BongoException {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"raynertjx"},"content":"        String isTaskMarkedDone \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"raynertjx"},"content":"        return String.join(\" | \", \"E\", isTaskMarkedDone, this.description,","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"raynertjx"},"content":"                DateHelper.convertDateTimeToString(this.from), DateHelper.convertDateTimeToString(this.to));","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"raynertjx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"raynertjx"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s to: %s)\",","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"raynertjx"},"content":"                super.generateDateString(from), super.generateDateString(to));","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"raynertjx":76}},{"path":"src/main/java/bongo/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":" * A class for a Task.","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"     * @param description Task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"     * Returns status icon of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"     * @return Status icon of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"     * Converts datetime into formatted string.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"     * @param datetime Datetime of Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"raynertjx"},"content":"     * @return Returns formatted datetime string.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"raynertjx"},"content":"    public String generateDateString(LocalDateTime datetime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"raynertjx"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM d, yyyy hh:mm a\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"raynertjx"},"content":"        return formatter.format(datetime);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"raynertjx"},"content":"     * Returns string to save in text file.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"raynertjx"},"content":"     * @return String to save in text file.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"raynertjx"},"content":"    public abstract String generateStringForTextFile() throws BongoException;","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"raynertjx"},"content":"     * Returns string representation of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"raynertjx"},"content":"     * @return String representation of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"raynertjx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"raynertjx"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"raynertjx":72}},{"path":"src/main/java/bongo/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":" * A class for holding the list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a TaskList, with preloaded tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"     * @param loadedTasks ArrayList of preloaded tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"        this.tasks \u003d loadedTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"        return this.tasks.get(taskIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"     * Deletes a specific task from the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"     * @param taskIndex Index of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"raynertjx"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"raynertjx"},"content":"    public void markTaskDone(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"raynertjx"},"content":"        tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"raynertjx"},"content":"    public void markTaskUndone(int taskIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"raynertjx"},"content":"        tasks.get(taskIndex).markAsUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"raynertjx":59}},{"path":"src/main/java/bongo/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":" * A class for a Todo.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a Todo.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"     * @param description Todo description.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"     * A constructor for a Todo, specifying whether it is done.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"     * @param description Todo description.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"     * @param isDone      Todo marked done or undone.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"    public String generateStringForTextFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"        String isTaskMarkedDone \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"        return String.join(\" | \", \"T\", isTaskMarkedDone, this.description);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"raynertjx":38}},{"path":"src/test/java/bongo/BongoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"public class BongoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"raynertjx":15}},{"path":"src/test/java/bongo/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.DateHelper;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    public void testDeadlineString() throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"        Deadline sampleDeadline \u003d new Deadline(\"homework\", DateHelper.convertStringToDateTime(\"14/6/2030 1200\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"        String expectedOutput \u003d \"[D][ ] homework (by: Friday, Jun 14, 2030 12:00 PM)\";","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedOutput, sampleDeadline.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"    public void testEmptyDeadline_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"        Exception exception \u003d assertThrows(BongoException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"            Parser.parse(\"deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"        String expectedMessage \u003d \"Please include the description and datetime of your deadline.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"    public void testInvalidDeadline_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"        Exception exception \u003d assertThrows(BongoException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"            Parser.parse(\"deadline homework /by 14/6/2001 1200\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"        String expectedMessage \u003d \"Deadline must be in the future.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"    public void testEmptyDeadlineDateTime_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"        Exception exception1 \u003d assertThrows(BongoException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"            Parser.parse(\"deadline homework\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"        Exception exception2 \u003d assertThrows(BongoException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"            Parser.parse(\"deadline homework /by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"        String expectedMessage \u003d \"Please include the datetime of your deadline.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedMessage, exception1.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedMessage, exception2.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"raynertjx":48}},{"path":"src/test/java/bongo/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.DateHelper;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"    public void testEventString() throws BongoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"        Event sampleEvent \u003d new Event(\"party\", DateHelper.convertStringToDateTime(\"14/6/2030 1200\"), DateHelper.convertStringToDateTime(\"14/6/2030 1500\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"        String expectedOutput \u003d \"[E][ ] party (from: Friday, Jun 14, 2030 12:00 PM to: Friday, Jun 14, 2030 03:00 PM)\";","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedOutput, sampleEvent.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"    public void testEmptyEvent_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"        Exception exception \u003d assertThrows(BongoException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"            Parser.parse(\"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"        String expectedMessage \u003d \"Please include the description and datetime of your event.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"raynertjx"},"content":"    public void testInvalidEvent_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"raynertjx"},"content":"        Exception exception1 \u003d assertThrows(BongoException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"raynertjx"},"content":"            Parser.parse(\"event party /from 14/6/2030 1200\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"raynertjx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"raynertjx"},"content":"        Exception exception2 \u003d assertThrows(BongoException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"raynertjx"},"content":"            Parser.parse(\"event party /to 14/6/2030 1200\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"raynertjx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"raynertjx"},"content":"        String expectedMessage \u003d \"Please include the to and from datetime of the event.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedMessage, exception1.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedMessage, exception2.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"raynertjx"},"content":"    public void testEmptyEventDateTime_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"raynertjx"},"content":"        Exception exception \u003d assertThrows(BongoException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"raynertjx"},"content":"            Parser.parse(\"event party\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"raynertjx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"raynertjx"},"content":"        String expectedMessage \u003d \"Please include the datetime of your event.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"raynertjx"},"content":"    public void testFromIsBeforeCurrentTime_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"raynertjx"},"content":"        Exception exception \u003d assertThrows(BongoException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"raynertjx"},"content":"            Parser.parse(\"event party /from 30/8/2023 1200 /to 30/8/2030 1200\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"raynertjx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"raynertjx"},"content":"        String expectedMessage \u003d \"Start and end of event must be in the future.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"raynertjx"},"content":"    public void testFromIsAfterTo_exceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"raynertjx"},"content":"        Exception exception \u003d assertThrows(BongoException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"raynertjx"},"content":"            Parser.parse(\"event party /from 30/8/2031 1200 /to 30/8/2030 1200\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"raynertjx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"raynertjx"},"content":"        String expectedMessage \u003d \"End of event must be after start of event.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"raynertjx":65}},{"path":"src/test/java/bongo/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"package bongo.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.BongoException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"import bongo.helper.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"raynertjx"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"raynertjx"},"content":"    public void testTodoString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"raynertjx"},"content":"        Todo sampleTodo \u003d new Todo(\"make coffee\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"raynertjx"},"content":"        String expectedOutput \u003d \"[T][ ] make coffee\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedOutput, sampleTodo.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"raynertjx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"raynertjx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"    public void testEmptyTodoDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"raynertjx"},"content":"        Exception exception \u003d assertThrows(BongoException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"raynertjx"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"raynertjx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"raynertjx"},"content":"        String expectedMessage \u003d \"Please include the description of your todo.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"raynertjx"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"raynertjx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"raynertjx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"raynertjx":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"raynertjx"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"raynertjx"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"raynertjx"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"raynertjx"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"raynertjx"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"raynertjx"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"raynertjx"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"raynertjx"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"raynertjx":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"raynertjx"},"content":"java -classpath ..\\bin bongo.Bongo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"raynertjx":1,"-":20}}]
