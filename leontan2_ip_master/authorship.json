[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"checkstyle {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leontan2":8,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"D | 1 | go school | 2023-08-29 1000","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"T | 1 | sleep","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"T | 0 | read book","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"D | 0 | complete this level | 2021-12-06 1800","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"T | 0 | sleep","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"leontan2":6}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"T | 1 | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"D | 0 | this | 2023-08-31 2359","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"E | 1 | this | 2023-11-30 2359 to 2023-08-31 1000","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"T | 0 | read","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"T | 0 | bbbbook","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":" * The main class that runs the Duke chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"public class Duke {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"     * Constructs a Duke instance with the specified file path for task storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"     * @param filePath The path to the file used for task storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"     * Runs the main loop of the Duke chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leontan2"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leontan2"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leontan2"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leontan2"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leontan2"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leontan2"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leontan2"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leontan2"},"content":"     * The main method to start the Duke chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leontan2"},"content":"     * @param args Command line arguments (not used in this case).","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"leontan2"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"leontan2"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":61}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":" * Represents a command to add tasks to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"    private String[] words;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"    private String category;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"     * Constructor for creating an AddCommand.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"     * @param words The array of words containing user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"     * @param category The category of the task to be added (\"T\" for Todo, \"D\" for Deadline, \"E\" for Event).","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"    public AddCommand(String[] words, String category) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"        this.words \u003d words;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"     * Checks if the AddCommand should trigger the program to exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"     * Executes the AddCommand by adding the specified task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leontan2"},"content":"     * @param tasks   The list of tasks to which the task will be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leontan2"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"     * @param storage The storage handler for updating task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leontan2"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leontan2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leontan2"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"leontan2"},"content":"            switch (category) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"leontan2"},"content":"            case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"leontan2"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leontan2"},"content":"                    throw new DukeException(ui.messageCard(\"☹ OOPS!!! The description of a todo cannot be empty.\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"leontan2"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"leontan2"},"content":"                //creating the to do","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"leontan2"},"content":"                Todo todo \u003d new Todo(words[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"leontan2"},"content":"                //adding to taskArr and updates the storage","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"leontan2"},"content":"                tasks.addTask(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"leontan2"},"content":"                storage.updateFile(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"leontan2"},"content":"                //printing messages","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"leontan2"},"content":"                String message \u003d \"Got it. I\u0027ve added this task: \\n\" + todo +","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"leontan2"},"content":"                        \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"leontan2"},"content":"                ui.printMessage(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"leontan2"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"leontan2"},"content":"            case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"leontan2"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"leontan2"},"content":"                    throw new DukeException(ui.messageCard(\"☹ OOPS!!! The description of a deadline cannot be empty.\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"leontan2"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"leontan2"},"content":"                String text \u003d words[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"leontan2"},"content":"                String[] split \u003d text.split(\" /by \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"leontan2"},"content":"                String desc \u003d split[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"leontan2"},"content":"                String by \u003d split[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"leontan2"},"content":"                Deadline dl \u003d new Deadline(desc, by);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"leontan2"},"content":"                //add task to taskArr and updating the storage","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"leontan2"},"content":"                tasks.addTask(dl);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"leontan2"},"content":"                storage.updateFile(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"leontan2"},"content":"                //printing the messages","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"leontan2"},"content":"                String dlMessage \u003d \"Got it. I\u0027ve added this task: \\n\" + dl +","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"leontan2"},"content":"                        \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"leontan2"},"content":"                ui.printMessage(dlMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"leontan2"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"leontan2"},"content":"            case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"leontan2"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"leontan2"},"content":"                    throw new DukeException(ui.messageCard(\"☹ OOPS!!! The description of a event cannot be empty.\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"leontan2"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"leontan2"},"content":"                String text2 \u003d words[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"leontan2"},"content":"                String[] slice \u003d text2.split(\" /from \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"leontan2"},"content":"                String descr \u003d slice[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"leontan2"},"content":"                String[] slicess \u003d slice[1].split(\" /to \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"leontan2"},"content":"                String from \u003d slicess[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"leontan2"},"content":"                String to \u003d slicess[1].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"leontan2"},"content":"                Event e \u003d new Event(descr, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"leontan2"},"content":"                //add task to taskArr and updating storage","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"leontan2"},"content":"                tasks.addTask(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"leontan2"},"content":"                storage.updateFile(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"leontan2"},"content":"                //print messages","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"leontan2"},"content":"                String eMessage \u003d \"Got it. I\u0027ve added this task: \\n\" + e +","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"leontan2"},"content":"                        \"\\nNow you have \" + tasks.size() + \" tasks in the list. \";","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"leontan2"},"content":"                ui.printMessage(eMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"leontan2"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"leontan2"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"leontan2"},"content":"                throw new DukeException(ui.messageCard(\"There may be wrong parameters inputted in, please check again!\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"leontan2"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"leontan2"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"leontan2"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":119}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":" * Represents an abstract command that can be executed by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"     * Executes the command, performing the specific actions associated with it.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"     * @param tasks   The list of tasks that may be manipulated by the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"     * @param storage The storage handler for updating task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"     * Checks if the execution of this command should trigger the program to exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"     * Constructs a DeleteCommand with the index of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"     * Executes the DeleteCommand by removing the specified task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"     * @param tasks   The list of tasks from which the task will be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"     * @param storage The storage handler for updating task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"        if (index + 1 \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"            throw new DukeException(ui.messageCard(\"The current number of tasks is \" + tasks.size() + \", \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"                    \"so you can\u0027t delete task \" + (index + 1) + \"!!.\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"        //remove task and updating","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leontan2"},"content":"        storage.updateFile(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leontan2"},"content":"        //printing messages","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"        String res \u003d \"Noted. I\u0027ve removed this task: \\n\" + task + \"\\nNow you have \"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leontan2"},"content":"                + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leontan2"},"content":"        ui.printMessage(res);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"leontan2"},"content":"     * Checks if the DeleteCommand should trigger the program to exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"leontan2"},"content":"     * @return False since deleting a task does not trigger an exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leontan2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"leontan2"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":58}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"    private boolean isExit \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"     * Executes the ExitCommand by displaying the program\u0027s goodbye message.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"     * @param tasks   The list of tasks (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"        ui.bye();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"     * Checks if the ExitCommand should trigger the program to exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"     * @return True, as the exit command should trigger the program to exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"    private String keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"        String res \u003d \"Here are the matching tasks in your list: \";","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"            Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"            if(task.getDescription().contains(this.keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"                res +\u003d \"\\n\" + count + \". \" + task;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"                count++;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"        ui.printMessage(res);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":34}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"     * Executes the ListCommand by displaying all tasks in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"     * @param tasks   The list of tasks to be displayed.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"        String res \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"            res +\u003d \"\\n\" + i + \". \" + tasks.get(i - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"        ui.printMessage(res);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"     * Checks if the ListCommand should trigger the program to exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"     * @return False since listing tasks does not trigger an exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":40}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"     * Constructs a MarkCommand with the index of the task to be marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"     * Executes the MarkCommand by marking the specified task as done in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"     * @param tasks   The list of tasks to which the task\u0027s status will be updated.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"     * @param storage The storage handler for updating task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"        if (this.index + 1 \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"            throw new DukeException(ui.messageCard(\"The current number of tasks is \" + tasks.size() + \", \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"                    \"so you can\u0027t mark task \" + (index + 1) + \"!!.\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"        //update","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"        tasks.markTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leontan2"},"content":"        storage.updateFile(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leontan2"},"content":"        String res \u003d \"Nice! I\u0027ve marked this task as done:\" + \"\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"                + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leontan2"},"content":"        ui.printMessage(res);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leontan2"},"content":"     * Checks if the MarkCommand should trigger the program to exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"leontan2"},"content":"     * @return False since marking a task as done does not trigger an exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"leontan2"},"content":"    public boolean isExit(){","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leontan2"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":57}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":" * Represents a command for handling unknown user inputs.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"public class UnknownCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"     * Executes the UnknownCommand by displaying a message indicating the input is not recognized.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"     * @param tasks   The list of tasks (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"        ui.printMessage(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"     * Checks if the UnknownCommand should trigger the program to exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"     * @return False since an unknown command does not trigger an exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":34}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":" * Represents a command to unmark a task as done in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"     * Constructs an UnmarkCommand with the index of the task to be unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"     * Executes the UnmarkCommand by marking the specified task as not done in the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"     * @param tasks   The list of tasks to which the task\u0027s status will be updated.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"     * @param storage The storage handler for updating task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"     * @throws DukeException If there is an issue executing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"        if (this.index + 1 \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"            throw new DukeException(ui.messageCard(\"The current number of tasks is \" + tasks.size() + \", \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"                    \"so you can\u0027t unmark task \" + (index + 1) + \"!!.\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"        //update","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"        tasks.unmarkTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leontan2"},"content":"        storage.updateFile(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leontan2"},"content":"        String res \u003d \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"                + \"[\" + task.getStatusIcon() + \"] \" + task.getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leontan2"},"content":"        ui.printMessage(res);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leontan2"},"content":"     * Checks if the UnmarkCommand should trigger the program to exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"leontan2"},"content":"     * @return False since unmarking a task does not trigger an exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leontan2"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"leontan2"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":56}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":" * Represents a custom exception specific to the Duke application.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"     * @param message The error message explaining the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":" * Parses user input and generates corresponding Command objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"     * Parses the given full command and returns the corresponding Command object.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"     * @param fullCommand The full user input command.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"     * @return The parsed Command object corresponding to the input.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"     * @throws DukeException If there is an issue parsing the command.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"    public static Command parse(String fullCommand) throws DukeException{","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"        String[] words \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"        String firstWord \u003d words[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"        switch (firstWord) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"            int i \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"            return new MarkCommand(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"            int j \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"            return new UnmarkCommand(j);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"        case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"            return new FindCommand(words[1].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"            int k \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"            return new DeleteCommand(k);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"            return new AddCommand(words, \"T\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leontan2"},"content":"            return new AddCommand(words, \"D\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leontan2"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leontan2"},"content":"            return new AddCommand(words, \"E\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leontan2"},"content":"            return new UnknownCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":48}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":" * Represents a storage which handles loading tasks from a file and updating tasks to a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"     * @param filePath The path to the file used for task storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"     * @return An ArrayList containing loaded tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"     * @throws DukeException If there\u0027s an issue loading tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leontan2"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leontan2"},"content":"            ArrayList\u003cTask\u003e taskArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leontan2"},"content":"                String currLine \u003d sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leontan2"},"content":"                String[] wordArr \u003d currLine.split(\"\\\\|\"); // Escape the | and space characters","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leontan2"},"content":"                String category \u003d wordArr[0].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leontan2"},"content":"                switch (category) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"leontan2"},"content":"                case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"leontan2"},"content":"                    Todo todo \u003d new Todo(wordArr[2].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"leontan2"},"content":"                    if (wordArr[1].trim().equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leontan2"},"content":"                        todo.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"leontan2"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leontan2"},"content":"                    taskArr.add(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"leontan2"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"leontan2"},"content":"                case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"leontan2"},"content":"                    Deadline dl \u003d new Deadline(wordArr[2].trim(), wordArr[3].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"leontan2"},"content":"                    if (wordArr[1].trim().equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"leontan2"},"content":"                        dl.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"leontan2"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"leontan2"},"content":"                    taskArr.add(dl);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"leontan2"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"leontan2"},"content":"                case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"leontan2"},"content":"                    String time \u003d wordArr[3].trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"leontan2"},"content":"                    String[] timeline \u003d time.split(\"to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"leontan2"},"content":"                    Event e \u003d new Event(wordArr[2].trim(), timeline[0].trim(), timeline[1].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"leontan2"},"content":"                    if (wordArr[1].trim().equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"leontan2"},"content":"                        e.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"leontan2"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"leontan2"},"content":"                    taskArr.add(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"leontan2"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"leontan2"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"leontan2"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"leontan2"},"content":"            return taskArr;","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"leontan2"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"leontan2"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"leontan2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"leontan2"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"leontan2"},"content":"     * Updates the storage file with the tasks in the given task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"leontan2"},"content":"     * @param taskList The task list to update the file with.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"leontan2"},"content":"    public void updateFile(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"leontan2"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"leontan2"},"content":"            // Open the FileWriter without append mode.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"leontan2"},"content":"            FileWriter fWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"leontan2"},"content":"            // delete whole text.","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"leontan2"},"content":"            fWriter.write(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"leontan2"},"content":"            // Close the FileWriter","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"leontan2"},"content":"            fWriter.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"leontan2"},"content":"            // Open the FileWriter in append mode.","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"leontan2"},"content":"            FileWriter fWriter2 \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"leontan2"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"leontan2"},"content":"                Task t \u003d taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"leontan2"},"content":"                if (t instanceof Todo) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"leontan2"},"content":"                    fWriter2.write(\"T | \" + t.getNumber() + \" | \" + t.getDescription() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"leontan2"},"content":"                } else if (t instanceof Deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"leontan2"},"content":"                    Deadline d \u003d (Deadline) t;","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"leontan2"},"content":"                    fWriter2.write(\"D | \" + d.getNumber() + \" | \" + d.getDescription() + \" | \" + d.getBy() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"leontan2"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"leontan2"},"content":"                    //event","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"leontan2"},"content":"                    Event e \u003d (Event) t;","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"leontan2"},"content":"                    fWriter2.write(\"E | \" + e.getNumber() + \" | \" + e.getDescription() + \" | \" + e.getFrom() + \" to \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"leontan2"},"content":"                            e.getTo() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"leontan2"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"leontan2"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"leontan2"},"content":"            // Close the FileWriter2","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"leontan2"},"content":"            fWriter2.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"leontan2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"leontan2"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":121}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"    LocalDateTime date;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"    protected String by;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"     * Constructs a Deadline instance with the given description and deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"     * @param by          The deadline of the task in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"        super(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"        this.date \u003d LocalDateTime.parse(this.by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"     * Returns the formatted deadline date.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"     * @return The formatted deadline date in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"     * @return A string containing the task\u0027s details, including its description and deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leontan2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leontan2"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leontan2"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":" * Represents an event task with a start and end date/time.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"    private String from;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"    private String to;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"    private LocalDateTime fromDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"    private LocalDateTime toDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"     * Constructs an Event task with the given description and date/time details.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"     * @param from        The start date/time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"     * @param to          The end date/time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"        super(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"        this.fromDate \u003d LocalDateTime.parse(this.from, inputFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"        this.toDate \u003d LocalDateTime.parse(this.to, inputFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"     * Retrieves the formatted start date/time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"     * @return The formatted start date/time in \"yyyy-MM-dd HHmm\" pattern.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"    public String getFrom() {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"        return this.fromDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"     * Retrieves the formatted end date/time of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leontan2"},"content":"     * @return The formatted end date/time in \"yyyy-MM-dd HHmm\" pattern.","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leontan2"},"content":"    public String getTo() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leontan2"},"content":"        return this.toDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leontan2"},"content":"     * Generates a formatted string representation of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leontan2"},"content":"     * @return A string displaying the event details, including dates/times.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"leontan2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"leontan2"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"leontan2"},"content":"                + this.fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"leontan2"},"content":"                        + \" to: \" + this.toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":63}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":" * Represents a general task with a description and status.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"public class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"    protected String description;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"    private String horizontal \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"     * Constructs a Task instance with the given description.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"     * @return \"X\" if the task is done, \" \" (space) if the task is not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"     * Returns the number representation of the task\u0027s status.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"     * @return \"1\" if the task is done, \"0\" if the task is not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"    public String getNumber() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with X","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leontan2"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leontan2"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leontan2"},"content":"        return description;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"leontan2"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leontan2"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"leontan2"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leontan2"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"leontan2"},"content":"     * Unmarks the task if it\u0027s marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"leontan2"},"content":"     * @throws DukeException If the task is not marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"leontan2"},"content":"    public void unmark() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"leontan2"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"leontan2"},"content":"            throw new DukeException(horizontal + \"\\nOOPS!!! You did not mark this task.\\n\" + horizontal);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"leontan2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"leontan2"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"leontan2"},"content":"     * Returns a string representation of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"leontan2"},"content":"     * @return A string containing the task\u0027s status icon and description.","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"leontan2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"leontan2"},"content":"        return \"[\" + this.getStatusIcon() +  \"] \" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":78}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":" * Manages a list of tasks and provides methods to perform operations on them.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"    ArrayList\u003cTask\u003e taskArr;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"        this.taskArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"     * @param taskArr The list of tasks to initialize the TaskList with.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArr) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"        this.taskArr \u003d taskArr;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"    public int size() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"        return taskArr.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"     * Gets a task from the list at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leontan2"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leontan2"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"        return this.taskArr.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leontan2"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"leontan2"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"leontan2"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leontan2"},"content":"        this.taskArr.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"leontan2"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"leontan2"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"leontan2"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"leontan2"},"content":"        this.taskArr.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"leontan2"},"content":"     * Marks a task in the task list as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"leontan2"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"leontan2"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"leontan2"},"content":"        taskArr.get(index).markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"leontan2"},"content":"     * Unmarks a task in the task list if it is marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"leontan2"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"leontan2"},"content":"     * @throws DukeException If the task is not marked as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"leontan2"},"content":"    public void unmarkTask(int index) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"leontan2"},"content":"        taskArr.get(index).unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":83}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":" * Represents a todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"     * Constructs a Todo instance with the given description.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"        super(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"     * @return A string containing the task type indicator and description.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":26}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"        private String name \u003d \"Bob\";","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"        private String horizontal \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"        private Scanner sc;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"        public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"            this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"        public String messageCard(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"            return horizontal + \"\\n\" + message + \"\\n\" + horizontal;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"        public void showWelcome() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"            String ln1 \u003d String.format(\"Hello! I\u0027m %s\", this.name);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"            String ln2 \u003d \"What can I do for you?\";","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"            String ln3 \u003d ln1 + \"\\n\"+ ln2;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"            System.out.println(messageCard(ln3));","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"        public void bye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"            String ln3 \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"            System.out.println(messageCard(ln3));","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"        public void showLoadingError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"            String error \u003d this.name + \": Error encountered, loading screen failed!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"            System.out.println(error);;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"        public void showError(String msg) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"            System.out.println(msg);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"        public void showLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leontan2"},"content":"            System.out.println(horizontal);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leontan2"},"content":"        public void printMessage(String msg) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leontan2"},"content":"            System.out.println(messageCard(msg));","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leontan2"},"content":"        public String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leontan2"},"content":"            return this.sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leontan2"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":49}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"    public void InvalidDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"        Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"        String fullCommand \u003d\"event project meeting /from asdasda /to bdf9dbfdf\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"        String[] words \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"        assertThrows(duke.exception.DukeException.class,","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"                () -\u003e new AddCommand(words, words[0]).execute(testList, ui, storage));","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"    public void InvalidInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"        Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"        String fullCommand \u003d\"blah\";","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"        String[] words \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leontan2"},"content":"        assertThrows(duke.exception.DukeException.class,","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leontan2"},"content":"                () -\u003e new AddCommand(words, words[0]).execute(testList, ui, storage));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":38}},{"path":"src/test/java/duke/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"    public void UnmarkOutOfRangeIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leontan2"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leontan2"},"content":"        Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leontan2"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leontan2"},"content":"        assertThrows(DukeException.class,","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leontan2"},"content":"                () -\u003e new UnmarkCommand(20).execute(testList, ui, storage));","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leontan2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leontan2"},"content":"    public void InvalidUnmarkIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leontan2"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leontan2"},"content":"        Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leontan2"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leontan2"},"content":"        assertThrows(DukeException.class,","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leontan2"},"content":"                () -\u003e new UnmarkCommand(1).execute(testList, ui, storage));","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":33}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"package duke.task;  //same package as the class being tested","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leontan2":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leontan2"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"leontan2"},"content":"deadline complete this level /by 2021-12-06 1800","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"leontan2"},"content":"event project meeting /from 2021-12-06 1800 /to 2021-12-12 1300","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"leontan2"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"leontan2"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"leontan2"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"leontan2"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"leontan2"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"leontan2"},"content":"unmark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"leontan2"},"content":"unmark 7","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"leontan2"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"leontan2"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"leontan2"},"content":"blah","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"leontan2"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"leontan2"},"content":"delete 6","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"leontan2"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"leontan2"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"leontan2":17}}]
