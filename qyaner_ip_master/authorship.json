[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"# Duke ","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"\u003e ‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"Duke frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"- text-based","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"- easy to learn","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"- ~FAST~ SUPER FAST to use","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"All you need to do is,","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"1. download it from [here](https://github.com/qyaner/ip).","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"2. double-click it.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"3. add your tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"4.let it manage your tasks for you üòâ","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"And it is **FREE**!","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"Features:","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"- [x] Managing tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"- [x] Managing deadlines","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"```ruby","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"public class Main {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"qyaner":29,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"mainClassName \u003d \u0027Duke\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"qyaner":4,"-":41}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"import duke.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":" * A chatbot that helps a person to keep track of a list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":" * @author Qin Yan Er","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"     * Creates a new Duke instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"     * @param filePath The file path where the list of tasks are saved in.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"     * Runs the Duke program.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"        ui.showIntro();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"        while (true) {","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"            String command \u003d scanner.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"            if (command.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"                try {","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"                    throw new DukeException(\"OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"            // exits program","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"            } else if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"                ui.showBye();","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"                break;","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"                Parser.parse(command, tasks, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"qyaner":60,"-":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":" * @author Qin Yan Er","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"    protected String[] parts;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"    protected String date;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"    protected String time;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"     * Creates a new Deadline instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"     * Extracts and processes the date and time from the \u0027by\u0027 string.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"    public void dateTime() {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"        parts \u003d this.by.split(\"/\");","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"        String day;","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"        String month;","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"        String year;","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"        if (parts.length !\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"            if (parts[0].length() \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"                day \u003d \"0\" + parts[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"                day \u003d parts[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"            if (parts[1].length() \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"                month \u003d \"0\" + parts[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"                month \u003d parts[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"            String[] yearTime \u003d parts[2].split(\"\\\\s+\");","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"            if (yearTime.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"                year \u003d parts[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"                year \u003d yearTime[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"                time \u003d yearTime[1].substring(0, 2) + \":\" + yearTime[1].substring(2);","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"            date \u003d year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"qyaner"},"content":"     * Returns a formatted string to save the task to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"qyaner"},"content":"    public String saveTask() {","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"qyaner"},"content":"        return \"D\" + \" | \" + super.saveTask() + \" | \" + this.by;","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"qyaner"},"content":"     * Returns a formatted string for display.","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"qyaner"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"qyaner"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"qyaner"},"content":"        dateTime();","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"qyaner"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"qyaner"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"qyaner"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"qyaner"},"content":"            LocalDate deadline \u003d LocalDate.parse(date);","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"qyaner"},"content":"            if (time \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"qyaner"},"content":"                return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"qyaner"},"content":"                        deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"qyaner"},"content":"                LocalTime deadlineTime \u003d LocalTime.parse(time);","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"qyaner"},"content":"                return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"qyaner"},"content":"                        deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \" +","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"qyaner"},"content":"                        deadlineTime.format(DateTimeFormatter.ofPattern(\"hh:mma\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"qyaner":99}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":" * Exception to be thrown when errors such as incorrect inputs entered by user occur.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":" * @author Qin Yan Er","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"     * Creates a new DukeException instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"     * @param message to be printed when errors occur.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"qyaner":19}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":" * Represents an event task that occurs during a specified time range.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":" * @author Qin Yan Er","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"     * Creates a new Event instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"     * @param from The starting time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"     * @param to The ending time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"     * Returns a formatted string to save the event task to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"    public String saveTask() {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"        return \"E\" + \" | \" + super.saveTask() + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"     * Returns a formatted string for display.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"qyaner":45}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import duke.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":" * Deals with making sense of the user\u0027s command.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":" * ","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":" * @author Qin Yan Er","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"     * Parses the given command and performs corresponding actions on the provided list, storage and ui.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"     * @param command The command to be parsed and executed.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"     * @param list Contains the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"     * @param storage Saves tasks into file and load tasks from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"     * @param ui Displays messages to interact with user.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"    public static void parse(String command, TaskList list, Storage storage, Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"        if (command.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"            String[] sub \u003d command.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"            if (sub.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"                int number \u003d Integer.parseInt(sub[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"                if (number \u003c list.getSize() \u0026\u0026 number \u003e\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"                    Task removedTask \u003d list.delete(number);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"                    // print","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"                    ui.removeTask(list, removedTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"                        throw new DukeException(\"OOPS!!! The task you entered is not in the list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"                    throw new DukeException(\"OOPS!!! Please fill in the task I need to delete\");","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"        // list tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"        } else if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"            ui.printList(list);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"        // find task","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"        } else if (command.toLowerCase().startsWith(\"find\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"            String keyword \u003d command.substring(5).trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d list.find(keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"            ui.printMatchingTasks(matchingTasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"        // mark task as done","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"        } else if (command.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"qyaner"},"content":"            String[] sub \u003d command.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"qyaner"},"content":"            if (sub.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"qyaner"},"content":"                int number \u003d Integer.parseInt(sub[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"qyaner"},"content":"                if (number \u003c list.getSize() \u0026\u0026 number \u003e\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"                    list.getTask(number).markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"qyaner"},"content":"                    // print","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"qyaner"},"content":"                    ui.mark(list, number);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"qyaner"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"qyaner"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"qyaner"},"content":"                        throw new DukeException(\"OOPS!!! The task you entered is not in the list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"qyaner"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"qyaner"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"qyaner"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"qyaner"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"qyaner"},"content":"                    throw new DukeException(\"OOPS!!! Please fill in the task I need to mark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"qyaner"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"qyaner"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"qyaner"},"content":"        // unmark task","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"qyaner"},"content":"        } else if (command.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"qyaner"},"content":"            String[] sub \u003d command.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"qyaner"},"content":"            if (sub.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"qyaner"},"content":"                int number \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"qyaner"},"content":"                if (number \u003c list.getSize() \u0026\u0026 number \u003e\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"qyaner"},"content":"                    list.getTask(number).markAsNotDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"qyaner"},"content":"                    // print","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"qyaner"},"content":"                    ui.unMark(list, number);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"qyaner"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"qyaner"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"qyaner"},"content":"                        throw new DukeException(\"OOPS!!! The task you entered is not in the list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"qyaner"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"qyaner"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"qyaner"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"qyaner"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"qyaner"},"content":"                    throw new DukeException(\"OOPS!!! Please fill in the task I need to unmark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"qyaner"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"qyaner"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"qyaner"},"content":"        // add todo","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"qyaner"},"content":"        } else if (command.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"qyaner"},"content":"            String todo \u003d command.substring(4).trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"qyaner"},"content":"            if (todo.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"qyaner"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"qyaner"},"content":"                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"qyaner"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"qyaner"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"qyaner"},"content":"                Todo newTodo \u003d new Todo(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"qyaner"},"content":"                list.add(newTodo);","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"qyaner"},"content":"                //print","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"qyaner"},"content":"                ui.addTodo(list, newTodo);","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"qyaner"},"content":"        // add deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"qyaner"},"content":"        } else if (command.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"qyaner"},"content":"            String deadline \u003d command.substring(8).trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"qyaner"},"content":"            if (deadline.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"qyaner"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"qyaner"},"content":"                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"qyaner"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"qyaner"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"qyaner"},"content":"                // separate the task and its deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"qyaner"},"content":"                String[] sub \u003d deadline.split(\"/by\");","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"qyaner"},"content":"                if (sub.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"qyaner"},"content":"                    String description \u003d sub[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"qyaner"},"content":"                    String by \u003d sub[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"qyaner"},"content":"                    Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"qyaner"},"content":"                    list.add(newDeadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"qyaner"},"content":"                    // print","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"qyaner"},"content":"                    ui.addDeadline(list, newDeadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"qyaner"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"qyaner"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"qyaner"},"content":"                        throw new DukeException(\"OOPS!!! Please fill in the deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"qyaner"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"qyaner"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"qyaner"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"qyaner"},"content":"        // add event","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"qyaner"},"content":"        } else if (command.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"qyaner"},"content":"            String event \u003d command.substring(5).trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"qyaner"},"content":"            if (event.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"qyaner"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"qyaner"},"content":"                    throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"qyaner"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"qyaner"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"qyaner"},"content":"                // separate event and timing","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"qyaner"},"content":"                String[] sub \u003d event.split(\"/from\");","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"qyaner"},"content":"                if (sub.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"qyaner"},"content":"                    String description \u003d sub[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"qyaner"},"content":"                    String timing \u003d sub[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"qyaner"},"content":"                    // separate start time and end time","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"qyaner"},"content":"                    String[] fromTo \u003d timing.split(\"/to\");","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"qyaner"},"content":"                    if (fromTo.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"qyaner"},"content":"                        String from \u003d fromTo[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"qyaner"},"content":"                        String to \u003d fromTo[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"qyaner"},"content":"                        Event newEvent \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"qyaner"},"content":"                        list.add(newEvent);","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"qyaner"},"content":"                        // print","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"qyaner"},"content":"                        ui.addEvent(list, newEvent);","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"qyaner"},"content":"                    } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"qyaner"},"content":"                        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"qyaner"},"content":"                            throw new DukeException(\"OOPS!!! Please fill in the time the event ends\");","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"qyaner"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"qyaner"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"qyaner"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"qyaner"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"qyaner"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"qyaner"},"content":"                    try {","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"qyaner"},"content":"                        throw new DukeException(\"OOPS!!! Please fill in the timings\");","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"qyaner"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"qyaner"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"qyaner"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"qyaner"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"qyaner"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"qyaner"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"qyaner"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"qyaner"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"qyaner"},"content":"        // save updated task list to storage","lastModifiedDate":"2023-08-30"},{"lineNumber":219,"author":{"gitId":"qyaner"},"content":"        storage.save(list);","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"qyaner":222}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":" * Deals with saving tasks into file and loading tasks from file.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":" * @author Qin Yan Er","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"    private String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"     * Create a new Storage instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"     * @param filePath The file path where the list of tasks are stored in.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"     * Saves the list of tasks into file.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"     * @param list Contains the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"    public void save(TaskList list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"                fileWriter.write(list.getTask(i).saveTask() + System.lineSeparator());","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"     * Loads the list of tasks from file.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"     * @return an ArrayList instance containing the lists of tasks stored in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"                    String saveFormat \u003d scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"qyaner"},"content":"                    tasks.add(Task.loadData(saveFormat));","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"qyaner"},"content":"                scanner.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"qyaner"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"qyaner"},"content":"            System.out.println((e.getMessage()));","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"qyaner"},"content":"        return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"qyaner":71}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":" * Represents a basic task with a description and completion status.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":" * @author Qin Yan Er","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"     * Creates a new Task instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"     * Returns the status icon for the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"     * @return A string representing the task\u0027s completion status.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"        return this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"     * Returns a formatted string to save the task to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"    public String saveTask() {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"            return \"1\" + \" | \" + this.description;","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"qyaner"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"            return \"0\" + \" | \" + this.description;","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"     * Loads task data from a formatted string.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"qyaner"},"content":"     * @param savedTasks A formatted string representing a saved task.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"qyaner"},"content":"     * @return A Task object reconstructed from the saved data.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"qyaner"},"content":"    public static Task loadData(String savedTasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"qyaner"},"content":"        String[] parts \u003d savedTasks.split(\" \\\\| \");","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"qyaner"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"qyaner"},"content":"        String doneOrNot \u003d parts[1];","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"qyaner"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"qyaner"},"content":"        Task task;","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"qyaner"},"content":"        if (doneOrNot.equals(\"1\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"qyaner"},"content":"            if (type.equals(\"T\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"qyaner"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"qyaner"},"content":"                task.markAsDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"qyaner"},"content":"            } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"qyaner"},"content":"                String by \u003d parts[3];","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"qyaner"},"content":"                task \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"qyaner"},"content":"                task.markAsDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"qyaner"},"content":"                String from \u003d parts[3];","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"qyaner"},"content":"                String to \u003d parts[4];","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"qyaner"},"content":"                task \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"qyaner"},"content":"                task.markAsDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"qyaner"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"qyaner"},"content":"            if (type.equals(\"T\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"qyaner"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"qyaner"},"content":"            } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"qyaner"},"content":"                String by \u003d parts[3];","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"qyaner"},"content":"                task \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"qyaner"},"content":"                String from \u003d parts[3];","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"qyaner"},"content":"                String to \u003d parts[4];","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"qyaner"},"content":"                task \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"qyaner"},"content":"            return task;","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"qyaner"},"content":"     * Converts the task to a formatted string for display.","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"qyaner"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"qyaner"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"qyaner"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"qyaner":120}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import duke.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"     * Creates a new TaskList instance with the provided list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"     * @param list The initial list of tasks for the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"     * @throws DukeException If the provided list of tasks is null.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"        if (list \u003d\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"            throw new DukeException(\"Empty taskList\");","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"            this.list \u003d list;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"     * Creates an empty TaskList instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"    };","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"     * @param task The task to be added to the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"        list.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"     * Deletes a task from the TaskList at the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"     * @return The task that was removed from the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"    public Task delete(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"        Task removedTask \u003d list.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"        return removedTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"     * Retrieves a task from the TaskList at the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"qyaner"},"content":"        return list.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"qyaner"},"content":"     * Gets the number of tasks in the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"qyaner"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"qyaner"},"content":"        return list.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"qyaner"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"qyaner"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"qyaner"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"qyaner"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"qyaner"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"qyaner"},"content":"        return matchingTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"qyaner":86}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import duke.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":" * Represents a task that the user needs to do.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":" * @author Qin Yan Er","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"     * Creates a new Todo instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"     * @param description contains the description of the todo.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"     * Returns a formatted string to be saved into a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"    public String saveTask() {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"        return \"T\" + \" | \" + super.saveTask();","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"     * Returns a formatted string for display.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"qyaner":40}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import duke.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":" * Prints messages to interact with user.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":" * @author Qin Yan Er","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"     * Creates a new Ui instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"    public Ui() {}","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"     * Prints the welcome message when program just started running.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"    public void showIntro() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"     * Prints when program is unable to load tasks from file.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Loading Error\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"     * Prints when user exits the program.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"    public void showBye() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"     * Prints the task to be removed and how many tasks are left in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"     * @param removedTask the task to be removed.","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"    public void removeTask(TaskList list, Task removedTask) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"        System.out.println(removedTask.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"     * Prints when users asks for the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"    public void printList(TaskList list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"        if (list.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"            System.out.println(\"There are no tasks in your list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"qyaner"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"qyaner"},"content":"                System.out.println((i + 1) + \". \" + list.getTask(i).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"qyaner"},"content":"    public void printMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"qyaner"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"qyaner"},"content":"            System.out.println((i + 1) + \". \" + matchingTasks.get(i).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"qyaner"},"content":"     * Prints when user marks a task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"qyaner"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"qyaner"},"content":"     * @param number the task number to be marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"qyaner"},"content":"    public void mark(TaskList list, int number) {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"qyaner"},"content":"        System.out.println(list.getTask(number).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"qyaner"},"content":"     * Prints when user unmarks a done task back to not done yet.","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"qyaner"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"qyaner"},"content":"     * @param number the task number to be unmarked.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"qyaner"},"content":"    public void unMark(TaskList list, int number) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"qyaner"},"content":"        System.out.println(list.getTask(number).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"qyaner"},"content":"     * Prints when user wants to add a todo to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"qyaner"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"qyaner"},"content":"     * @param newTodo the new todo to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"qyaner"},"content":"    public void addTodo(TaskList list, Todo newTodo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"qyaner"},"content":"        System.out.println(newTodo.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"qyaner"},"content":"     * Prints when user wants to add a deadline to task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"qyaner"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"qyaner"},"content":"     * @param newDeadline the new deadline to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"qyaner"},"content":"    public void addDeadline(TaskList list, Deadline newDeadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"qyaner"},"content":"        System.out.println(newDeadline.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"qyaner"},"content":"     * Prints when user wants to add an event to task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"qyaner"},"content":"     * @param list the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"qyaner"},"content":"     * @param newEvent the new event to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"qyaner"},"content":"    public void addEvent(TaskList list, Event newEvent) {","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"qyaner"},"content":"        System.out.println(newEvent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"qyaner"},"content":"        System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"qyaner":135}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":" * Tests the methods in Parser class.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":" * @author Qin Yan Er","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"    public void testParse1() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"        String input1 \u003d \"todo buy book\";","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"        String input2 \u003d \"todo read book\";","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"        String input3 \u003d \"delete 1\";","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"        String input4 \u003d \"mark 1\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"        Storage storage \u003d new Storage(\"data/list.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input1, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input2, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input3, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input4, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"        assertEquals(1, list.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"        assertTrue(list.getTask(0) instanceof Todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"        assertEquals(\"[T][X] read book\", list.getTask(0).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"    public void testParse2() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"        String input1 \u003d \"deadline cs2030s lab /by 5/10/2023 2359\";","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"        String input2 \u003d \"event project meeting /from Sat 8pm /to 10pm\";","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"        String input3 \u003d \"mark 10\";","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"        String input4 \u003d \"mark 1\";","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"        String input5 \u003d \"mark 2\";","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"        String input6 \u003d \"unmark 2\";","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"        Storage storage \u003d new Storage(\"data/list.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input1, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input2, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input3, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input4, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input5, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input6, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"        assertEquals(2, list.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"        assertTrue(list.getTask(0) instanceof Deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"        assertTrue(list.getTask(1) instanceof Event);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"        assertEquals(","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"                \"[D][X] cs2030s lab (by: Oct 5 2023, 11:59PM)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"                list.getTask(0).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"        assertEquals(","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"                \"[E][ ] project meeting (from: Sat 8pm to: 10pm)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"                list.getTask(1).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"qyaner"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"qyaner"},"content":"    public void testParse3() {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"qyaner"},"content":"        String input1 \u003d \"hello\";","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"qyaner"},"content":"        String input2 \u003d \"deadline \";","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"        String input3 \u003d \"deadline /by\";","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"qyaner"},"content":"        String input4 \u003d \"event /from\";","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"qyaner"},"content":"        String input5 \u003d \"event /from Mon 2pm /to\";","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"qyaner"},"content":"        String input6 \u003d \"mark 0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"qyaner"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"qyaner"},"content":"        Storage storage \u003d new Storage(\"data/list.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"qyaner"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input1, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input2, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input3, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input4, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input5, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"qyaner"},"content":"        Parser.parse(input6, list, storage, ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"qyaner"},"content":"        assertEquals(0, list.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"qyaner":85}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":" * Tests the methods in Storage class.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":" * ","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":" * @author Qin Yan Er","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"    public void testSaveAndLoad() throws IOException {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"        Path filePath \u003d Path.of(\"data/test.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"        Storage storage \u003d new Storage(filePath.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"Monday\");","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"        Event event \u003d new Event(\"project meeting\", \"Mon 2pm\", \"4pm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"        list.add(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"        list.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"        list.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"        storage.save(list);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"        // Assert","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"        assertEquals(3, lines.size());","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"        assertEquals(\"T | 0 | read book\", lines.get(0));","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"        assertEquals(\"D | 0 | return book | Monday\", lines.get(1));","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"        assertEquals(\"E | 0 | project meeting | Mon 2pm | 4pm\", lines.get(2));","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"    public void testLoadInvalidFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"        String invalidFilePath \u003d \"invalid-file-path.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"        Storage storage \u003d new Storage(invalidFilePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"        assertThrows(NullPointerException.class, () -\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"            storage.load();","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"        });","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"qyaner":53}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":" * Tests the methods in TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":" *","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":" * @author Qin Yan Er","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"    ","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"    public void testAdd() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"Monday\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"        Event event \u003d new Event(\"project meeting\", \"Mon 2pm\", \"4pm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"        list.add(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"        list.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"        list.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"        assertEquals(3, list.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"        assertEquals(todo, list.getTask(0));","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"        assertEquals(deadline, list.getTask(1));","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"        assertEquals(event, list.getTask(2));","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"        assertEquals(\"[T][ ] read book\", list.getTask(0).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"        assertEquals(\"[D][ ] return book (by: Monday)\", list.getTask(1).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"        assertEquals(\"[E][ ] project meeting (from: Mon 2pm to: 4pm)\", list.getTask(2).toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"qyaner":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"qyaner":7}}]
