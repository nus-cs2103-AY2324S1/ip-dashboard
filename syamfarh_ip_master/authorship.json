[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"    /** deadline type String */","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"    protected String by;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"     * Initialize Task object with task name and task is not done.","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"     * @param description type String;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"     * @param by type String;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"        return (\"D|\" + super.fileFormat() + \"|\" + this.by);","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"import java.io.File;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"    /** name of ChatBot */","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    private final String name \u003d \"Ken\";","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"    /** store user Input in Task array */","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    private ArrayList\u003cTask\u003e lists;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"     * Initialize the fixed sized array.","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    public Duke() {","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"        this.lists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"     * Return the name of the Duke ChatBot.","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"     * @return this.name.","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    private String getName() {","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"        return this.name;","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"     * Return specific String output based on user Input.","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"     * @param input User input from main.","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"     * @return output reply.","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"    private String replyUser(String input) {","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        String output;","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"        switch (input) {","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"                output \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"            case \"barbie\":","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"                output \u003d \"Hi barbie!\";","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"            case \"list\":","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"                output \u003d outputList();","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"            default:","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"                if (input.startsWith(\"mark \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"                    try {","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"                        Integer i \u003d Integer.valueOf(input.substring(5));","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"                        if (i \u003c\u003d this.lists.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"                            this.lists.get(i - 1).markAsDone();","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"                            output \u003d \"Nice! I\u0027ve marked this task as done: \\n\" + this.lists.get(i - 1).toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"                        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"                            output \u003d \"☹ OOPS!!! The number input does not exist.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"                    } catch (NumberFormatException err) {","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"                        output \u003d \"☹ OOPS!!! The number input does not exist.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"                } else if(input.startsWith(\"unmark \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"syamfarh"},"content":"                    try {","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"                        Integer i \u003d Integer.valueOf(input.substring(7));","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"                        if (i \u003c\u003d this.lists.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"                            this.lists.get(i - 1).markAsUndone();","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"                            output \u003d \"OK, I\u0027ve marked this task as not done yet: \\n\" + this.lists.get(i - 1).toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"syamfarh"},"content":"                        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"syamfarh"},"content":"                            output \u003d \"☹ OOPS!!! The number input does not exist.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"syamfarh"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"syamfarh"},"content":"                    } catch (NumberFormatException err){","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"syamfarh"},"content":"                        output \u003d \"☹ OOPS!!! The number input does not exist.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"syamfarh"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"syamfarh"},"content":"                } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"syamfarh"},"content":"                    if (input.startsWith(\"todo \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"syamfarh"},"content":"                        String desc \u003d input.substring(5);","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"syamfarh"},"content":"                        if (desc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"syamfarh"},"content":"                            output \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"syamfarh"},"content":"                        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"syamfarh"},"content":"                            this.lists.add(new ToDo(desc));","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"syamfarh"},"content":"                            output \u003d \"Got it. I\u0027ve added this task: \\n\" + this.lists.get(this.lists.size() - 1) + \"\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"syamfarh"},"content":"                                    + \"Now you have \" + this.lists.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"syamfarh"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"syamfarh"},"content":"                    } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"syamfarh"},"content":"                        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"syamfarh"},"content":"                            int index \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"syamfarh"},"content":"                            String date;","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"syamfarh"},"content":"                            if (isValidDate(input.substring(index + 4))) {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"syamfarh"},"content":"                                date \u003d parseDate(input.substring(index + 4));","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"syamfarh"},"content":"                            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"syamfarh"},"content":"                                date \u003d input.substring(index + 4);","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"syamfarh"},"content":"                            }","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"syamfarh"},"content":"                            this.lists.add(new Deadline(input.substring(9,index - 1), date));","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"syamfarh"},"content":"                            output \u003d \"Got it. I\u0027ve added this task: \\n\" + this.lists.get(this.lists.size() - 1) + \"\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"syamfarh"},"content":"                                    + \"Now you have \" + this.lists.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"syamfarh"},"content":"                        } catch (StringIndexOutOfBoundsException err) {","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"syamfarh"},"content":"                            output\u003d \"☹ OOPS!!! The deadline format is incorrect! \\n\" +","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"syamfarh"},"content":"                                    \"follow the format: deadline description /by end date\";","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"syamfarh"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":103,"author":{"gitId":"syamfarh"},"content":"                    } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":104,"author":{"gitId":"syamfarh"},"content":"                        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":105,"author":{"gitId":"syamfarh"},"content":"                            int indexFrom \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"syamfarh"},"content":"                            int indexTo \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-08-20"},{"lineNumber":107,"author":{"gitId":"syamfarh"},"content":"                            String dateFrom;","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"syamfarh"},"content":"                            if (isValidDate(input.substring(indexFrom + 6,indexTo - 1))) {","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"syamfarh"},"content":"                                dateFrom \u003d parseDate(input.substring(indexFrom + 6,indexTo - 1));","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"syamfarh"},"content":"                            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"syamfarh"},"content":"                                dateFrom \u003d input.substring(indexFrom + 6,indexTo - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"syamfarh"},"content":"                            }","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"syamfarh"},"content":"                            String dateTo;","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"syamfarh"},"content":"                            if (isValidDate(input.substring(indexTo + 4))) {","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"syamfarh"},"content":"                                dateTo \u003d parseDate(input.substring(indexTo + 4));","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"syamfarh"},"content":"                            } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"syamfarh"},"content":"                                dateTo \u003d input.substring(indexTo + 4);","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"syamfarh"},"content":"                            }","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"syamfarh"},"content":"                            this.lists.add(new Event(input.substring(6,indexFrom - 1),","lastModifiedDate":"2023-08-20"},{"lineNumber":120,"author":{"gitId":"syamfarh"},"content":"                                    dateFrom,","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"syamfarh"},"content":"                                    dateTo));","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"syamfarh"},"content":"                            output \u003d \"Got it. I\u0027ve added this task: \\n\" + this.lists.get(this.lists.size() - 1) + \"\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":123,"author":{"gitId":"syamfarh"},"content":"                                    + \"Now you have \" + this.lists.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"syamfarh"},"content":"                        } catch (StringIndexOutOfBoundsException err){","lastModifiedDate":"2023-08-20"},{"lineNumber":125,"author":{"gitId":"syamfarh"},"content":"                            output\u003d \"☹ OOPS!!! The event format is incorrect! \\n\" +","lastModifiedDate":"2023-08-20"},{"lineNumber":126,"author":{"gitId":"syamfarh"},"content":"                                    \"follow the format: event description /from start date /to end date\";","lastModifiedDate":"2023-08-20"},{"lineNumber":127,"author":{"gitId":"syamfarh"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":128,"author":{"gitId":"syamfarh"},"content":"                    } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":129,"author":{"gitId":"syamfarh"},"content":"                        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":130,"author":{"gitId":"syamfarh"},"content":"                            Integer i \u003d Integer.valueOf(input.substring(7));","lastModifiedDate":"2023-08-20"},{"lineNumber":131,"author":{"gitId":"syamfarh"},"content":"                            if (i \u003c\u003d this.lists.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":132,"author":{"gitId":"syamfarh"},"content":"                                output \u003d \"Noted. I\u0027ve removed this task: \\n\" + this.lists.get(i - 1).toString() +","lastModifiedDate":"2023-08-20"},{"lineNumber":133,"author":{"gitId":"syamfarh"},"content":"                                \"\\nNow you have \" + (this.lists.size() - 1) + \" tasks in the list.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":134,"author":{"gitId":"syamfarh"},"content":"                                this.lists.remove(i - 1);","lastModifiedDate":"2023-08-20"},{"lineNumber":135,"author":{"gitId":"syamfarh"},"content":"                            } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":136,"author":{"gitId":"syamfarh"},"content":"                                output \u003d \"☹ OOPS!!! The number input does not exist.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":137,"author":{"gitId":"syamfarh"},"content":"                            }","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"syamfarh"},"content":"                        } catch (NumberFormatException err){","lastModifiedDate":"2023-08-20"},{"lineNumber":139,"author":{"gitId":"syamfarh"},"content":"                            output \u003d \"☹ OOPS!!! The number input does not exist.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":140,"author":{"gitId":"syamfarh"},"content":"                        }","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"syamfarh"},"content":"                    } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":142,"author":{"gitId":"syamfarh"},"content":"                        output \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"syamfarh"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":144,"author":{"gitId":"syamfarh"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":145,"author":{"gitId":"syamfarh"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":146,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":147,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":148,"author":{"gitId":"syamfarh"},"content":"        return output;","lastModifiedDate":"2023-08-20"},{"lineNumber":149,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":150,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":151,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":152,"author":{"gitId":"syamfarh"},"content":"     * Output all the user input.","lastModifiedDate":"2023-08-20"},{"lineNumber":153,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":154,"author":{"gitId":"syamfarh"},"content":"     * @return this.lists","lastModifiedDate":"2023-08-20"},{"lineNumber":155,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":156,"author":{"gitId":"syamfarh"},"content":"    private String outputList() {","lastModifiedDate":"2023-08-20"},{"lineNumber":157,"author":{"gitId":"syamfarh"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-08-20"},{"lineNumber":158,"author":{"gitId":"syamfarh"},"content":"        output.append(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-08-20"},{"lineNumber":159,"author":{"gitId":"syamfarh"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":160,"author":{"gitId":"syamfarh"},"content":"        for (Task val : this.lists) {","lastModifiedDate":"2023-08-20"},{"lineNumber":161,"author":{"gitId":"syamfarh"},"content":"            output.append(\"\\n\").append(i).append(\". \").append(val);","lastModifiedDate":"2023-08-20"},{"lineNumber":162,"author":{"gitId":"syamfarh"},"content":"            i++;","lastModifiedDate":"2023-08-20"},{"lineNumber":163,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":164,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":165,"author":{"gitId":"syamfarh"},"content":"        return output.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":166,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":167,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":168,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":169,"author":{"gitId":"syamfarh"},"content":"     * Read task from duke.txt file and copy to ArrayList list.","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":171,"author":{"gitId":"syamfarh"},"content":"    private void readFile() {","lastModifiedDate":"2023-08-26"},{"lineNumber":172,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":173,"author":{"gitId":"syamfarh"},"content":"            File f \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":174,"author":{"gitId":"syamfarh"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-26"},{"lineNumber":175,"author":{"gitId":"syamfarh"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":176,"author":{"gitId":"syamfarh"},"content":"                String[] task \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"syamfarh"},"content":"                stringToList(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"syamfarh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"syamfarh"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-08-26"},{"lineNumber":181,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":184,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":185,"author":{"gitId":"syamfarh"},"content":"     * Copy every line of task from file to ArrayList list.","lastModifiedDate":"2023-08-26"},{"lineNumber":186,"author":{"gitId":"syamfarh"},"content":"     * @param task String array that store task in file.","lastModifiedDate":"2023-08-26"},{"lineNumber":187,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":188,"author":{"gitId":"syamfarh"},"content":"    private void stringToList(String[] task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":189,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":190,"author":{"gitId":"syamfarh"},"content":"        switch (task[0]) {","lastModifiedDate":"2023-08-26"},{"lineNumber":191,"author":{"gitId":"syamfarh"},"content":"        case \"T\":","lastModifiedDate":"2023-08-26"},{"lineNumber":192,"author":{"gitId":"syamfarh"},"content":"            this.lists.add(new ToDo(task[1]));","lastModifiedDate":"2023-08-26"},{"lineNumber":193,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-08-26"},{"lineNumber":194,"author":{"gitId":"syamfarh"},"content":"        case \"D\":","lastModifiedDate":"2023-08-26"},{"lineNumber":195,"author":{"gitId":"syamfarh"},"content":"            this.lists.add(new Deadline(task[1], task[3]));","lastModifiedDate":"2023-08-27"},{"lineNumber":196,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-08-26"},{"lineNumber":197,"author":{"gitId":"syamfarh"},"content":"        case \"E\":","lastModifiedDate":"2023-08-26"},{"lineNumber":198,"author":{"gitId":"syamfarh"},"content":"            this.lists.add(new Event(task[1], task[3], task[4]));","lastModifiedDate":"2023-08-27"},{"lineNumber":199,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-08-26"},{"lineNumber":200,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":201,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":202,"author":{"gitId":"syamfarh"},"content":"        if (task[2].equals(\"1\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":203,"author":{"gitId":"syamfarh"},"content":"            this.lists.get(this.lists.size() - 1).markAsDone();","lastModifiedDate":"2023-08-26"},{"lineNumber":204,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":205,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":206,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":207,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":208,"author":{"gitId":"syamfarh"},"content":"     * Write the task list to file.","lastModifiedDate":"2023-08-27"},{"lineNumber":209,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":210,"author":{"gitId":"syamfarh"},"content":"    private void writeToFile() {","lastModifiedDate":"2023-08-27"},{"lineNumber":211,"author":{"gitId":"syamfarh"},"content":"        try{","lastModifiedDate":"2023-08-27"},{"lineNumber":212,"author":{"gitId":"syamfarh"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2023-08-27"},{"lineNumber":213,"author":{"gitId":"syamfarh"},"content":"            for (Task i : this.lists) {","lastModifiedDate":"2023-08-27"},{"lineNumber":214,"author":{"gitId":"syamfarh"},"content":"                fw.write(i.fileFormat());","lastModifiedDate":"2023-08-27"},{"lineNumber":215,"author":{"gitId":"syamfarh"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-08-27"},{"lineNumber":216,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":217,"author":{"gitId":"syamfarh"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":218,"author":{"gitId":"syamfarh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":219,"author":{"gitId":"syamfarh"},"content":"            System.out.println(\"The file doesn\u0027t exist!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":220,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":221,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":222,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":223,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":224,"author":{"gitId":"syamfarh"},"content":"     * check if the input is a valid Date.","lastModifiedDate":"2023-08-27"},{"lineNumber":225,"author":{"gitId":"syamfarh"},"content":"     * valid date format: dd/MM/yyyy HHmm","lastModifiedDate":"2023-08-27"},{"lineNumber":226,"author":{"gitId":"syamfarh"},"content":"     * @param input of String type","lastModifiedDate":"2023-08-27"},{"lineNumber":227,"author":{"gitId":"syamfarh"},"content":"     * @return true if it is a valid date format","lastModifiedDate":"2023-08-27"},{"lineNumber":228,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":229,"author":{"gitId":"syamfarh"},"content":"    private boolean isValidDate(String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":230,"author":{"gitId":"syamfarh"},"content":"        String[] splitInput \u003d input.split(\"/\");","lastModifiedDate":"2023-08-27"},{"lineNumber":231,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":232,"author":{"gitId":"syamfarh"},"content":"        if (splitInput.length !\u003d 3) {","lastModifiedDate":"2023-08-27"},{"lineNumber":233,"author":{"gitId":"syamfarh"},"content":"            return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":234,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":235,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":236,"author":{"gitId":"syamfarh"},"content":"        if (!isNumeric(splitInput[0]) || !isNumeric(splitInput[1])) {","lastModifiedDate":"2023-08-27"},{"lineNumber":237,"author":{"gitId":"syamfarh"},"content":"            return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":238,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":239,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":240,"author":{"gitId":"syamfarh"},"content":"        String[] yearAndTime \u003d splitInput[2].split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":241,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":242,"author":{"gitId":"syamfarh"},"content":"        if (yearAndTime.length !\u003d 2) {","lastModifiedDate":"2023-08-27"},{"lineNumber":243,"author":{"gitId":"syamfarh"},"content":"            return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":244,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":245,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":246,"author":{"gitId":"syamfarh"},"content":"        if (!isNumeric(yearAndTime[0]) || !isNumeric(yearAndTime[1])) {","lastModifiedDate":"2023-08-27"},{"lineNumber":247,"author":{"gitId":"syamfarh"},"content":"            return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":248,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":249,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":250,"author":{"gitId":"syamfarh"},"content":"        return true;","lastModifiedDate":"2023-08-27"},{"lineNumber":251,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":252,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":253,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":254,"author":{"gitId":"syamfarh"},"content":"     * Convert a valid String date to a different format.","lastModifiedDate":"2023-08-27"},{"lineNumber":255,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":256,"author":{"gitId":"syamfarh"},"content":"     * @param input of String type.","lastModifiedDate":"2023-08-27"},{"lineNumber":257,"author":{"gitId":"syamfarh"},"content":"     * @return new String date format: MMM dd yyyy hh:mm a","lastModifiedDate":"2023-08-27"},{"lineNumber":258,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":259,"author":{"gitId":"syamfarh"},"content":"    private String parseDate(String input) {","lastModifiedDate":"2023-08-27"},{"lineNumber":260,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":261,"author":{"gitId":"syamfarh"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":262,"author":{"gitId":"syamfarh"},"content":"            LocalDateTime d1 \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-08-27"},{"lineNumber":263,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":264,"author":{"gitId":"syamfarh"},"content":"            DateTimeFormatter returnFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2023-08-27"},{"lineNumber":265,"author":{"gitId":"syamfarh"},"content":"            return d1.format(returnFormatter);","lastModifiedDate":"2023-08-27"},{"lineNumber":266,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":267,"author":{"gitId":"syamfarh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":268,"author":{"gitId":"syamfarh"},"content":"            return input;","lastModifiedDate":"2023-08-27"},{"lineNumber":269,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":270,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":271,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":272,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":273,"author":{"gitId":"syamfarh"},"content":"     * Check if the string input is a numeric characters.","lastModifiedDate":"2023-08-27"},{"lineNumber":274,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":275,"author":{"gitId":"syamfarh"},"content":"     * @param str of String type.","lastModifiedDate":"2023-08-27"},{"lineNumber":276,"author":{"gitId":"syamfarh"},"content":"     * @return true if the str only contain numeric characters.","lastModifiedDate":"2023-08-27"},{"lineNumber":277,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":278,"author":{"gitId":"syamfarh"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2023-08-27"},{"lineNumber":279,"author":{"gitId":"syamfarh"},"content":"        return str.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");  //match a number with optional \u0027-\u0027 and decimal.","lastModifiedDate":"2023-08-27"},{"lineNumber":280,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":281,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":283,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":284,"author":{"gitId":"syamfarh"},"content":"        Duke chatBot \u003d new Duke();","lastModifiedDate":"2023-08-20"},{"lineNumber":285,"author":{"gitId":"syamfarh"},"content":"        chatBot.readFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":286,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":287,"author":{"gitId":"syamfarh"},"content":"        String horLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-20"},{"lineNumber":288,"author":{"gitId":"syamfarh"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2023-08-20"},{"lineNumber":289,"author":{"gitId":"syamfarh"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":290,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":291,"author":{"gitId":"syamfarh"},"content":"        System.out.println(horLine);","lastModifiedDate":"2023-08-20"},{"lineNumber":292,"author":{"gitId":"syamfarh"},"content":"        System.out.println(\"Hello! I\u0027m \" + chatBot.getName() + \"!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":293,"author":{"gitId":"syamfarh"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-20"},{"lineNumber":294,"author":{"gitId":"syamfarh"},"content":"        System.out.println(horLine);","lastModifiedDate":"2023-08-20"},{"lineNumber":295,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":296,"author":{"gitId":"syamfarh"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":297,"author":{"gitId":"syamfarh"},"content":"            userInput \u003d input.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":298,"author":{"gitId":"syamfarh"},"content":"            System.out.println(horLine);","lastModifiedDate":"2023-08-20"},{"lineNumber":299,"author":{"gitId":"syamfarh"},"content":"            System.out.println(chatBot.replyUser(userInput));","lastModifiedDate":"2023-08-20"},{"lineNumber":300,"author":{"gitId":"syamfarh"},"content":"            System.out.println(horLine);","lastModifiedDate":"2023-08-20"},{"lineNumber":301,"author":{"gitId":"syamfarh"},"content":"            chatBot.writeToFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":299,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"    public DukeException(String errorMsg, Throwable err) {","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"        super(errorMsg, err);","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"    /** start date type String */","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"    protected String from;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"    /** end date type String */","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"    protected String to;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"     * Initialize Task object with task name and task is not done.","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"     * @param description type String;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"        return (\"E|\" + super.fileFormat() + \"|\" + this.from + \"|\" + this.to);","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"    /** task name description */","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"    protected String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"    /** indicate if task is done */","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"     * Initialize Task object with task name and task is not done.","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"     * @param description type String;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"     * @return status icon of the task whether it is done or not.","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"     * mark the task as done.","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"     * mark the task as undone.","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"    public String toString(){","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        return (\"[\" + getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"     * Output String format to be written in file.","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"     * Format : Task description|isDone","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"     * @return formatted String","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"        String kk;","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"            kk \u003d \"1\";","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"            kk \u003d \"0\";","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"        return this.description + \"|\" + kk;","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":58}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"     * Initialize Task object with task name and task is not done.","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"     * @param description type String;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"    public String toString(){","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"        return (\"T|\" + super.fileFormat());","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"todo read book","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"todo join sports club","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"mark 4","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"todo borrow book","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":11}}]
