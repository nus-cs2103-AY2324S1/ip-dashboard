[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"3. After that, locate the `src/duke/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.duke()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"syamfarh":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"checkstyle {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"syamfarh":23,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"D|do work|1|Nov 20 2000 03:00 PM","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"D|buy medicine|1|Nov 20 2023 06:00 PM","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"T|makan|0","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"T|make food|0","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"E|makanmakana|0|10|10","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"T|Eat |0","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"syamfarh":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"Ken is a chatbot for managing tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"- Features","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"  - List all task: [`list`](#list)","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"  - Add todo task: [`todo`](#todo)","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"  - Add deadline task: [`deadline`](#deadline)","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"  - Add event task: [`event`](#event)","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"  - Mark task as completed: [`mark`](#mark)","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"  - Mark task as incomplete: [`unmark`](#unmark)","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"  - Find task with similar description: [`find`](#find)","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"  - Delete task: [`delete`](#delete)","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"  - Exit the program: [`bye`](#bye)","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"  - Viewing help: [`help`](#help)","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"Notes about the command format:","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"- Words in UPPER_CASE are the parameters to be supplied by the user.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"  e.g. in todo DESCRIPTION, DESCRIPTION is a parameter which can be used as todo borrow book.","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"- DATE is preferably in `dd/MM/yyyy HHmm` format","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"- INDEX **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"### `list`","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"Show a list of all tasks.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"Format: `list`","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"### `todo`","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"Add todo task.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"todo task only have description.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"### `deadline`","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"Add deadline task.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"deadline task contain description and date the task have to be finished.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"Format: `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"### `event`","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"Add event task.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"event task contain description, start date and end date of event.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"Format: `event DESCRIPTION /from DATE /to DATE`","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"### `mark`","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"Mark task at specified index as done.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"Completed task will indicate [X] as done.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"### `unmark`","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"Unmark task at specified index as incomplete.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"Incomplete task will indicate [] as not done.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"### `find`","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"Find task and list all tasks with similar description provided. \\","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"Format: `find DESCRIPTION`","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"### `delete`","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"Delete task at specified index.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"### `bye`","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"Exit the program.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"Format: `bye`","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"### `help`","lastModifiedDate":"2023-09-17"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"List all the commands that is available.\\","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"Format: `help`","lastModifiedDate":"2023-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"syamfarh":54,"-":15}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package command;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"public interface Command {","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"    static String process(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"        return null;","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"syamfarh":11}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package command;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import duke.DateParser;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"public class DeadlineCommand implements Command{","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"    public static String process(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"        String result;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"            int index \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"            String date;","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"            if (DateParser.isValidDate(input.substring(index + 4))) {","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"                date \u003d DateParser.parseDate(input.substring(index + 4));","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"            } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"                date \u003d input.substring(index + 4);","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"            tasks.addTask(new Deadline(input.substring(9, index - 1), date));","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"            result \u003d ui.deadLineSuccess(tasks.getTasks(tasks.getSize() - 1), tasks.getSize());","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"        } catch (StringIndexOutOfBoundsException err) {","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"            result \u003d \"☹ OOPS!!! The deadline format is incorrect! \\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"                    + \"follow the format: deadline description /by end date\";","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"        return result;","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"syamfarh":31}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package command;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import task.Task;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"public class DeleteCommand {","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"    public static String process(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"        String result;","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"            int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"            Task removedTask \u003d tasks.removeTask(index - 1);","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"            result \u003d ui.deleteSuccess(removedTask, tasks.getSize());","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"            result \u003d \"☹ OOPS!!! The number input does not exist.\";","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"            result \u003d e.getMessage();","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"        return result;","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"syamfarh":25}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package command;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import duke.DateParser;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import task.Event;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"public class EventCommand implements Command{","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"    public static String process(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"        String result;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"            int indexFrom \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"            int indexTo \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"            String dateFrom;","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"            if (DateParser.isValidDate(input.substring(indexFrom + 6, indexTo - 1))) {","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"                dateFrom \u003d DateParser.parseDate(input.substring(indexFrom + 6, indexTo - 1));","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"            } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"                dateFrom \u003d input.substring(indexFrom + 6, indexTo - 1);","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"            String dateTo;","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"            if (DateParser.isValidDate(input.substring(indexTo + 4))) {","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"                dateTo \u003d DateParser.parseDate(input.substring(indexTo + 4));","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"            } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"                dateTo \u003d input.substring(indexTo + 4);","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"            tasks.addTask(new Event(input.substring(6, indexFrom - 1),","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"                    dateFrom,","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"                    dateTo));","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"            result \u003d ui.eventSuccess(tasks.getTasks(tasks.getSize() - 1), tasks.getSize());","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"        } catch (StringIndexOutOfBoundsException err) {","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"            result \u003d \"☹ OOPS!!! The event format is incorrect! \\n\"","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"                    + \"follow the format: event description /from start date /to end date\";","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        return result;","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"syamfarh":42}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package command;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"public class FindCommand implements Command{","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"    public static String process(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"        String description \u003d input.substring(5);","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"        String result;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"            result \u003d \"☹ OOPS!!! The description of find cannot be empty.\";","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"        } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"            result \u003d ui.findSuccess(tasks.findTasks(description));","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"        return result;","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"syamfarh":21}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package command;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"public class MarkCommand implements Command{","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"    public static String process(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"        String result;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"            int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"            tasks.markTaskDone(index - 1);","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"            result \u003d ui.markSuccess(tasks.getTasks(index - 1));","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"            result \u003d \"☹ OOPS!!! The number input does not exist.\";","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"            result \u003d err.getMessage();","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"        return result;","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"syamfarh":24}},{"path":"src/main/java/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package command;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import task.ToDo;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"public class ToDoCommand implements Command{","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"    public static String process(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"        String description \u003d input.substring(5);","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"        String result;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"            result \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"        } else {","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"            tasks.addTask(new ToDo(description));","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"            result \u003d ui.toDoSuccess(tasks.getTasks(tasks.getSize() - 1), tasks.getSize());","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"        return result;","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"syamfarh":22}},{"path":"src/main/java/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package command;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"public class UnMarkCommand implements Command{","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"    public static String process(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"        String result;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"            int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"            tasks.markTaskUndone(index - 1);","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"            result \u003d ui.unMarkSuccess(tasks.getTasks(index - 1));","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"            result \u003d \"☹ OOPS!!! The number input does not exist.\";","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"            result \u003d e.getMessage();","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"        return result;","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"syamfarh":24}},{"path":"src/main/java/duke/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package duke;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"public class DateParser {","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"     * Check if the input is a valid Date.","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"     * valid date format: dd/MM/yyyy HHmm","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"     * @param input of String type","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"     * @return true if it is a valid date format","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"    public static boolean isValidDate(String input) {","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"        String[] splitInput \u003d input.split(\"/\");","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        if (splitInput.length !\u003d 3) {","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"            return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"        if (!isNumeric(splitInput[0]) || !isNumeric(splitInput[1])) {","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"            return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"        String[] yearAndTime \u003d splitInput[2].split(\" \");","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"        if (yearAndTime.length !\u003d 2) {","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"            return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"        if (!isNumeric(yearAndTime[0]) || !isNumeric(yearAndTime[1])) {","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"            return false;","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"        return true;","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"     * Convert a valid String date to a different format.","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"     * @param input of String type.","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"     * @return new String date format: MMM dd yyyy hh:mm a","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"    public static String parseDate(String input) {","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"            LocalDateTime d1 \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"            DateTimeFormatter returnFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"            return d1.format(returnFormatter);","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"            return input;","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"     * Check if the string input is a numeric characters.","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"     * @param str of String type.","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"     * @return true if the str only contain numeric characters.","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"syamfarh"},"content":"        return str.matches(\"-?\\\\d+(\\\\.\\\\d+)?\"); //match a number with optional \u0027-\u0027 and decimal.","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"syamfarh":68}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"    static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"    static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"syamfarh":63}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":" * Main class to run Duke chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":" * @author syamfarh","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"public class Duke {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"    /** name of ChatBot */","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    private final String name \u003d \"Ken\";","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"    /** store user Input in task.Task array */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"    /** Ui class that display out to user based on userInput */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    /** storage class that handle fetch/saving task list from file */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"     * Initialize Duke and fetch task list from duke.txt file.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"    public Duke() {","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"            this.tasks \u003d new TaskList(storage.loadTasksFromFile());","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"     * Process the input from user and return the response result.","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"     * @param input User input type String.","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"     * @return output String type result that is written on the UI.","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"            String result \u003d Parser.replyUser(input, tasks, this.ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"            storage.saveTasksToFile(tasks.getTasks());","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"            return result;","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"            return ui.showErrorMsg(e);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":54}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"syamfarh":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"syamfarh":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import java.util.Timer;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ken.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/barbie.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"        showWelcomeMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"        if (response.trim().isBlank()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"                    DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"            );","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"            TimerTask task \u003d new TimerTask() {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"                public void run() {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"                    Platform.exit();","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"syamfarh"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"syamfarh"},"content":"            };","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"syamfarh"},"content":"            Timer timer \u003d new Timer(\"Delay\");","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"syamfarh"},"content":"            timer.schedule(task, 1000L);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"syamfarh"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"syamfarh"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"syamfarh"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"syamfarh"},"content":"        result.append(\"________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"syamfarh"},"content":"        result.append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"syamfarh"},"content":"        result.append(\"Hello! I\u0027m \" + \"ken\" + \"!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"syamfarh"},"content":"        result.append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"syamfarh"},"content":"        result.append(\"What can I do for you?\");","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"syamfarh"},"content":"        result.append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"syamfarh"},"content":"        result.append(\"________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"syamfarh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"syamfarh"},"content":"                DialogBox.getDukeDialog(result.toString(), dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"syamfarh"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"syamfarh":91}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import command.*;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":" * Class that handles userInput and return appropriate action.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":" * @author syamfarh","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"     * parse UserInput and passed the result to ui to output the result.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"     * @param input User input from main.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"     * @param tasks current Tasklist from chatBot.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"     * @param ui ui that control output result to user.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    public static String replyUser(String input, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"        switch (inputArr[0]) {","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"            result \u003d ui.exitGreeting();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"        case \"barbie\":","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"            result \u003d ui.customReply();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"        case \"list\":","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"            result \u003d ui.outputList(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"        case \"help\":","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"            result \u003d ui.helpGenerator();","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"            result \u003d MarkCommand.process(input, tasks, ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"            result \u003d UnMarkCommand.process(input, tasks, ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"        case \"find\":","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"            result \u003d FindCommand.process(input, tasks, ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"            result \u003d ToDoCommand.process(input, tasks, ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"            result \u003d DeadlineCommand.process(input, tasks, ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"        case \"event\":","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"            result \u003d EventCommand.process(input, tasks, ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"            result \u003d DeleteCommand.process(input, tasks, ui);","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"        default:","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\",","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"                new RuntimeException());","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"        return result;","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"syamfarh":67}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"import task.Deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"import task.Event;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"import task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"import task.ToDo;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":" * Class that handle fetch of data from file and save data to file.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":" * @author syamfarh","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"     * Read task from duke.txt file and copy to ArrayList list.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"     * @return Arraylist of Task objects.","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"     * @throws DukeException if file is not found.","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws DukeException {","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"            File f \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"                return tasks;","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"                String[] task \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"                stringToList(tasks, task);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"            throw new DukeException(\"File not found\", e);","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"        return tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"     * Copy every line of task from file to ArrayList list.","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"     * @param task String array that store task in file.","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"    private void stringToList(ArrayList\u003cTask\u003e tasks, String[] task) {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"        switch (task[0]) {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"        case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"            tasks.add(new ToDo(task[1]));","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"        case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"            tasks.add(new Deadline(task[1], task[3]));","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"        case \"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"            tasks.add(new Event(task[1], task[3], task[4]));","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"syamfarh"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"        if (task[2].equals(\"1\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"            tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"syamfarh"},"content":"     * Write the task list to file.","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"syamfarh"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"syamfarh"},"content":"        File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"syamfarh"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"syamfarh"},"content":"            file.getParentFile().mkdir();","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"syamfarh"},"content":"            try {","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"syamfarh"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"syamfarh"},"content":"            } catch (IOException e){","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"syamfarh"},"content":"                throw new DukeException(\"Error creating file!\", e);","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"syamfarh"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"syamfarh"},"content":"            for (Task i : tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"syamfarh"},"content":"                fw.write(i.isDoneFormatter());","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"syamfarh"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"syamfarh"},"content":"            fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"syamfarh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"syamfarh"},"content":"            throw new DukeException(\"Error writing to file!\", e);","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"syamfarh":100}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":" * Class that handle lists of tasks saved in ArrayList.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":" *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":" * @author syamfarh","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    /** store tasks in an ArrayList */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    /** Initialize Tasklist with empty ArrayList */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"     * Initialize Tasklist with current list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"     * @param tasks list of tasks to be referenced to Tasklist","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"     * Return ArrayList tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"     * @return ArrayList tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"     * Return task from the zeroBasedIndex i.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"     * @param i zeroBasedIndex","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"     * @return task","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"    public Task getTasks(int i) {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"        assert i \u003e\u003d 0 \u0026\u0026 i \u003c this.getSize();","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"     * Add new task into the Tasklist","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"     * @param task new Task","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"syamfarh"},"content":"     * Remove task from TaskList based on zeroBasedIndex i.","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"     * If index is invalid, function will throw DukeException with custom message.","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"     * @param i zeroBasedIndex","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"     * @return task on index i","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"syamfarh"},"content":"     * @throws DukeException if index is invalid","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"syamfarh"},"content":"    public Task removeTask(int i) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"syamfarh"},"content":"        assert i \u003e\u003d 0 \u0026\u0026 i \u003c this.getSize();","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"syamfarh"},"content":"        if (i \u003c this.tasks.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"syamfarh"},"content":"            return this.tasks.remove(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"syamfarh"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"syamfarh"},"content":"            throw new DukeException(\"☹ OOPS!!! The number input does not exist.\", new IndexOutOfBoundsException());","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"syamfarh"},"content":"     * Return the number of tasks in the TaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"syamfarh"},"content":"     * @return number of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"syamfarh"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"syamfarh"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"syamfarh"},"content":"     * mark Task at zeroBasedIndex i to be done.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"syamfarh"},"content":"     * @param i zeroBasedIndex","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"syamfarh"},"content":"     * @throws DukeException if i is invalid","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"syamfarh"},"content":"    public void markTaskDone(int i) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"syamfarh"},"content":"        assert i \u003e\u003d 0 \u0026\u0026 i \u003c this.getSize();","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"syamfarh"},"content":"        if (i \u003c this.tasks.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"syamfarh"},"content":"            this.tasks.get(i).markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"syamfarh"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"syamfarh"},"content":"            throw new DukeException(\"☹ OOPS!!! The number input does not exist.\", new IndexOutOfBoundsException());","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"syamfarh"},"content":"     * unmark Task at zeroBasedIndex i.","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"syamfarh"},"content":"     * @param i zeroBasedIndex","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"syamfarh"},"content":"     * @throws DukeException if i is invalid","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"syamfarh"},"content":"    public void markTaskUndone(int i) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"syamfarh"},"content":"        assert i \u003e\u003d 0 \u0026\u0026 i \u003c this.getSize();","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"syamfarh"},"content":"        if (i \u003c this.tasks.size()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"syamfarh"},"content":"            this.tasks.get(i).markAsUndone();","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"syamfarh"},"content":"        } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"syamfarh"},"content":"            throw new DukeException(\"☹ OOPS!!! The number input does not exist.\", new IndexOutOfBoundsException());","lastModifiedDate":"2023-08-28"},{"lineNumber":117,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":119,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"syamfarh"},"content":"    public TaskList findTasks(String description) {","lastModifiedDate":"2023-09-17"},{"lineNumber":121,"author":{"gitId":"syamfarh"},"content":"        assert !description.isBlank();","lastModifiedDate":"2023-09-17"},{"lineNumber":122,"author":{"gitId":"syamfarh"},"content":"        TaskList returnList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"syamfarh"},"content":"        for (Task i : this.tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"syamfarh"},"content":"            if (i.getDescription().contains(description)) {","lastModifiedDate":"2023-09-17"},{"lineNumber":125,"author":{"gitId":"syamfarh"},"content":"                returnList.addTask(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"syamfarh"},"content":"        return returnList;","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"syamfarh":130}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import task.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"    /** Break line for each input and output */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"    private static final String DIVIDER \u003d \"________________________________________________________\";","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    /** instance that read input from user */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"    private final Scanner in;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    /** Indicator to terminate the chatBot */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    private boolean isExit;","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    public Ui() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"        this(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    public Ui(InputStream in) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"     * Output the greeting before chatBot terminates.","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"    public String exitGreeting() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"        return addMessageFormat(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"     * Output message that indicate mark function is successful.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"     * @param task store the current list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"    public String markSuccess(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"        return addMessageFormat(\"Nice! I\u0027ve marked this task as done: \\n\" + task);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"     * Output message that indicate unMark function is successful.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"     * @param task store the current list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"    public String unMarkSuccess(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"        return addMessageFormat(\"OK, I\u0027ve marked this task as not done yet: \\n\" + task);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"     * Output message that indicate adding todo is successful.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"     * @param task store the current list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"    public String toDoSuccess(Task task, int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"        return addMessageFormat(\"Got it. I\u0027ve added this task: \\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"                + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"     * Output message that indicate adding deadline is successful.","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"     * @param task store the current list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"syamfarh"},"content":"    public String deadLineSuccess(Task task, int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"        return addMessageFormat(\"Got it. I\u0027ve added this task: \\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"                + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"syamfarh"},"content":"     * Output message that indicate adding event is successful.","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"syamfarh"},"content":"     * @param task store the current list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"syamfarh"},"content":"    public String eventSuccess(Task task, int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"syamfarh"},"content":"        return addMessageFormat(\"Got it. I\u0027ve added this task: \\n\" + task + \"\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"syamfarh"},"content":"                + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"syamfarh"},"content":"     * Output message that indicate delete task is successful.","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"syamfarh"},"content":"     * @param task store the current list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"syamfarh"},"content":"    public String deleteSuccess(Task task, int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"syamfarh"},"content":"        return addMessageFormat(\"Noted. I\u0027ve removed this task: \\n\" + task","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"syamfarh"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"syamfarh"},"content":"     * Output all the user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"syamfarh"},"content":"    public String outputList(TaskList tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"syamfarh"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"syamfarh"},"content":"        output.append(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"syamfarh"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"syamfarh"},"content":"        for (Task val : tasks.getTasks()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"syamfarh"},"content":"            output.append(\"\\n\").append(i).append(\". \").append(val);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"syamfarh"},"content":"            i++;","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"syamfarh"},"content":"        return addMessageFormat(output.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"syamfarh"},"content":"     * Output customized reply for specific userInput.","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"syamfarh"},"content":"    public String customReply() {","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"syamfarh"},"content":"        return addMessageFormat(\"Hi barbie!\");","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"syamfarh"},"content":"     * Output exception msg in a formatted output.","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"syamfarh"},"content":"     * @param e exception.","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"syamfarh"},"content":"    public String showErrorMsg(Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"syamfarh"},"content":"        return addMessageFormat(e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"syamfarh"},"content":"     * Return Exit variable.","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"syamfarh"},"content":"     * @return {@link this.exit}","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"syamfarh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"syamfarh"},"content":"        return this.isExit;","lastModifiedDate":"2023-09-17"},{"lineNumber":125,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"syamfarh"},"content":"     * Output list of tasks in a string format.","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"syamfarh"},"content":"     * @param tasks type Tasklist","lastModifiedDate":"2023-09-09"},{"lineNumber":131,"author":{"gitId":"syamfarh"},"content":"     * @return String of tasks","lastModifiedDate":"2023-09-09"},{"lineNumber":132,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":133,"author":{"gitId":"syamfarh"},"content":"    public String findSuccess(TaskList tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"syamfarh"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"syamfarh"},"content":"        output.append(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"syamfarh"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"syamfarh"},"content":"        for (Task val : tasks.getTasks()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"syamfarh"},"content":"            output.append(\"\\n\").append(i).append(\". \").append(val);","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"syamfarh"},"content":"            i++;","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"syamfarh"},"content":"        return addMessageFormat(output.toString());","lastModifiedDate":"2023-09-09"},{"lineNumber":142,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":143,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"syamfarh"},"content":"    private String addMessageFormat(String message) {","lastModifiedDate":"2023-09-09"},{"lineNumber":145,"author":{"gitId":"syamfarh"},"content":"        String result \u003d DIVIDER + \"\\n\" + message + \"\\n\" + DIVIDER;","lastModifiedDate":"2023-09-09"},{"lineNumber":146,"author":{"gitId":"syamfarh"},"content":"        return result;","lastModifiedDate":"2023-09-09"},{"lineNumber":147,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"syamfarh"},"content":"    public String helpGenerator() {","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"syamfarh"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"syamfarh"},"content":"        output.append(\"Here are the list of actions and format: \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"syamfarh"},"content":"        output.append(\"todo TASK \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"syamfarh"},"content":"        output.append(\"deadline TASK /by DATE \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":154,"author":{"gitId":"syamfarh"},"content":"        output.append(\"event TASK /from DATE /to DATE \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"syamfarh"},"content":"        output.append(\"mark NUMBER \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"syamfarh"},"content":"        output.append(\"unmark NUMBER \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"syamfarh"},"content":"        output.append(\"find TASK \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"syamfarh"},"content":"        output.append(\"delete NUMBER \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"syamfarh"},"content":"        output.append(\"TASK: description of user\u0027s task \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"syamfarh"},"content":"        output.append(\"DATE: date in dd/MM/yyyy HHmm \\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"syamfarh"},"content":"        output.append(\"NUMBER: index number of task\");","lastModifiedDate":"2023-09-12"},{"lineNumber":162,"author":{"gitId":"syamfarh"},"content":"        return addMessageFormat(output.toString());","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":164,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"syamfarh":164}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":" * Custom Exception to handle exception thrown by Duke chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":" * @author syamfarh","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"    public DukeException(String errorMsg, Throwable err) {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"        super(errorMsg, err);","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":11}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"    /** deadline type String */","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"    protected String by;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"     * Initialize task.Task object with task name and task is not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"     * @param description type String;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"     * @param by type String;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    public String isDoneFormatter() {","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"        return (\"D|\" + super.isDoneFormatter() + \"|\" + this.by);","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":27}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"    /** start date type String */","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"    protected String from;","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"    /** end date type String */","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"    protected String to;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"     * Initialize task.Task object with task name and task is not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"     * @param description type String;","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"    public String isDoneFormatter() {","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"        return (\"E|\" + super.isDoneFormatter() + \"|\" + this.from + \"|\" + this.to);","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":30}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"    /** task name description */","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"    protected String description;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"    /** indicate if task is done */","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"     * Initialize task.Task object with task name and task is not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"     * @param description type String;","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"        return this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"     * Return status icon of the task whether it is done or not.","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"     * mark the task as done.","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"     * mark the task as undone.","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"        return (\"[\" + getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"     * Output String format to be written in file.","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"     * Format : task.Task description|isDone","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"     * @return formatted String","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"    public String isDoneFormatter() {","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"        String kk;","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"            kk \u003d \"1\";","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"            kk \u003d \"0\";","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"        return this.description + \"|\" + kk;","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":64}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"     * Initialize task.Task object with task name and task is not done.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"     * @param description type String;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"        super(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"    public String isDoneFormatter() {","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"        return (\"T|\" + super.isDoneFormatter());","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":21}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"syamfarh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"syamfarh":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"    public void isValidDate_correctInput_returnTrue_test() {","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"        assertTrue(DateParser.isValidDate(\"20/11/2000 1800\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    public void isValidDate_invalidInput1_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"        assertFalse(DateParser.isValidDate(\"20-11-2000 1800\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    public void isValidDate_invalidInput2_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"        assertFalse(DateParser.isValidDate(\"20/11/2000\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    public void replyUser_invalidInput_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"        TaskList taskListObj \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"        Ui uiObj \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"        DukeException e \u003d assertThrows(DukeException.class, () -\u003e Parser.replyUser(\"\", taskListObj, uiObj));","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"        assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"    public void replyUser_invalidInput2_errMsg_test() {","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"        TaskList taskListObj \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"        taskListObj.addTask(new Task(\"buy book\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        Ui uiObj \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"        DukeException e \u003d assertThrows(DukeException.class, () -\u003e Parser.replyUser(\"delete \", taskListObj, uiObj));","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"        assertEquals(\"☹ OOPS!!! The number input does not exist.\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"syamfarh":46}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    public void getTasks_zeroBasedIndex_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"        TaskList testObj \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"        Task taskObj \u003d new Task(\"buy book\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"        testObj.addTask(taskObj);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"        assertEquals(taskObj, testObj.getTasks(0));","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    public void removeTask_returnRemovedTask_test() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"        TaskList testObj \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"        Task taskObj \u003d new Task(\"buy book\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"        testObj.addTask(taskObj);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"        assertEquals(taskObj, testObj.removeTask(0));","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    public void removeTask_returnDukeExceptionOutOfBoundIndex_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"        TaskList testObj \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"        Task taskObj \u003d new Task(\"buy book\");","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"        testObj.addTask(taskObj);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"        DukeException e \u003d assertThrows(DukeException.class, () -\u003e testObj.removeTask(1));","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"        assertEquals(\"☹ OOPS!!! The number input does not exist.\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"syamfarh":38}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"    public void toString_undone_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"        Deadline testObj \u003d new Deadline(\"buy book\", \"July\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"        assertEquals(\"[D][ ] buy book (by: July)\", testObj.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    public void fileFormat_undone_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"        Deadline testObj \u003d new Deadline(\"buy book\", \"July\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        assertEquals(\"D|buy book|0|July\", testObj.isDoneFormatter());","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    public void markAsDone_isDone_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"        Deadline testObj \u003d new Deadline(\"buy book\", \"July\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"        testObj.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"        assertTrue(testObj.isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    public void toString_emptyBy_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"        Deadline testObj \u003d new Deadline(\"buy book\", \"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"        assertEquals(\"[D][ ] buy book (by: )\", testObj.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"syamfarh":34}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"public class EventTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"    public void toString_undone_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"        Event testObj \u003d new Event(\"buy book\", \"July\", \"August\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"        assertEquals(\"[E][ ] buy book (from: July to: August)\", testObj.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    public void fileFormat_undone_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        Event testObj \u003d new Event(\"buy book\", \"July\", \"August\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"        assertEquals(\"E|buy book|0|July|August\", testObj.isDoneFormatter());","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    public void markAsDone_isDone_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"        Event testObj \u003d new Event(\"buy book\", \"July\", \"August\");","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"        testObj.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"        assertTrue(testObj.isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"    public void toString_emptyFromTo_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"        Event testObj \u003d new Event(\"buy book\", \"\", \"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"        assertEquals(\"[E][ ] buy book (from:  to: )\", testObj.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"syamfarh":34}},{"path":"src/test/java/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package task;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"public class ToDoTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"    public void toString_undone_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"        ToDo testObj \u003d new ToDo(\"buy book\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"        assertEquals(\"[T][ ] buy book\", testObj.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    public void fileFormat_undone_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"        ToDo testObj \u003d new ToDo(\"buy book\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        assertEquals(\"T|buy book|0\", testObj.isDoneFormatter());","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    public void markAsDone_isDone_test() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"        ToDo testObj \u003d new ToDo(\"buy book\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"        testObj.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"        assertTrue(testObj.isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"syamfarh":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"todo read book","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"todo join sports club","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"mark 4","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"todo borrow book","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"syamfarh":11}}]
