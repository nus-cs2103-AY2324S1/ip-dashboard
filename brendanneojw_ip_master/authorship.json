[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"mainClassName \u003d \"gui.Launcher\";","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"    mainClass.set(\"gui.Launcher\")","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"brendanneojw":22,"-":43}},{"path":"data/storageTestNumberOfTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"T |   | buy book","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"D |   | cs2103t ip | Feb 22 2023 10:00PM","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"T |   | sell book","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"E |   | project meeting | Feb 22 2023 06:00PM to Feb 22 2023 09:00PM","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"brendanneojw":4}},{"path":"data/storageTestRewrite.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"T |   | do well in CS2103T","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"brendanneojw":1}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"T |   | buy book","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"D |   | cs2103t ip | Feb 22 2023 10:00PM","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"brendanneojw":2}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.time.Duration;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * This class encapsulates a Deadline task that has the date/time to indicate when the task is due.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    private static final int DUE_DAYS \u003d 7;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"     * @param description the description of the deadline task.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"     * @param by the date/time of when the deadline task is due.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + super.convertDateToString(this.by) + \")\";","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        return \"D | \" + super.convertToSaveFormat() + \" | \"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"                + super.convertDateToString(this.by);","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"    public boolean isWithinDue() {","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        return Duration.between(LocalDateTime.now(), this.by).toDays() \u003c\u003d DUE_DAYS;","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"brendanneojw":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.io.File;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" * This class encapsulates the main program that will run.","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"public class Duke {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for Duke","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    public Duke() {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        this(DEFAULT_FILE_PATH);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"    public String loadSaveFile() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        doDirectory(stringBuilder);","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        doFile(stringBuilder);","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        initialiseTask(stringBuilder);","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        Parser parser \u003d new Parser(input, this.tasks, this.storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        String response \u003d parser.parse();","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"        assert !response.isEmpty();","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"        if (parser.isBye()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"            return stopProgram(response);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"        return response;","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"    public String stopProgram(String out) {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"        new Thread(() -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"            try {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"                Thread.sleep(2500);","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"            } catch (IllegalArgumentException | InterruptedException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        }).start();","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"        return out;","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"    public Ui getUi() {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        return this.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"    private void doDirectory(StringBuilder stringBuilder) {","lastModifiedDate":"2023-09-15"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"        File f \u003d new File(\"./data\");","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"        if (!f.exists() || !f.isDirectory()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(Ui.directoryNotFound()).append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"    private void doFile(StringBuilder stringBuilder) {","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"        if (new File(DEFAULT_FILE_PATH).isFile()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(Ui.savedFileFound());","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"        } else {","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(Ui.savedFileNotFound());","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"        stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"    private void initialiseTask(StringBuilder stringBuilder) {","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-09-15"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(Ui.showTaskList(tasks.taskArray, false)).append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(Ui.showExceptionError(e));","lastModifiedDate":"2023-09-15"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"        tasks.doReminder(stringBuilder);","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"brendanneojw":96,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":" * This class encapsulates the created exception.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"     * @param e the message to be used when an exception occur.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    public DukeException(String e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"        super(e);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"brendanneojw":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.time.Duration;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * This class encapsulates an Event task that has the date/time to indicate when the event starts and end.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    private static final int DUE_DAYS \u003d 7;","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for Event.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"     * @param description the description of the event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"     * @param from the date/time of when the event task starts.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"     * @param to the date/time of when the event task ends.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + super.convertDateToString(this.from)","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"                + \" to: \" + super.convertDateToString(this.to) + \")\";","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        return \"E | \" + super.convertToSaveFormat() + \" | \" + super.convertDateToString(this.from)","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"                + \" to \" + super.convertDateToString(this.to);","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"    public boolean isWithinDue() {","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"        return Duration.between(LocalDateTime.now(), this.from).toDays() \u003c\u003d DUE_DAYS;","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"brendanneojw":45}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import gui.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"brendanneojw":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":" * This class encapsulates making sense of the user command.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    private String userInput;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"    private boolean isBye;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for Parser","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"     * @param userInput the user input that will be going through the validation check","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"     * @param taskList the corresponding TaskList object that contains the tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"     * @param storage the corresponding Storage object that contains the file","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    public Parser(String userInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        this.isBye \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"     * Checks the user input and perform the corresponding action based on the input.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"    public String parse() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        String[] input \u003d this.userInput.trim().split(\" \", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"            switch (input[0]) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"            case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"                listCommand(stringBuilder);","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"                markUnmarkCommand(input, stringBuilder);","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"                break;","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"                byeCommand(stringBuilder);","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"                break;","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"                toDoCommand(input, stringBuilder);","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"                break;","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"            case \"event\":","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"                deadlineEventCommand(input, stringBuilder);","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"                break;","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"                deleteCommand(input, stringBuilder);","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"                break;","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"            case \"find\":","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"                findCommand(input, stringBuilder);","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"                break;","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"            case \"remind\":","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"                remindCommand(stringBuilder);","lastModifiedDate":"2023-09-15"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"                break;","lastModifiedDate":"2023-09-15"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"            default:","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"                throw new DukeException(\"Can you hear the siren? \"","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"                        + \"Because I don\u0027t know what that means!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"            return Ui.showExceptionError(e);","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"        assert !stringBuilder.toString().isEmpty();","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"    public boolean isBye() {","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"        return this.isBye;","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"    private void listCommand(StringBuilder stringBuilder) {","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"        stringBuilder.append(this.taskList.listTasks(this.taskList, false));","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"    private void markUnmarkCommand(String[] input, StringBuilder stringBuilder) throws DukeException {","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"            int taskNum \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"            storage.rewriteFile(this.taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"            this.taskList.markOrUnmarkTask(input[0], taskNum, stringBuilder);","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"BEEPBEEP! You forgot to give a task number!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"WOIWOI! That is an invalid input!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"    private void byeCommand(StringBuilder stringBuilder) {","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"        stringBuilder.append(Ui.getGoodbyeMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"        this.isBye \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"brendanneojw"},"content":"    private void toDoCommand(String[] input, StringBuilder stringBuilder) throws DukeException {","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"brendanneojw"},"content":"            this.taskList.addTodoTask(input[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(Ui.addTaskOutput(this.taskList));","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"brendanneojw"},"content":"            storage.addLineToFile(this.taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"brendanneojw"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"BEEPBEEP! You forgot to give a description!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":109,"author":{"gitId":"brendanneojw"},"content":"    private void deadlineEventCommand(String[] input, StringBuilder stringBuilder) throws DukeException {","lastModifiedDate":"2023-09-15"},{"lineNumber":110,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"brendanneojw"},"content":"            String[] remainLine \u003d input[1].split(\" /\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"brendanneojw"},"content":"            this.taskList.addDeadlineOrEventTask(input[0], remainLine);","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(Ui.addTaskOutput(this.taskList));","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"brendanneojw"},"content":"            storage.addLineToFile(this.taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"brendanneojw"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"BEEPBEEP! You forgot to give a description or date/time!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":119,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":120,"author":{"gitId":"brendanneojw"},"content":"    private void deleteCommand(String[] input, StringBuilder stringBuilder) throws DukeException {","lastModifiedDate":"2023-09-15"},{"lineNumber":121,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"brendanneojw"},"content":"            int taskNum \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"brendanneojw"},"content":"            this.taskList.deleteTasks(taskNum, stringBuilder);","lastModifiedDate":"2023-09-14"},{"lineNumber":124,"author":{"gitId":"brendanneojw"},"content":"            storage.rewriteFile(this.taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"brendanneojw"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"BEEPBEEP! You forgot to give a task number!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"brendanneojw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"WOIWOI! That is an invalid input!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":132,"author":{"gitId":"brendanneojw"},"content":"    private void findCommand(String[] input, StringBuilder stringBuilder) throws DukeException {","lastModifiedDate":"2023-09-15"},{"lineNumber":133,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"brendanneojw"},"content":"            if (input[1].isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"brendanneojw"},"content":"                throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"brendanneojw"},"content":"            this.taskList.findTasks(input[1].trim().toUpperCase(), stringBuilder);","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"brendanneojw"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"BEEPBEEP! You forgot to give a keyword for me to search!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":143,"author":{"gitId":"brendanneojw"},"content":"    private void remindCommand(StringBuilder stringBuilder) {","lastModifiedDate":"2023-09-15"},{"lineNumber":144,"author":{"gitId":"brendanneojw"},"content":"        this.taskList.doReminder(stringBuilder);","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"brendanneojw":146}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":" * This class encapsulates dealing with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"     * @param filePath the path of the file to be opened.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"    private void createDirectory() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        File f \u003d new File(\"./data\");","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        if (!hasDirectory() \u0026\u0026 !f.mkdir()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    private boolean hasDirectory() {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"        File f \u003d new File(\"./data\");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        if (f.exists() \u0026\u0026 f.isDirectory()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"            return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"        return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    private boolean createFile() throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"            return f.createNewFile();","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"HEYHEY! Seems like I couldn\u0027t create the file for you. \"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"                    + \"Please manually add the file!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"    private Scanner getFile() throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"            return new Scanner(f);","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"HMMMMMM! The file should be created for you but there could be an issue. \"","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"                    + \"Please manually add the file!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"    private LocalDateTime undoDateFormatInputFile(String lineInFile) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        return LocalDateTime.parse(lineInFile, DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"     * Returns an array list that contains the tasks being loaded from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"     * @return an array list containing the tasks retrieved from the saved file.","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"    public ArrayList\u003cTask\u003e loadFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"        createDirectory();","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"        createFile();","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"        assert new File(filePath).exists();","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"        return goThroughFile(getFile());","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"     * Appends a new line into the file based off the latest task added into the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"     * @param taskList the corresponding task list to read the tasks from.","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"     * @throws DukeException if the attempt to write to the file fails.","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"    public void addLineToFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"            if (taskList.taskArray.size() \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"                fw.write(taskList.taskArray.get(0).convertToSaveFormat());","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"                fw.write(\"\\n\" + taskList.taskArray.get(taskList.taskArray.size() - 1).convertToSaveFormat());","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"UHOH! Something went wrong when attempting to write to file!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"brendanneojw"},"content":"     * Rewrites the entire file based off the changes made in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"brendanneojw"},"content":"     * @param taskList the corresponding task list to read the tasks from.","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"brendanneojw"},"content":"     * @throws DukeException if the attempt to write to the file fails.","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"brendanneojw"},"content":"    public void rewriteFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"brendanneojw"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"brendanneojw"},"content":"            for (int i \u003d 0; i \u003c taskList.taskArray.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"brendanneojw"},"content":"                if (i !\u003d taskList.taskArray.size() - 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"brendanneojw"},"content":"                    fw.write(taskList.taskArray.get(i).convertToSaveFormat() + \"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"brendanneojw"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"brendanneojw"},"content":"                    fw.write(taskList.taskArray.get(i).convertToSaveFormat());","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"brendanneojw"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"brendanneojw"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"brendanneojw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"UHOH! Something went wrong when attempting to write to file!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":123,"author":{"gitId":"brendanneojw"},"content":"    public ArrayList\u003cTask\u003e goThroughFile(Scanner s) {","lastModifiedDate":"2023-09-14"},{"lineNumber":124,"author":{"gitId":"brendanneojw"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"brendanneojw"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"brendanneojw"},"content":"            String[] line \u003d s.nextLine().trim().split(\" \\\\| \", 3);","lastModifiedDate":"2023-09-14"},{"lineNumber":127,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":128,"author":{"gitId":"brendanneojw"},"content":"            switch (line[0]) {","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"brendanneojw"},"content":"            case \"T\":","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"brendanneojw"},"content":"                taskArray.add(new Todo(line[2]));","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"brendanneojw"},"content":"                break;","lastModifiedDate":"2023-09-14"},{"lineNumber":132,"author":{"gitId":"brendanneojw"},"content":"            case \"D\":","lastModifiedDate":"2023-09-14"},{"lineNumber":133,"author":{"gitId":"brendanneojw"},"content":"                String[] remainLine \u003d line[2].split(\" \\\\| \", 2);","lastModifiedDate":"2023-09-14"},{"lineNumber":134,"author":{"gitId":"brendanneojw"},"content":"                taskArray.add(new Deadline(remainLine[0], undoDateFormatInputFile(remainLine[1])));","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"brendanneojw"},"content":"                break;","lastModifiedDate":"2023-09-14"},{"lineNumber":136,"author":{"gitId":"brendanneojw"},"content":"            case \"E\":","lastModifiedDate":"2023-09-14"},{"lineNumber":137,"author":{"gitId":"brendanneojw"},"content":"                String[] remainingLine \u003d line[2].split(\" \\\\| \", 2);","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"brendanneojw"},"content":"                String[] getDateTime \u003d remainingLine[1].split(\" to \");","lastModifiedDate":"2023-09-14"},{"lineNumber":139,"author":{"gitId":"brendanneojw"},"content":"                taskArray.add(new Event(remainingLine[0],","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"brendanneojw"},"content":"                        undoDateFormatInputFile(getDateTime[0]), undoDateFormatInputFile(getDateTime[1])));","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"brendanneojw"},"content":"                break;","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"brendanneojw"},"content":"            default:","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"brendanneojw"},"content":"                // There will be no default case as the file can only take on the 3 values above","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":145,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"brendanneojw"},"content":"            if (line[1].equals(\"X\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":147,"author":{"gitId":"brendanneojw"},"content":"                taskArray.get(taskArray.size() - 1).markDone();","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"brendanneojw"},"content":"        s.close();","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"brendanneojw"},"content":"        return taskArray;","lastModifiedDate":"2023-09-14"},{"lineNumber":152,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":153,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"brendanneojw":153}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * This class encapsulates the description of the task and the status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"        assert description !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"     * Returns the string representation of the status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"     * @return a string consisting of the string representation of the status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"     * @return a string consisting of the string representation of the Task instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"     * Returns the string representation of the line that will be written into a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"     * @return a string consisting of the string representation that will be written into a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        return (isDone ? \"X\" : \" \") + \" | \" + this.description;","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"     * Returns the string representation of the date/time in the format MMM dd yyyy hh:mm.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"     * Time is in 12-hours format.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"     * @param dateTime the date/time object.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"     * @return a string consisting of the date/time in given format.","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"    public String convertDateToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"    public boolean isWithinDue() {","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"        return false;","lastModifiedDate":"2023-09-15"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"brendanneojw":76}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":" * This class encapsulates the array list that contains the tasks and operations that operates on the array list.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    protected final ArrayList\u003cTask\u003e taskArray;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"    private String[] dateFormats \u003d { \"dd-MM-yyyy\", \"yyyy-MM-dd\", \"dd/MM/yyyy\", \"yyyy/MM/dd\" };","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    private String[] timeFormats \u003d { \"HHmm\", \"HH:mm\" };","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"     * @param taskArray the corresponding array list that contains the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArray) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        assert taskArray !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        this.taskArray \u003d taskArray;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        this.taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"    private LocalDateTime findDateFormatInput(String input) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"        for (int i \u003d 0; i \u003c dateFormats.length; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"            for (int j \u003d 0; j \u003c timeFormats.length; j++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"                    return LocalDateTime.parse(input,","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"                            DateTimeFormatter.ofPattern(dateFormats[i] + \" \" + timeFormats[j]));","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"                    // Keep trying other formats, hence no throwing exceptions here","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"                }","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        throw new DukeException(\"HOHOHO! The date/time format seems to be wrong!\"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"                + \"\\nPermitted formats for date: dd-mm-yyyy | yyyy-mm-dd | dd/mm/yyyy | yyyy/mm/dd\"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"                + \"\\nPermitted formats for time (Only 24-hours format): HH:MM | HHMM\"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"                + \"\\nE.g. 22/09/2023 22:00 | 2023-08-30 0100\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"     * Adds a Todo task into the array list containing the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"     * @param description the description of the task to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"    public void addTodoTask(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"        assert description !\u003d null \u0026\u0026 !description.isEmpty();","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"        this.taskArray.add(new Todo(description.trim()));","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"     * Displays the contents of the array list containing the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"     * @param taskList the TaskList object that contains the array list containing the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"     * @param isMatch true if the user command is a \"find\" command, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"    public String listTasks(TaskList taskList, boolean isMatch) {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"        return Ui.showTaskList(taskList.taskArray, isMatch);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"     * Marks or unmarks a task in the array list containing the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"     * @param action the string to determine it is to mark or unmark the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"     * @param taskNum the task number to be marked or unmarked.","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"     * @throws DukeException if task number does not exist in the array list.","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"    public void markOrUnmarkTask(String action, int taskNum, StringBuilder stringBuilder) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"        assert action.equals(\"mark\") || action.equals(\"unmark\");","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"            if (action.equals(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"                stringBuilder.append(Ui.getTaskMarked(this.taskArray.get(taskNum - 1).isDone));","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"                this.taskArray.get(taskNum - 1).markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"                stringBuilder.append(Ui.getTaskNotMarked(!this.taskArray.get(taskNum - 1).isDone));","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"                this.taskArray.get(taskNum - 1).markNotDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(this.taskArray.get(taskNum - 1).toString());","lastModifiedDate":"2023-09-14"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"WARBLE WARBLE! This task number does not exist!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"     * Adds a Deadline or Event task into the array list containing the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"brendanneojw"},"content":"     * @param action the string to determine where is a deadline or event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"brendanneojw"},"content":"     * @param remainLine the string array from splitting that will have the date/time string representation","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"brendanneojw"},"content":"     * @throws DukeException if the string doesn\u0027t have a date/time string representation or in an invalid format.","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"brendanneojw"},"content":"    public void addDeadlineOrEventTask(String action, String[] remainLine)","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"brendanneojw"},"content":"            throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"brendanneojw"},"content":"        assert action.equals(\"deadline\") || action.equals(\"event\");","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"brendanneojw"},"content":"        if (action.equals(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"brendanneojw"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"                String dateTime \u003d remainLine[1].substring(3);","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"brendanneojw"},"content":"                this.taskArray.add(new Deadline(remainLine[0], findDateFormatInput(dateTime)));","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"brendanneojw"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"brendanneojw"},"content":"                throw new DukeException(\"BEEPBEEP! You forgot to give a \\\"/by date/time\\\" for the deadline!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"brendanneojw"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"brendanneojw"},"content":"            if (!remainLine[1].contains(\"from \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"brendanneojw"},"content":"                throw new DukeException(\"BEEPBEEP! You forgot to give a \\\"/from date/time\\\" for the event\");","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"brendanneojw"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"brendanneojw"},"content":"                String[] splitTo \u003d remainLine[1].split(\"/to \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"brendanneojw"},"content":"                String fromDateTime \u003d splitTo[0].substring(5, splitTo[0].length() - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"brendanneojw"},"content":"                this.taskArray.add(new Event(remainLine[0],","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"brendanneojw"},"content":"                        findDateFormatInput(fromDateTime), findDateFormatInput(splitTo[1])));","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"brendanneojw"},"content":"            } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"brendanneojw"},"content":"                throw new DukeException(\"BEEPBEEP! You forget to give a \\\"/to date/time\\\" for the event!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"brendanneojw"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"brendanneojw"},"content":"                throw new DukeException(\"HOHOHO! The date/time format seems to be wrong! \"","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"brendanneojw"},"content":"                        + \"Please use the format yyyy-mm-dd HH:MM instead! E.g. 2023-08-21 01:00\");","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"brendanneojw"},"content":"     * Deletes the task from the array list containing the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"brendanneojw"},"content":"     * @param taskNum the corresponding task number to be deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"brendanneojw"},"content":"     * @throws DukeException if the task number does not exist.","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"brendanneojw"},"content":"    public void deleteTasks(int taskNum, StringBuilder stringBuilder) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":136,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"brendanneojw"},"content":"            Task taskDeleted \u003d this.taskArray.get(taskNum - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"brendanneojw"},"content":"            this.taskArray.remove(taskNum - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(Ui.deleteTaskOutput(taskDeleted.toString(), this.taskArray.size()));","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"brendanneojw"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"brendanneojw"},"content":"            throw new DukeException(\"WARBLE WARBLE, this task number does not exist!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"brendanneojw"},"content":"     * Displays the tasks that contains the keyword given by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"brendanneojw"},"content":"     * @param keyword the keyword to find in the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"brendanneojw"},"content":"    public void findTasks(String keyword, StringBuilder stringBuilder) {","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"brendanneojw"},"content":"        assert keyword !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"brendanneojw"},"content":"        ArrayList\u003cTask\u003e foundTasksArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"brendanneojw"},"content":"        for (int i \u003d 0; i \u003c this.taskArray.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"brendanneojw"},"content":"            if (this.taskArray.get(i).toString().toUpperCase().contains(keyword)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":156,"author":{"gitId":"brendanneojw"},"content":"                foundTasksArray.add(this.taskArray.get(i));","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"brendanneojw"},"content":"        stringBuilder.append(Ui.showTaskList(foundTasksArray, true));","lastModifiedDate":"2023-09-14"},{"lineNumber":160,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":162,"author":{"gitId":"brendanneojw"},"content":"    public void doReminder(StringBuilder stringBuilder) {","lastModifiedDate":"2023-09-15"},{"lineNumber":163,"author":{"gitId":"brendanneojw"},"content":"        ArrayList\u003cTask\u003e dueTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-15"},{"lineNumber":164,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":165,"author":{"gitId":"brendanneojw"},"content":"        for (int i \u003d 0; i \u003c this.taskArray.size(); i++) {","lastModifiedDate":"2023-09-15"},{"lineNumber":166,"author":{"gitId":"brendanneojw"},"content":"            if ((this.taskArray.get(i) instanceof Deadline || this.taskArray.get(i) instanceof Event)","lastModifiedDate":"2023-09-15"},{"lineNumber":167,"author":{"gitId":"brendanneojw"},"content":"                    \u0026\u0026 this.taskArray.get(i).isWithinDue()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":168,"author":{"gitId":"brendanneojw"},"content":"                dueTasks.add(this.taskArray.get(i));","lastModifiedDate":"2023-09-15"},{"lineNumber":169,"author":{"gitId":"brendanneojw"},"content":"            }","lastModifiedDate":"2023-09-15"},{"lineNumber":170,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":171,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":172,"author":{"gitId":"brendanneojw"},"content":"        stringBuilder.append(Ui.taskWithinOrPassedDueDate(dueTasks));","lastModifiedDate":"2023-09-15"},{"lineNumber":173,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":174,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"brendanneojw":174}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":" * This class encapsulates a Todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"     * Constructor for Todo.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"     * @param description the description of the todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        return \"T | \" + super.convertToSaveFormat();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"brendanneojw":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":" * This class encapsulates the interactions with the user by displaying lines into the output.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"     * Prints the welcome message when the user starts the program.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"        return \"WEEWOOWEEWOO WELCOME! I\u0027m Siren\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"     * Prints the goodbye message when the user exits the program.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    public static String getGoodbyeMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"        return \"WEEEWOOWEEWOO GOODBYE! Hope to see you again soon!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"     * Prints the exception\u0027s message.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"     * @param e the exception that will have its message printed.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"    public static String showExceptionError(DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"     * Prints the message to indicate a saved file is found.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"    public static String savedFileFound() {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        return \"BLINGBLING! You have a saved file! Displaying the contents to you (if any)!\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"     * Prints the message to indicate there is no saved file found.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    public static String savedFileNotFound() {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"        return \"OH NO! I couldn\u0027t find a \\\"tasks.txt\\\" file in your data directory, \"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"                + \"I\u0027ll be creating one for you!\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"     * Prints the message to indicate the specific directory cannot be found.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"    public static String directoryNotFound() {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"        return \"OH NO! I couldn\u0027t find a \\\"data\\\" directory in your project root directory, \"","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"                + \"I\u0027ll be creating one for you!\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"     * Prints the message when the user deletes a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"     * @param description the description of task that was deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"     * @param arraySize the number of tasks left.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"    public static String deleteTaskOutput(String description, int arraySize) {","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        return \"ALRIGHTY! I\u0027ve removed this task:\\n\" + description","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"                + \"\\nNow you have \" + arraySize + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"brendanneojw"},"content":"     * Prints the message when the user adds a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"brendanneojw"},"content":"     * @param taskList the TaskList object that contains the array list containing the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"brendanneojw"},"content":"    public static String addTaskOutput(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"brendanneojw"},"content":"        return \"DINGDONG GOT IT! I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"brendanneojw"},"content":"                + taskList.taskArray.get(taskList.taskArray.size() - 1)","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"brendanneojw"},"content":"                + \"\\nNow you have \" + taskList.taskArray.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"brendanneojw"},"content":"     * Prints the message when the user marks a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"brendanneojw"},"content":"     * @param marked true if the task was previously marked, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"brendanneojw"},"content":"    public static String getTaskMarked(boolean marked) {","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"brendanneojw"},"content":"        if (marked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"brendanneojw"},"content":"            return \"WEEYA! Task was already marked as done!\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"brendanneojw"},"content":"        return \"GOTCHYA! I\u0027ve marked this task as done!\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"brendanneojw"},"content":"     * Prints the message when the user unmarks a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"brendanneojw"},"content":"     * @param notMarked true if the task was previously unmarked, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"brendanneojw"},"content":"    public static String getTaskNotMarked(boolean notMarked) {","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"brendanneojw"},"content":"        if (notMarked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"brendanneojw"},"content":"            return \"OOPSIE! Task was already marked as not done!\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"brendanneojw"},"content":"        return \"HONKHONK! I\u0027ve marked this task as not done yet!\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"brendanneojw"},"content":"     * Prints the message when the array list containing the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"brendanneojw"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"brendanneojw"},"content":"     * @param taskArray the TaskList object that contains the array list containing the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"brendanneojw"},"content":"     * @param isMatch true if the user command is a \"find\" command, false otherwise.","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"brendanneojw"},"content":"    public static String showTaskList(ArrayList\u003cTask\u003e taskArray, boolean isMatch) {","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"brendanneojw"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"brendanneojw"},"content":"        assert taskArray !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"brendanneojw"},"content":"        if (taskArray.isEmpty() \u0026\u0026 !isMatch) {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(\"HEYYYYYYYY! There\u0027s nothing to show in your list!\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"brendanneojw"},"content":"        } else if (taskArray.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(\"HAIYAAAA! There\u0027s nothing in your list that matches the keyword!\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"brendanneojw"},"content":"        if (!taskArray.isEmpty() \u0026\u0026 !isMatch) {","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(\"WHEET WHEET WHEET! Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"brendanneojw"},"content":"        } else if (!taskArray.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(\"HOOOOOYEAAAAA! Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"brendanneojw"},"content":"        for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(String.format(\"%d\", i + 1)).append(\".\").append(taskArray.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"brendanneojw"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":130,"author":{"gitId":"brendanneojw"},"content":"    public static String taskWithinOrPassedDueDate(ArrayList\u003cTask\u003e dueTasks) {","lastModifiedDate":"2023-09-15"},{"lineNumber":131,"author":{"gitId":"brendanneojw"},"content":"        if (dueTasks.isEmpty()) {","lastModifiedDate":"2023-09-15"},{"lineNumber":132,"author":{"gitId":"brendanneojw"},"content":"            return \"OMO OMO OMO! There\u0027s no tasks that are due/going to happen within 7 days!!!!\\n\\n\";","lastModifiedDate":"2023-09-15"},{"lineNumber":133,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":134,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":135,"author":{"gitId":"brendanneojw"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-15"},{"lineNumber":136,"author":{"gitId":"brendanneojw"},"content":"        stringBuilder.append(\"ATTENTIONNNNNNNNNNNN!!! You have task(s) that are due/going to happen \"","lastModifiedDate":"2023-09-15"},{"lineNumber":137,"author":{"gitId":"brendanneojw"},"content":"                        + \"within 7 days:\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":138,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":139,"author":{"gitId":"brendanneojw"},"content":"        for (int i \u003d 0; i \u003c dueTasks.size(); i++) {","lastModifiedDate":"2023-09-15"},{"lineNumber":140,"author":{"gitId":"brendanneojw"},"content":"            stringBuilder.append(String.format(\"%d\", i + 1)).append(\".\").append(dueTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":141,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":142,"author":{"gitId":"brendanneojw"},"content":"        stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":143,"author":{"gitId":"brendanneojw"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-09-15"},{"lineNumber":144,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"brendanneojw":145}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package gui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"        Circle clip \u003d new Circle(displayPicture.getFitWidth() / 2,","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"                displayPicture.getFitHeight() / 2, displayPicture.getFitWidth() / 2);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"brendanneojw"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"brendanneojw"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"brendanneojw":65}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package gui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import duke.Main;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":" * A Launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"brendanneojw":13}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package gui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        stringBuilder.append(duke.loadSaveFile());","lastModifiedDate":"2023-09-15"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"        stringBuilder.append(duke.getUi().getWelcomeMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(stringBuilder.toString(), dukeImage));","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"brendanneojw"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"brendanneojw"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"brendanneojw"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"brendanneojw"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"brendanneojw"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"brendanneojw"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"brendanneojw"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"brendanneojw"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"brendanneojw"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"brendanneojw"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"brendanneojw"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"brendanneojw"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"brendanneojw"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"brendanneojw"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"brendanneojw"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"brendanneojw"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"brendanneojw":61}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-padding: 5px;\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"brendanneojw":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"brendanneojw":19}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"    public void testSize() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"        Storage storage \u003d new Storage(\"data/storageTestNumberOfTasks.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d storage.loadFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(4, taskArray.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"    public void testRewrite() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        Storage storage \u003d new Storage(\"data/storageTestRewrite.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"        taskArray.add(new Todo(\"do well in CS2103T\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"        TaskList tasks \u003d new TaskList(taskArray);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"brendanneojw"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"brendanneojw"},"content":"            FileWriter fw \u003d new FileWriter(new File(\"data/storageTestRewrite.txt\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"brendanneojw"},"content":"            fw.write(\"test\\nto\\nsee\\nif\\noverwrite\\nworks\");","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"brendanneojw"},"content":"            fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"brendanneojw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"brendanneojw"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"brendanneojw"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"brendanneojw"},"content":"        storage.rewriteFile(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(\"[T][ ] do well in CS2103T\", storage.loadFile().get(0).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"brendanneojw":40}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"brendanneojw"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"brendanneojw"},"content":"        Event temp \u003d new Event(\"CS2103T Project Meeting\", LocalDateTime.parse(\"2023-08-31T12:00:00\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"brendanneojw"},"content":"                LocalDateTime.parse(\"2023-08-31T15:00:00\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"brendanneojw"},"content":"        temp.markDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"brendanneojw"},"content":"        String expectedOutput \u003d \"[E][X] CS2103T Project Meeting (from: Aug 31 2023 12:00PM to: Aug 31 2023 03:00PM)\";","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expectedOutput, temp.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"brendanneojw"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"brendanneojw"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"brendanneojw"},"content":"    public void testLineToBeWritten() {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"brendanneojw"},"content":"        Deadline temp \u003d new Deadline(\"iP Tasks\", LocalDateTime.parse(\"2023-09-01T23:59:50\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"brendanneojw"},"content":"        String expectedOutput \u003d \"D |   | iP Tasks | Sep 01 2023 11:59PM\";","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"brendanneojw"},"content":"        assertEquals(expectedOutput, temp.lineToWriteFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"brendanneojw"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"brendanneojw"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"brendanneojw":27}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"T |   | borrow book","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"T |   | borrow book","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"brendanneojw":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brendanneojw"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"brendanneojw"},"content":"event project meeting /from Monday 3pm /to 5pm","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"brendanneojw"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"brendanneojw"},"content":"deadline CS2103T iP /by Aug 24th 2359hrs","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"brendanneojw"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"brendanneojw"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"brendanneojw"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"brendanneojw"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"brendanneojw"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"brendanneojw"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"brendanneojw"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"brendanneojw"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"brendanneojw":12}}]
