[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"ryanongwx"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"ryanongwx":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ryanongwx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"ryanongwx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ryanongwx"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ryanongwx"},"content":"    protected LocalTime byTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ryanongwx"},"content":"    protected String byDateTimeString;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"ryanongwx"},"content":"    public Deadline(String description, boolean isDone, String byDateAndTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ryanongwx"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ryanongwx"},"content":"        parseDateTime(byDateAndTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ryanongwx"},"content":"        this.byDateTimeString \u003d byDateAndTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryanongwx"},"content":"    public boolean isValidDate(String dateTimeString) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ryanongwx"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ryanongwx"},"content":"            String[] parts \u003d dateTimeString.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ryanongwx"},"content":"            LocalDate.parse(parts[0], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ryanongwx"},"content":"            LocalTime.parse(parts[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ryanongwx"},"content":"            return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ryanongwx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ryanongwx"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ryanongwx"},"content":"    public void parseDateTime(String dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ryanongwx"},"content":"        if (isValidDate(dateTime)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ryanongwx"},"content":"            String[] parts \u003d dateTime.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ryanongwx"},"content":"            byDate \u003d LocalDate.parse(parts[0], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ryanongwx"},"content":"            byTime \u003d LocalTime.parse(parts[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"ryanongwx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"ryanongwx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"ryanongwx"},"content":"        if (byDate !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ryanongwx"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ryanongwx"},"content":"                    + \" \" + byTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ryanongwx"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ryanongwx"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + byDateTimeString + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ryanongwx"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ryanongwx"},"content":"        if (byDate !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ryanongwx"},"content":"            return \"D,\" + (isDone ? \"1\" : \"0\") + \",\" + description + \",\" + byDate + \" \" + byTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ryanongwx"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ryanongwx"},"content":"            return \"D,\" + (isDone ? \"1\" : \"0\") + \",\" + description + \",\" + byDateTimeString;","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"ryanongwx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ryanongwx":57}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"ryanongwx"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ryanongwx"},"content":" * Duke is a task management chatbot that allows users to manage their tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ryanongwx"},"content":" * including todos, deadlines, and events.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ryanongwx"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ryanongwx"},"content":"     * The main method that initializes and runs the Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ryanongwx"},"content":"     * @param args The command-line arguments (not used in this context).","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"ryanongwx"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ryanongwx"},"content":"        Storage storage \u003d new Storage(\"src/main/java/duke/data/duke.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryanongwx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"ryanongwx"},"content":"        Ui.showGreeting();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"ryanongwx"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ryanongwx"},"content":"        taskList.setTasks(loadedTasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"ryanongwx"},"content":"        String userInput;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ryanongwx"},"content":"        while (true) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ryanongwx"},"content":"            userInput \u003d ui.getUserInput();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ryanongwx"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ryanongwx"},"content":"                storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ryanongwx"},"content":"                Ui.showByeMessage();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ryanongwx"},"content":"                break;","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"ryanongwx"},"content":"            } else if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ryanongwx"},"content":"                Ui.showList(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ryanongwx"},"content":"            } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ryanongwx"},"content":"                // Give users a way to find a task by searching for a keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ryanongwx"},"content":"                String keyword \u003d userInput.substring(\"find\".length()).trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ryanongwx"},"content":"                taskList.findTasksByKeyword(keyword);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ryanongwx"},"content":"            } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"ryanongwx"},"content":"                Parser.parseAndAddTask(userInput, taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ryanongwx"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ryanongwx":39,"-":4}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ryanongwx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ryanongwx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ryanongwx"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ryanongwx"},"content":" * Represents an event task that occurs within a specified date and time range.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ryanongwx"},"content":" * Extends the base class Task.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ryanongwx"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ryanongwx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"ryanongwx"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ryanongwx"},"content":"    protected LocalTime fromTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ryanongwx"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ryanongwx"},"content":"    protected LocalTime toTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ryanongwx"},"content":"    protected String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"ryanongwx"},"content":"    protected String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ryanongwx"},"content":"     * Constructs an event task with description and date-time range.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ryanongwx"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ryanongwx"},"content":"     * @param isDone      Indicates whether the task is done or not.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ryanongwx"},"content":"     * @param from        The starting date and time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ryanongwx"},"content":"     * @param to          The ending date and time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ryanongwx"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ryanongwx"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ryanongwx"},"content":"        parseDateTime(from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ryanongwx"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"ryanongwx"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ryanongwx"},"content":"     * Checks if a given date-time string is in a valid format.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ryanongwx"},"content":"     * @param dateTimeString The date-time string to be checked.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ryanongwx"},"content":"     * @return True if the date-time string is in a valid format, otherwise false.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ryanongwx"},"content":"    public boolean isValidDate(String dateTimeString) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ryanongwx"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ryanongwx"},"content":"            String[] parts \u003d dateTimeString.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ryanongwx"},"content":"            LocalDate.parse(parts[0], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ryanongwx"},"content":"            LocalTime.parse(parts[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ryanongwx"},"content":"            return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ryanongwx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ryanongwx"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ryanongwx"},"content":"     * Parses the given date-time strings into LocalDate and LocalTime objects.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ryanongwx"},"content":"     * @param fromdateTime The starting date-time string of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ryanongwx"},"content":"     * @param todateTime   The ending date-time string of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ryanongwx"},"content":"    public void parseDateTime(String fromdateTime, String todateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"ryanongwx"},"content":"        if (isValidDate(fromdateTime) \u0026\u0026 isValidDate(todateTime)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ryanongwx"},"content":"            String[] fromparts \u003d fromdateTime.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ryanongwx"},"content":"            fromDate \u003d LocalDate.parse(fromparts[0], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ryanongwx"},"content":"            fromTime \u003d LocalTime.parse(fromparts[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"ryanongwx"},"content":"            String[] toparts \u003d todateTime.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"ryanongwx"},"content":"            toDate \u003d LocalDate.parse(toparts[0], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"ryanongwx"},"content":"            toTime \u003d LocalTime.parse(toparts[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ryanongwx"},"content":"     * Generates a string representation of the event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ryanongwx"},"content":"     * @return A formatted string describing the event task, including date and","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ryanongwx"},"content":"     *         time.","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ryanongwx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"ryanongwx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"ryanongwx"},"content":"        if (fromDate !\u003d null \u0026\u0026 toDate !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"ryanongwx"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + fromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"ryanongwx"},"content":"                    + \" \" + fromTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \" to: \"","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"ryanongwx"},"content":"                    + toDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"ryanongwx"},"content":"                    + \" \" + toTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"ryanongwx"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"ryanongwx"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \"","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"ryanongwx"},"content":"                    + to + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"ryanongwx"},"content":"     * Converts the event task to a string format suitable for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"ryanongwx"},"content":"     * @return A string representation of the event task for saving purposes.","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"ryanongwx"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"ryanongwx"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"ryanongwx"},"content":"        if (fromDate !\u003d null \u0026\u0026 toDate !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"ryanongwx"},"content":"            return \"E,\" + isDone + \",\" + description + \",\" + fromDate + \" \" + fromTime + \",\" + toDate + \" \" + toTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"ryanongwx"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"ryanongwx"},"content":"            return \"E,\" + isDone + \",\" + description + \",\" + from + \",\" + to;","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"ryanongwx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ryanongwx":105}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":" * The Parser class handles the parsing of user input commands and performs","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ryanongwx"},"content":" * corresponding actions.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ryanongwx"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ryanongwx"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ryanongwx"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ryanongwx"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ryanongwx"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ryanongwx"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ryanongwx"},"content":"    public static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ryanongwx"},"content":"    public static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ryanongwx"},"content":"     * Parses the user input and adds the corresponding task to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ryanongwx"},"content":"     * @param userInput The user input command.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ryanongwx"},"content":"     * @param taskList  The task list to which the task will be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ryanongwx"},"content":"     * @throws IllegalArgumentException If the input command is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ryanongwx"},"content":"    public static void parseAndAddTask(String userInput, TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ryanongwx"},"content":"        String[] words \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ryanongwx"},"content":"        switch (words[0].toLowerCase()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ryanongwx"},"content":"            case COMMAND_TODO:","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ryanongwx"},"content":"                addTodoTask(words[1], taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ryanongwx"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ryanongwx"},"content":"            case COMMAND_DEADLINE:","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ryanongwx"},"content":"                addDeadlineTask(words[1], taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ryanongwx"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ryanongwx"},"content":"            case COMMAND_EVENT:","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ryanongwx"},"content":"                addEventTask(words[1], taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ryanongwx"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ryanongwx"},"content":"            case COMMAND_MARK:","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"ryanongwx"},"content":"                parseMarkTask(words[1], taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"ryanongwx"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ryanongwx"},"content":"            case COMMAND_UNMARK:","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ryanongwx"},"content":"                parseUnmarkTask(words[1], taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ryanongwx"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ryanongwx"},"content":"            case COMMAND_DELETE:","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ryanongwx"},"content":"                parseDeleteTask(words[1], taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ryanongwx"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ryanongwx"},"content":"            default:","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ryanongwx"},"content":"                throw new IllegalArgumentException(\"Invalid command: \" + words[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ryanongwx"},"content":"     * Parses the user input and adds a todo task to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ryanongwx"},"content":"     * @param args     The user input arguments.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ryanongwx"},"content":"     * @param taskList The task list to which the task will be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ryanongwx"},"content":"     * @throws IllegalArgumentException If the description of the todo task is","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ryanongwx"},"content":"     *                                  empty.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ryanongwx"},"content":"    private static void addTodoTask(String args, TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"ryanongwx"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"ryanongwx"},"content":"            throw new IllegalArgumentException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"ryanongwx"},"content":"        taskList.addTodo(args, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ryanongwx"},"content":"     * Parses the user input and adds a deadline task to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ryanongwx"},"content":"     * @param args     The user input arguments.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ryanongwx"},"content":"     * @param taskList The task list to which the task will be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ryanongwx"},"content":"     * @throws IllegalArgumentException If the deadline format is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ryanongwx"},"content":"    private static void addDeadlineTask(String args, TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"ryanongwx"},"content":"        String[] parts \u003d args.split(\" /by \");","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"ryanongwx"},"content":"        if (parts.length !\u003d 2 || parts[0].isEmpty() || parts[1].isEmpty()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"ryanongwx"},"content":"            throw new IllegalArgumentException(\"☹ OOPS!!! Invalid deadline format.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"ryanongwx"},"content":"        taskList.addDeadline(parts[0], false, parts[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ryanongwx"},"content":"     * Parses the user input and adds an event task to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ryanongwx"},"content":"     * @param args     The user input arguments.","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"ryanongwx"},"content":"     * @param taskList The task list to which the task will be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ryanongwx"},"content":"     * @throws IllegalArgumentException If the event format is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"ryanongwx"},"content":"    private static void addEventTask(String args, TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"ryanongwx"},"content":"        String[] parts \u003d args.split(\" /from \");","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ryanongwx"},"content":"        String from \u003d parts[1].split(\" /to \")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ryanongwx"},"content":"        String to \u003d parts[1].split(\" /to \")[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ryanongwx"},"content":"        taskList.addEvent(parts[0], false, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"ryanongwx"},"content":"     * Parses the user input and marks a task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"ryanongwx"},"content":"     * @param args     The user input arguments.","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"ryanongwx"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"ryanongwx"},"content":"    private static void parseMarkTask(String args, TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"ryanongwx"},"content":"        int index \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"ryanongwx"},"content":"        taskList.markTask(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"ryanongwx"},"content":"     * Parses the user input and unmarks a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"ryanongwx"},"content":"     * @param args     The user input arguments.","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"ryanongwx"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"ryanongwx"},"content":"    private static void parseUnmarkTask(String args, TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"ryanongwx"},"content":"        int index \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"ryanongwx"},"content":"        taskList.unmarkTask(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"ryanongwx"},"content":"     * Parses the user input and deletes a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"ryanongwx"},"content":"     * @param args     The user input arguments.","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"ryanongwx"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"ryanongwx"},"content":"    private static void parseDeleteTask(String args, TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"ryanongwx"},"content":"        int index \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"ryanongwx"},"content":"        taskList.removeTask(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"ryanongwx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ryanongwx":127}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ryanongwx"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ryanongwx"},"content":" * Represents a class that handles the loading and saving of tasks to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ryanongwx"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ryanongwx"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ryanongwx"},"content":"    private String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ryanongwx"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ryanongwx"},"content":"     * @param filePath The path to the file for loading and saving tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ryanongwx"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryanongwx"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ryanongwx"},"content":"     * Loads tasks from the file and returns them as an ArrayList.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ryanongwx"},"content":"     * @return An ArrayList containing the loaded tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ryanongwx"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ryanongwx"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ryanongwx"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ryanongwx"},"content":"            String line;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ryanongwx"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ryanongwx"},"content":"                String[] values \u003d line.split(\",\");","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ryanongwx"},"content":"                String taskType \u003d values[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ryanongwx"},"content":"                boolean isDone \u003d values[1].trim().equals(\"true\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ryanongwx"},"content":"                String description \u003d values[2].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"ryanongwx"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"ryanongwx"},"content":"                    tasks.add(new ToDo(description, isDone));","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ryanongwx"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ryanongwx"},"content":"                    String byDateAndTime \u003d values[3].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ryanongwx"},"content":"                    tasks.add(new Deadline(description, isDone, byDateAndTime));","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ryanongwx"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ryanongwx"},"content":"                    String from \u003d values[3].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ryanongwx"},"content":"                    String to \u003d values[4].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ryanongwx"},"content":"                    tasks.add(new Event(description, isDone, from, to));","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ryanongwx"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ryanongwx"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ryanongwx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ryanongwx"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ryanongwx"},"content":"        return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ryanongwx"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ryanongwx"},"content":"     * @param tasks An ArrayList containing tasks to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ryanongwx"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"ryanongwx"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"ryanongwx"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"ryanongwx"},"content":"                String line \u003d task.toSaveString();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ryanongwx"},"content":"                writer.write(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ryanongwx"},"content":"                writer.newLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ryanongwx"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ryanongwx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"ryanongwx"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"ryanongwx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ryanongwx":69}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ryanongwx"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ryanongwx"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"ryanongwx"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"ryanongwx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"ryanongwx"},"content":"    protected static int total \u003d 0;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ryanongwx"},"content":"     * Constructs a task with the given description and completion status.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ryanongwx"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ryanongwx"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ryanongwx"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryanongwx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"ryanongwx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ryanongwx"},"content":"        Task.total +\u003d 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ryanongwx"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ryanongwx"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ryanongwx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"ryanongwx"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ryanongwx"},"content":"     * Converts the task to a formatted string.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ryanongwx"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ryanongwx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"ryanongwx"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description; // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ryanongwx"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ryanongwx"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"ryanongwx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ryanongwx"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ryanongwx"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"ryanongwx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ryanongwx"},"content":"     * Gets the total number of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ryanongwx"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ryanongwx"},"content":"    public static int getTotal() {","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"ryanongwx"},"content":"        return Task.total;","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ryanongwx"},"content":"     * Removes the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ryanongwx"},"content":"    public void remove() {","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"ryanongwx"},"content":"        Task.total -\u003d 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ryanongwx"},"content":"     * Converts the task to a string for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ryanongwx"},"content":"     * @return The formatted string for saving the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ryanongwx"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"ryanongwx"},"content":"        return \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ryanongwx"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"ryanongwx"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"ryanongwx"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"ryanongwx"},"content":"        return isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ryanongwx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ryanongwx":89}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ryanongwx"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ryanongwx"},"content":" * Represents a list of tasks with various operations for managing tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ryanongwx"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ryanongwx"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ryanongwx"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ryanongwx"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ryanongwx"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ryanongwx"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ryanongwx"},"content":"     * Adds a deadline task to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ryanongwx"},"content":"     * @param description   The description of the deadline task.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ryanongwx"},"content":"     * @param isDone        Indicates whether the task is done or not.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ryanongwx"},"content":"     * @param byDateAndTime The date and time of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ryanongwx"},"content":"    public void addDeadline(String description, boolean isDone, String byDateAndTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ryanongwx"},"content":"        Deadline deadline \u003d new Deadline(description, isDone, byDateAndTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ryanongwx"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ryanongwx"},"content":"        Ui.showAddConfirmation(deadline, this.getTotalTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ryanongwx"},"content":"     * Adds a todo task to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ryanongwx"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ryanongwx"},"content":"     * @param isDone      Indicates whether the task is done or not.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ryanongwx"},"content":"    public void addTodo(String description, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ryanongwx"},"content":"        ToDo todo \u003d new ToDo(description, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ryanongwx"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ryanongwx"},"content":"        Ui.showAddConfirmation(todo, this.getTotalTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ryanongwx"},"content":"     * Adds an event task to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ryanongwx"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ryanongwx"},"content":"     * @param isDone      Indicates whether the task is done or not.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ryanongwx"},"content":"     * @param from        The starting date and time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ryanongwx"},"content":"     * @param to          The ending date and time of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ryanongwx"},"content":"    public void addEvent(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ryanongwx"},"content":"        Event event \u003d new Event(description, isDone, from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ryanongwx"},"content":"        tasks.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ryanongwx"},"content":"        Ui.showAddConfirmation(event, this.getTotalTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ryanongwx"},"content":"     * Removes a task from the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ryanongwx"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ryanongwx"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ryanongwx"},"content":"        Ui.showRemoved(tasks.get(index), this.getTotalTasks() - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ryanongwx"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ryanongwx"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ryanongwx"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ryanongwx"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ryanongwx"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"ryanongwx"},"content":"        return tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ryanongwx"},"content":"     * Returns the total number of tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ryanongwx"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ryanongwx"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"ryanongwx"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"ryanongwx"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ryanongwx"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ryanongwx"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"ryanongwx"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"ryanongwx"},"content":"        Ui.showMarkedAsDone(tasks.get(index));","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"ryanongwx"},"content":"     * Unmarks a task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"ryanongwx"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"ryanongwx"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"ryanongwx"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"ryanongwx"},"content":"        Ui.showUnmarked(tasks.get(index));","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"ryanongwx"},"content":"     * Sets the tasks in the list to the given tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"ryanongwx"},"content":"     * @param taskList The ArrayList of tasks to be set.","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"ryanongwx"},"content":"    public void setTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"ryanongwx"},"content":"        tasks.addAll(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"ryanongwx"},"content":"     * Finds tasks in the task list that match a given keyword and displays them to","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"ryanongwx"},"content":"     * the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"ryanongwx"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"ryanongwx"},"content":"    public void findTasksByKeyword(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"ryanongwx"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"ryanongwx"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"ryanongwx"},"content":"            if (task.toSaveString().contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"ryanongwx"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"ryanongwx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"ryanongwx"},"content":"        Ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"ryanongwx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ryanongwx":133}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":" * Represents a todo task that can be added to the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ryanongwx"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ryanongwx"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ryanongwx"},"content":"     * Constructs a todo task with the specified description and status.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ryanongwx"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ryanongwx"},"content":"     * @param isDone      Indicates whether the task is done or not.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ryanongwx"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ryanongwx"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ryanongwx"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ryanongwx"},"content":"     * @return A string containing the status icon and description of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ryanongwx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"ryanongwx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"ryanongwx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ryanongwx"},"content":"     * Returns a formatted string for saving the todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ryanongwx"},"content":"     * @return A string containing the task type, status, and description.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ryanongwx"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ryanongwx"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ryanongwx"},"content":"        return \"T,\" + isDone + \",\" + description;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"ryanongwx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ryanongwx":37}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ryanongwx"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ryanongwx"},"content":" * Represents the user interface for interacting with the chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ryanongwx"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ryanongwx"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ryanongwx"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ryanongwx"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ryanongwx"},"content":"     * Constructs a new UI instance with a scanner for user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ryanongwx"},"content":"    public Ui() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryanongwx"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ryanongwx"},"content":"     * Displays a greeting message.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ryanongwx"},"content":"    public static void showGreeting() {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(\"Hello! I\u0027m yourChatBot\");","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ryanongwx"},"content":"     * Retrieves user input from the scanner.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ryanongwx"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ryanongwx"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"ryanongwx"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ryanongwx"},"content":"     * Displays the list of tasks in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ryanongwx"},"content":"     * @param taskList The task list containing the tasks to be displayed.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ryanongwx"},"content":"    public static void showList(TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ryanongwx"},"content":"        String todolistoutput \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ryanongwx"},"content":"        for (int i \u003d 0; i \u003c taskList.getTotalTasks(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ryanongwx"},"content":"            todolistoutput +\u003d i + 1 + \". \" + taskList.getTasks().get(i) + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(todolistoutput);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ryanongwx"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ryanongwx"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ryanongwx"},"content":"    public static void showMarkedAsDone(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ryanongwx"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ryanongwx"},"content":"     * @param task The task that has been marked as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ryanongwx"},"content":"    public static void showUnmarked(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ryanongwx"},"content":"     * Displays a message indicating that a task has been removed.","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ryanongwx"},"content":"     * @param task       The task that has been removed.","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ryanongwx"},"content":"     * @param totalTasks The total number of tasks remaining.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ryanongwx"},"content":"    public static void showRemoved(Task task, int totalTasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ryanongwx"},"content":"     * Displays an error message.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"ryanongwx"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"ryanongwx"},"content":"    public static void showError(String errorMessage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"ryanongwx"},"content":"     * Displays a confirmation message after adding a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"ryanongwx"},"content":"     * @param task       The task that has been added.","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"ryanongwx"},"content":"     * @param totalTasks The total number of tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"ryanongwx"},"content":"    public static void showAddConfirmation(Task task, int totalTasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"ryanongwx"},"content":"     * Displays a farewell message.","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"ryanongwx"},"content":"    public static void showByeMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"ryanongwx"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"ryanongwx"},"content":"     * Displays a list of tasks that match the given keyword to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"ryanongwx"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"ryanongwx"},"content":"     * @param matchingTasks The list of tasks that match the keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"ryanongwx"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"ryanongwx"},"content":"    public static void showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"ryanongwx"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"ryanongwx"},"content":"            System.out.println(i + 1 + \". \" + matchingTasks.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"ryanongwx"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"ryanongwx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ryanongwx":137}},{"path":"src/main/java/duke/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"T,false,read book","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"E,false,project meeting,2019-10-15 16:00,2019-10-15 20:00","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"T,false,join sports club","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":"E,false,Birthday party,2023-08-30 15:00,2023-08-30 18:00","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ryanongwx":4}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ryanongwx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ryanongwx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ryanongwx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ryanongwx"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ryanongwx"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ryanongwx"},"content":"    public void testParseAndAddTask_AddTodoTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ryanongwx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ryanongwx"},"content":"        String userInput \u003d \"todo Buy groceries\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ryanongwx"},"content":"        Parser.parseAndAddTask(userInput, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ryanongwx"},"content":"        assertEquals(1, taskList.getTotalTasks());","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ryanongwx"},"content":"        assertTrue(taskList.getTasks().get(0) instanceof ToDo);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ryanongwx"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ryanongwx"},"content":"    public void testParseAndAddTask_AddDeadlineTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ryanongwx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ryanongwx"},"content":"        String userInput \u003d \"deadline Return book /by 2023-12-31\";","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ryanongwx"},"content":"        Parser.parseAndAddTask(userInput, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ryanongwx"},"content":"        assertEquals(1, taskList.getTotalTasks());","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ryanongwx"},"content":"        assertTrue(taskList.getTasks().get(0) instanceof Deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ryanongwx"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ryanongwx"},"content":"    public void testParseAndAddTask_AddEventTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ryanongwx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ryanongwx"},"content":"        String userInput \u003d \"event Birthday party /from 2023-08-30 15:00 /to 2023-08-30 18:00\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ryanongwx"},"content":"        Parser.parseAndAddTask(userInput, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ryanongwx"},"content":"        assertEquals(1, taskList.getTotalTasks());","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ryanongwx"},"content":"        assertTrue(taskList.getTasks().get(0) instanceof Event);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ryanongwx"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ryanongwx"},"content":"    public void testParseAndAddTask_InvalidCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ryanongwx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ryanongwx"},"content":"        String userInput \u003d \"invalidcommand\";","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ryanongwx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ryanongwx"},"content":"            Parser.parseAndAddTask(userInput, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ryanongwx"},"content":"        });","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ryanongwx"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ryanongwx"},"content":"    public void testParseAndAddTask_MarkTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ryanongwx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ryanongwx"},"content":"        taskList.addTodo(\"Test task\", false);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ryanongwx"},"content":"        String userInput \u003d \"mark 1\";","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ryanongwx"},"content":"        Parser.parseAndAddTask(userInput, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ryanongwx"},"content":"        assertTrue(taskList.getTasks().get(0).isDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ryanongwx"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ryanongwx"},"content":"    public void testParseAndAddTask_UnmarkTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ryanongwx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ryanongwx"},"content":"        taskList.addTodo(\"Test task\", true);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ryanongwx"},"content":"        String userInput \u003d \"unmark 1\";","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ryanongwx"},"content":"        Parser.parseAndAddTask(userInput, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ryanongwx"},"content":"        assertFalse(taskList.getTasks().get(0).isDone());","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ryanongwx"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ryanongwx"},"content":"    public void testParseAndAddTask_DeleteTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ryanongwx"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ryanongwx"},"content":"        taskList.addTodo(\"Test task\", false);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ryanongwx"},"content":"        String userInput \u003d \"delete 1\";","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ryanongwx"},"content":"        Parser.parseAndAddTask(userInput, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"ryanongwx"},"content":"        assertEquals(0, taskList.getTotalTasks());","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"ryanongwx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ryanongwx":87}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ryanongwx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ryanongwx"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ryanongwx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ryanongwx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ryanongwx"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ryanongwx"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ryanongwx"},"content":"    void testLoadTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ryanongwx"},"content":"        // Test loading of tasks from file","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ryanongwx"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ryanongwx"},"content":"            Path tempFilePath \u003d Files.createTempFile(null, \".txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ryanongwx"},"content":"            Storage storage \u003d new Storage(tempFilePath.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ryanongwx"},"content":"            ArrayList\u003cTask\u003e expectedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ryanongwx"},"content":"            expectedTasks.add(new ToDo(\"Task 1\", true));","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ryanongwx"},"content":"            expectedTasks.add(new Deadline(\"Deadline 1\", false, \"2023-08-29 1800\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ryanongwx"},"content":"            expectedTasks.add(new Event(\"Event 1\", true, \"2023-08-30 0900\", \"2023-08-30 1200\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ryanongwx"},"content":"            storage.saveTasks(expectedTasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ryanongwx"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ryanongwx"},"content":"            assertEquals(expectedTasks.size(), loadedTasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ryanongwx"},"content":"            for (int i \u003d 0; i \u003c expectedTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ryanongwx"},"content":"                Task expectedTask \u003d expectedTasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ryanongwx"},"content":"                Task loadedTask \u003d loadedTasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ryanongwx"},"content":"                assertEquals(expectedTask.toSaveString(), loadedTask.toSaveString());","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ryanongwx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ryanongwx"},"content":"            Files.deleteIfExists(tempFilePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ryanongwx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ryanongwx"},"content":"            fail(\"Exception occurred during testing: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ryanongwx"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ryanongwx"},"content":"    void testSaveTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ryanongwx"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ryanongwx"},"content":"            // Test saving of todolist to file","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ryanongwx"},"content":"            Path tempFilePath \u003d Files.createTempFile(null, \".txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ryanongwx"},"content":"            Storage storage \u003d new Storage(tempFilePath.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ryanongwx"},"content":"            ArrayList\u003cTask\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ryanongwx"},"content":"            tasksToSave.add(new ToDo(\"Task 1\", true));","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ryanongwx"},"content":"            tasksToSave.add(new Deadline(\"Deadline 1\", false, \"2023-08-29 1800\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ryanongwx"},"content":"            tasksToSave.add(new Event(\"Event 1\", true, \"2023-08-30 0900\", \"2023-08-30 1200\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ryanongwx"},"content":"            storage.saveTasks(tasksToSave);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ryanongwx"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ryanongwx"},"content":"            assertEquals(tasksToSave.size(), loadedTasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ryanongwx"},"content":"            for (int i \u003d 0; i \u003c tasksToSave.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ryanongwx"},"content":"                Task savedTask \u003d tasksToSave.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ryanongwx"},"content":"                Task loadedTask \u003d loadedTasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ryanongwx"},"content":"                assertEquals(savedTask.toSaveString(), loadedTask.toSaveString());","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ryanongwx"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ryanongwx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ryanongwx"},"content":"            Files.deleteIfExists(tempFilePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ryanongwx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ryanongwx"},"content":"            fail(\"Exception occurred during testing: \" + e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ryanongwx"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ryanongwx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ryanongwx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ryanongwx":70}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanongwx"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"ryanongwx"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"ryanongwx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"ryanongwx"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"ryanongwx"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"ryanongwx"},"content":"blah","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ryanongwx":6}}]
