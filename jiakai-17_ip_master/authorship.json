[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jiakai-17":1,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"TODO ||   || restore data ||  ||  || ","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"DEADLINE ||   || 1 || 2023-08-11 12:34 ||  || ","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"TODO ||   || test ||  ||  || ","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"jiakai-17":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"import duke.exceptions.DukeIllegalArgumentException;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import duke.exceptions.DukeUnknownCommandException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import duke.tasks.TaskList.TaskType;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":" * Duke, the chatbot.","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    // Error messages","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    private static final String ERROR_MESSAGE_TEMPLATE_INVALID_TASK_NUMBER \u003d","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"            \"Please enter a valid task number. You entered: \\\"%s\\\"\";","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"    private static final String ERROR_MESSAGE_TEMPLATE_UNKNOWN_COMMAND \u003d","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"            \"I\u0027m sorry, but I don\u0027t know what \\\"%s\\\" means.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"    // Store list of tasks","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"    private static final TaskList list \u003d new TaskList(\"tasks.txt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"    // Check if chat has ended","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"    private static boolean hasEndedChat \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"     * Ends the chat when the user inputs \"bye\".","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"    private static void endChat() {","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"        hasEndedChat \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"        Ui.printGoodbyeMessage();","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"    private static void listTasks() {","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"        Ui.printMessage(list.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"     * @param num The number of the task to be marked as done.","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"     * @throws DukeIllegalArgumentException If the task number is out of range of the list.","lastModifiedDate":"2023-08-19"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"    private static void markTaskAsDone(int num) throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"        list.mark(num);","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"     * @param num The number of the task to be marked as undone.","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"     * @throws DukeIllegalArgumentException If the task number is out of range of the list.","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"    private static void unmarkTaskAsDone(int num) throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"        list.unmark(num);","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"     * Adds a ToDo task to the list.","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"    private static void addToDoTask(String description) throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-19"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"        list.add(TaskType.TODO, description);","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"     * Adds a Deadline task to the list.","lastModifiedDate":"2023-08-19"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"     * @param by The date/time of the Deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"    private static void addDeadlineTask(String description, String by) throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-19"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"        list.add(TaskType.DEADLINE, description, by);","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":78,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":79,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":80,"author":{"gitId":"jiakai-17"},"content":"     * Adds an Event task to the list.","lastModifiedDate":"2023-08-19"},{"lineNumber":81,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":82,"author":{"gitId":"jiakai-17"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-08-19"},{"lineNumber":83,"author":{"gitId":"jiakai-17"},"content":"     * @param start The start date/time of the Event task.","lastModifiedDate":"2023-08-19"},{"lineNumber":84,"author":{"gitId":"jiakai-17"},"content":"     * @param end The end date/time of the Event task.","lastModifiedDate":"2023-08-19"},{"lineNumber":85,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":86,"author":{"gitId":"jiakai-17"},"content":"    private static void addEventTask(String description, String start, String end)","lastModifiedDate":"2023-08-19"},{"lineNumber":87,"author":{"gitId":"jiakai-17"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-19"},{"lineNumber":88,"author":{"gitId":"jiakai-17"},"content":"        list.add(TaskType.EVENT, description, start, end);","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":90,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":91,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":92,"author":{"gitId":"jiakai-17"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2023-08-19"},{"lineNumber":93,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":94,"author":{"gitId":"jiakai-17"},"content":"     * @param num The number of the task to be deleted.","lastModifiedDate":"2023-08-19"},{"lineNumber":95,"author":{"gitId":"jiakai-17"},"content":"     * @throws DukeIllegalArgumentException If the task number is out of range of the list.","lastModifiedDate":"2023-08-19"},{"lineNumber":96,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":97,"author":{"gitId":"jiakai-17"},"content":"    private static void deleteTask(int num) throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-19"},{"lineNumber":98,"author":{"gitId":"jiakai-17"},"content":"        list.delete(num);","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":100,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":101,"author":{"gitId":"jiakai-17"},"content":"    private static void executeCommand(Parser parsedCommand) throws DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"jiakai-17"},"content":"        Parser.Command command \u003d parsedCommand.getCommand();","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"jiakai-17"},"content":"        String argument \u003d parsedCommand.getArgument();","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"jiakai-17"},"content":"        switch (command) {","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"jiakai-17"},"content":"        case BYE:","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"jiakai-17"},"content":"            endChat();","lastModifiedDate":"2023-08-19"},{"lineNumber":107,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-19"},{"lineNumber":108,"author":{"gitId":"jiakai-17"},"content":"        case LIST:","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"jiakai-17"},"content":"            listTasks();","lastModifiedDate":"2023-08-19"},{"lineNumber":110,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-19"},{"lineNumber":111,"author":{"gitId":"jiakai-17"},"content":"        case MARK:","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"jiakai-17"},"content":"            try {","lastModifiedDate":"2023-08-19"},{"lineNumber":113,"author":{"gitId":"jiakai-17"},"content":"                markTaskAsDone(Integer.parseInt(argument));","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"jiakai-17"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":115,"author":{"gitId":"jiakai-17"},"content":"                throw new DukeIllegalArgumentException(","lastModifiedDate":"2023-08-19"},{"lineNumber":116,"author":{"gitId":"jiakai-17"},"content":"                        String.format(ERROR_MESSAGE_TEMPLATE_INVALID_TASK_NUMBER, argument));","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":118,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-19"},{"lineNumber":119,"author":{"gitId":"jiakai-17"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"jiakai-17"},"content":"            try {","lastModifiedDate":"2023-08-19"},{"lineNumber":121,"author":{"gitId":"jiakai-17"},"content":"                unmarkTaskAsDone(Integer.parseInt(argument));","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"jiakai-17"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":123,"author":{"gitId":"jiakai-17"},"content":"                throw new DukeIllegalArgumentException(","lastModifiedDate":"2023-08-19"},{"lineNumber":124,"author":{"gitId":"jiakai-17"},"content":"                        String.format(ERROR_MESSAGE_TEMPLATE_INVALID_TASK_NUMBER, argument));","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":126,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-19"},{"lineNumber":127,"author":{"gitId":"jiakai-17"},"content":"        case TODO:","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"jiakai-17"},"content":"            addToDoTask(argument);","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-19"},{"lineNumber":130,"author":{"gitId":"jiakai-17"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"jiakai-17"},"content":"            if (!argument.contains(\" /by \")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"jiakai-17"},"content":"                throw new DukeIllegalArgumentException(\"Deadline Task is missing a \\\"/by\\\" field.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":133,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":134,"author":{"gitId":"jiakai-17"},"content":"            String[] deadlineArgs \u003d argument.split(\" /by \");","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"jiakai-17"},"content":"            if (deadlineArgs.length !\u003d 2) {","lastModifiedDate":"2023-08-19"},{"lineNumber":136,"author":{"gitId":"jiakai-17"},"content":"                throw new DukeIllegalArgumentException(\"Deadline Task is missing a description and/or date/time.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":137,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":138,"author":{"gitId":"jiakai-17"},"content":"            addDeadlineTask(deadlineArgs[0], deadlineArgs[1]);","lastModifiedDate":"2023-08-19"},{"lineNumber":139,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-19"},{"lineNumber":140,"author":{"gitId":"jiakai-17"},"content":"        case EVENT:","lastModifiedDate":"2023-08-26"},{"lineNumber":141,"author":{"gitId":"jiakai-17"},"content":"            if (!argument.contains(\" /from \") || !argument.contains(\" /to \")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"jiakai-17"},"content":"                throw new DukeIllegalArgumentException(\"Event Task is missing \\\"/from\\\" and/or \\\"/to\\\" fields.\");","lastModifiedDate":"2023-08-19"},{"lineNumber":143,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":144,"author":{"gitId":"jiakai-17"},"content":"            String[] eventArgs \u003d argument.split(\" /from \");","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"jiakai-17"},"content":"            String[] eventTimes \u003d eventArgs[1].split(\" /to \");","lastModifiedDate":"2023-08-19"},{"lineNumber":146,"author":{"gitId":"jiakai-17"},"content":"            addEventTask(eventArgs[0], eventTimes[0], eventTimes[1]);","lastModifiedDate":"2023-08-19"},{"lineNumber":147,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-19"},{"lineNumber":148,"author":{"gitId":"jiakai-17"},"content":"        case DELETE:","lastModifiedDate":"2023-08-26"},{"lineNumber":149,"author":{"gitId":"jiakai-17"},"content":"            try {","lastModifiedDate":"2023-08-19"},{"lineNumber":150,"author":{"gitId":"jiakai-17"},"content":"                deleteTask(Integer.parseInt(argument));","lastModifiedDate":"2023-08-26"},{"lineNumber":151,"author":{"gitId":"jiakai-17"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":152,"author":{"gitId":"jiakai-17"},"content":"                throw new DukeIllegalArgumentException(","lastModifiedDate":"2023-08-19"},{"lineNumber":153,"author":{"gitId":"jiakai-17"},"content":"                        String.format(ERROR_MESSAGE_TEMPLATE_INVALID_TASK_NUMBER, argument));","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":155,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-19"},{"lineNumber":156,"author":{"gitId":"jiakai-17"},"content":"        case INVALID:","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeUnknownCommandException(String.format(","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"jiakai-17"},"content":"                    ERROR_MESSAGE_TEMPLATE_UNKNOWN_COMMAND, parsedCommand.getInvalidCommand()));","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"jiakai-17"},"content":"        default:","lastModifiedDate":"2023-08-19"},{"lineNumber":160,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":162,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":163,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-19"},{"lineNumber":165,"author":{"gitId":"jiakai-17"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2023-08-26"},{"lineNumber":166,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":167,"author":{"gitId":"jiakai-17"},"content":"        while (!hasEndedChat) {","lastModifiedDate":"2023-08-19"},{"lineNumber":168,"author":{"gitId":"jiakai-17"},"content":"            String input \u003d Ui.getInput();","lastModifiedDate":"2023-08-26"},{"lineNumber":169,"author":{"gitId":"jiakai-17"},"content":"            Parser parsedCommand \u003d new Parser(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"jiakai-17"},"content":"            try {","lastModifiedDate":"2023-08-19"},{"lineNumber":171,"author":{"gitId":"jiakai-17"},"content":"                executeCommand(parsedCommand);","lastModifiedDate":"2023-08-26"},{"lineNumber":172,"author":{"gitId":"jiakai-17"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-19"},{"lineNumber":173,"author":{"gitId":"jiakai-17"},"content":"                Ui.printErrorMessage(e);","lastModifiedDate":"2023-08-26"},{"lineNumber":174,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-19"},{"lineNumber":175,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jiakai-17":173,"-":4}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":" * A RuntimeException that is thrown by Duke.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":" * All exceptions thrown by Duke should be a subclass of DukeException.","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"     * A RuntimeException that is thrown by Duke.","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"     * @param message The message to be displayed when the exception is thrown.","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"        super(message);","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jiakai-17":17}},{"path":"src/main/java/duke/exceptions/DukeIOException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":" * Thrown when there is an error reading/writing from the file.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"// Suppress Checkstyle as DukeIOException contains 3 consecutive upper case letters.","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"//CHECKSTYLE.OFF: AbbreviationAsWordInName","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"public class DukeIOException extends DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"    //CHECKSTYLE.ON: AbbreviationAsWordInName","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"     * Thrown when there is an error reading/writing from the file.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"     * @param message The message to be displayed when the exception is thrown.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"    public DukeIOException(String message) {","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"        super(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"jiakai-17":20}},{"path":"src/main/java/duke/exceptions/DukeIllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":" * Thrown when the user inputs an invalid argument into Duke.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"public class DukeIllegalArgumentException extends DukeException {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"     * Thrown when the user inputs an invalid argument.","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"     * @param message The message to be displayed when the exception is thrown.","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"    public DukeIllegalArgumentException(String message) {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"        super(message);","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jiakai-17":16}},{"path":"src/main/java/duke/exceptions/DukeUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":" * Thrown when the user inputs an unknown command into Duke.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"public class DukeUnknownCommandException extends DukeException {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"     * Thrown when the user inputs an unknown command.","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"     * @param message The message to be displayed when the exception is thrown.","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"    public DukeUnknownCommandException(String message) {","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"        super(message);","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jiakai-17":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":" * A parser to parse the user input and commands.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"public class Parser {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"     * The types of Commands that can be parsed.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"    public enum Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"        BYE,","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"        LIST,","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"        MARK,","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"        UNMARK,","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"        TODO,","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"        EVENT,","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"        DELETE,","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"        INVALID","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"    // The command from the user input.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"    private final Command command;","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"    // The arguments from the user input.","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"    private final String argument;","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"    // The invalid command from the user input.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"    private String invalidCommand \u003d \"\";","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"     * Constructor for a Parser. The input is parsed into a command and arguments.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"     * @param userInput The String entered by the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"    public Parser(String userInput) {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"        String[] splitInputs \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"        // temporary variable to store the parsed command before assigning to final variable","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"        Command parsedCommand;","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"        if (splitInputs.length \u003e 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"            // the user has input a command with arguments","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"                parsedCommand \u003d Command.valueOf(splitInputs[0].toUpperCase());","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"                parsedCommand \u003d Command.INVALID;","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"                this.invalidCommand \u003d splitInputs[0];","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"            this.argument \u003d userInput.substring(splitInputs[0].length() + 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"            // the user has input a command without arguments","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"                parsedCommand \u003d Command.valueOf(userInput.toUpperCase());","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"                parsedCommand \u003d Command.INVALID;","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"                this.invalidCommand \u003d userInput;","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"            this.argument \u003d \"\";","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"        this.command \u003d parsedCommand;","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"     * Returns the Command parsed from the user input.","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"     * @return The Command parsed from the user input.","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"    public Command getCommand() {","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"        return this.command;","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"     * Returns the argument parsed from the user input.","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"     * @return The argument parsed from the user input.","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"    public String getArgument() {","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"        return this.argument;","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"jiakai-17"},"content":"     * Returns the invalid command parsed from the user input.","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"jiakai-17"},"content":"     * @return The invalid command parsed from the user input.","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"jiakai-17"},"content":"    public String getInvalidCommand() {","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"jiakai-17"},"content":"        return this.invalidCommand;","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"jiakai-17":89}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"import duke.exceptions.DukeIOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":" * Stores data into specified files. Data is stored at ./data/ directory.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"public class Storage {","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"    // The path where the data is saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"    private final Path saveFilePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"     * Constructor for a Storage.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"     * Creates the storage file if it does not exist.","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"     * @param saveFileName The name of the file to save the data to. Eg: data.txt","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"    public Storage(String saveFileName) throws DukeIOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"        saveFilePath \u003d Path.of(System.getProperty(\"user.dir\"), \"data\", saveFileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"            if (!Files.exists(saveFilePath)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"                Ui.printMessage(\"Creating save file...\");","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"                Files.createDirectories(saveFilePath.getParent());","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"                Files.createFile(saveFilePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIOException(\"Error creating file: \" + ioe.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"     * Reads from the file and returns the data as a String.","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"     * @return The data in the file as a String.","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"     * @throws DukeIOException If there is an error reading from the file.","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"    public String load() throws DukeIOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"            BufferedReader reader \u003d Files.newBufferedReader(saveFilePath, StandardCharsets.UTF_8);","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"            StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"                data.append(line).append(\"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"            reader.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"            return data.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIOException(\"Error reading from file: \" + ioe.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"     * Writes to the file.","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"     * @param data The data to be written to the file.","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"     * @throws DukeIOException If there is an error writing to the file.","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"    public void save(String data) throws DukeIOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"            Files.writeString(saveFilePath, data);","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIOException(\"Error writing to file: \" + ioe.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"jiakai-17":77}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import duke.exceptions.DukeIllegalArgumentException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":" * A Task that needs to be done before a specific date/time.","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"    // The deadline of the Deadline task, stored as a LocalDateTime Object.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    protected final LocalDateTime by;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"     * @param by The deadline of the Deadline task. Must follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"     * @throws DukeIllegalArgumentException If the deadline does not follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"    public Deadline(String description, String by) throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"            this.by \u003d LocalDateTime.parse(by, parseFormatter);","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"                    \"The deadline of a Deadline task must follow the format yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"     * Returns the String representation of the Deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by.format(printFormatter));","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"     * Exports the Deadline task to a String to be saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"     * @return String representation of the Deadline task to be saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"    public String export() {","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"        return String.format(\"DEADLINE || %s || %s || %s || %s\", super.export(),","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"                this.by.format(parseFormatter), \"\", \"\");","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jiakai-17":53}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import duke.exceptions.DukeIllegalArgumentException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":" * A Task that starts at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"    // The start and end date/time of the Event task, stored as LocalDateTime Objects.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    protected final LocalDateTime start;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    protected final LocalDateTime end;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"     * @param start The start date/time of the Event task. Must follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"     * @param end The end date/time of the Event task. Must follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"     * @throws DukeIllegalArgumentException If the start/end date/time does not follow the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"            this.start \u003d LocalDateTime.parse(start, parseFormatter);","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"            this.end \u003d LocalDateTime.parse(end, parseFormatter);","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"                    \"The start and end date/time of an Event task must follow the format yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"     * Returns the String representation of the Deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"                this.start.format(printFormatter), this.end.format(printFormatter));","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"     * Exports the Event task to a String to be saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"     * @return String representation of the Event task to be saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"    public String export() {","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"        return String.format(\"EVENT || %s || %s || %s || %s\", super.export(), \"\",","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"                this.start.format(parseFormatter), this.end.format(parseFormatter));","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jiakai-17":57}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":" * A task.","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"public class Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"    // The description of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"    protected final String description;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"    // The status of the task. True if done, false if not done.","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    // The LocalDateTime formatter to parse the date/time of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"    protected final DateTimeFormatter parseFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"    // The LocalDateTime formatter to print the date/time of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"    protected final DateTimeFormatter printFormatter \u003d DateTimeFormatter.ofPattern(\"EEE dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"     * Constructor for a Task.","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"     * Marks this task as done.","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-19"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"     * Marks this task as undone.","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"     * Returns the status of the checkbox for the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"     * @return String [ ] if not done, [X] if done.","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"    private String getStatusCheckbox() {","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"        return getStatusCheckbox() + \" \" + description;","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"     * Exports the task to a String to be saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"     * @return String representation of the task to be saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"    public String export() {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"        return String.format(\"%s || %s\",","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"                isDone ? \"X\" : \" \",","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"                description);","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jiakai-17":74}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import duke.exceptions.DukeIOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import duke.exceptions.DukeIllegalArgumentException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":" * A list of tasks.","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"public class TaskList {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    // Error messages","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    private static final String ERROR_MESSAGE_INDEX_OUT_OF_BOUNDS \u003d","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"            \"The task number is out of range. Use \\\"list\\\" to see your tasks.\";","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"    // Stores the list of tasks","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"    protected final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"     * Enum for types of tasks.","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"     * Available types: TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"    public enum TaskType {","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"        TODO,","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"        DEADLINE,","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"        EVENT","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"     * Storage to save and load tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"    private final Storage taskStorage;","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"     * Constructor for a TaskList.","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"     * @param saveFileName The name of the file to save the data to. Eg: tasks.txt","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"    public TaskList(String saveFileName) {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"        this.taskStorage \u003d new Storage(saveFileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"        this.importData();","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"     * Prints an OK message when a task is added.","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"    private void printAddTaskMessage() {","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"        Ui.printMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"     * Prints the number of tasks in the list after adding/removing a task.","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"    private void printNumberOfTasks() {","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"        String taskOrTasks \u003d this.list.size() \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"        Ui.printMessage(String.format(\"Now you have %d %s in the list.\", this.list.size(), taskOrTasks));","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"     * Add a task to the TaskList. This method is private.","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"     * @param taskType The type of task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"     * @param description The description of the task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"     * @param by The deadline of the task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"     * @param start The start date/time of the task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"     * @param end The end date/time of the task to add.","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"    private void add(TaskType taskType, String description, String by, String start, String end)","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"        case TODO:","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"            Task toDoTask \u003d new ToDo(description);","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"            this.list.add(toDoTask);","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"            printAddTaskMessage();","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"            Ui.printMessage(toDoTask.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"jiakai-17"},"content":"            printNumberOfTasks();","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"jiakai-17"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"jiakai-17"},"content":"            Task deadlineTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"jiakai-17"},"content":"            this.list.add(deadlineTask);","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"jiakai-17"},"content":"            printAddTaskMessage();","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"jiakai-17"},"content":"            Ui.printMessage(deadlineTask.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"jiakai-17"},"content":"            printNumberOfTasks();","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"jiakai-17"},"content":"        case EVENT:","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"jiakai-17"},"content":"            Task eventTask \u003d new Event(description, start, end);","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"jiakai-17"},"content":"            this.list.add(eventTask);","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"jiakai-17"},"content":"            printAddTaskMessage();","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"jiakai-17"},"content":"            Ui.printMessage(eventTask.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"jiakai-17"},"content":"            printNumberOfTasks();","lastModifiedDate":"2023-08-20"},{"lineNumber":93,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-20"},{"lineNumber":94,"author":{"gitId":"jiakai-17"},"content":"        default:","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"jiakai-17"},"content":"            break;","lastModifiedDate":"2023-08-20"},{"lineNumber":96,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"jiakai-17"},"content":"        this.exportData();","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"jiakai-17"},"content":"     * Add a task with description to the TaskList. Used for ToDo tasks.","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":103,"author":{"gitId":"jiakai-17"},"content":"     * @param taskType The type of task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":104,"author":{"gitId":"jiakai-17"},"content":"     * @param description The description of the task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":105,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"jiakai-17"},"content":"    public void add(TaskType taskType, String description) throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-20"},{"lineNumber":107,"author":{"gitId":"jiakai-17"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":108,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(\"The description of a ToDo task cannot be blank.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":109,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":110,"author":{"gitId":"jiakai-17"},"content":"        if (taskType !\u003d TaskType.TODO) {","lastModifiedDate":"2023-08-20"},{"lineNumber":111,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(\"Only ToDo tasks can be added with just a description.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":112,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":113,"author":{"gitId":"jiakai-17"},"content":"        this.add(taskType, description, \"\", \"\", \"\");","lastModifiedDate":"2023-08-20"},{"lineNumber":114,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":115,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":117,"author":{"gitId":"jiakai-17"},"content":"     * Add a task with description and deadline to the TaskList. Used for Deadline tasks.","lastModifiedDate":"2023-08-20"},{"lineNumber":118,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":119,"author":{"gitId":"jiakai-17"},"content":"     * @param taskType The type of task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":120,"author":{"gitId":"jiakai-17"},"content":"     * @param description The description of the task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":121,"author":{"gitId":"jiakai-17"},"content":"     * @param by The deadline of the task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":122,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":123,"author":{"gitId":"jiakai-17"},"content":"    public void add(TaskType taskType, String description, String by) throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"jiakai-17"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":125,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(\"The description of a Deadline task cannot be blank.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":126,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":127,"author":{"gitId":"jiakai-17"},"content":"        if (by.isBlank()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":128,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(\"The date/time of a Deadline task cannot be blank.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":129,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":130,"author":{"gitId":"jiakai-17"},"content":"        if (taskType !\u003d TaskType.DEADLINE) {","lastModifiedDate":"2023-08-20"},{"lineNumber":131,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(","lastModifiedDate":"2023-08-20"},{"lineNumber":132,"author":{"gitId":"jiakai-17"},"content":"                    \"Only Deadline tasks can be added with a description and deadline.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":133,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":134,"author":{"gitId":"jiakai-17"},"content":"        this.add(taskType, description, by, \"\", \"\");","lastModifiedDate":"2023-08-20"},{"lineNumber":135,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":136,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":137,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"jiakai-17"},"content":"     * Add a task with description, start and end date/time to the TaskList. Used for Event tasks.","lastModifiedDate":"2023-08-20"},{"lineNumber":139,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":140,"author":{"gitId":"jiakai-17"},"content":"     * @param taskType The type of task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":141,"author":{"gitId":"jiakai-17"},"content":"     * @param description The description of the task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":142,"author":{"gitId":"jiakai-17"},"content":"     * @param start The start date/time of the task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"jiakai-17"},"content":"     * @param end The end date/time of the task to add.","lastModifiedDate":"2023-08-20"},{"lineNumber":144,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":145,"author":{"gitId":"jiakai-17"},"content":"    public void add(TaskType taskType, String description, String start, String end)","lastModifiedDate":"2023-08-20"},{"lineNumber":146,"author":{"gitId":"jiakai-17"},"content":"            throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-20"},{"lineNumber":147,"author":{"gitId":"jiakai-17"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":148,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(\"The description of an Event task cannot be blank.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":149,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":150,"author":{"gitId":"jiakai-17"},"content":"        if (start.isBlank()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":151,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(\"The start date/time of an Event task cannot be blank.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":152,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":153,"author":{"gitId":"jiakai-17"},"content":"        if (end.isBlank()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":154,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(\"The end date/time of an Event task cannot be blank.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":155,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":156,"author":{"gitId":"jiakai-17"},"content":"        if (taskType !\u003d TaskType.EVENT) {","lastModifiedDate":"2023-08-20"},{"lineNumber":157,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(","lastModifiedDate":"2023-08-20"},{"lineNumber":158,"author":{"gitId":"jiakai-17"},"content":"                    \"Only Event tasks can be added with a description, start and end date/time.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":159,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":160,"author":{"gitId":"jiakai-17"},"content":"        this.add(taskType, description, \"\", start, end);","lastModifiedDate":"2023-08-20"},{"lineNumber":161,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":162,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":163,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":164,"author":{"gitId":"jiakai-17"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-20"},{"lineNumber":165,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":166,"author":{"gitId":"jiakai-17"},"content":"     * @param num The number of the task to be marked as done.","lastModifiedDate":"2023-08-20"},{"lineNumber":167,"author":{"gitId":"jiakai-17"},"content":"     * @throws DukeIllegalArgumentException If the task number is out of range of the list.","lastModifiedDate":"2023-08-20"},{"lineNumber":168,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":169,"author":{"gitId":"jiakai-17"},"content":"    public void mark(int num) throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-20"},{"lineNumber":170,"author":{"gitId":"jiakai-17"},"content":"        int index \u003d num - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":171,"author":{"gitId":"jiakai-17"},"content":"        if (index \u003c 0 || index \u003e\u003d this.list.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":172,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(ERROR_MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2023-08-20"},{"lineNumber":173,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":174,"author":{"gitId":"jiakai-17"},"content":"        this.list.get(index).markAsDone();","lastModifiedDate":"2023-08-20"},{"lineNumber":175,"author":{"gitId":"jiakai-17"},"content":"        Ui.printMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":176,"author":{"gitId":"jiakai-17"},"content":"        Ui.printMessage(this.list.get(index).toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"jiakai-17"},"content":"        this.exportData();","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":179,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":180,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":181,"author":{"gitId":"jiakai-17"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-08-20"},{"lineNumber":182,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":183,"author":{"gitId":"jiakai-17"},"content":"     * @param num The number of the task to be marked as undone.","lastModifiedDate":"2023-08-20"},{"lineNumber":184,"author":{"gitId":"jiakai-17"},"content":"     * @throws DukeIllegalArgumentException If the task number is out of range of the list.","lastModifiedDate":"2023-08-20"},{"lineNumber":185,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":186,"author":{"gitId":"jiakai-17"},"content":"    public void unmark(int num) throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-20"},{"lineNumber":187,"author":{"gitId":"jiakai-17"},"content":"        int index \u003d num - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":188,"author":{"gitId":"jiakai-17"},"content":"        if (index \u003c 0 || index \u003e\u003d this.list.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":189,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(ERROR_MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2023-08-20"},{"lineNumber":190,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":191,"author":{"gitId":"jiakai-17"},"content":"        this.list.get(index).unmarkAsDone();","lastModifiedDate":"2023-08-20"},{"lineNumber":192,"author":{"gitId":"jiakai-17"},"content":"        Ui.printMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":193,"author":{"gitId":"jiakai-17"},"content":"        Ui.printMessage(this.list.get(index).toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":194,"author":{"gitId":"jiakai-17"},"content":"        this.exportData();","lastModifiedDate":"2023-08-26"},{"lineNumber":195,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":196,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":197,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":198,"author":{"gitId":"jiakai-17"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2023-08-20"},{"lineNumber":199,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":200,"author":{"gitId":"jiakai-17"},"content":"     * @param num The number of the task to be deleted.","lastModifiedDate":"2023-08-20"},{"lineNumber":201,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":202,"author":{"gitId":"jiakai-17"},"content":"    public void delete(int num) throws DukeIllegalArgumentException {","lastModifiedDate":"2023-08-20"},{"lineNumber":203,"author":{"gitId":"jiakai-17"},"content":"        int index \u003d num - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":204,"author":{"gitId":"jiakai-17"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":205,"author":{"gitId":"jiakai-17"},"content":"            throw new DukeIllegalArgumentException(ERROR_MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2023-08-20"},{"lineNumber":206,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":207,"author":{"gitId":"jiakai-17"},"content":"        Task task \u003d list.remove(index);","lastModifiedDate":"2023-08-20"},{"lineNumber":208,"author":{"gitId":"jiakai-17"},"content":"        Ui.printMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":209,"author":{"gitId":"jiakai-17"},"content":"        Ui.printMessage(task.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":210,"author":{"gitId":"jiakai-17"},"content":"        printNumberOfTasks();","lastModifiedDate":"2023-08-20"},{"lineNumber":211,"author":{"gitId":"jiakai-17"},"content":"        this.exportData();","lastModifiedDate":"2023-08-26"},{"lineNumber":212,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":213,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":214,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-20"},{"lineNumber":215,"author":{"gitId":"jiakai-17"},"content":"     * Returns the String representation of the TaskList.","lastModifiedDate":"2023-08-20"},{"lineNumber":216,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-20"},{"lineNumber":217,"author":{"gitId":"jiakai-17"},"content":"     * @return String representation of the TaskList.","lastModifiedDate":"2023-08-20"},{"lineNumber":218,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-20"},{"lineNumber":219,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":220,"author":{"gitId":"jiakai-17"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":221,"author":{"gitId":"jiakai-17"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-20"},{"lineNumber":222,"author":{"gitId":"jiakai-17"},"content":"        sb.append(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-20"},{"lineNumber":223,"author":{"gitId":"jiakai-17"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":224,"author":{"gitId":"jiakai-17"},"content":"            sb.append(\"\\nYou have no tasks in your list.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":225,"author":{"gitId":"jiakai-17"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":226,"author":{"gitId":"jiakai-17"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":227,"author":{"gitId":"jiakai-17"},"content":"                sb.append(\"\\n\").append((i + 1)).append(\".\").append(list.get(i));","lastModifiedDate":"2023-08-20"},{"lineNumber":228,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":229,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":230,"author":{"gitId":"jiakai-17"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":231,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":232,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":233,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":234,"author":{"gitId":"jiakai-17"},"content":"     * Exports the TaskList\u0027s contents to the save file.","lastModifiedDate":"2023-08-26"},{"lineNumber":235,"author":{"gitId":"jiakai-17"},"content":"     * Each task should have the format:","lastModifiedDate":"2023-08-26"},{"lineNumber":236,"author":{"gitId":"jiakai-17"},"content":"     * TASK_TYPE || IS_DONE || DESCRIPTION || BY_DATE_TIME || START_DATE_TIME || END_DATE_TIME","lastModifiedDate":"2023-08-26"},{"lineNumber":237,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":238,"author":{"gitId":"jiakai-17"},"content":"     * @throws DukeIOException If there is an error saving the tasks to the file.","lastModifiedDate":"2023-08-26"},{"lineNumber":239,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":240,"author":{"gitId":"jiakai-17"},"content":"    private void exportData() throws DukeIOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":241,"author":{"gitId":"jiakai-17"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-26"},{"lineNumber":242,"author":{"gitId":"jiakai-17"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-08-26"},{"lineNumber":243,"author":{"gitId":"jiakai-17"},"content":"            sb.append(task.export()).append(\"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":244,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":245,"author":{"gitId":"jiakai-17"},"content":"        taskStorage.save(sb.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":246,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":247,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":248,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":249,"author":{"gitId":"jiakai-17"},"content":"     * Reads the exported data from the save file and restores the state of the Task List.","lastModifiedDate":"2023-08-26"},{"lineNumber":250,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":251,"author":{"gitId":"jiakai-17"},"content":"     * @throws DukeIOException If there is an error reading from the file.","lastModifiedDate":"2023-08-26"},{"lineNumber":252,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":253,"author":{"gitId":"jiakai-17"},"content":"    private void importData() throws DukeIOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":254,"author":{"gitId":"jiakai-17"},"content":"        String exportedData \u003d taskStorage.load();","lastModifiedDate":"2023-08-26"},{"lineNumber":255,"author":{"gitId":"jiakai-17"},"content":"        if (exportedData.isBlank()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":256,"author":{"gitId":"jiakai-17"},"content":"            return;","lastModifiedDate":"2023-08-26"},{"lineNumber":257,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":258,"author":{"gitId":"jiakai-17"},"content":"        Ui.printMessage(\"[RESTORE] Please wait, restoring task list from save file...\");","lastModifiedDate":"2023-08-26"},{"lineNumber":259,"author":{"gitId":"jiakai-17"},"content":"        String[] tasks \u003d exportedData.split(\"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":260,"author":{"gitId":"jiakai-17"},"content":"        for (String t : tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":261,"author":{"gitId":"jiakai-17"},"content":"            String[] args \u003d t.split(\" \\\\|\\\\| \");","lastModifiedDate":"2023-08-26"},{"lineNumber":262,"author":{"gitId":"jiakai-17"},"content":"            TaskType taskType \u003d TaskType.valueOf(args[0]);","lastModifiedDate":"2023-08-26"},{"lineNumber":263,"author":{"gitId":"jiakai-17"},"content":"            switch (taskType) {","lastModifiedDate":"2023-08-26"},{"lineNumber":264,"author":{"gitId":"jiakai-17"},"content":"            case TODO:","lastModifiedDate":"2023-08-26"},{"lineNumber":265,"author":{"gitId":"jiakai-17"},"content":"                this.add(taskType, args[2]);","lastModifiedDate":"2023-08-26"},{"lineNumber":266,"author":{"gitId":"jiakai-17"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":267,"author":{"gitId":"jiakai-17"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-26"},{"lineNumber":268,"author":{"gitId":"jiakai-17"},"content":"                this.add(taskType, args[2], args[3]);","lastModifiedDate":"2023-08-26"},{"lineNumber":269,"author":{"gitId":"jiakai-17"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":270,"author":{"gitId":"jiakai-17"},"content":"            case EVENT:","lastModifiedDate":"2023-08-26"},{"lineNumber":271,"author":{"gitId":"jiakai-17"},"content":"                this.add(taskType, args[2], args[4], args[5]);","lastModifiedDate":"2023-08-26"},{"lineNumber":272,"author":{"gitId":"jiakai-17"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":273,"author":{"gitId":"jiakai-17"},"content":"            default:","lastModifiedDate":"2023-08-26"},{"lineNumber":274,"author":{"gitId":"jiakai-17"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":275,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":276,"author":{"gitId":"jiakai-17"},"content":"            if (args[1].equals(\"X\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":277,"author":{"gitId":"jiakai-17"},"content":"                this.mark(this.list.size());","lastModifiedDate":"2023-08-26"},{"lineNumber":278,"author":{"gitId":"jiakai-17"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":279,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":280,"author":{"gitId":"jiakai-17"},"content":"        Ui.printMessage(String.format(\"[RESTORE] Restored %d tasks successfully!%n\", this.list.size()));","lastModifiedDate":"2023-08-26"},{"lineNumber":281,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":282,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"jiakai-17":282}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":" * A Task without any date/time attached to it.","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"     * Constructor for a ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-19"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"        super(description);","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"     * Returns the String representation of the ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"     * @return String representation of the ToDo task.","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"    public String toString() {","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"     * Exports the ToDo task to a String to be saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"     * @return String representation of the ToDo task to be saved.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"    public String export() {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"        return String.format(\"TODO || %s || %s || %s || %s\", super.export(), \"\", \"\", \"\");","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jiakai-17":35}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":" * A UI to interact with the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"public class Ui {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"    // Read user input","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"        System.out.println(\"Hello! I\u0027m Max!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"     * Print the error message of a DukeException.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"     * @param e The DukeException whose error message will be printed.","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"    public static void printErrorMessage(DukeException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"        System.out.printf(\"[ERROR] %s%n\", e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"     * Returns the input from the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"     * @return The input from the user as a String.","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"    public static String getInput() {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"     * Print an arbitrary message.","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"jiakai-17":56}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"    public void parser_validCommand_success() {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"        String[] validCommands \u003d {\"bye\", \"mark\", \"unmark\", \"list\", \"todo\", \"deadline\", \"event\", \"delete\"};","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"        for (String vc : validCommands) {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(Parser.Command.valueOf(vc.toUpperCase()), new Parser(vc).getCommand());","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"    public void parser_invalidCommand_success() {","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"        String[] invalidCommands \u003d {\"bai\", \"asdfghjkl\"};","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"        for (String ic : invalidCommands) {","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(Parser.Command.INVALID, new Parser(ic).getCommand());","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"    public void parser_parseInput_success() {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"        String[] commands \u003d {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"            \"bye\",","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"            \"mark 1\",","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"            \"unmark 1\",","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"            \"list\",","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"            \"todo todo\",","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"            \"deadline deadline /by 2023-08-25 23:59\",","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"            \"event event /from 2023-08-26 23:59 /to 2023-08-27 23:59\",","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"            \"delete 1\"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"        };","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"        for (String c : commands) {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"            Parser parsed \u003d new Parser(c);","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(Parser.Command.valueOf(c.split(\" \")[0].toUpperCase()), parsed.getCommand());","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(!c.contains(\" \") ? \"\" : c.substring(c.indexOf(\" \") + 1),","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"                    parsed.getArgument());","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"jiakai-17":44}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"    private final String listHeader \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"    private final String emptyList \u003d \"You have no tasks in your list.\";","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"    public void add_tasks_success() {","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"        String fileName \u003d \"test_add.txt\";","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"        Storage storage \u003d new Storage(fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"        storage.save(\"\");","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"        StringBuilder expected \u003d new StringBuilder(listHeader);","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"        TaskList taskList \u003d new TaskList(fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"        taskList.add(TaskList.TaskType.TODO, \"todo\");","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(expected.append(\"1.[T][ ] todo\").toString(), taskList.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"        taskList.add(TaskList.TaskType.DEADLINE, \"deadline\", \"2023-08-25 23:59\");","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"        expected.append(\"\\n2.[D][ ] deadline (by: Fri 25 Aug 2023 23:59)\");","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(expected.toString(), taskList.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"        taskList.add(TaskList.TaskType.EVENT, \"event\", \"2023-08-26 23:59\", \"2023-08-27 23:59\");","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"        expected.append(\"\\n3.[E][ ] event (from: Sat 26 Aug 2023 23:59 to: Sun 27 Aug 2023 23:59)\");","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(expected.toString(), taskList.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"    public void add_noDescription_exceptionThrown() {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"        String fileName \u003d \"test_add.txt\";","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"        Storage storage \u003d new Storage(fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"        storage.save(\"\");","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"        TaskList taskList \u003d new TaskList(fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"            taskList.add(TaskList.TaskType.TODO, \"\");","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(\"The description of a ToDo task cannot be blank.\", e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"            taskList.add(TaskList.TaskType.DEADLINE, \"\", \"2023-08-25 23:59\");","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(\"The description of a Deadline task cannot be blank.\", e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"            taskList.add(TaskList.TaskType.EVENT, \"\", \"2023-08-26 23:59\", \"2023-08-27 23:59\");","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(\"The description of an Event task cannot be blank.\", e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"    public void add_wrongTaskType_exceptionThrown() {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"        String fileName \u003d \"test_add.txt\";","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"        Storage storage \u003d new Storage(fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"        storage.save(\"\");","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"        TaskList taskList \u003d new TaskList(fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"        // Trying to add as TODO","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"jiakai-17"},"content":"            taskList.add(TaskList.TaskType.DEADLINE, \"deadline\");","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"jiakai-17"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"jiakai-17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(\"Only ToDo tasks can be added with just a description.\", e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"jiakai-17"},"content":"            taskList.add(TaskList.TaskType.EVENT, \"event\");","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"jiakai-17"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"jiakai-17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(\"Only ToDo tasks can be added with just a description.\", e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"jiakai-17"},"content":"        // Trying to add as Deadline","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"jiakai-17"},"content":"            taskList.add(TaskList.TaskType.TODO, \"todo\", \"2023-08-26 23:59\");","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"jiakai-17"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"jiakai-17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(\"Only Deadline tasks can be added with a description and deadline.\",","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"jiakai-17"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"jiakai-17"},"content":"            taskList.add(TaskList.TaskType.EVENT, \"event\", \"2023-08-26 23:59\");","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"jiakai-17"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"jiakai-17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(\"Only Deadline tasks can be added with a description and deadline.\",","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"jiakai-17"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"jiakai-17"},"content":"        // Trying to add as Event","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"jiakai-17"},"content":"            taskList.add(TaskList.TaskType.TODO, \"todo\", \"2023-08-26 23:59\", \"2023-08-27 23:59\");","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"jiakai-17"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"jiakai-17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(\"Only Event tasks can be added with a description, start and end date/time.\",","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"jiakai-17"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"jiakai-17"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"jiakai-17"},"content":"            taskList.add(TaskList.TaskType.DEADLINE, \"todo\", \"2023-08-26 23:59\", \"2023-08-27 23:59\");","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"jiakai-17"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"jiakai-17"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"jiakai-17"},"content":"            assertEquals(\"Only Event tasks can be added with a description, start and end date/time.\",","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"jiakai-17"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"jiakai-17"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"jiakai-17"},"content":"    public void delete_tasks_success() {","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"jiakai-17"},"content":"        String fileName \u003d \"test_delete.txt\";","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"jiakai-17"},"content":"        Storage storage \u003d new Storage(fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"jiakai-17"},"content":"        String data \u003d \"TODO ||   || todo || || ||\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"jiakai-17"},"content":"                + \"DEADLINE ||   || deadline || 2023-08-25 23:59 || ||\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"jiakai-17"},"content":"                + \"EVENT ||   || event ||  || 2023-08-26 23:59 || 2023-08-27 23:59\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"jiakai-17"},"content":"        storage.save(data);","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"jiakai-17"},"content":"        TaskList taskList \u003d new TaskList(fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"jiakai-17"},"content":"        taskList.delete(1);","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(listHeader","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"jiakai-17"},"content":"                        + \"1.[D][ ] deadline (by: Fri 25 Aug 2023 23:59)\"","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n2.[E][ ] event (from: Sat 26 Aug 2023 23:59 to: Sun 27 Aug 2023 23:59)\",","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"jiakai-17"},"content":"                taskList.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"jiakai-17"},"content":"        taskList.delete(2);","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(listHeader","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"jiakai-17"},"content":"                        + \"1.[D][ ] deadline (by: Fri 25 Aug 2023 23:59)\",","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"jiakai-17"},"content":"                taskList.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"jiakai-17"},"content":"        taskList.delete(1);","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(listHeader + emptyList, taskList.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":138,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":139,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":140,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":141,"author":{"gitId":"jiakai-17"},"content":"    public void mark_tasks_success() {","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"jiakai-17"},"content":"        String fileName \u003d \"test_mark.txt\";","lastModifiedDate":"2023-08-26"},{"lineNumber":143,"author":{"gitId":"jiakai-17"},"content":"        Storage storage \u003d new Storage(fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"jiakai-17"},"content":"        String data \u003d \"TODO ||   || todo || || ||\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"jiakai-17"},"content":"                + \"DEADLINE ||   || deadline || 2023-08-25 23:59 || ||\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":146,"author":{"gitId":"jiakai-17"},"content":"                + \"EVENT ||   || event ||  || 2023-08-26 23:59 || 2023-08-27 23:59\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":147,"author":{"gitId":"jiakai-17"},"content":"        storage.save(data);","lastModifiedDate":"2023-08-26"},{"lineNumber":148,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":149,"author":{"gitId":"jiakai-17"},"content":"        TaskList taskList \u003d new TaskList(fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":150,"author":{"gitId":"jiakai-17"},"content":"        taskList.mark(1);","lastModifiedDate":"2023-08-26"},{"lineNumber":151,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(listHeader","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"jiakai-17"},"content":"                        + \"1.[T][X] todo\"","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n2.[D][ ] deadline (by: Fri 25 Aug 2023 23:59)\"","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n3.[E][ ] event (from: Sat 26 Aug 2023 23:59 to: Sun 27 Aug 2023 23:59)\",","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"jiakai-17"},"content":"                taskList.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"jiakai-17"},"content":"        taskList.mark(2);","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(listHeader","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"jiakai-17"},"content":"                        + \"1.[T][X] todo\"","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n2.[D][X] deadline (by: Fri 25 Aug 2023 23:59)\"","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n3.[E][ ] event (from: Sat 26 Aug 2023 23:59 to: Sun 27 Aug 2023 23:59)\",","lastModifiedDate":"2023-08-26"},{"lineNumber":162,"author":{"gitId":"jiakai-17"},"content":"                taskList.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":163,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":164,"author":{"gitId":"jiakai-17"},"content":"        taskList.mark(3);","lastModifiedDate":"2023-08-26"},{"lineNumber":165,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(listHeader","lastModifiedDate":"2023-08-26"},{"lineNumber":166,"author":{"gitId":"jiakai-17"},"content":"                        + \"1.[T][X] todo\"","lastModifiedDate":"2023-08-26"},{"lineNumber":167,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n2.[D][X] deadline (by: Fri 25 Aug 2023 23:59)\"","lastModifiedDate":"2023-08-26"},{"lineNumber":168,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n3.[E][X] event (from: Sat 26 Aug 2023 23:59 to: Sun 27 Aug 2023 23:59)\",","lastModifiedDate":"2023-08-26"},{"lineNumber":169,"author":{"gitId":"jiakai-17"},"content":"                taskList.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":171,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":172,"author":{"gitId":"jiakai-17"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":173,"author":{"gitId":"jiakai-17"},"content":"    public void unmark_task_success() {","lastModifiedDate":"2023-08-26"},{"lineNumber":174,"author":{"gitId":"jiakai-17"},"content":"        String fileName \u003d \"test_unmark.txt\";","lastModifiedDate":"2023-08-26"},{"lineNumber":175,"author":{"gitId":"jiakai-17"},"content":"        Storage storage \u003d new Storage(fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":176,"author":{"gitId":"jiakai-17"},"content":"        String data \u003d \"TODO || X || todo || || ||\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"jiakai-17"},"content":"                + \"DEADLINE || X || deadline || 2023-08-25 23:59 || ||\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"jiakai-17"},"content":"                + \"EVENT || X || event ||  || 2023-08-26 23:59 || 2023-08-27 23:59\\n\";","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"jiakai-17"},"content":"        storage.save(data);","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":181,"author":{"gitId":"jiakai-17"},"content":"        TaskList taskList \u003d new TaskList(fileName);","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"jiakai-17"},"content":"        taskList.unmark(2);","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(listHeader","lastModifiedDate":"2023-08-26"},{"lineNumber":184,"author":{"gitId":"jiakai-17"},"content":"                        + \"1.[T][X] todo\"","lastModifiedDate":"2023-08-26"},{"lineNumber":185,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n2.[D][ ] deadline (by: Fri 25 Aug 2023 23:59)\"","lastModifiedDate":"2023-08-26"},{"lineNumber":186,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n3.[E][X] event (from: Sat 26 Aug 2023 23:59 to: Sun 27 Aug 2023 23:59)\",","lastModifiedDate":"2023-08-26"},{"lineNumber":187,"author":{"gitId":"jiakai-17"},"content":"                taskList.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":188,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":189,"author":{"gitId":"jiakai-17"},"content":"        taskList.unmark(3);","lastModifiedDate":"2023-08-26"},{"lineNumber":190,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(listHeader","lastModifiedDate":"2023-08-26"},{"lineNumber":191,"author":{"gitId":"jiakai-17"},"content":"                        + \"1.[T][X] todo\"","lastModifiedDate":"2023-08-26"},{"lineNumber":192,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n2.[D][ ] deadline (by: Fri 25 Aug 2023 23:59)\"","lastModifiedDate":"2023-08-26"},{"lineNumber":193,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n3.[E][ ] event (from: Sat 26 Aug 2023 23:59 to: Sun 27 Aug 2023 23:59)\",","lastModifiedDate":"2023-08-26"},{"lineNumber":194,"author":{"gitId":"jiakai-17"},"content":"                taskList.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":195,"author":{"gitId":"jiakai-17"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":196,"author":{"gitId":"jiakai-17"},"content":"        taskList.unmark(1);","lastModifiedDate":"2023-08-26"},{"lineNumber":197,"author":{"gitId":"jiakai-17"},"content":"        assertEquals(listHeader","lastModifiedDate":"2023-08-26"},{"lineNumber":198,"author":{"gitId":"jiakai-17"},"content":"                        + \"1.[T][ ] todo\"","lastModifiedDate":"2023-08-26"},{"lineNumber":199,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n2.[D][ ] deadline (by: Fri 25 Aug 2023 23:59)\"","lastModifiedDate":"2023-08-26"},{"lineNumber":200,"author":{"gitId":"jiakai-17"},"content":"                        + \"\\n3.[E][ ] event (from: Sat 26 Aug 2023 23:59 to: Sun 27 Aug 2023 23:59)\",","lastModifiedDate":"2023-08-26"},{"lineNumber":201,"author":{"gitId":"jiakai-17"},"content":"                taskList.toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":202,"author":{"gitId":"jiakai-17"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":203,"author":{"gitId":"jiakai-17"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"jiakai-17":203}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"TODO ||   || restore data ||  ||  || ","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"DEADLINE ||   || restore deadline || 2023-01-01 12:34 ||  || ","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"EVENT ||   || restore event ||  || 2023-01-01 12:34 || 2023-12-31 23:45","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"jiakai-17":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":2,"author":{"gitId":"jiakai-17"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"jiakai-17"},"content":"unmark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"jiakai-17"},"content":"delete 1","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"jiakai-17"},"content":"delete 1","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"jiakai-17"},"content":"delete 1","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"jiakai-17"},"content":"todo borrow book","lastModifiedDate":"2023-08-19"},{"lineNumber":9,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":10,"author":{"gitId":"jiakai-17"},"content":"deadline return book /by 2023-01-02 11:11","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":12,"author":{"gitId":"jiakai-17"},"content":"event project meeting /from 2023-04-01 20:00 /to 2023-04-02 23:00","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":14,"author":{"gitId":"jiakai-17"},"content":"mark","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"jiakai-17"},"content":"unmark","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"jiakai-17"},"content":"mark 1","lastModifiedDate":"2023-08-19"},{"lineNumber":17,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":18,"author":{"gitId":"jiakai-17"},"content":"mark 2","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"jiakai-17"},"content":"mark 3","lastModifiedDate":"2023-08-19"},{"lineNumber":21,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":22,"author":{"gitId":"jiakai-17"},"content":"unmark 2","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":24,"author":{"gitId":"jiakai-17"},"content":"unmark 3","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"jiakai-17"},"content":"unmark 1","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"jiakai-17"},"content":"todo","lastModifiedDate":"2023-08-19"},{"lineNumber":29,"author":{"gitId":"jiakai-17"},"content":"todo     ","lastModifiedDate":"2023-08-19"},{"lineNumber":30,"author":{"gitId":"jiakai-17"},"content":"deadline","lastModifiedDate":"2023-08-19"},{"lineNumber":31,"author":{"gitId":"jiakai-17"},"content":"deadline      ","lastModifiedDate":"2023-08-19"},{"lineNumber":32,"author":{"gitId":"jiakai-17"},"content":"deadline   book  /until next week","lastModifiedDate":"2023-08-19"},{"lineNumber":33,"author":{"gitId":"jiakai-17"},"content":"deadline   x   /by  ","lastModifiedDate":"2023-08-19"},{"lineNumber":34,"author":{"gitId":"jiakai-17"},"content":"deadline       /by when","lastModifiedDate":"2023-08-19"},{"lineNumber":35,"author":{"gitId":"jiakai-17"},"content":"deadline y /by tmr","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"jiakai-17"},"content":"event","lastModifiedDate":"2023-08-19"},{"lineNumber":37,"author":{"gitId":"jiakai-17"},"content":"event     ","lastModifiedDate":"2023-08-19"},{"lineNumber":38,"author":{"gitId":"jiakai-17"},"content":"event     /start   /end   ","lastModifiedDate":"2023-08-19"},{"lineNumber":39,"author":{"gitId":"jiakai-17"},"content":"event     /from    /to   ","lastModifiedDate":"2023-08-19"},{"lineNumber":40,"author":{"gitId":"jiakai-17"},"content":"event a   /from    /to   ","lastModifiedDate":"2023-08-19"},{"lineNumber":41,"author":{"gitId":"jiakai-17"},"content":"event b   /from  s /to    ","lastModifiedDate":"2023-08-19"},{"lineNumber":42,"author":{"gitId":"jiakai-17"},"content":"event     /from 76 /to 1234567","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"jiakai-17"},"content":"event c /from 1 /to tomorrow","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"jiakai-17"},"content":"event d /from 2022-02-02 00:01 /to tomorrow","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"jiakai-17"},"content":"event e /from today /to 2022-02-02 00:01","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"jiakai-17"},"content":"mark 0","lastModifiedDate":"2023-08-19"},{"lineNumber":47,"author":{"gitId":"jiakai-17"},"content":"unmark 0","lastModifiedDate":"2023-08-19"},{"lineNumber":48,"author":{"gitId":"jiakai-17"},"content":"mark -1","lastModifiedDate":"2023-08-19"},{"lineNumber":49,"author":{"gitId":"jiakai-17"},"content":"unmark -1","lastModifiedDate":"2023-08-19"},{"lineNumber":50,"author":{"gitId":"jiakai-17"},"content":"mark 2147483650","lastModifiedDate":"2023-08-19"},{"lineNumber":51,"author":{"gitId":"jiakai-17"},"content":"unmark 2147483650","lastModifiedDate":"2023-08-19"},{"lineNumber":52,"author":{"gitId":"jiakai-17"},"content":"mark a","lastModifiedDate":"2023-08-19"},{"lineNumber":53,"author":{"gitId":"jiakai-17"},"content":"unmark b","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":55,"author":{"gitId":"jiakai-17"},"content":"asdfghjkl","lastModifiedDate":"2023-08-19"},{"lineNumber":56,"author":{"gitId":"jiakai-17"},"content":"delete","lastModifiedDate":"2023-08-19"},{"lineNumber":57,"author":{"gitId":"jiakai-17"},"content":"delete -1","lastModifiedDate":"2023-08-19"},{"lineNumber":58,"author":{"gitId":"jiakai-17"},"content":"delete 2147483650","lastModifiedDate":"2023-08-19"},{"lineNumber":59,"author":{"gitId":"jiakai-17"},"content":"delete c","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"jiakai-17"},"content":"delete 1","lastModifiedDate":"2023-08-19"},{"lineNumber":61,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":62,"author":{"gitId":"jiakai-17"},"content":"delete 1","lastModifiedDate":"2023-08-19"},{"lineNumber":63,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":64,"author":{"gitId":"jiakai-17"},"content":"delete 1","lastModifiedDate":"2023-08-19"},{"lineNumber":65,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":66,"author":{"gitId":"jiakai-17"},"content":"delete 1","lastModifiedDate":"2023-08-19"},{"lineNumber":67,"author":{"gitId":"jiakai-17"},"content":"list","lastModifiedDate":"2023-08-19"},{"lineNumber":68,"author":{"gitId":"jiakai-17"},"content":"bye","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"jiakai-17":68}}]
