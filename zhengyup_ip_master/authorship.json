[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"# duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhengyup":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"    archiveFileName \u003d \u0027Duke.jar\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhengyup":2,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * Main class for the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" * This class handles user interactions and manages tasks using the Archive class.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"    private UI ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"     * Constructs a Duke instance with the specified file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"     * @param FILEPATH file path for storing task data.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"    public Duke(String FILEPATH) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"        storage \u003d new Storage(FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"     * Runs the Duke application, handling user interactions and task management.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"        ui.printIntro();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"            String input \u003d ui.getInput();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"                if (input.equals(\"GET SCHWIFTY\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"                    System.out.print(\"I LIKE WHAT YOU\u0027VE GOT. GOOD JOB.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"                    return;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"                    tasks.print();","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"                    tasks.markTask(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"                    tasks.unmarkTask(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"                    tasks.deleteTask(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"                else if (input.startsWith(\"find\")){","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"                    tasks.find(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"                else {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"                    tasks.addTask(input);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"                storage.save(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"     * The entry point for running the Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"        new Duke(\"data/saved.txt\").run();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zhengyup":63,"-":3}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.InvalidDateFormatException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":" * The Storage class handles loading and saving tasks from/to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"    private final String FILEPATH;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"     * @param FILEPATH The file path to store task data.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"    public Storage(String FILEPATH){","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"        this.FILEPATH \u003d FILEPATH;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"     * Loads tasks from the file specified in the constructor.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"            File f \u003d new File(FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"            Files.createDirectories(Paths.get(\"data\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"            f.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"            list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"                loadTask(s.nextLine(), list);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"            list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"        return list;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"     * Loads a task from the input string and adds it to the provided list.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"     * @param input The input string representing the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"     * @param list  The list to which the task will be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"    public void loadTask(String input, List\u003cTask\u003e list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"        boolean isMarked;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"        int markedIndex \u003d input.indexOf(\"|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"zhengyup"},"content":"        isMarked \u003d input.charAt(markedIndex + 2) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"zhengyup"},"content":"        int titleIndex \u003d input.indexOf(\"|\", markedIndex + 1) + 2;","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"zhengyup"},"content":"            if (input.startsWith(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"zhengyup"},"content":"                String title \u003d input.substring(titleIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"zhengyup"},"content":"                list.add(new Todo(title, isMarked));","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"zhengyup"},"content":"            } else if (input.startsWith(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"zhengyup"},"content":"                int byIndex \u003d input.indexOf(\"|\", titleIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"zhengyup"},"content":"                String title \u003d input.substring(titleIndex, byIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"zhengyup"},"content":"                String dueDateString \u003d input.substring(byIndex + 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"zhengyup"},"content":"                list.add(new Deadline(title, parseDate(dueDateString), isMarked));","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"zhengyup"},"content":"            } else if (input.startsWith(\"E\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"zhengyup"},"content":"                int fromIndex \u003d input.indexOf(\"|\", titleIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"zhengyup"},"content":"                String title \u003d input.substring(titleIndex, fromIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"zhengyup"},"content":"                int toIndex \u003d input.indexOf(\"|\", fromIndex + 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"zhengyup"},"content":"                String from \u003d input.substring(fromIndex + 2, toIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"zhengyup"},"content":"                String to \u003d input.substring(toIndex + 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"zhengyup"},"content":"                list.add(new Event(title, parseDate(from), parseDate(to), isMarked));","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"zhengyup"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"zhengyup"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"zhengyup"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"zhengyup"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"zhengyup"},"content":"     * Saves tasks from the provided TaskList instance to the file specified in the constructor.","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"zhengyup"},"content":"     * @param tasks The TaskList instance containing tasks to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"zhengyup"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"zhengyup"},"content":"            FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"zhengyup"},"content":"            for (int i \u003d 0; i \u003c tasks.list.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"zhengyup"},"content":"                fw.write(tasks.list.get(i).toSave() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"zhengyup"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"zhengyup"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"zhengyup"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"zhengyup"},"content":"     * Parses a date-time string into a LocalDateTime instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"zhengyup"},"content":"     * @param input The input date-time string.","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"zhengyup"},"content":"     * @return A LocalDateTime instance parsed from the input string.","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"zhengyup"},"content":"     * @throws InvalidDateFormatException If the input string has an invalid date-time format.","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"zhengyup"},"content":"    public LocalDateTime parseDate(String input) throws InvalidDateFormatException {","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"zhengyup"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"zhengyup"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"zhengyup"},"content":"            return dateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"zhengyup"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"zhengyup"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhengyup":127}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":" * Represents an archive of tasks in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":" * This class provides methods to manage and manipulate tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"    protected List\u003cTask\u003e list;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new TaskList object with the specified list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"     * @param list The initial list of tasks to be managed.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"    public TaskList(List\u003cTask\u003e list){","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"     * Prints the list of tasks in the archive along with their indices.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"    public void print() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"            System.out.println(i + \". \" + list.get(i));","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"     * Marks a task as completed based on user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"     * @param input The input string containing the task index to mark.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"     * @throws OutOfIndexException If the provided index is out of the valid range.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"    public void markTask(String input) throws OutOfIndexException {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"        int item \u003d input.charAt(5) - \u00270\u0027;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"        if (item \u003c 0 || item \u003e list.size() - 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"            throw new OutOfIndexException();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"        Task curr \u003d list.get(item);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"        curr.setMark(true);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"        System.out.println(\"I HAVE MARKED THIS TASK:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"        System.out.println(curr);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"     * Marks a completed task as incomplete based on user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"     * @param input The input string containing the task index to unmark.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"     * @throws OutOfIndexException If the provided index is out of the valid range.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"    public void unmarkTask(String input) throws OutOfIndexException {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"        int item \u003d input.charAt(5) - \u00270\u0027;","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"        if (item \u003c 0 || item \u003e list.size() - 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"            throw new OutOfIndexException();","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"        Task curr \u003d list.get(item);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"zhengyup"},"content":"        curr.setMark(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"zhengyup"},"content":"        System.out.println(\"I HAVE UNMARKED THIS TASK:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"zhengyup"},"content":"        System.out.println(curr);","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"zhengyup"},"content":"     * Deletes a task based on user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"zhengyup"},"content":"     * @param input The input string containing the task index to delete.","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"zhengyup"},"content":"     * @throws OutOfIndexException If the provided index is out of the valid range.","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"zhengyup"},"content":"    public void deleteTask(String input) throws OutOfIndexException {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"zhengyup"},"content":"        int item \u003d input.charAt(7) - \u00270\u0027;","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"zhengyup"},"content":"        if (item \u003c 0 || item \u003e list.size() - 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"zhengyup"},"content":"            throw new OutOfIndexException();","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"zhengyup"},"content":"        Task curr \u003d list.remove(item);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"zhengyup"},"content":"        System.out.println(\"I HAVE DELETED THE FOLLOWING TASK:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"zhengyup"},"content":"        System.out.println(curr);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"zhengyup"},"content":"        System.out.println(\"NOW YOU HAVE \" + list.size() + \" TASKS LEFT\");","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"zhengyup"},"content":"     * Adds a task to the archive based on user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"zhengyup"},"content":"     * @param input The input string containing the task details.","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"zhengyup"},"content":"     * @throws EmptyDeadlineException If the deadline task is missing required details.","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"zhengyup"},"content":"     * @throws EmptyTodoException     If the todo task is missing a title.","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"zhengyup"},"content":"     * @throws EmptyEventException    If the event task is missing required details.","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"zhengyup"},"content":"     * @throws MissingByException     If the deadline task is missing the \"by\" date.","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"zhengyup"},"content":"     * @throws MissingFromException   If the event task is missing the start date.","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"zhengyup"},"content":"     * @throws MissingToException     If the event task is missing the end date.","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"zhengyup"},"content":"     * @throws MissingTitleException  If a task is missing its title.","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"zhengyup"},"content":"     * @throws InvalidInputException  If the input doesn\u0027t match any valid task format.","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"zhengyup"},"content":"    public void addTask(String input) throws InvalidDateFormatException, EmptyDeadlineException, EmptyTodoException, EmptyEventException,","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"zhengyup"},"content":"            MissingByException, MissingFromException, MissingToException, MissingTitleException, InvalidInputException {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"zhengyup"},"content":"        Task added \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"zhengyup"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"zhengyup"},"content":"            if (input.length() \u003c 6) {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"zhengyup"},"content":"                throw new EmptyTodoException();","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"zhengyup"},"content":"            String title \u003d input.substring(5);","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"zhengyup"},"content":"            added \u003d new Todo(title, false);","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"zhengyup"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"zhengyup"},"content":"            if (input.length() \u003c 10) {","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"zhengyup"},"content":"                throw new EmptyDeadlineException();","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"zhengyup"},"content":"            int index \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"zhengyup"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"zhengyup"},"content":"                throw new MissingByException();","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"zhengyup"},"content":"            if (index \u003c 10) {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"zhengyup"},"content":"                throw new MissingTitleException();","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"zhengyup"},"content":"            String title \u003d input.substring(9, index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"zhengyup"},"content":"            String dueDate \u003d input.substring(index + 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"zhengyup"},"content":"            added \u003d new Deadline(title, parseDate(dueDate), false);","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"zhengyup"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"zhengyup"},"content":"            if (input.length() \u003c 7) {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"zhengyup"},"content":"                throw new EmptyEventException();","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"zhengyup"},"content":"            int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"zhengyup"},"content":"            if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"zhengyup"},"content":"                throw new MissingFromException();","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"zhengyup"},"content":"            if (fromIndex \u003c 7) {","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"zhengyup"},"content":"                throw new MissingTitleException();","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"zhengyup"},"content":"            String title \u003d input.substring(6, fromIndex - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"zhengyup"},"content":"            int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"zhengyup"},"content":"            if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"zhengyup"},"content":"                throw new MissingToException();","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"zhengyup"},"content":"            String from \u003d input.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"zhengyup"},"content":"            String to \u003d input.substring(toIndex + 4);","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"zhengyup"},"content":"            added \u003d new Event(title, parseDate(from), parseDate(to), false);","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"zhengyup"},"content":"        if (added !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"zhengyup"},"content":"            list.add(added);","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"zhengyup"},"content":"            System.out.println(\"I\u0027VE ADDED THIS TASK:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"zhengyup"},"content":"            System.out.println(added);","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"zhengyup"},"content":"            System.out.println(\"YOU HAVE \" + list.size() + \" TASKS IN THE LIST\");","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"zhengyup"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"zhengyup"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"zhengyup"},"content":"     * Parses a date-time string into a LocalDateTime instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"zhengyup"},"content":"     * @param input The input date-time string.","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"zhengyup"},"content":"     * @return A LocalDateTime instance parsed from the input string.","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"zhengyup"},"content":"     * @throws InvalidDateFormatException If the input string has an invalid date-time format.","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"zhengyup"},"content":"    public LocalDateTime parseDate(String input) throws InvalidDateFormatException{","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"zhengyup"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"zhengyup"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"zhengyup"},"content":"            return dateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"zhengyup"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"zhengyup"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"zhengyup"},"content":"     * Finds tasks in the task list that match the given keyword(s) in their titles.","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"zhengyup"},"content":"     * @param input The input string containing the keyword(s) to search for.","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"zhengyup"},"content":"     * @return A list of tasks that match the search criteria.","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"zhengyup"},"content":"     * @throws InvalidFindException If the provided search input is too short to be valid.","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"zhengyup"},"content":"    public List\u003cTask\u003e find(String input) throws InvalidFindException{","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"zhengyup"},"content":"        if (input.length() \u003c 5) {","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"zhengyup"},"content":"            throw new InvalidFindException();","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"zhengyup"},"content":"        String keywords \u003d input.substring(5);","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"zhengyup"},"content":"        for (Task curr : list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"zhengyup"},"content":"            if (curr.getTitle().indexOf(keywords) !\u003d -1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"zhengyup"},"content":"                filteredTasks.add(curr);","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"zhengyup"},"content":"        System.out.println(\"TASKS FOUND:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"zhengyup"},"content":"        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"zhengyup"},"content":"            System.out.println(i + \". \" + filteredTasks.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"zhengyup"},"content":"        return filteredTasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":197}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" * The UI class handles user interactions and printing messages in the Duke application.","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"public class UI {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    private final String LOGO \u003d \"       ___\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"            \"    . -^   `--,\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"            \"   /# \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d`-_\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"            \"  /# (--\u003d\u003d\u003d\u003d___\u003d\u003d\u003d\u003d\\\\\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"            \" /#   .- --.  . --.|\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"            \"/##   |  * ) (   * ),\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"            \"|##   \\\\    /\\\\ \\\\   / |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"            \"|###   ---   \\\\ ---  |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"            \"|####      ___)    #|\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"            \"|######           ##|\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"            \" \\\\##### ---------- /\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"            \"  \\\\####           (\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"            \"   `\\\\###          |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"            \"     \\\\###         |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"            \"      \\\\##        |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"            \"       \\\\###.    .)\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"            \"        `\u003d\u003d\u003d\u003d\u003d\u003d/\";","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"     * Constructs a UI object.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"    public UI() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"     * Prints the introduction message with the Duke logo.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"    public void printIntro() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"        System.out.println(\"Hello I\u0027m HEAD\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"     * @return The user input as a string.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"    public String getInput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"        System.out.println(\"SHOW ME WHAT YOU\u0027VE GOT\");","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"        return input;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhengyup":52}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is used to handle errors specific to the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    private String message;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"     * Returns the error message associated with this exception.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"     * @return The error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"        return this.message;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhengyup":32}},{"path":"src/main/java/duke/exceptions/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for empty deadline entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add a deadline task without a title or due date.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class EmptyDeadlineException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new EmptyDeadlineException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format for adding a deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public EmptyDeadlineException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! Missing entry. ENTER deadline (title) /by (dueDate) to\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"                \" add a deadline\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":17}},{"path":"src/main/java/duke/exceptions/EmptyEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for empty event entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add an event task without a title, start date, or end date.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class EmptyEventException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new EmptyEventException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format for adding an event.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public EmptyEventException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! Missing entry. ENTER event (title) /from (from) /to (to) to\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"                \" add an event\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhengyup":17}},{"path":"src/main/java/duke/exceptions/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for empty todo entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add a todo task without a title.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class EmptyTodoException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new EmptyTodoException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format for adding a todo.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public EmptyTodoException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! Missing title of todo. ENTER todo (title) to add a todo\");","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":16}},{"path":"src/main/java/duke/exceptions/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"public class InvalidDateFormatException extends DukeException{","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"    public InvalidDateFormatException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"        super(\"Invalid date format! input dates for by/from/to using the following format : dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhengyup":7}},{"path":"src/main/java/duke/exceptions/InvalidFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"public class InvalidFindException extends DukeException{","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"    public InvalidFindException(){","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"        super(\"Invalid find command. Enter find (keyword / key phrases)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"zhengyup":7}},{"path":"src/main/java/duke/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for invalid input entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user provides an input that doesn\u0027t match any valid command formats.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new InvalidInputException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format to start various types of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! START WITH todo (title) or \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"                \"deadline (title) /by (dueDate) or event (title) /from (from) /to (to)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":17}},{"path":"src/main/java/duke/exceptions/MissingByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for missing \"by\" date entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add a deadline task without specifying the \"by\" date.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class MissingByException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new MissingByException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format for adding a deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public MissingByException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! Missing by. ENTER deadline (title) /by (dueDate) to add a deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":16}},{"path":"src/main/java/duke/exceptions/MissingFromException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for missing \"from\" date entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add an event task without specifying the start date.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class MissingFromException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new MissingFromException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format for adding an event.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public MissingFromException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! Missing event start date. ENTER event (title) /from (from)\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"                \" /to (to) to add an event\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhengyup":18}},{"path":"src/main/java/duke/exceptions/MissingTitleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for missing title entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add a task without providing a title.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class MissingTitleException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new MissingTitleException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the importance of providing a title for tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public MissingTitleException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! MISSING TITLE!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhengyup":16}},{"path":"src/main/java/duke/exceptions/MissingToException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for missing \"to\" date entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add an event task without specifying the end date.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class MissingToException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new MissingToException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format for adding an event.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public MissingToException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! Missing event end date. ENTER event (title) /from (from) /to\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"                \" (to) to add an event\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":17}},{"path":"src/main/java/duke/exceptions/OutOfIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for out-of-index task access in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to access a task using an index that is out of the valid range.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class OutOfIndexException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new OutOfIndexException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the fact that they provided an invalid task index.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public OutOfIndexException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"You have provided a number out of index of the stored tasks\");","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":17}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":" * Represents a task with a deadline in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":" * This class extends the base class Task and includes the due date of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    private String printDateString;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"    private String saveDateString;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new Deadline object with a title and due date.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"     * @param title    The title of the deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"     * @param dueDate  The due date of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"     * @param isMarked The marking status of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"    public Deadline(String title, LocalDateTime dueDate, boolean isMarked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"        super(title, isMarked);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"        this.printDateString \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"        this.saveDateString \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"     * Generates a string representation of the Deadline object.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string indicating the status, title, and due date of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"        String mark \u003d super.isMarked ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"        return \"[D]\" + mark + title + \" (by: \" + this.printDateString + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"     * Generates a formatted string to represent the Deadline object for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string for saving the Deadline object.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"    public String toSave() {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"        String res \u003d \"D\";","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"        res +\u003d (isMarked ? \"| 1\" : \"| 0\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"        res +\u003d \"| \" + title;","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"        res +\u003d \"| \" + saveDateString;","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"        return res;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"     * Retrieves the due date of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"     * @return The due date of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"        return this.dueDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zhengyup":63}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":" * Represents an event task in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":" * This class extends the base class Task and includes the start and end dates of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"    private String printFromString;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"    private String saveFromString;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    private String printToString;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"    private String saveToString;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new Event object with a title, start date, and end date.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"     * @param title    The title of the event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"     * @param from     The start date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"     * @param to       The end date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"     * @param isMarked The marking status of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"    public Event(String title, LocalDateTime from, LocalDateTime to, boolean isMarked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"        super(title, isMarked);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"        this.printFromString \u003d this.from.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"        this.printToString \u003d this.to.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"        this.saveFromString \u003d this.from.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"        this.saveToString \u003d this.to.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"     * Generates a string representation of the Event object.","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string indicating the status, title, start date, and end date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"        String mark \u003d super.isMarked ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"        return \"[E]\" + mark + title + \" (from: \" + this.printFromString + \" to: \" + this.printToString + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"     * Generates a formatted string to represent the Event object for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string for saving the Event object.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"    public String toSave() {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"        String res \u003d \"E\";","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"        res +\u003d (isMarked ? \"| 1\" : \"| 0\");","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"        res +\u003d \"| \" + title;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"        res +\u003d \"| \" + saveFromString;","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"        res +\u003d \"| \" + saveToString;","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"        return res;","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"     * Retrieves the start date of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"     * @return The start date of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"zhengyup"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"zhengyup"},"content":"        return this.from;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"zhengyup"},"content":"     * Retrieves the end date of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"zhengyup"},"content":"     * @return The end date of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"zhengyup"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"zhengyup"},"content":"        return to;","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zhengyup":80}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Abstract base class representing a task in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * Subclasses (e.g., Deadline, Event) extend this class to represent specific types of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    protected String title;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"    protected boolean isMarked \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new Task object with a title.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"     * @param title    The title of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"     * @param isMarked The marking status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"    public Task(String title, boolean isMarked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"    public void setMark(boolean isMarked) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"     * Retrieves the marking status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"     * @return True if the task is marked as completed, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"    public boolean getIsMarked() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"        return this.isMarked;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"     * Retrieves the title of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"     * @return The title of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"    public String getTitle() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"        return this.title;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"     * Generates a string representation of the Task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string indicating the status (marked or unmarked) and title of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"        String mark \u003d this.isMarked ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"        return mark + title;","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"     * Generates a formatted string to represent the Task object for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string for saving the Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"    public abstract String toSave();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zhengyup":62}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Represents a todo task in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This class extends the base class Task and represents a simple todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new Todo object with a title.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     * @param title    The title of the todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"     * @param isMarked The marking status of the todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"    public Todo(String title, boolean isMarked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"        super(title, isMarked);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"     * Generates a string representation of the Todo object.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string indicating the status (marked or unmarked) and title of the todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"        String mark \u003d super.isMarked ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"        return \"[T]\" + mark + title;","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"     * Generates a formatted string to represent the Todo object for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string for saving the Todo object.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"    public String toSave() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"        String res \u003d \"T\";","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"        res +\u003d (isMarked ? \"| 1\" : \"| 0\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"        res +\u003d \"| \" + title;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"        return res;","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zhengyup":42}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":" * Test class for the Storage class.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":" * Contains test cases for the loadTask method.","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"     * Test loading a Todo task with valid input.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"     * Verifies that the task is created and added to the list correctly.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"    public void loadTask_Todo_ValidInput_TaskCreatedAndAddedToList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"        Storage storage \u003d new Storage(\"testFILEPATH\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"        String input \u003d \"T | 1| Title\";","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"        storage.loadTask(input, list);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"        assertEquals(1, list.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"        assertEquals(Todo.class, list.get(0).getClass());","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"        assertEquals(\"Title\", list.get(0).getTitle());","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"        assertEquals(true, list.get(0).getIsMarked());","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"     * Test loading a Deadline task with valid input.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"     * Verifies that the task is created and added to the list correctly.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"    public void loadTask_Deadline_ValidInput_TaskCreatedAndAddedToList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"        Storage storage \u003d new Storage(\"testFILEPATH\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"        String input \u003d \"D | 1| Deadline Title| 01/01/2023 14:00\";","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"        storage.loadTask(input, list);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"        assertEquals(1, list.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"        assertEquals(Deadline.class, list.get(0).getClass());","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"        assertEquals(\"Deadline Title\", list.get(0).getTitle());","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"        assertEquals(true, list.get(0).getIsMarked());","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"        assertEquals(LocalDateTime.of(2023, 1, 1, 14, 0), ((Deadline) list.get(0)).getDueDate());","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"     * Test loading an Event task with valid input.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"     * Verifies that the task is created and added to the list correctly.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"    public void loadTask_Event_ValidInput_TaskCreatedAndAddedToList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"        Storage storage \u003d new Storage(\"testFILEPATH\");","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"        String input \u003d \"E| 1| Event Title| 01/01/2023 14:00| 01/01/2023 16:00\";","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"        storage.loadTask(input, list);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"zhengyup"},"content":"        assertEquals(1, list.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"zhengyup"},"content":"        assertEquals(\"Event Title\", list.get(0).getTitle());","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"zhengyup"},"content":"        assertEquals(true,list.get(0).getIsMarked());","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"zhengyup"},"content":"        assertEquals(LocalDateTime.of(2023, 1, 1, 14, 0), ((Event) list.get(0)).getFrom());","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"zhengyup"},"content":"        assertEquals(LocalDateTime.of(2023, 1, 1, 16, 0), ((Event) list.get(0)).getTo());","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"zhengyup"},"content":"     * Test loading with invalid input.","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"zhengyup"},"content":"     * Verifies that no task is added to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"zhengyup"},"content":"    public void loadTask_InvalidInput_NoTaskAddedToList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"zhengyup"},"content":"        Storage storage \u003d new Storage(\"testFILEPATH\");","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"zhengyup"},"content":"        String input \u003d \"InvalidInput\";","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"zhengyup"},"content":"        storage.loadTask(input, list);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"zhengyup"},"content":"        assertEquals(0, list.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"zhengyup":90}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"import duke.Tasks.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-CodingStandard","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":" * Test class for the TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":" * Contains test cases for the markTask method.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"     * Test marking a task with an input index greater than the list size.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"     * Verifies that an exception is thrown.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"    public void markTask_inputMoreThanSize_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"            temp.add(new Todo(\"foo\", false));","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"        TaskList test \u003d new TaskList(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"            test.markTask(\"mark 6\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"            assertEquals(\"You have provided a number out of index of the stored tasks\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"     * Test marking a task with a negative input index.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"     * Verifies that an exception is thrown.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"    public void markTask_inputLessThanZero_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"            temp.add(new Todo(\"foo\", false));","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"        TaskList test \u003d new TaskList(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"            test.markTask(\"mark -1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"            assertEquals(\"You have provided a number out of index of the stored tasks\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"     * Test marking a task with a non-integer input index.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"     * Verifies that the task\u0027s marked status is not changed.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"    public void markTask_inputNonInteger_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"        Task todo \u003d new Todo(\"foo\", true);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"zhengyup"},"content":"        temp.add(todo);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"zhengyup"},"content":"        TaskList test \u003d new TaskList(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"zhengyup"},"content":"            test.markTask(\"mark test\");","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"zhengyup"},"content":"            assertEquals(true, todo.getIsMarked());","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"zhengyup"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"zhengyup"},"content":"            assertEquals(\"You have provided a number out of index of the stored tasks\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"zhengyup"},"content":"     * Test marking a task with an input index within the valid range.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"zhengyup"},"content":"     * Verifies that the task\u0027s marked status is changed to true.","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"zhengyup"},"content":"    public void markTask_inputWithinRange_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"zhengyup"},"content":"        Task todo \u003d new Todo(\"foo\", false);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"zhengyup"},"content":"        temp.add(todo);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"zhengyup"},"content":"        TaskList test \u003d new TaskList(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"zhengyup"},"content":"            test.markTask(\"mark 0\");","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"zhengyup"},"content":"            assertEquals(true, todo.getIsMarked());","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"zhengyup"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"zhengyup"},"content":"            assertEquals(\"You have provided a number out of index of the stored tasks\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"zhengyup"},"content":"     * Test marking an already marked task.","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"zhengyup"},"content":"     * Verifies that the task\u0027s marked status remains true.","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"zhengyup"},"content":"    public void markTask_markAlreadyMarkedTask_success() {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"zhengyup"},"content":"        Task todo \u003d new Todo(\"foo\", true);","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"zhengyup"},"content":"        temp.add(todo);","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"zhengyup"},"content":"        TaskList test \u003d new TaskList(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"zhengyup"},"content":"            test.markTask(\"mark 0\");","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"zhengyup"},"content":"            assertEquals(true, todo.getIsMarked());","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"zhengyup"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"zhengyup"},"content":"            assertEquals(\"You have provided a number out of index of the stored tasks\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"zhengyup":113}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"todo test todo","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"deadline test deadline /by today","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"deadline test /by today","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"deadline test","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"event test event /from today /to tomorrow","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"event test event /to tomorrow","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"event test event /from today","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"event /from today /to tomorrow","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"mark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"mark 10","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"unmark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"unmark 10","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"delete 0","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"GET SCHWIFTY","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhengyup":1,"-":20}}]
