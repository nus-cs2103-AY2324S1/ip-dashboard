[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"# duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhengyup":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"//    mainClass.set(\"duke.gui.Launcher\")","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"    archiveFileName \u003d \u0027Duke.jar\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhengyup":21,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"# HEAD todo list","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"### Adding a Todo `todo`","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"Adds a Todo task to the task list","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"Format : `todo TITLE`","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"- Title can have spaces and need not be a singular word","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"Example : `Todo cs2103 ip`","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"### Adding a Deadline `deadline`","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"Adds a deadline task to the task list","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"Format : `todo TITLE /by DEADLINE`","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"- DEADLINE must either be in the format DD/MM/YYYY HH:mm or DD/MM/YYYY","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"- Default time is 12:00","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"Example : ","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"- `deadline cs2103 ip /by 22/2/2022`","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"- `deadline cs2103 ip /by 22/2/2022 23:59`","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"### Adding an Event `event`","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"Adds an event task to the task list","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"Format : `todo TITLE /from FROM /to TO`","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"- From and To can either be in the format DD/MM/YYYY HH:mm or DD/MM/YYYY","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"- Default time is 12:00","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"Example :","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"- `event cs2103 meeting /from 22/2/2022 /to 23/2/2022`","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"- `event cs2103 meeting /from 22/2/2022 12:00 /to 23/2/2022 14:00`","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"### Listing all tasks `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"Lists all added tasks in the task list","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"Format : `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"### Find task with keyword `find`","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"Finds all tasks containing the provided keywords","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"Format : `find KEYWORD`","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"- Keyword can be space separated, eg. CS2103 ip, but ","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"- Only one keyword or phrase can be input","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"Example : `find cs2103` ","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"### Marks a task as done `mark`","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"Marks the task at the provided index ","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"Format : `mark INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"- INDEX provided must be a **positive integer** between 0 and size of the task list","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"\u003e💡 Use list to find the index of a task if unsure of the ","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"\u003e index of a specific task","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"zhengyup"},"content":"Example : `mark 0`","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"zhengyup"},"content":"### Marks a task as undone `unmark`","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"zhengyup"},"content":"Marks the task at the provided index","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"zhengyup"},"content":"Format : `unmark INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"zhengyup"},"content":"Example : `unmark 0`","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"zhengyup"},"content":"### Delete a task `delete`","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"zhengyup"},"content":"Deletes the task at the provided index","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"zhengyup"},"content":"Format : `delete INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"zhengyup"},"content":"- INDEX provided must be a **positive integer** between 0 and size of the task list","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"zhengyup"},"content":"\u003e💡  Use list to find the index of a task if unsure of the","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"zhengyup"},"content":"\u003e index of a specific task","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"zhengyup"},"content":"Example : `unmark 0`","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"zhengyup"},"content":"### Undo the previous change `undo` ","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"zhengyup"},"content":"Reverts the task list to its state one command ago","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"zhengyup"},"content":"Format : `undo`","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"zhengyup"},"content":"### Saving the data ","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"zhengyup"},"content":"Tasks in the task list are automatically saved after every command that edits the task list. There is no ","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"zhengyup"},"content":"need for manual saving.","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"zhengyup":88,"-":14}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import duke.gui.DialogBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":" * duke.Main class for the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":" * This class handles user interactions and manages tasks using the Archive class.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Head.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Rickmorty.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"     * Constructs a Duke instance with the specified file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"    public Duke() {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"        storage \u003d new Storage(\"data/saved.txt\");","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"     * Initializes and configures the JavaFX application\u0027s user interface.","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"     * This method sets up the main application window, UI components, and event handlers.","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"     * @param stage The primary stage representing the main application window.","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"        assert scene !\u003d null : \"scene must be instantiated before stage can set scene\";","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"        stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"zhengyup"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"zhengyup"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"zhengyup"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"zhengyup"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"zhengyup"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"zhengyup"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"zhengyup"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"zhengyup"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"zhengyup"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"zhengyup"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"zhengyup"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"zhengyup"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"zhengyup"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"zhengyup"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"zhengyup"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"zhengyup"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"zhengyup"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"zhengyup"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"zhengyup"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"zhengyup"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"zhengyup"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"zhengyup"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"zhengyup"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"zhengyup"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"zhengyup"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"zhengyup"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"zhengyup"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"zhengyup"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"zhengyup"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"zhengyup"},"content":"     * Iteration 1:","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"zhengyup"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"zhengyup"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"zhengyup"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"zhengyup"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"zhengyup"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"zhengyup"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"zhengyup"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"zhengyup"},"content":"     * Iteration 2:","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"zhengyup"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"zhengyup"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"zhengyup"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"zhengyup"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"zhengyup"},"content":"        String dukeProcessedText \u003d getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"zhengyup"},"content":"        assert dukeProcessedText.length() \u003e 0 : \"processed text should not be empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"zhengyup"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"zhengyup"},"content":"                DialogBox.getUserDialog(userInput.getText(), userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"zhengyup"},"content":"                DialogBox.getDukeDialog(dukeProcessedText, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"zhengyup"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"zhengyup"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"zhengyup"},"content":"     * Processes the input command and generates a response.","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"zhengyup"},"content":"     * @param input The input command to be processed.","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"zhengyup"},"content":"     * @return A String containing the response generated based on the input.","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"zhengyup"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"zhengyup"},"content":"        String[] parsedText \u003d Parser.parse(input, tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"zhengyup"},"content":"        String response \u003d manipulateTasks(parsedText);","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"zhengyup"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"zhengyup"},"content":"        return response;","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"zhengyup"},"content":"     * This method performs various tasks based on the input command and arguments.","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"zhengyup"},"content":"     * @param parsedText An array of strings representing the parsed input command and arguments.","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"zhengyup"},"content":"     * @return A string containing the result of the operation or an error message.","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"zhengyup"},"content":"     * @throws DukeException If an error occurs during task manipulation, a DukeException is thrown.","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"zhengyup"},"content":"    public String manipulateTasks(String[] parsedText) {","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"zhengyup"},"content":"        tasks.pushCurr();","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"zhengyup"},"content":"            switch (parsedText[0]) {","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"zhengyup"},"content":"            case \"undo\":","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"zhengyup"},"content":"                return tasks.undo();","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"zhengyup"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"zhengyup"},"content":"                return tasks.markTask(Integer.parseInt(parsedText[1]));","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"zhengyup"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"zhengyup"},"content":"                return tasks.unmarkTask(Integer.parseInt(parsedText[1]));","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"zhengyup"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"zhengyup"},"content":"                return tasks.deleteTask(Integer.parseInt(parsedText[1]));","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"zhengyup"},"content":"            case \"find\":","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"zhengyup"},"content":"                return tasks.find(parsedText[1]);","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"zhengyup"},"content":"            case \"list\":","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"zhengyup"},"content":"                return tasks.getAll();","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"zhengyup"},"content":"            case \"exception\":","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"zhengyup"},"content":"                return parsedText[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"zhengyup"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"zhengyup"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"zhengyup"},"content":"            case \"event\":","lastModifiedDate":"2023-09-06"},{"lineNumber":179,"author":{"gitId":"zhengyup"},"content":"                return tasks.addTask(parsedText);","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"zhengyup"},"content":"            default:","lastModifiedDate":"2023-09-06"},{"lineNumber":181,"author":{"gitId":"zhengyup"},"content":"                return \"Invalid input\";","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":183,"author":{"gitId":"zhengyup"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"zhengyup"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"zhengyup":186,"-":2}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"zhengyup":31}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.EmptyDeadlineException;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.EmptyEventException;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.EmptyTodoException;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.InvalidFindException;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.MissingByException;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.MissingFromException;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.MissingTitleException;","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.MissingToException;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.OutOfIndexException;","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":" * The Parser class is responsible for parsing user input and formatting it into","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":" * an array of strings for further processing.","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"public class Parser {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"    public Parser() {}","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"     * Parses the user input and formats it into an array of strings for further processing.","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"     * @param input The user input string to be parsed.","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"     * @param tasks The TaskList object representing the list of tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"     * @return An array of strings containing the parsed command and arguments.","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"     * @throws InvalidInputException If the input cannot be parsed or is invalid, an InvalidInputException is thrown.","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"    public static String[] parse(String input, TaskList tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"                return new String[]{\"list\"};","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"                return formatMark(input, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"                return formatUnmark(input, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"                return formatDelete(input, tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"                return formatFind(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"                return formatTodo(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"                return formatDeadline(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"                return formatEvent(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"            } else if (input.equals(\"undo\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"                return formatUndo();","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"            } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"            return new String[]{\"Exception\", e.getMessage()};","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"    private static String[] formatUndo() {","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"        return new String[] {\"undo\"};","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"    private static String[] formatEvent(String input) throws EmptyEventException, MissingFromException,","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"            MissingTitleException, MissingToException {","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"        int minLength \u003d 7;","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"        if (input.length() \u003c minLength) {","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"            throw new EmptyEventException();","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"zhengyup"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"zhengyup"},"content":"        if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"zhengyup"},"content":"            throw new MissingFromException();","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"zhengyup"},"content":"        if (fromIndex \u003c 7) {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"zhengyup"},"content":"            throw new MissingTitleException();","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"zhengyup"},"content":"        String title \u003d input.substring(6, fromIndex - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"zhengyup"},"content":"        int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"zhengyup"},"content":"        if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"zhengyup"},"content":"            throw new MissingToException();","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"zhengyup"},"content":"        String from \u003d input.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"zhengyup"},"content":"        String to \u003d input.substring(toIndex + 4);","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"zhengyup"},"content":"        return new String[]{\"event\", title, from, to};","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"zhengyup"},"content":"    private static String[] formatDeadline(String input) throws EmptyDeadlineException,","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"zhengyup"},"content":"            MissingByException, MissingTitleException {","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"zhengyup"},"content":"        if (input.length() \u003c 10) {","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"zhengyup"},"content":"            throw new EmptyDeadlineException();","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"zhengyup"},"content":"        int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"zhengyup"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"zhengyup"},"content":"            throw new MissingByException();","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"zhengyup"},"content":"        if (byIndex \u003c 10) {","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"zhengyup"},"content":"            throw new MissingTitleException();","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"zhengyup"},"content":"        int titleIndex \u003d 9;","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"zhengyup"},"content":"        String title \u003d input.substring(titleIndex, byIndex - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"zhengyup"},"content":"        String dueDate \u003d input.substring(byIndex + 4);","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"zhengyup"},"content":"        return new String[]{\"deadline\", title, dueDate};","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"zhengyup"},"content":"    private static String[] formatTodo(String input) throws EmptyTodoException {","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"zhengyup"},"content":"        if (input.length() \u003c 6) {","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"zhengyup"},"content":"            throw new EmptyTodoException();","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"zhengyup"},"content":"        int titleIndex \u003d 5;","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"zhengyup"},"content":"        String title \u003d input.substring(titleIndex);","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"zhengyup"},"content":"        return new String[]{\"todo\", title};","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"zhengyup"},"content":"    private static String[] formatFind(String input) throws InvalidFindException {","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"zhengyup"},"content":"        int startIndex \u003d 5;","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"zhengyup"},"content":"        if (input.length() \u003c 5) {","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"zhengyup"},"content":"            throw new InvalidFindException();","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"zhengyup"},"content":"        String keywords \u003d input.substring(startIndex);","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"zhengyup"},"content":"        return new String[]{\"find\", keywords};","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"zhengyup"},"content":"    private static String[] formatDelete(String input, TaskList tasks) throws OutOfIndexException {","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"zhengyup"},"content":"        Integer index \u003d input.charAt(7) - \u00270\u0027;","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"zhengyup"},"content":"        if (index \u003c 0 || index \u003e tasks.getSize() - 1) {","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"zhengyup"},"content":"            throw new OutOfIndexException();","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"zhengyup"},"content":"        return new String[]{\"delete\", index.toString()};","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"zhengyup"},"content":"    private static String[] formatUnmark(String input, TaskList tasks) throws OutOfIndexException {","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"zhengyup"},"content":"        Integer index \u003d input.charAt(7) - \u00270\u0027;","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"zhengyup"},"content":"        if (index \u003c 0 || index \u003e tasks.getSize() - 1) {","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"zhengyup"},"content":"            throw new OutOfIndexException();","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"zhengyup"},"content":"        return new String[]{\"unmark\", index.toString()};","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"zhengyup"},"content":"    private static String[] formatMark(String input, TaskList tasks) throws OutOfIndexException {","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"zhengyup"},"content":"        Integer index \u003d input.charAt(5) - \u00270\u0027;","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"zhengyup"},"content":"        if (index \u003c 0 || index \u003e tasks.getSize() - 1) {","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"zhengyup"},"content":"            throw new OutOfIndexException();","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"zhengyup"},"content":"        return new String[]{\"mark\", index.toString()};","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"zhengyup":144}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.InvalidDateFormatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":" * The Storage class handles loading and saving tasks from/to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"     * @param filePath The file path to store task data.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"     * Loads tasks from the file specified in the constructor.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"            Files.createDirectories(Paths.get(\"data\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"            f.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"            list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"                loadTask(s.nextLine(), list);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"            list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"        return list;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"     * Loads a task from the input string and adds it to the provided list.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"     * @param input The input string representing the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"     * @param list  The list to which the task will be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"    public void loadTask(String input, List\u003cTask\u003e list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"        boolean isMarked;","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"zhengyup"},"content":"        int markedIndex \u003d input.indexOf(\"|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"zhengyup"},"content":"        if (markedIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"zhengyup"},"content":"            return;","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"zhengyup"},"content":"        isMarked \u003d input.charAt(markedIndex + 2) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"zhengyup"},"content":"        int titleIndex \u003d input.indexOf(\"|\", markedIndex + 1) + 2;","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"zhengyup"},"content":"            if (input.startsWith(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"zhengyup"},"content":"                String title \u003d input.substring(titleIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"zhengyup"},"content":"                list.add(new Todo(title, isMarked));","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"zhengyup"},"content":"            } else if (input.startsWith(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"zhengyup"},"content":"                int byIndex \u003d input.indexOf(\"|\", titleIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"zhengyup"},"content":"                String title \u003d input.substring(titleIndex, byIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"zhengyup"},"content":"                String dueDateString \u003d input.substring(byIndex + 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"zhengyup"},"content":"                list.add(new Deadline(title, parseDate(dueDateString), isMarked));","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"zhengyup"},"content":"            } else if (input.startsWith(\"E\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"zhengyup"},"content":"                int fromIndex \u003d input.indexOf(\"|\", titleIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"zhengyup"},"content":"                String title \u003d input.substring(titleIndex, fromIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"zhengyup"},"content":"                int toIndex \u003d input.indexOf(\"|\", fromIndex + 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"zhengyup"},"content":"                String from \u003d input.substring(fromIndex + 2, toIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"zhengyup"},"content":"                String to \u003d input.substring(toIndex + 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"zhengyup"},"content":"                list.add(new Event(title, parseDate(from), parseDate(to), isMarked));","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"zhengyup"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"zhengyup"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"zhengyup"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"zhengyup"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"zhengyup"},"content":"     * Saves tasks from the provided TaskList instance to the file specified in the constructor.","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"zhengyup"},"content":"     * @param tasks The TaskList instance containing tasks to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"zhengyup"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"zhengyup"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"zhengyup"},"content":"            for (int i \u003d 0; i \u003c tasks.list.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"zhengyup"},"content":"                fw.write(tasks.list.get(i).toSave() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"zhengyup"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"zhengyup"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"zhengyup"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"zhengyup"},"content":"     * Parses a date-time string into a LocalDateTime instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"zhengyup"},"content":"     * @param input The input date-time string.","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"zhengyup"},"content":"     * @return A LocalDateTime instance parsed from the input string.","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"zhengyup"},"content":"     * @throws InvalidDateFormatException If the input string has an invalid date-time format.","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"zhengyup"},"content":"    public LocalDateTime parseDate(String input) throws InvalidDateFormatException {","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"zhengyup"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"zhengyup"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"zhengyup"},"content":"            return dateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"zhengyup"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"zhengyup"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhengyup":131}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"import java.util.Stack;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.EmptyDeadlineException;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.EmptyEventException;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.EmptyTodoException;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.InvalidDateFormatException;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.InvalidFindException;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.MissingByException;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.MissingFromException;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.MissingTitleException;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.MissingToException;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"import duke.exceptions.OutOfIndexException;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":" * Represents an archive of tasks in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":" * This class provides methods to manage and manipulate tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"    protected List\u003cTask\u003e list;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"    private Stack\u003cList\u003cTask\u003e\u003e previousLists;","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new TaskList object with the specified list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"     * @param list The initial list of tasks to be managed.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"        this.previousLists \u003d new Stack\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"     * Prints the list of tasks in the archive along with their indices.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"    public String getAll() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"        this.previousLists.pop();","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"            res +\u003d i + \". \" + list.get(i) + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"        if (res.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"            res \u003d \"You have not added any tasks yet\";","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"        return res;","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"     * Saves the curent state of tasks for future undo","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"    public void pushCurr() {","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e currTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"            currTasks.add(task.clone());","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"        previousLists.push(currTasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"zhengyup"},"content":"     * Undoes the most recent change to the task list, reverting it to a previous state.","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"zhengyup"},"content":"     * @return A message indicating the result of the undo operation.","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"zhengyup"},"content":"    public String undo() {","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"zhengyup"},"content":"        if (this.previousLists.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"zhengyup"},"content":"            return \"Already at the latest change\";","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"zhengyup"},"content":"        this.previousLists.pop();","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"zhengyup"},"content":"        if (this.previousLists.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"zhengyup"},"content":"            return \"Already at the latest change\";","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"zhengyup"},"content":"        this.list \u003d previousLists.pop();","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"zhengyup"},"content":"        return \"Undid 1 change.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"zhengyup"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"zhengyup"},"content":"        return list.size();","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"zhengyup"},"content":"     * Marks a task as completed based on user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"zhengyup"},"content":"     * @throws OutOfIndexException If the provided index is out of the valid range.","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"zhengyup"},"content":"    public String markTask(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"zhengyup"},"content":"        Task curr \u003d list.get(index);","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"zhengyup"},"content":"        curr.setMark(true);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"zhengyup"},"content":"        assert curr.getIsMarked() : \"umarking a task does not unmark it\";","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"zhengyup"},"content":"        return \"I HAVE MARKED THIS TASK:\" + curr;","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"zhengyup"},"content":"     * Marks a completed task as incomplete based on user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"zhengyup"},"content":"     * @throws OutOfIndexException If the provided index is out of the valid range.","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"zhengyup"},"content":"    public String unmarkTask(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"zhengyup"},"content":"        Task curr \u003d list.get(index);","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"zhengyup"},"content":"        curr.setMark(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"zhengyup"},"content":"        assert !curr.getIsMarked() : \"umarking a task does not unmark it\";","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"zhengyup"},"content":"        return \"I HAVE UNMARKED THIS TASK:\" + curr;","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"zhengyup"},"content":"     * Deletes a task based on user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"zhengyup"},"content":"     * @throws OutOfIndexException If the provided index is out of the valid range.","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"zhengyup"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"zhengyup"},"content":"        Task curr \u003d list.remove(index);","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"zhengyup"},"content":"        return \"I HAVE DELETED THE FOLLOWING TASK:\" + curr + \"\\nNOW YOU HAVE \"","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"zhengyup"},"content":"                + list.size() + \" TASKS LEFT\";","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"zhengyup"},"content":"     * Adds a task to the archive based on user input.","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"zhengyup"},"content":"     * @param input The input string containing the task details.","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"zhengyup"},"content":"     * @throws EmptyDeadlineException If the deadline task is missing required details.","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"zhengyup"},"content":"     * @throws EmptyTodoException     If the todo task is missing a title.","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"zhengyup"},"content":"     * @throws EmptyEventException    If the event task is missing required details.","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"zhengyup"},"content":"     * @throws MissingByException     If the deadline task is missing the \"by\" date.","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"zhengyup"},"content":"     * @throws MissingFromException   If the event task is missing the start date.","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"zhengyup"},"content":"     * @throws MissingToException     If the event task is missing the end date.","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"zhengyup"},"content":"     * @throws MissingTitleException  If a task is missing its title.","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"zhengyup"},"content":"     * @throws InvalidInputException  If the input doesn\u0027t match any valid task format.","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"zhengyup"},"content":"    public String addTask(String[] input) throws InvalidInputException, InvalidDateFormatException {","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"zhengyup"},"content":"        Task added \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"zhengyup"},"content":"        String taskType \u003d input[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"zhengyup"},"content":"        String title \u003d input[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"zhengyup"},"content":"        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"zhengyup"},"content":"            added \u003d new Todo(title, false);","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"zhengyup"},"content":"        } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"zhengyup"},"content":"            String by \u003d input[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"zhengyup"},"content":"            added \u003d new Deadline(title, parseDate(by), false);","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"zhengyup"},"content":"        } else if (taskType.equals(\"event\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"zhengyup"},"content":"            String from \u003d input[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"zhengyup"},"content":"            String to \u003d input[3];","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"zhengyup"},"content":"            added \u003d new Event(title, parseDate(from), parseDate(to), false);","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"zhengyup"},"content":"        if (added !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"zhengyup"},"content":"            list.add(added);","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"zhengyup"},"content":"            return (\"I\u0027VE ADDED THIS TASK: \" + added + \"\\nYOU HAVE \" + list.size() + \" TASKS IN THE LIST\");","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"zhengyup"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"zhengyup"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"zhengyup"},"content":"     * Parses a date-time string into a LocalDateTime instance.","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"zhengyup"},"content":"     * @param input The input date-time string.","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"zhengyup"},"content":"     * @return A LocalDateTime instance parsed from the input string.","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"zhengyup"},"content":"     * @throws InvalidDateFormatException If the input string has an invalid date-time format.","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"zhengyup"},"content":"    public LocalDateTime parseDate(String input) throws InvalidDateFormatException {","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"zhengyup"},"content":"            if (input.length() \u003d\u003d 10) {","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"zhengyup"},"content":"                input +\u003d \" 12:00\";","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"zhengyup"},"content":"            assert input.length() \u003d\u003d 16 : \"date format is incorrect even after correction\";","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"zhengyup"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"zhengyup"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"zhengyup"},"content":"            return dateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"zhengyup"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"zhengyup"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"zhengyup"},"content":"     * Finds tasks in the task list that match the given keyword(s) in their titles.","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"zhengyup"},"content":"     * @return A list of tasks that match the search criteria.","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"zhengyup"},"content":"     * @throws InvalidFindException If the provided search input is too short to be valid.","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"zhengyup"},"content":"    public String find(String keywords) throws InvalidFindException {","lastModifiedDate":"2023-09-06"},{"lineNumber":186,"author":{"gitId":"zhengyup"},"content":"        this.previousLists.pop();","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"zhengyup"},"content":"        for (Task curr : list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"zhengyup"},"content":"            if (curr.getTitle().indexOf(keywords) !\u003d -1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"zhengyup"},"content":"                filteredTasks.add(curr);","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"zhengyup"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"zhengyup"},"content":"        String res \u003d \"TASKS FOUND:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":194,"author":{"gitId":"zhengyup"},"content":"        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"zhengyup"},"content":"            res +\u003d i + \". \" + filteredTasks.get(i) + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":196,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"zhengyup"},"content":"        if (res.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"zhengyup"},"content":"            res \u003d \"No matching tasks found!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":199,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":200,"author":{"gitId":"zhengyup"},"content":"        return res;","lastModifiedDate":"2023-09-06"},{"lineNumber":201,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":203,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":203}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is used to handle errors specific to the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    private String message;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"     * Returns the error message associated with this exception.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"     * @return The error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"        return this.message;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhengyup":32}},{"path":"src/main/java/duke/exceptions/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for empty deadline entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add a deadline task without a title or due date.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class EmptyDeadlineException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new EmptyDeadlineException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format for adding a deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public EmptyDeadlineException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! Missing entry. ENTER deadline (title) /by (dueDate) to\"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"                + \" add a deadline\");","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":17}},{"path":"src/main/java/duke/exceptions/EmptyEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for empty event entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add an event task without a title, start date, or end date.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class EmptyEventException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new EmptyEventException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format for adding an event.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public EmptyEventException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! Missing entry. ENTER event (title) /from (from) /to (to) to\"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"                + \" add an event\");","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhengyup":17}},{"path":"src/main/java/duke/exceptions/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for empty todo entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add a todo task without a title.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class EmptyTodoException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new EmptyTodoException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format for adding a todo.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public EmptyTodoException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! Missing title of todo. ENTER todo (title) to add a todo\");","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":16}},{"path":"src/main/java/duke/exceptions/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * The \u003ccode\u003eInvalidDateFormatException\u003c/code\u003e class represents an exception that is","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * thrown when an invalid date format is encountered in Duke\u0027s task input. This exception","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" * is typically thrown when dates for \u0027by\u0027, \u0027from\u0027, or \u0027to\u0027 fields are not in the","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":" * expected format: \"dd/MM/yyyy HH:mm\".","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":" * @author [Your Name]","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":" * @version [Version Number]","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"public class InvalidDateFormatException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"     * Constructs an \u003ccode\u003eInvalidDateFormatException\u003c/code\u003e with a default error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"     * The default error message informs the user about the expected date format.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"    public InvalidDateFormatException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"        super(\"Invalid date format! Input dates for \u0027by\u0027, \u0027from\u0027, or \u0027to\u0027 should use the following format:\"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"                + \" dd/MM/yyyy HH:mm or dd/MM/yyyy\");","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"zhengyup":23}},{"path":"src/main/java/duke/exceptions/InvalidFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * The \u003ccode\u003eInvalidFindException\u003c/code\u003e class represents an exception that is","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * thrown when an invalid \"find\" command is encountered in Duke\u0027s input. This exception","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" * is typically thrown when the \"find\" command does not include a valid keyword or key phrase.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":" * The correct format for the \"find\" command is \"find (keyword / key phrases)\".","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":" * @author [Your Name]","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":" * @version [Version Number]","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"public class InvalidFindException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"     * Constructs an \u003ccode\u003eInvalidFindException\u003c/code\u003e with a default error message.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"     * The default error message instructs the user on the correct usage of the \"find\" command.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"    public InvalidFindException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"        super(\"Invalid find command. Enter \u0027find (keyword / key phrases)\u0027\");","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"zhengyup":21}},{"path":"src/main/java/duke/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for invalid input entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user provides an input that doesn\u0027t match any valid command formats.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new InvalidInputException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format to start various types of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! START WITH todo (title) or \"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"                + \"deadline (title) /by (dueDate) or event (title) /from (from) /to (to)\");","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":17}},{"path":"src/main/java/duke/exceptions/MissingByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for missing \"by\" date entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add a deadline task without specifying the \"by\" date.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class MissingByException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new MissingByException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format for adding a deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public MissingByException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! Missing by. ENTER deadline (title) /by (dueDate) to add a deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":16}},{"path":"src/main/java/duke/exceptions/MissingFromException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for missing \"from\" date entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add an event task without specifying the start date.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class MissingFromException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new MissingFromException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format for adding an event.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public MissingFromException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! Missing event start date. ENTER event (title) /from (from)\"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"                + \" /to (to) to add an event\");","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhengyup":18}},{"path":"src/main/java/duke/exceptions/MissingTitleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for missing title entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add a task without providing a title.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class MissingTitleException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new MissingTitleException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the importance of providing a title for tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public MissingTitleException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! MISSING TITLE!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"zhengyup":16}},{"path":"src/main/java/duke/exceptions/MissingToException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for missing \"to\" date entries in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to add an event task without specifying the end date.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class MissingToException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new MissingToException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the correct format for adding an event.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public MissingToException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"I DON\u0027T LIKE WHAT YOU\u0027VE GOT! Missing event end date. ENTER event (title) /from (from) /to\"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"                + \" (to) to add an event\");","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":17}},{"path":"src/main/java/duke/exceptions/OutOfIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.exceptions;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Custom exception class for out-of-index task access in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This exception is thrown when a user attempts to access a task using an index that is out of the valid range.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class OutOfIndexException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new OutOfIndexException with a predefined error message.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     * The error message informs the user about the fact that they provided an invalid task index.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    public OutOfIndexException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        super(\"You have provided a number out of index of the stored tasks\");","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":17}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"zhengyup":58}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.gui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"        Application.launch(duke.Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"zhengyup":12}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.gui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Rickmorty.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Head.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"zhengyup":52}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":" * Represents a task with a deadline in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":" * This class extends the base class Task and includes the due date of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    private String printDateString;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"    private String saveDateString;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new Deadline object with a title and due date.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"     * @param title    The title of the deadline task.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"     * @param dueDate  The due date of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"     * @param isMarked The marking status of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"    public Deadline(String title, LocalDateTime dueDate, boolean isMarked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"        super(title, isMarked);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"        this.printDateString \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"        this.saveDateString \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"    public Deadline clone() {","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"        return new Deadline(this.title, this.dueDate, this.isMarked);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"     * Generates a string representation of the Deadline object.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string indicating the status, title, and due date of the deadline.","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"        String mark \u003d super.isMarked ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"        return \"[D]\" + mark + title + \" (by: \" + this.printDateString + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"     * Generates a formatted string to represent the Deadline object for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string for saving the Deadline object.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"    public String toSave() {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"        String res \u003d \"D\";","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"        res +\u003d (isMarked ? \"| 1\" : \"| 0\");","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"        res +\u003d \"| \" + title;","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"        res +\u003d \"| \" + saveDateString;","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"        return res;","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"     * Retrieves the due date of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"     * @return The due date of the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"        return this.dueDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zhengyup":67}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":" * Represents an event task in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":" * This class extends the base class Task and includes the start and end dates of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"    private String printFromString;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"    private String saveFromString;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    private String printToString;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"    private String saveToString;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new Event object with a title, start date, and end date.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"     * @param title    The title of the event task.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"     * @param from     The start date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"     * @param to       The end date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"     * @param isMarked The marking status of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"    public Event(String title, LocalDateTime from, LocalDateTime to, boolean isMarked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"        super(title, isMarked);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"        this.printFromString \u003d this.from.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"        this.printToString \u003d this.to.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"        this.saveFromString \u003d this.from.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"        this.saveToString \u003d this.to.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"    public Event clone() {","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"        return new Event(this.title, this.from, this.to, this.isMarked);","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"     * Generates a string representation of the Event object.","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string indicating the status, title, start date, and end date of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"        String mark \u003d super.isMarked ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"        return \"[E]\" + mark + title + \" (from: \" + this.printFromString + \" to: \" + this.printToString + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"     * Generates a formatted string to represent the Event object for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string for saving the Event object.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"    public String toSave() {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"        String res \u003d \"E\";","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"        res +\u003d (isMarked ? \"| 1\" : \"| 0\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"        res +\u003d \"| \" + title;","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"        res +\u003d \"| \" + saveFromString;","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"        res +\u003d \"| \" + saveToString;","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"        return res;","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"zhengyup"},"content":"     * Retrieves the start date of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"zhengyup"},"content":"     * @return The start date of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"zhengyup"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"zhengyup"},"content":"        return this.from;","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"zhengyup"},"content":"     * Retrieves the end date of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"zhengyup"},"content":"     * @return The end date of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"zhengyup"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"zhengyup"},"content":"        return to;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zhengyup":84}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Abstract base class representing a task in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * Subclasses (e.g., Deadline, Event) extend this class to represent specific types of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    protected String title;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"    protected boolean isMarked \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new Task object with a title.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"     * @param title    The title of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"     * @param isMarked The marking status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"    public Task(String title, boolean isMarked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"    public void setMark(boolean isMarked) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"     * Retrieves the marking status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"     * @return True if the task is marked as completed, false otherwise.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"    public boolean getIsMarked() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"        return this.isMarked;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"     * Retrieves the title of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"     * @return The title of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"    public String getTitle() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"        return this.title;","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"     * Generates a string representation of the Task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string indicating the status (marked or unmarked) and title of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"        String mark \u003d this.isMarked ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"        return mark + title;","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"     * Generates a formatted string to represent the Task object for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string for saving the Task object.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"    public abstract String toSave();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"    public abstract Task clone();","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zhengyup":64}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":" * Represents a todo task in the Duke application.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":" * This class extends the base class Task and represents a simple todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"     * Constructs a new Todo object with a title.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"     * @param title    The title of the todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"     * @param isMarked The marking status of the todo task.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"    public Todo(String title, boolean isMarked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"        super(title, isMarked);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"     * Generates a string representation of the Todo object.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string indicating the status (marked or unmarked) and title of the todo task.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"        String mark \u003d super.isMarked ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"        return \"[T]\" + mark + title;","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"    public Todo clone() {","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"        return new Todo(this.title, this.isMarked);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"     * Generates a formatted string to represent the Todo object for saving.","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"     * @return A formatted string for saving the Todo object.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"    public String toSave() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"        String res \u003d \"T\";","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"        res +\u003d (isMarked ? \"| 1\" : \"| 0\");","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"        res +\u003d \"| \" + title;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"        return res;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"zhengyup":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-spacing: 10;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"                \u003cInsets bottom\u003d\"8.0\" left\u003d\"16.0\" right\u003d\"16.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"zhengyup":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"zhengyup":21}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"import java.util.List;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"    //CHECKSTYLE.OFF: MethodName","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"    public void loadTask_Todo_ValidInput_TaskCreatedAndAddedToList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"        Storage storage \u003d new Storage(\"testFILEPATH\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"        String input \u003d \"T| 1| Title\";","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"        storage.loadTask(input, list);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"        assertEquals(1, list.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"        assertEquals(Todo.class, list.get(0).getClass());","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"        assertEquals(\"Title\", list.get(0).getTitle());","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"        assertEquals(true, list.get(0).getIsMarked());","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"    public void loadTask_Deadline_ValidInput_TaskCreatedAndAddedToList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"        Storage storage \u003d new Storage(\"testFILEPATH\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"        String input \u003d \"D| 1| Deadline Title| 01/01/2023 14:00\";","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"        storage.loadTask(input, list);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"        assertEquals(1, list.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"        assertEquals(Deadline.class, list.get(0).getClass());","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"        assertEquals(\"Deadline Title\", list.get(0).getTitle());","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"        assertEquals(true, list.get(0).getIsMarked());","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"        assertEquals(LocalDateTime.of(2023, 1, 1, 14, 0), ((Deadline) list.get(0)).getDueDate());","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"    public void loadTask_Event_ValidInput_TaskCreatedAndAddedToList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"        Storage storage \u003d new Storage(\"testFILEPATH\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"        String input \u003d \"E| 1| Event Title| 01/01/2023 14:00| 01/01/2023 16:00\";","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"        storage.loadTask(input, list);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"        assertEquals(1, list.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"        assertEquals(\"Event Title\", list.get(0).getTitle());","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"        assertEquals(true, list.get(0).getIsMarked());","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"        assertEquals(LocalDateTime.of(2023, 1, 1, 14, 0), ((Event) list.get(0)).getFrom());","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"        assertEquals(LocalDateTime.of(2023, 1, 1, 16, 0), ((Event) list.get(0)).getTo());","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"zhengyup"},"content":"    public void loadTask_InvalidInput_NoTaskAddedToList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"zhengyup"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"zhengyup"},"content":"        Storage storage \u003d new Storage(\"testFILEPATH\");","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"zhengyup"},"content":"        String input \u003d \"InvalidInput\";","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"zhengyup"},"content":"        storage.loadTask(input, list);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"zhengyup"},"content":"        assertEquals(0, list.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"zhengyup"},"content":"    //CHECKSTYLE.ON: MethodName","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"zhengyup":72}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":" * Test class for the TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":" * Contains test cases for the markTask method.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"//CHECKSTYLE.OFF: MethodName","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"    public void markTask_markUnmarkedTask_success() {","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"zhengyup"},"content":"        // Create an unmarked task","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"zhengyup"},"content":"        Todo todo \u003d new Todo(\"Test Todo\", false);","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"zhengyup"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"zhengyup"},"content":"        taskList.list.add(todo);","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"zhengyup"},"content":"        // Mark the unmarked task","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"zhengyup"},"content":"        String result \u003d taskList.markTask(0);","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"zhengyup"},"content":"        // Ensure that the task is marked and check the result message","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"zhengyup"},"content":"        assertEquals(todo.getIsMarked(), true);","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"zhengyup"},"content":"        assertEquals(\"I HAVE MARKED THIS TASK:[T][X] Test Todo\", result);","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"zhengyup"},"content":"    public void markTask_markTaskAtIndexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"zhengyup"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"zhengyup"},"content":"            TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"zhengyup"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"zhengyup"},"content":"            // Attempt to mark a task at an index that is out of bounds","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"zhengyup"},"content":"            assertEquals(e.getMessage(), (\"You have provided a number out of index of the stored tasks\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"zhengyup"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"zhengyup"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"zhengyup"},"content":"    public void markTask_markTaskAtIndexValid_success() {","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"zhengyup"},"content":"        // Create a list of unmarked tasks","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"zhengyup"},"content":"        Todo todo1 \u003d new Todo(\"Task 1\", false);","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"zhengyup"},"content":"        Todo todo2 \u003d new Todo(\"Task 2\", false);","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"zhengyup"},"content":"        Todo todo3 \u003d new Todo(\"Task 3\", false);","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"zhengyup"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"zhengyup"},"content":"        taskList.list.add(todo1);","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"zhengyup"},"content":"        taskList.list.add(todo2);","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"zhengyup"},"content":"        taskList.list.add(todo3);","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"zhengyup"},"content":"        // Mark the task at a valid index","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"zhengyup"},"content":"        String result \u003d taskList.markTask(1);","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"zhengyup"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"zhengyup"},"content":"        // Ensure that the task at index 1 is marked and check the result message","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"zhengyup"},"content":"        assertEquals(todo2.getIsMarked(), true);","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"zhengyup"},"content":"        assertEquals(\"I HAVE MARKED THIS TASK:[T][X] Task 2\", result);","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"zhengyup"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"zhengyup"},"content":"    //CHECKSTYLE.ON: MethodName","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"zhengyup"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"zhengyup":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhengyup"},"content":"todo test todo","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"zhengyup"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"zhengyup"},"content":"deadline test deadline /by today","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"zhengyup"},"content":"deadline test /by today","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"zhengyup"},"content":"deadline test","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"zhengyup"},"content":"event test event /from today /to tomorrow","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"zhengyup"},"content":"event test event /to tomorrow","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"zhengyup"},"content":"event test event /from today","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"zhengyup"},"content":"event /from today /to tomorrow","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"zhengyup"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"zhengyup"},"content":"mark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"zhengyup"},"content":"mark 10","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"zhengyup"},"content":"unmark 0","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"zhengyup"},"content":"unmark 10","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"zhengyup"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"zhengyup"},"content":"delete 0","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"zhengyup"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"GET SCHWIFTY","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"zhengyup":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zhengyup"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhengyup":1,"-":20}}]
