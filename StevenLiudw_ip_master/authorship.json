[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"StevenLiudw":18,"-":43}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"T # 0 # borrow book # TODO","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"T # 1 # sdfsgf # TODO","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"D # 0 # return book # 2019-09-09 # null","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"E # 0 # project meeting # 2019-10-15 - 2012-10-30 # haha","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"StevenLiudw":4}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"        assert dialog !\u003d null : \"Dialog label should be properly initialized!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"        double radius \u003d 25.0;","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"        Circle clip \u003d new Circle(radius, radius, radius);","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"        assert dialog !\u003d null : \"Dialog label should be properly initialized!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"        assert displayPicture !\u003d null : \"Display picture should be properly initialized!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"    private void flip() {","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"        db.flip();","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"        return db;","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"StevenLiudw":70}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":" * The main class for the Duke program.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":" * It manages the initialization, execution, and termination of the program.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"    /** Handles reading and storing tasks. */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    /** List of tasks managed by Duke. */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    /** User interface for interactions. */","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new Duke instance with the specified file path for storage.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    public Duke() {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        assert ui !\u003d null : \"UI should be properly initialized!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"            storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        } catch (IOException ie) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"            ui.showError(\"An error occurred while initializing the storage: \" + ie.getMessage());","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"            System.exit(0);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"        assert tasks !\u003d null : \"Tasks should be properly initialized!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"            ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"        } catch (IOException ie) {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"            return ui.showError(ie.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"            return ui.showError(de.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"        } finally {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"            ui.showLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"StevenLiudw":63,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":" * Represents exceptions that are specific to the Duke application.","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"     * @param errorMessages The specific error message for this exception.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"    public DukeException(String... errorMessages) {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"        super(String.join(\", \", errorMessages));","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves the error message of this exception, prefixed with \"OOPS! :(\".","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * @return The prefixed error message.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        return \"OOPS! :( \" + super.getMessage();","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"StevenLiudw":26}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"public class Launcher {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"StevenLiudw":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"            stage.setTitle(\"Iron Man\");","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().printIntroduction();","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"            stage.show();","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"StevenLiudw":33}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.UnMarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.AddTagCommand;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":" * Represents a parser that makes sense of user commands.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     * Parses the user\u0027s command and returns the corresponding command object.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     * @param fullCommand The full string command provided by the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DukeException If the command is unrecognized or invalid.","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        assert fullCommand !\u003d null : \"Provided command string should not be null!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        String[] splits \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        assert splits.length \u003e 0 : \"Command split array should have at least one element!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        String command \u003d splits[0].trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        switch (command) {","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"        case (\"bye\"):","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        case (\"list\"):","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"        case (\"mark\"):","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"            return new MarkCommand(Integer.parseInt(splits[1].trim()) - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"        case (\"unmark\"):","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"            return new UnMarkCommand(Integer.parseInt(splits[1].trim()) - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"        case (\"todo\"):","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"            return new AddCommand(new Todo(splits[1].trim()));","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"        case (\"event\"):","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"            String[] temfirst \u003d splits[1].split(\"/from\", 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"            String[] temsecond \u003d temfirst[1].split(\"/to\", 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"            String description \u003d temfirst[0].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"            String start \u003d temsecond[0].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"            String end \u003d temsecond[1].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"            return new AddCommand(new Event(start, end, description));","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"        case (\"deadline\"): {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"            String[] tem \u003d splits[1].split(\"/by\", 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"            String deadlineDescription \u003d tem[0].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"            String time \u003d tem[1].trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"            return new AddCommand(new Deadline(deadlineDescription, time));","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        case (\"delete\"):","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"            return new DeleteCommand(Integer.parseInt(splits[1].trim()));","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"        case (\"find\"):","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"            return new FindCommand(splits[1].trim());","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"        case (\"tag\"):","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"            String[] parts \u003d splits[1].split(\" \", 2);","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"                throw new DukeException(\"Please provide a valid task index and tag.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"            int taskIndex \u003d Integer.parseInt(parts[0].trim()) - 1;","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"            String tag \u003d parts[1].trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"            return new AddTagCommand(taskIndex, tag);","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"        default:","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"            throw new DukeException(\"☹ I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"StevenLiudw":71}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":" * Represents a list of tasks in Duke. Provides methods to manipulate and access the tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"     * Initializes an empty task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     * Initializes the task list with given tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     * @param tasks An ArrayList of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    private boolean validIndex(int index) {","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     * @param taskIndex The index of the task in the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    public void mark(int taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"        assert validIndex(taskIndex) : \"Provided task index is out of range!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"        tasks.get(taskIndex).mark();","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * Retrieves a task based on its index.","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     * @param taskIndex The index of the task in the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     * @return The Task object at the given index.","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"     * @return An integer representing the size of the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the entire list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"     * Unmarks a task (i.e., sets it as not done).","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"     * @param taskIndex The index of the task in the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"    public void unmark(int taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"        tasks.get(taskIndex).unmark();","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"     * Deletes a task from the list and returns it.","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"     * @param taskNum The index of the task in the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"     * @return The Task object that was removed.","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"StevenLiudw"},"content":"    public Task deleteTask(int taskNum) {","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"        Task tem \u003d tasks.get(taskNum);","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"        tasks.remove(taskNum);","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"        return tem;","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"     * Sets a tag for a task based on its index.","lastModifiedDate":"2023-09-10"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"     * @param taskIndex The index of the task in the list.","lastModifiedDate":"2023-09-10"},{"lineNumber":109,"author":{"gitId":"StevenLiudw"},"content":"     * @param tag The tag to be added to the task.","lastModifiedDate":"2023-09-10"},{"lineNumber":110,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":111,"author":{"gitId":"StevenLiudw"},"content":"    public void setTag(int taskIndex, String tag) {","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"StevenLiudw"},"content":"        if (validIndex(taskIndex)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":113,"author":{"gitId":"StevenLiudw"},"content":"            tasks.get(taskIndex).setTag(tag);","lastModifiedDate":"2023-09-10"},{"lineNumber":114,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":115,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"StevenLiudw"},"content":"     * Finds tasks by keyword and displays them using the UI.","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"StevenLiudw"},"content":"     * @param keyword The search keyword.","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"StevenLiudw"},"content":"     * @param ui The UI object to display results.","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"StevenLiudw"},"content":"    public String findTasks(String keyword, Ui ui) {","lastModifiedDate":"2023-09-04"},{"lineNumber":123,"author":{"gitId":"StevenLiudw"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"StevenLiudw"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"StevenLiudw"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"StevenLiudw"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"StevenLiudw"},"content":"        return ui.showFoundTasks(matchedTasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"StevenLiudw":131}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" * Represents an add command.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":" * The add command is used to add tasks to the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"     * The task to be added.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    private final Task task;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"     * Creates a new AddCommand with the specified task.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     * Indicates whether this command will exit the application.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     * @return false since this command does not exit the application.","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the add command, adding the task to the task list,","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * saving the task list, and notifying the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"     * @param storage The storage to save tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IOException If there\u0027s an error saving the tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"        return ui.showAddedTask(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"StevenLiudw":58}},{"path":"src/main/java/duke/command/AddTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.command;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"    private final String tag;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"    public AddTagCommand(int taskIndex, String tag) {","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"        return false;","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"            throw new DukeException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"        Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        task.setTag(tag);","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"        return ui.showTaggedTask(task);","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"StevenLiudw":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":" * Represents an abstract command to be executed in the Duke program.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":" * This class provides a template for specific commands like adding or deleting tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * Indicates whether the command will cause the program to exit.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the specific command.","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"     * @param ui      The user interface handler.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"     * @param storage The storage handler to load or save tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IOException   If there\u0027s an error accessing or modifying the storage.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DukeException If there are issues executing the command.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException;","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     * Determines if Duke should continue listening for commands or terminate.","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     * @return true if Duke should exit, false otherwise.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"StevenLiudw":43}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":" * Represents a command to delete a task from the task list in the Duke program.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"    /** Index of the task to be deleted from the task list. */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new DeleteCommand with the specified task index.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     * @param taskIndex Index of the task to be deleted.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"     * Determines if the Duke program should exit.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"     * @return false since the delete command should not terminate the program.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the delete command, removing a task from the task list,","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"     * saving the updated list and then notifying the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * @param ui      The user interface handler.","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IOException If there\u0027s an error saving the tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"                throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"            Task removedTask \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"            return ui.showDeletedTask(removedTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"StevenLiudw":63}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"     * Indicates that this command should cause the application to exit.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"     * @return true, as this is an exit command.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"        return true;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the exit command. Optionally save tasks or do any clean up here if needed.","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"     * @param ui      The user interface handler.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"StevenLiudw":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" * Represents a command to search and display tasks that contain a specific keyword.","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"    private final String keyword;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new FindCommand instance with a specified keyword to search for.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     * @param keyword The keyword to match tasks against.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the find command, searching the tasks for any that contain the keyword.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"     * Matching tasks are then displayed to the user via the UI.","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"     * @param tasks   The list of tasks to search through.","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"     * @param ui      The UI instance to display matching tasks to the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     * @param storage The storage instance, not used in this command but needed for command interface.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IOException If there\u0027s an issue with input or output operations.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        return tasks.findTasks(keyword, ui);","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"StevenLiudw":39}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":" * Represents a command to list out all the tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the list command by printing out all the tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"     * @param tasks   The list of tasks to be printed.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"     * @param ui      The user interface handler.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DukeException If there\u0027s an issue executing the list command.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"           result.append((i + 1)).append(\".\").append(tasks.getTask(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"       }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"        return result.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"     * Indicates whether the command should exit the application.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     * @return false, as \u0027list\u0027 command doesn\u0027t terminate the application.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"StevenLiudw":40}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":" * Represents a command to mark a task as completed.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"     * Initializes a new instance of the MarkCommand with the specified task index.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * @param taskIndex The index of the task to be marked as completed.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"     * Indicates whether the command should exit the application.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"     * @return false, as the \u0027mark\u0027 command doesn\u0027t terminate the application.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the mark command by marking a task as completed.","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"     * @param ui      The user interface handler.","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IOException    If there is an issue with file IO.","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DukeException  If there\u0027s an issue executing the mark command.","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"            throw new DukeException(\"Invalid input number. :( Please provide a valid task number.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"        tasks.mark(taskIndex);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"        return ui.showMarkedTask(tasks.getTask(taskIndex));","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"StevenLiudw":56}},{"path":"src/main/java/duke/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    /** Index of the task to unmark in the task list. */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new UnMarkCommand with the specified task index.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     * @param taskIndex Index of the task in the task list to unmark as done.","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    public UnMarkCommand(int taskIndex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"     * Indicates whether this command should terminate the application.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     * @return false since this command does not exit the application.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"     * Executes the unmark command by unmarking the specified task in the task list.","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * @param ui      The user interface used to interact with the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * @param storage The storage system used to save and load tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IOException    If there\u0027s an error saving the tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DukeException  If there\u0027s an error related to Duke\u0027s operation, such as invalid task number.","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"            throw new DukeException(\"Invalid input number. :( Please provide a valid task number.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        tasks.unmark(taskIndex);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"        return ui.showUnmarkedTask(tasks.getTask(taskIndex));","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"StevenLiudw":59}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.io.File;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":" * Represents a storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"public class Storage {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    private final File file;","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"     * Creates a new Storage object.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"     * @param file_Path The path to the file used for storage.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IOException When there\u0027s an error with file operations.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DukeException When there\u0027s an error specific to the Duke application.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    public Storage(String file_Path) throws IOException, DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"        File savedFile \u003d new File(file_Path);","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"            if (!savedFile.exists() \u0026\u0026 !savedFile.createNewFile()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"                throw new IOException(\"Failed to create a new file.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"            throw new DukeException(\"Error while saving the file: \" + e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"        this.file \u003d savedFile;","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     * @throws FileNotFoundException When the file is not found.","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DukeException For other errors.","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException, DukeException {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"        try (Scanner sc \u003d new Scanner(this.file)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"                String curLine \u003d sc.nextLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"                String[] splits \u003d curLine.split(\"#\");","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"                Task newTask \u003d null;","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"                switch (splits[0].trim()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"                        newTask \u003d new Todo(splits[2].trim(), (splits[1].trim().equals(\"1\")));","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"                        break;","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"                        newTask \u003d new Deadline(splits[2].trim(), splits[3].trim(), (splits[1].trim().equals(\"1\")));","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"                        break;","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"                        String[] eventTimes \u003d splits[3].trim().split(\" - \");","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"                        if(eventTimes.length !\u003d 2) {","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"                            throw new DukeException(\"Invalid date format for event. Expected start-end format.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"                        }","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"                        newTask \u003d new Event(eventTimes[0], eventTimes[1], splits[2].trim());","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"                        if (splits[1].trim().equals(\"1\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"                            newTask.mark();","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"                        }","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"                        break;","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"                    default:","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"                        throw new DukeException(\"Invalid task type in the data file.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"                if (newTask !\u003d null) {","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"                    if (splits.length \u003e 4) {","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"                        newTask.setTag(splits[4].trim());","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"                    }","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"                    else {","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"                        System.out.println(\"adfafsa\");","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"                    }","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"                }","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"            throw new DukeException(\"Storage file not found.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"            throw new DukeException(\"Error occurred when reading the data file: \" + e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"        return tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"StevenLiudw"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"     * @throws IOException When there\u0027s an error with file operations.","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"        FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"        String textToAdd \u003d translateToStore(tasks.getTasks());","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"        fw.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"StevenLiudw"},"content":"     * Converts the list of tasks into a storable string format.","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"StevenLiudw"},"content":"     * @param tasks The ArrayList of tasks to be converted.","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string in the storage format.","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"StevenLiudw"},"content":"    public String translateToStore(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"StevenLiudw"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"StevenLiudw"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"StevenLiudw"},"content":"            switch (task.getType()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"StevenLiudw"},"content":"                case TODO:","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"StevenLiudw"},"content":"                    result.append(\"T # \")","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"StevenLiudw"},"content":"                            .append(task.getIsDone() ? \"1\" : \"0\")","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"StevenLiudw"},"content":"                            .append(\" # \")","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"StevenLiudw"},"content":"                            .append(task.getTaskDescription())","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"StevenLiudw"},"content":"                            .append(\" # \")","lastModifiedDate":"2023-09-10"},{"lineNumber":128,"author":{"gitId":"StevenLiudw"},"content":"                            .append(task.getTag())","lastModifiedDate":"2023-09-10"},{"lineNumber":129,"author":{"gitId":"StevenLiudw"},"content":"                            .append(\"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"StevenLiudw"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"StevenLiudw"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"StevenLiudw"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"StevenLiudw"},"content":"                    result.append(\"D # \")","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"StevenLiudw"},"content":"                            .append(task.getIsDone() ? \"1\" : \"0\")","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"StevenLiudw"},"content":"                            .append(\" # \")","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"StevenLiudw"},"content":"                            .append(task.getTaskDescription())","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"StevenLiudw"},"content":"                            .append(\" # \")","lastModifiedDate":"2023-08-26"},{"lineNumber":138,"author":{"gitId":"StevenLiudw"},"content":"                            .append(deadline.getTime())","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"StevenLiudw"},"content":"                            .append(\" # \")","lastModifiedDate":"2023-09-10"},{"lineNumber":140,"author":{"gitId":"StevenLiudw"},"content":"                            .append(task.getTag())","lastModifiedDate":"2023-09-10"},{"lineNumber":141,"author":{"gitId":"StevenLiudw"},"content":"                            .append(\"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"StevenLiudw"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":143,"author":{"gitId":"StevenLiudw"},"content":"                case EVENT:","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"StevenLiudw"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"StevenLiudw"},"content":"                    result.append(\"E # \")","lastModifiedDate":"2023-08-26"},{"lineNumber":146,"author":{"gitId":"StevenLiudw"},"content":"                            .append(task.getIsDone() ? \"1\" : \"0\")","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"StevenLiudw"},"content":"                            .append(\" # \")","lastModifiedDate":"2023-08-26"},{"lineNumber":148,"author":{"gitId":"StevenLiudw"},"content":"                            .append(task.getTaskDescription())","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"StevenLiudw"},"content":"                            .append(\" # \")","lastModifiedDate":"2023-08-26"},{"lineNumber":150,"author":{"gitId":"StevenLiudw"},"content":"                            .append(event.getE_start())","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"StevenLiudw"},"content":"                            .append(\" - \")","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"StevenLiudw"},"content":"                            .append(event.getE_end())","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"StevenLiudw"},"content":"                            .append(\" # \")","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"StevenLiudw"},"content":"                            .append(task.getTag())","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"StevenLiudw"},"content":"                            .append(\"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"StevenLiudw"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"StevenLiudw"},"content":"                default:","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"StevenLiudw"},"content":"                    throw new IllegalStateException(\"Unexpected task type: \" + task.getType());","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":162,"author":{"gitId":"StevenLiudw"},"content":"        return result.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":163,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":164,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":165,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"StevenLiudw":165}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":" * Represents a Deadline task in the Duke program.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" * Each deadline has a description and a specific due time.","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"    /** Formatter to display the due time in the desired format. */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\",","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"            Locale.ENGLISH);","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    /** Due date/time for the deadline. */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    private LocalDate deadlineTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new Deadline task.","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"     * @param deadlineTime Due time for the deadline in \"yyyy-MM-dd\" format.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DukeException If the due time is not in the expected format.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    public Deadline(String description, String deadlineTime) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"            this.deadlineTime \u003d LocalDate.parse(deadlineTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"            throw new DukeException(\"Invalid time format for input: \" + deadlineTime);","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new Deadline task with an isDone status.","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     * @param deadlineTime Due time for the deadline in \"yyyy-MM-dd\" format.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * @param isDone Boolean indicating if the task has been completed.","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DukeException If the due time is not in the expected format.","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"    public Deadline(String description, String deadlineTime, boolean isDone) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"        super(description, TaskType.DEADLINE, isDone);","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"            this.deadlineTime \u003d LocalDate.parse(deadlineTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"            throw new DukeException(\"Invalid time format for input: \" + deadlineTime);","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"        return this.deadlineTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"     * @return Formatted string representing the deadline.","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineTime.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"StevenLiudw":71}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.List;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":" * Represents an event task with a start and end date.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\",","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"            Locale.ENGLISH);","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    private final LocalDate e_start;","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    private final LocalDate e_end;","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    public LocalDate getE_start() {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        return e_start;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    public LocalDate getE_end() {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        return e_end;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new Event with the specified description, start date, and end date.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     * @param e_start     Start date of the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     * @param e_end       End date of the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DukeException If the given date format is invalid.","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"    public Event(String e_start, String e_end, String description) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"            this.e_start \u003d LocalDate.parse(e_start, FORMATTER);","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"            this.e_end \u003d LocalDate.parse(e_end, FORMATTER);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"            throw new DukeException(\"Invalid time format.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"        assert !this.e_start.isAfter(this.e_end) : \"Event start date should not be after end date!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"     * Constructs a new Event with the specified description, combined time (start-end), and completion status.","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"     * @param time Combined start and end date in the format \u0027start-end\u0027.","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"     * @param isDone Boolean indicating the completion status of the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"     * @throws DukeException If the given date format is invalid.","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"    public Event(String description, String time, Boolean isDone) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"        super(description, TaskType.EVENT, isDone);","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"            List\u003cLocalDate\u003e dates \u003d Arrays.stream(time.split(\"-\"))","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"                    .map(String::trim)","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"                    .map(dateStr -\u003e LocalDate.parse(dateStr, FORMATTER))","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"            if (dates.size() !\u003d 2) {","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"                throw new DukeException(\"Invalid date format. Expected start-end format.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"            this.e_start \u003d dates.get(0);","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"            this.e_end \u003d dates.get(1);","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"            throw new DukeException(\"Invalid time format.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"     * Returns a string representation of the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string representing the event.","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + e_start.format(OUTPUT_FORMATTER)","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"                + \" to: \" + e_end.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"StevenLiudw":89}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":" * Represents a general task. It can be extended by other specific task types.","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"    private final String description;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"    private final TaskType type;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"    private String tag;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"     * Initializes a task with the specified description and type.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"     * @param type The type of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        return this.description;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    public TaskType getType() {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"        return this.type;","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     * Initializes a task with the specified description, type, and completion status.","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"     * @param type The type of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    public Task(String description, TaskType type, Boolean isDone) {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     * Gets the status icon for the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"     * @return \"X\" if the task is completed, else \" \".","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"    public void mark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"    public String getTag() {","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"        return this.tag;","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"    public void setTag(String tag) {","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"     * Gets the description","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"        return this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string representing the task\u0027s status and description.","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"        String result \u003d \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"        result +\u003d \" [\" + this.tag + \"]\";","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"        return result;","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"StevenLiudw":99}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":" * Enumerates the different types of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"public enum TaskType {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"StevenLiudw":8}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":" * Represents a \"to-do\" type of task.","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"     * Initializes a new \"to-do\" task with the specified description.","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"     * @param description The description of the \"to-do\" task.","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * Initializes a new \"to-do\" task with the specified name and completion status.","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"     * @param name The name of the \"to-do\" task.","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        super(name, TaskType.TODO, isDone);","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the string representation of the \"to-do\" task.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string representing the \"to-do\" task\u0027s type, status, and description.","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"StevenLiudw":40}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.DialogBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Tony.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jarvis.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    public void printIntroduction() {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage));","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"        assert duke !\u003d null : \"Duke should be initialized before handling user input!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"        assert userInput !\u003d null : \"userInput should be initialized!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"        assert dialogContainer !\u003d null : \"dialogContainer should be initialized!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"        );","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"StevenLiudw":63}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke.ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":" * Deals with interactions with the user","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":" * Return messages to user from Duke.","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"    private static final String LINE \u003d \"______________________________\";","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"     * Constructor for Ui class. Initializes the Scanner object.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    public Ui() {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the welcome greetings.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"    public static String showWelcome() {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"        return \"Hello from\\n\" + logo","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"                + LINE + \"\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"                + \"Hello! I \u0027m Jarvis.\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"                + LINE + \"\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"     * Reads a command entered by the user.","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * @return A string representing the user\u0027s command.","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"        assert scanner !\u003d null : \"Scanner should be initialized before reading a command!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"     * Returns a line to format the UI.","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"    public String showLine() {","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        return LINE;","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"     * Returns an error message when there\u0027s an issue loading tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"        return \"Error loading tasks. Starting with an empty task list.\";","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"    public String showTaggedTask(Task task) {","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"        return \"Tagged the following task: \\n\" + task;","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"     * Returns an error message.","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"StevenLiudw"},"content":"     * @param message The error message.","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"StevenLiudw"},"content":"    public String showError(String message) {","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"StevenLiudw"},"content":"        return \"Error: \" + message;","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the Goodbye message.","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"StevenLiudw"},"content":"    public String showGoodbye() {","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"StevenLiudw"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the message for a deleted task.","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"StevenLiudw"},"content":"    public String showDeletedTask(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"StevenLiudw"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + task;","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the message for an added task.","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"StevenLiudw"},"content":"    public String showAddedTask(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"StevenLiudw"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + task;","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the message for a marked task.","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"StevenLiudw"},"content":"    public String showMarkedTask(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"StevenLiudw"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task;","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"StevenLiudw"},"content":"     * Returns the message for an unmarked task.","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"StevenLiudw"},"content":"    public String showUnmarkedTask(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"StevenLiudw"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task;","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"StevenLiudw"},"content":"     * Returns tasks that match the search keyword.","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"StevenLiudw"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"StevenLiudw"},"content":"     * @param tasks List of matched tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"StevenLiudw"},"content":"    public String showFoundTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"StevenLiudw"},"content":"        assert tasks !\u003d null : \"List of tasks should not be null!\";","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":120,"author":{"gitId":"StevenLiudw"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"StevenLiudw"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"StevenLiudw"},"content":"            result.append((i + 1)).append(\".\").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":123,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"StevenLiudw"},"content":"        return result.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"StevenLiudw":126}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"                \u003cFont name\u003d\"Andale Mono\" size\u003d\"13.0\"/\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"StevenLiudw":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"AS_NEEDED\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"StevenLiudw":27}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":" * Represents the unit tests for the Parser class.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * Tests the parsing of the \u0027bye\u0027 command.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    public void byeTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"            Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"            assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"            fail(\"Exit command should be parsed without errors.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"     * Tests the parsing of the \u0027list\u0027 command.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"    public void listTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"            Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"            assertTrue(command instanceof ListCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"            fail(\"List command should be parsed without errors.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * Tests the parsing of the \u0027mark\u0027 command.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"    public void markTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"            Command command \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"            assertTrue(command instanceof MarkCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"            fail(\"Mark command should be parsed without errors.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"StevenLiudw"},"content":"     * Tests the parsing of an invalid command.","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"StevenLiudw"},"content":"    public void invalidCommandTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"StevenLiudw"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"StevenLiudw"},"content":"            Command command \u003d Parser.parse(\"invalidCommand\");","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"StevenLiudw"},"content":"            fail(\"Invalid command should throw a DukeException.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"StevenLiudw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"StevenLiudw"},"content":"            assertEquals(\"OOPS! :( ☹ I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"StevenLiudw"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"StevenLiudw":70}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"import duke.task.TaskType;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"StevenLiudw"},"content":" * Represents the unit tests for the TaskList class.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"StevenLiudw"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"StevenLiudw"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"StevenLiudw"},"content":"    /** TaskList object to be used for testing purposes. */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"StevenLiudw"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"StevenLiudw"},"content":"     * Initializes a new TaskList object for each test.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"StevenLiudw"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"StevenLiudw"},"content":"    public void setUp() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"StevenLiudw"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"StevenLiudw"},"content":"     * Tests the getSize method when the TaskList is empty.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"StevenLiudw"},"content":"    public void getSize_emptyList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"StevenLiudw"},"content":"     * Tests the addition of a single task to the TaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"StevenLiudw"},"content":"    public void addTask_addOneTask() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"StevenLiudw"},"content":"        taskList.addTask(new Task(\"Test Task\", TaskType.TODO));","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"StevenLiudw"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"StevenLiudw"},"content":"     * Tests the deleteTask method by adding a task and then deleting it.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"StevenLiudw"},"content":"     * Ensures that the deleted task is returned and the size of the list is updated.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"StevenLiudw"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"StevenLiudw"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"StevenLiudw"},"content":"    public void deleteTask_taskAdded_() {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"StevenLiudw"},"content":"        Task task \u003d new Task(\"Test Task\", TaskType.TODO);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"StevenLiudw"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"StevenLiudw"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"StevenLiudw"},"content":"        Task removedTask \u003d taskList.deleteTask(0);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(task, removedTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"StevenLiudw"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"StevenLiudw"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"StevenLiudw"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"StevenLiudw":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"StevenLiudw"},"content":"todo read book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"StevenLiudw"},"content":"deadline return book /by August 8th","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"StevenLiudw"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"StevenLiudw"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"StevenLiudw"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"StevenLiudw"},"content":"blah","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"StevenLiudw"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"StevenLiudw"},"content":"delete 1","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"StevenLiudw"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"StevenLiudw"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"StevenLiudw":10}}]
