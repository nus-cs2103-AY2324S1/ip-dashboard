[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"    mainClass.set(\"jeeves.Jeeves\")","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"    archiveBaseName \u003d \"jeeves\"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JasonLCY-Temp":2,"-":40}},{"path":"src/main/java/jeeves/Jeeves.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.DeletedIdException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Todo;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.storage.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.parser.Parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":" * Contains the main method and primary logic for Jeeves.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Jeeves {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final String RELATIVEPATH_DATA_DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final String RELATIVEPATH_DATA_FILE \u003d \"data/JeevesData.txt\";","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final String DELETEDIDEXCEPTION_MESSAGE \u003d \"I cannot do that as that is not a valid Task ID \"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"            + \"(ID provided belongs to a deleted task)\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Jeeves() {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"        storage \u003d new Storage(RELATIVEPATH_DATA_DIRECTORY, RELATIVEPATH_DATA_FILE);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"        tasks \u003d new TaskList(storage.readTasklistFromFile());","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Main process.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @param args Optional command line arguments.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"        new Jeeves().run();","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void run() {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"        ui.printGreeting();","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"        ","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"        // Waits for user input and process it accordingly","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"        while (true) {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Reads the user input and parses the relevant tokens for use","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"            ArrayList\u003cString\u003e tokens \u003d parser.parseUserInput(sc.nextLine());","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"            String currentCommand \u003d tokens.get(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Performs a different action depending on the input received","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Unless a specific pre-defined command is received, the program will","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"            // print a default error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"            if (currentCommand.equals(\"list\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Displays a different message if no task is being tracked","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"                if (Task.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"I am not currently tracking anything for you Master\");","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"This is what I am tracking for you Master\");","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Displays the current list of tasks tracked and their status","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"                for (int i \u003d 1; i \u003c\u003d Task.getTaskCount(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (tasks.getTask(i) !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"                        tasks.printTask(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Prints an empty line for output clarity","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"                System.out.print(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.equals(\"mark\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Get the id and try to process the marking","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"JasonLCY-Temp"},"content":"                int id \u003d Integer.parseInt(tokens.get(1));","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"                try {","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (tasks.getTask(id) \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // If the id to be marked belongs to a deleted task (null), throws the DeletedIdException","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new DeletedIdException(DELETEDIDEXCEPTION_MESSAGE);","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"JasonLCY-Temp"},"content":"                    tasks.markTask(id);","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"Understood, I have marked the following task as done:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"    \");","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"JasonLCY-Temp"},"content":"                    tasks.printTask(id);","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"JasonLCY-Temp"},"content":"                } catch (DeletedIdException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.equals(\"unmark\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"JasonLCY-Temp"},"content":"                int id \u003d Integer.parseInt(tokens.get(1));","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"JasonLCY-Temp"},"content":"                try {","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (tasks.getTask(id) \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // If the id to be marked belongs to a deleted task (null), throws the DeletedIdException","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new DeletedIdException(DELETEDIDEXCEPTION_MESSAGE);","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"JasonLCY-Temp"},"content":"                    tasks.unmarkTask(id);","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"Understood, I have marked the following task as not done:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"    \" + tasks.getTask(id).toString() + \"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"JasonLCY-Temp"},"content":"                } catch (DeletedIdException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.equals(\"delete\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"JasonLCY-Temp"},"content":"                int id \u003d Integer.parseInt(tokens.get(1));","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"JasonLCY-Temp"},"content":"                try {","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (tasks.getTask(id) \u003d\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // If the id to be marked belongs to a deleted task (null), throws the DeletedIdException","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new DeletedIdException(DELETEDIDEXCEPTION_MESSAGE);","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"Understood, I have deleted the following task:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"    \" + tasks.getTask(id).toString() + \"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"JasonLCY-Temp"},"content":"                    tasks.setTask(id, null);","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"JasonLCY-Temp"},"content":"                } catch (DeletedIdException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.equals(\"todo\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Adds the To.do normally to the task list","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"JasonLCY-Temp"},"content":"                Todo newTodo \u003d new Todo(tokens.get(1));","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"JasonLCY-Temp"},"content":"                tasks.addTaskAtIndex(Task.getTaskCount(), newTodo);","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"JasonLCY-Temp"},"content":"                System.out.println(\"Task added:\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"JasonLCY-Temp"},"content":"                        \"    \" + newTodo + \"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.equals(\"deadline\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Checks if the Date input is in the accepted format","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"JasonLCY-Temp"},"content":"                LocalDate deadline \u003d LocalDate.parse(tokens.get(2));","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Adds the \u0027Deadline\u0027 Task to the task list","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"JasonLCY-Temp"},"content":"                Deadline newDeadline \u003d new Deadline(tokens.get(1), deadline);","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"JasonLCY-Temp"},"content":"                tasks.addTaskAtIndex(Task.getTaskCount(), newDeadline);","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"JasonLCY-Temp"},"content":"                System.out.println(\"Deadline added:\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"JasonLCY-Temp"},"content":"                        \"    \" + newDeadline + \"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.equals(\"event\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Adds the \u0027Event\u0027 Task to the task list","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"JasonLCY-Temp"},"content":"                Event newEvent \u003d new Event(tokens.get(1), tokens.get(2), tokens.get(3));","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"JasonLCY-Temp"},"content":"                tasks.addTaskAtIndex(Task.getTaskCount(), newEvent);","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"JasonLCY-Temp"},"content":"                System.out.println(\"Event added:\\n\" +","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"JasonLCY-Temp"},"content":"                        \"    \" + newEvent + \"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.equals(\"bye\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Before the actual termination of the program, writes the current task list to the external file.","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"JasonLCY-Temp"},"content":"                storage.writeTasklistToFile(tasks.getTaskListDataAsString());","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Displays the farewell message and terminates the application","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"JasonLCY-Temp"},"content":"                ui.printFarewell();","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"JasonLCY-Temp"},"content":"                System.exit(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"JasonLCY-Temp"},"content":"                // By default, informs the user that the command is not recognized.","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"JasonLCY-Temp"},"content":"                ui.printInvalidCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"JasonLCY-Temp":153}},{"path":"src/main/java/jeeves/exception/DeletedIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class DeletedIdException extends Exception {","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public DeletedIdException(String errorMsg) {","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/MissingByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class MissingByException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public MissingByException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class MissingDescriptionException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public MissingDescriptionException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/MissingFromException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class MissingFromException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public MissingFromException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/MissingIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class MissingIdException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public MissingIdException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/MissingToException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class MissingToException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public MissingToException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/NotIntegerIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class NotIntegerIdException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public NotIntegerIdException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/OutOfBoundIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class OutOfBoundIdException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public OutOfBoundIdException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.MissingByException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.MissingDescriptionException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.MissingFromException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.MissingIdException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.MissingToException;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.NotIntegerIdException;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.OutOfBoundIdException;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDCOMMAND_TODO_OFFSET \u003d 5;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDCOMMAND_DEADLINE_OFFSET \u003d 9;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDCOMMAND_EVENT_OFFSET \u003d 6;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDCOMMAND_MARK_OFFSET \u003d 5;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDCOMMAND_UNMARK_OFFSET \u003d 7;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDCOMMAND_DELETE_OFFSET \u003d 7;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDFIELD_TO_OFFSET \u003d 4;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDFIELD_FROM_OFFSET \u003d 6;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDFIELD_BY_OFFSET \u003d 4;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Parser() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"        ","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"    public ArrayList\u003cString\u003e parseUserInput(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"        ArrayList\u003cString\u003e args \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"            // returns args \u003ccommand\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"            args.add(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"        } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"            args.add(\"mark\");","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Gets the task ID that the user wish to mark","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"            String idString \u003d input.substring(FINDCOMMAND_MARK_OFFSET);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Checks if the task ID is invalid, program will throw an error if the id is invalid","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"            checkIfValidId(idString);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Adds the valid id to the args array list and returns args \u003ccommand,id\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"            args.add(idString);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"        } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"            args.add(\"unmark\");","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Gets the task ID that the user wish to unmark","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"            String idString \u003d input.substring(FINDCOMMAND_UNMARK_OFFSET);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Checks if the task ID is invalid, program will throw an error if the id is invalid","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"            checkIfValidId(idString);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Adds the valid id to the args array list and returns args \u003ccommand,id\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"            args.add(idString);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"            args.add(\"delete\");","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Gets the task ID that the user wish to delete","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"            String idString \u003d input.substring(FINDCOMMAND_DELETE_OFFSET);","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Checks if the task ID is invalid, program will throw an error if the id is invalid","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"            checkIfValidId(idString);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Adds the valid id to the args array list and returns args \u003ccommand, id\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"            args.add(idString);","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"        } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"            args.add(\"todo\");","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Checks if the user provided a description","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"            // If so, returns args \u003ccommand, desc\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Else throws the custom MissingDescriptionException error","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"            String desc \u003d input.substring(FINDCOMMAND_TODO_OFFSET);","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"            checkIfDescMissing(desc);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"            args.add(desc);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"        } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"            args.add(\"deadline\");","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Checks if the user has entered the command properly","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"            // and extracts the relevant information to parse","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"            // then returns args \u003ccommand, desc, dyDate\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"                int byDateIndex \u003d getByDateIndex(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"                String desc \u003d input.substring(FINDCOMMAND_DEADLINE_OFFSET, byDateIndex - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"                String byDate \u003d input.substring(byDateIndex + FINDFIELD_BY_OFFSET);","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"                args.add(desc);","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"JasonLCY-Temp"},"content":"                args.add(byDate);","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"JasonLCY-Temp"},"content":"            } catch (MissingDescriptionException | MissingByException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"JasonLCY-Temp"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"        } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"JasonLCY-Temp"},"content":"            args.add(\"event\");","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Checks if the user has entered the command properly","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"JasonLCY-Temp"},"content":"            // and extracts the relevant information to parse","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"JasonLCY-Temp"},"content":"            // then returns args \u003ccommand, desc, fromDate, toDate\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"JasonLCY-Temp"},"content":"                int fromDateIndex \u003d getFromDateIndex(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"JasonLCY-Temp"},"content":"                int toDateIndex \u003d getToDateIndex(input, fromDateIndex);","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"JasonLCY-Temp"},"content":"                String desc \u003d input.substring(FINDCOMMAND_EVENT_OFFSET, fromDateIndex - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"JasonLCY-Temp"},"content":"                String fromDate \u003d input.substring(fromDateIndex + FINDFIELD_FROM_OFFSET, toDateIndex - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"JasonLCY-Temp"},"content":"                String toDate \u003d input.substring(toDateIndex + FINDFIELD_TO_OFFSET);","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"JasonLCY-Temp"},"content":"                args.add(desc);","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"JasonLCY-Temp"},"content":"                args.add(fromDate);","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"JasonLCY-Temp"},"content":"                args.add(toDate);","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"JasonLCY-Temp"},"content":"            } catch (MissingDescriptionException | MissingFromException | MissingToException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"JasonLCY-Temp"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"JasonLCY-Temp"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"JasonLCY-Temp"},"content":"            args.add(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"JasonLCY-Temp"},"content":"        return args;","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Checks if a string is only made up of integer numbers.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Uses regex to determine if a string contains only integers","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @param input The string to be checked","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return Whether the string is fully comprised of integers","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static boolean isNotNumber(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"JasonLCY-Temp"},"content":"        return !input.matches(\"[0-9]+\");","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static void checkIfValidId(String idString) {","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"JasonLCY-Temp"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"JasonLCY-Temp"},"content":"            if (idString.isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"JasonLCY-Temp"},"content":"                // id field is empty","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"JasonLCY-Temp"},"content":"                throw new MissingIdException(\"I cannot do that as you have not provided me with a Task ID\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (isNotNumber(idString)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"JasonLCY-Temp"},"content":"                // id field is not an integer","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"JasonLCY-Temp"},"content":"                throw new NotIntegerIdException(\"I cannot do that as that is not a valid Task ID \"","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"JasonLCY-Temp"},"content":"                        + \"(ID provided is not an integer)\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (Integer.parseInt(idString) \u003e Task.getTaskCount()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"JasonLCY-Temp"},"content":"                // id does not exist","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"JasonLCY-Temp"},"content":"                throw new OutOfBoundIdException(\"I cannot do that as that is not a valid Task ID \"","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"JasonLCY-Temp"},"content":"                        + \"(ID provided does not exist)\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"JasonLCY-Temp"},"content":"            } ","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"JasonLCY-Temp"},"content":"        } catch (MissingIdException | NotIntegerIdException | OutOfBoundIdException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"JasonLCY-Temp"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static void checkIfDescMissing(String desc) {","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"JasonLCY-Temp"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"JasonLCY-Temp"},"content":"            if (desc.isEmpty()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"JasonLCY-Temp"},"content":"                throw new MissingDescriptionException(\"The description of a todo cannot be empty\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"JasonLCY-Temp"},"content":"        } catch (MissingDescriptionException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"JasonLCY-Temp"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static int getByDateIndex(String cmd) throws MissingByException, MissingDescriptionException {","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"JasonLCY-Temp"},"content":"        int byDateIndex \u003d cmd.indexOf(\"/by \");","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (byDateIndex \u003d\u003d -1 || cmd.length() \u003d\u003d byDateIndex + FINDFIELD_BY_OFFSET) {","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"JasonLCY-Temp"},"content":"            // If the \"/by \" block is missing, throws the MissingByException","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new MissingByException(\"I cannot do that as the deadline has not been provided.\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"JasonLCY-Temp"},"content":"                    + \"Please add \u0027 /by \u003cYYYY-MM-DD\u003e\u0027 after the task description\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"JasonLCY-Temp"},"content":"        if ((byDateIndex - 1) \u003c\u003d FINDCOMMAND_DEADLINE_OFFSET) {","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new MissingDescriptionException(\"The description of a deadline cannot be empty\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"JasonLCY-Temp"},"content":"        return byDateIndex;","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static int getFromDateIndex(String input) throws MissingFromException, MissingToException, MissingDescriptionException {","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"JasonLCY-Temp"},"content":"        int fromDateIndex \u003d input.indexOf(\"/from \");","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (fromDateIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"JasonLCY-Temp"},"content":"            // If the \"/from \" block is missing, throws the MissingFromException","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new MissingFromException(\"I cannot do that as the start time has not been provided.\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"JasonLCY-Temp"},"content":"                    + \"Please add \u0027 /from \u003cTime/Date\u003e\u0027 after the task description\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"JasonLCY-Temp"},"content":"        return fromDateIndex;","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static int getToDateIndex(String input, int fromDateIndex) throws MissingToException,","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"JasonLCY-Temp"},"content":"            MissingDescriptionException, MissingFromException {","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"JasonLCY-Temp"},"content":"        int toDateIndex \u003d input.indexOf(\"/to \");","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (toDateIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"JasonLCY-Temp"},"content":"            // If the \"/to \" block is missing, throws the MissingByException","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new MissingToException(\"I cannot do that as the end time has not been provided.\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"JasonLCY-Temp"},"content":"                    + \"Please add \u0027 /to \u003cTime/Date\u003e\u0027 after the task end date (after /from block)\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (input.length() \u003d\u003d (toDateIndex + FINDFIELD_TO_OFFSET)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"JasonLCY-Temp"},"content":"            // If the /to block is present but no data has been given to the field, throw ","lastModifiedDate":"2023-09-03"},{"lineNumber":177,"author":{"gitId":"JasonLCY-Temp"},"content":"            // the MissingToException","lastModifiedDate":"2023-09-03"},{"lineNumber":178,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new MissingToException(\"I cannot do that as the end time has not been provided.\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":179,"author":{"gitId":"JasonLCY-Temp"},"content":"                    + \"Please add \u0027 /to \u003cTime/Date\u003e\u0027 after the task end date (after /from block)\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":180,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":181,"author":{"gitId":"JasonLCY-Temp"},"content":"        if ((fromDateIndex - 1) \u003c\u003d FINDCOMMAND_DEADLINE_OFFSET) {","lastModifiedDate":"2023-09-03"},{"lineNumber":182,"author":{"gitId":"JasonLCY-Temp"},"content":"            //If the description is missing, throw the MissingDescription Exception","lastModifiedDate":"2023-09-03"},{"lineNumber":183,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new MissingDescriptionException(\"The description of a event cannot be empty\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":184,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":185,"author":{"gitId":"JasonLCY-Temp"},"content":"        if ((toDateIndex - 1) \u003c\u003d (fromDateIndex + FINDFIELD_FROM_OFFSET)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":186,"author":{"gitId":"JasonLCY-Temp"},"content":"            // If the /from block is present but no data has been given to the field, throw ","lastModifiedDate":"2023-09-03"},{"lineNumber":187,"author":{"gitId":"JasonLCY-Temp"},"content":"            // the MissingFromException","lastModifiedDate":"2023-09-03"},{"lineNumber":188,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new MissingFromException(\"I cannot do that as the start time has not been provided.\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":189,"author":{"gitId":"JasonLCY-Temp"},"content":"                    + \"Please add \u0027 /from \u003cTime/Date\u003e\u0027 after the task description\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":190,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":191,"author":{"gitId":"JasonLCY-Temp"},"content":"        return toDateIndex;","lastModifiedDate":"2023-09-03"},{"lineNumber":192,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":193,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"JasonLCY-Temp":193}},{"path":"src/main/java/jeeves/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Todo;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final Path dataDirPath;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final Path dataFilePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Storage(String dirPathString, String filePathString) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"        // Checks if the directory exists","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"        dataDirPath \u003d Paths.get(dirPathString);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"        // If the directory does not exist, create it for the user","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (Files.notExists(dataDirPath)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"                Files.createDirectories(dataDirPath);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Do nothing if an error is encountered since the directory existence is already checked","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Theoretically impossible to enter this block","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"        dataFilePath \u003d Paths.get(filePathString);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"        // If the file does not exist, create it for the user","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (Files.notExists(dataFilePath)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"                Files.createFile(dataFilePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Do nothing if an error is encountered since the file existence is already checked","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Theoretically impossible to enter this block","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void writeTasklistToFile(String data) {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"        // Writes the text to the output file","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"            BufferedWriter bw \u003d Files.newBufferedWriter(dataFilePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"            bw.write(data);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"            bw.flush();","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"            bw.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"        } catch(IOException e){","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"    public ArrayList\u003cTask\u003e readTasklistFromFile() {","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"        // Initialization step for task list, adds an empty object so the arraylist is 1-indexed","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"        taskList.add(null);","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"            BufferedReader br \u003d Files.newBufferedReader(dataFilePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"            String currLine;","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"            while ((currLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Extract the information to populate the array list","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"                String[] currData \u003d currLine.split(\"\\\\|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"                String taskType \u003d currData[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"                boolean status \u003d Integer.parseInt(currData[1]) \u003d\u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"                String desc \u003d currData[2];","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"                switch (taskType) {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"                    case \"T\":","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"                        taskList.add(new Todo(desc, status));","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"                        break;","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"                    case \"D\":","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"                        LocalDate deadline \u003d LocalDate.parse(currData[3]);","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"                        taskList.add(new Deadline(desc, deadline, status));","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"JasonLCY-Temp"},"content":"                        break;","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"JasonLCY-Temp"},"content":"                    case \"E\":","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"JasonLCY-Temp"},"content":"                        String startTime \u003d currData[3];","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"                        String endTime \u003d currData[4];","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"                        taskList.add(new Event(desc, startTime, endTime, status));","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"JasonLCY-Temp"},"content":"                        break;","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"JasonLCY-Temp"},"content":"            br.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"JasonLCY-Temp"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"JasonLCY-Temp"},"content":"        return taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"JasonLCY-Temp":91}},{"path":"src/main/java/jeeves/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.task;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd LLL yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Deadline(String desc, LocalDate by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(desc);","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Deadline(String desc, LocalDate by, boolean status) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(desc, status);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Getter method for the Task deadline","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return Deadline of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"        return by;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"        return String.format(this.id + \". [D]\" + super.toString() + \" (by: \" + by.format(dtf) + \")\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":35}},{"path":"src/main/java/jeeves/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.task;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    protected String from;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"    protected String to;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Event(String desc, String from, String to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(desc);","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Event(String desc, String from, String to, boolean status) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(desc, status);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Getter method for the Event start time","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return Starting time of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"        return from;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Getter method for the Event end time","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return Ending time of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"        return to;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"        return String.format(this.id + \". [E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\");","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":42}},{"path":"src/main/java/jeeves/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.task;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":" * Contains logic related to the Task object.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    /** Tracks the number of task objects to guarantee the assigned ID will be unique */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"    /** Unique identification number for the task */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"    protected final int id;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"    /** The description of the task */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"    protected final String desc;","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Default constructor for the Task object.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Automatically assigns the instance\u0027s ID based on the global task count.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @param desc Description of the task","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"        // Increments the taskCount and uses the value as the unique ID for the current task","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"        Task.taskCount +\u003d 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"        id \u003d Task.taskCount;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Task(String desc, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"        // Increments the taskCount and uses the value as the unique ID for the current task","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"        Task.taskCount +\u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"        id \u003d Task.taskCount;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Getter method for the global Task count.","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return Number of Tasks initialized","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"        return taskCount;","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Getter method for the Task description.","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return Description of the task","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String getDesc() {","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"        return desc;","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Getter method for the Task status.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return Status of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"        return isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Setter method for the Task status","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @param isDone Status of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Obtain a string representation of a Task object","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return String representation of Task","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"JasonLCY-Temp"},"content":"        // Checks if a task has its status marked as complete","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"JasonLCY-Temp"},"content":"        // and displays the appropriate visual","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"JasonLCY-Temp"},"content":"            return String.format(\"[X] \" + this.getDesc());","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"JasonLCY-Temp"},"content":"            return String.format(\"[ ] \" + this.getDesc());","lastModifiedDate":"2023-08-25"},{"lineNumber":88,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"JasonLCY-Temp":91}},{"path":"src/main/java/jeeves/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"     * The arraylist used to track tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Due to how the taskCount variable is used as the id and","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"     * array access position, index 0 will always be unused.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"     * taskList is effectively 1-indexed","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"        taskList \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void addTaskAtIndex(int index, Task t) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"        taskList.add(index, t);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void setTask(int index, Task t) {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"        taskList.set(index,t);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void printTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"        System.out.println(taskList.get(index).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"        taskList.get(index).setStatus(true);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"        taskList.get(index).setStatus(false);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String getTaskListDataAsString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"        // Starts by creating the text to write to the output file","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"        for (Task currTask : taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"            // If the task is already deleted from the list, (represented as null object)","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"            // don\u0027t write it to the file","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"            if (currTask !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Determines what type of Task is being handled currently for printing purposes","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"                if (currTask instanceof Todo) {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"                    sb.append(\"T|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"                } else if (currTask instanceof Deadline) {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"                    sb.append(\"D|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"                    sb.append(\"E|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Writes the status of the task","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"                if (currTask.isDone()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"                    sb.append(\"1|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"                    sb.append(\"0|\");","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Writes the description and other tracked data.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"                if (currTask instanceof Todo) {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"                    sb.append(currTask.getDesc())","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"                            .append(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"                } else if (currTask instanceof Deadline) {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"                    sb.append(currTask.getDesc())","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"                            .append(\"|\")","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"                            .append(((Deadline) currTask).getDeadline())","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"                            .append(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"                    sb.append(currTask.getDesc())","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"JasonLCY-Temp"},"content":"                            .append(\"|\")","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"JasonLCY-Temp"},"content":"                            .append(((Event) currTask).getStartTime())","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"JasonLCY-Temp"},"content":"                            .append(\"|\")","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"                            .append(((Event) currTask).getEndTime())","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"                            .append(\"\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"JasonLCY-Temp"},"content":"        return sb.toString(); ","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"JasonLCY-Temp":87}},{"path":"src/main/java/jeeves/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.task;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(desc);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Todo(String desc, boolean status) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(desc, status);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"        return String.format(this.id + \". [T]\" + super.toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":17}},{"path":"src/main/java/jeeves/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Ui() {","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        ","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"        System.out.println(\"Greetings, Master. Jeeves at your service\");","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"        System.out.println(\"How may I serve you today?\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void printFarewell() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"        System.out.println(\"I bid you farewell, Master\");","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void printInvalidCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"        System.out.println(\"Apologies Master, I am unable to understand that command.\\n\"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"                + \"I will improve myself to better serve you in the future.\\n\");","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"JasonLCY-Temp":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\jeeves\\storage\\*.java","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\jeeves\\task\\*.java","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\jeeves\\exception\\*.java","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\jeeves\\*.java","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"java -classpath ..\\bin jeeves.Jeeves \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"REM pause so it\u0027s actually possible to read the results","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"pause","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8,"-":19}}]
