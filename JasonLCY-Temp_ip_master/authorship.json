[{"path":"src/main/java/jeeves/exception/DeletedIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class DeletedIdException extends Exception {","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public DeletedIdException(String errorMsg) {","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/MissingByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class MissingByException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public MissingByException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class MissingDescriptionException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public MissingDescriptionException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/MissingFromException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class MissingFromException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public MissingFromException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/MissingIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class MissingIdException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public MissingIdException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/MissingToException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class MissingToException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public MissingToException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/NotIntegerIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class NotIntegerIdException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public NotIntegerIdException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/exception/OutOfBoundIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.exception;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class OutOfBoundIdException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public OutOfBoundIdException(String errorMsg) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":8}},{"path":"src/main/java/jeeves/main/Jeeves.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.main;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.MissingIdException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.NotIntegerIdException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.OutOfBoundIdException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.MissingDescriptionException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.MissingByException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.MissingFromException;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.MissingToException;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.exception.DeletedIdException;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Task;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Todo;","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Deadline;","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"import jeeves.task.Event;","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":" * Contains the main method and primary logic for Jeeves.","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Jeeves {","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDCOMMAND_TODO_OFFSET \u003d 5;","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDCOMMAND_DEADLINE_OFFSET \u003d 9;","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDCOMMAND_EVENT_OFFSET \u003d 6;","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDCOMMAND_MARK_OFFSET \u003d 5;","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDCOMMAND_UNMARK_OFFSET \u003d 7;","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDCOMMAND_DELETE_OFFSET \u003d 7;","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDFIELD_TO_OFFSET \u003d 4;","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDFIELD_FROM_OFFSET \u003d 6;","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final int FINDFIELD_BY_OFFSET \u003d 4;","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"     * The arraylist used to track tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Due to how the taskCount variable is used as the id and","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"     * array access position, index 0 will always be unused.","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"     * taskList is effectively 1-indexed","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Main process.","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Greets the user and waits for user input.","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Then, responds appropriately.","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @param args Optional command line arguments.","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"        System.out.println(\"Greetings, Master. Jeeves at your service\");","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"        System.out.println(\"How may I serve you today?\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"        // Initialization step for task list, adds an empty object so the arraylist is 1-indexed","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"        taskList.add(null);","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"        // Waits for user input and process it accordingly","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"        while (true) {","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Reads the user input","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"            String currentCommand \u003d sc.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Performs a different action depending on the input received","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"            // Unless a specific pre-defined command is received, the program will","lastModifiedDate":"2023-08-25"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"            // print a default error message.","lastModifiedDate":"2023-08-25"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"            if (currentCommand.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Displays a different message if no task is being tracked","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"                if (Task.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2023-08-25"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"I am not currently tracking anything for you Master\");","lastModifiedDate":"2023-08-25"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"                } else {","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"This is what I am tracking for you Master\");","lastModifiedDate":"2023-08-25"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Displays the current list of tasks tracked and their status","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"                for (int i \u003d 1; i \u003c\u003d Task.getTaskCount(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (taskList.get(i) !\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"                        System.out.println(taskList.get(i).toString());","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Prints an empty line for output clarity","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"JasonLCY-Temp"},"content":"                System.out.print(\"\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"JasonLCY-Temp"},"content":"            }  else if (currentCommand.startsWith(\"mark \")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Gets the task ID that the user wish to mark","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"                String idString \u003d currentCommand.substring(FINDCOMMAND_MARK_OFFSET);","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"JasonLCY-Temp"},"content":"                // If the task ID is invalid or not found, throw an error","lastModifiedDate":"2023-08-25"},{"lineNumber":83,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Else, update the task\u0027s status and notifies the user","lastModifiedDate":"2023-08-25"},{"lineNumber":84,"author":{"gitId":"JasonLCY-Temp"},"content":"                try {","lastModifiedDate":"2023-08-25"},{"lineNumber":85,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (idString.isEmpty()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // id field is empty","lastModifiedDate":"2023-08-25"},{"lineNumber":87,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new MissingIdException(\"I cannot do that as you have not provided me with a Task ID\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":88,"author":{"gitId":"JasonLCY-Temp"},"content":"                    } else if (isNotNumber(idString)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // id field is not an integer","lastModifiedDate":"2023-08-25"},{"lineNumber":90,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new NotIntegerIdException(\"I cannot do that as that is not a valid Task ID \"","lastModifiedDate":"2023-08-25"},{"lineNumber":91,"author":{"gitId":"JasonLCY-Temp"},"content":"                                + \"(ID provided is not an integer)\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":92,"author":{"gitId":"JasonLCY-Temp"},"content":"                    } else if (Integer.parseInt(idString) \u003e Task.getTaskCount()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":93,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // id does not exist","lastModifiedDate":"2023-08-25"},{"lineNumber":94,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new OutOfBoundIdException(\"I cannot do that as that is not a valid Task ID \"","lastModifiedDate":"2023-08-25"},{"lineNumber":95,"author":{"gitId":"JasonLCY-Temp"},"content":"                                + \"(ID provided does not exist)\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":96,"author":{"gitId":"JasonLCY-Temp"},"content":"                    } else {","lastModifiedDate":"2023-08-25"},{"lineNumber":97,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // Updates the task status","lastModifiedDate":"2023-08-25"},{"lineNumber":98,"author":{"gitId":"JasonLCY-Temp"},"content":"                        int id \u003d Integer.parseInt(idString);","lastModifiedDate":"2023-08-25"},{"lineNumber":99,"author":{"gitId":"JasonLCY-Temp"},"content":"                        if (taskList.get(id) \u003d\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"JasonLCY-Temp"},"content":"                            // If the id to be marked belongs to a deleted task (null), throws the DeletedIdException","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"JasonLCY-Temp"},"content":"                            throw new DeletedIdException(\"I cannot do that as that is not a valid Task ID \"","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"JasonLCY-Temp"},"content":"                                    + \"(ID provided belongs to a deleted task)\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"JasonLCY-Temp"},"content":"                        }","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"JasonLCY-Temp"},"content":"                        taskList.get(id).setStatus(true);","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"JasonLCY-Temp"},"content":"                        System.out.println(\"Understood, I have marked the following task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"JasonLCY-Temp"},"content":"                        System.out.println(\"    \" + taskList.get(id).toString() + \"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":108,"author":{"gitId":"JasonLCY-Temp"},"content":"                } catch (MissingIdException | NotIntegerIdException | OutOfBoundIdException | DeletedIdException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-08-25"},{"lineNumber":110,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":111,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.startsWith(\"unmark \")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Gets the task ID that the user wish to unmark","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"JasonLCY-Temp"},"content":"                String idString \u003d currentCommand.substring(FINDCOMMAND_UNMARK_OFFSET);","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"JasonLCY-Temp"},"content":"                // If the task ID is invalid or not found, throw an error","lastModifiedDate":"2023-08-25"},{"lineNumber":115,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Else, update the task\u0027s status and notifies the user","lastModifiedDate":"2023-08-25"},{"lineNumber":116,"author":{"gitId":"JasonLCY-Temp"},"content":"                try {","lastModifiedDate":"2023-08-25"},{"lineNumber":117,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (idString.isEmpty()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":118,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // id field is empty","lastModifiedDate":"2023-08-25"},{"lineNumber":119,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new MissingIdException(\"I cannot do that as you have not provided me with a Task ID\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":120,"author":{"gitId":"JasonLCY-Temp"},"content":"                    } else if (isNotNumber(idString)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // id field is not an integer","lastModifiedDate":"2023-08-25"},{"lineNumber":122,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new NotIntegerIdException(\"I cannot do that as that is not a valid Task ID \"","lastModifiedDate":"2023-08-25"},{"lineNumber":123,"author":{"gitId":"JasonLCY-Temp"},"content":"                                + \"(ID provided is not an integer)\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":124,"author":{"gitId":"JasonLCY-Temp"},"content":"                    } else if (Integer.parseInt(idString) \u003e Task.getTaskCount()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":125,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // id does not exist","lastModifiedDate":"2023-08-25"},{"lineNumber":126,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new OutOfBoundIdException(\"I cannot do that as that is not a valid Task ID \"","lastModifiedDate":"2023-08-25"},{"lineNumber":127,"author":{"gitId":"JasonLCY-Temp"},"content":"                                + \"(ID provided does not exist)\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":128,"author":{"gitId":"JasonLCY-Temp"},"content":"                    } else {","lastModifiedDate":"2023-08-25"},{"lineNumber":129,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // Updates the task status","lastModifiedDate":"2023-08-25"},{"lineNumber":130,"author":{"gitId":"JasonLCY-Temp"},"content":"                        int id \u003d Integer.parseInt(idString);","lastModifiedDate":"2023-08-25"},{"lineNumber":131,"author":{"gitId":"JasonLCY-Temp"},"content":"                        if (taskList.get(id) \u003d\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"JasonLCY-Temp"},"content":"                            // If the id to be marked belongs to a deleted task (null), throws the DeletedIdException","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"JasonLCY-Temp"},"content":"                            throw new DeletedIdException(\"I cannot do that as that is not a valid Task ID \"","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"JasonLCY-Temp"},"content":"                                    + \"(ID provided belongs to a deleted task)\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"JasonLCY-Temp"},"content":"                        }","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"JasonLCY-Temp"},"content":"                        taskList.get(id).setStatus(false);","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"JasonLCY-Temp"},"content":"                        System.out.println(\"Understood, I have marked the following task as not done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"JasonLCY-Temp"},"content":"                        System.out.println(\"    \" + taskList.get(id).toString() + \"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":139,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":140,"author":{"gitId":"JasonLCY-Temp"},"content":"                } catch (MissingIdException | NotIntegerIdException | OutOfBoundIdException | DeletedIdException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":141,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-08-25"},{"lineNumber":142,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":143,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.startsWith(\"todo \")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":144,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Checks if the user provided a description","lastModifiedDate":"2023-08-25"},{"lineNumber":145,"author":{"gitId":"JasonLCY-Temp"},"content":"                // If so, adds the \u0027To do\u0027 Task to the task list normally","lastModifiedDate":"2023-08-25"},{"lineNumber":146,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Else throws the custom MissingDescriptionException error","lastModifiedDate":"2023-08-25"},{"lineNumber":147,"author":{"gitId":"JasonLCY-Temp"},"content":"                try {","lastModifiedDate":"2023-08-25"},{"lineNumber":148,"author":{"gitId":"JasonLCY-Temp"},"content":"                    String currTask \u003d currentCommand.substring(FINDCOMMAND_TODO_OFFSET);","lastModifiedDate":"2023-08-25"},{"lineNumber":149,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (currTask.isEmpty()) {","lastModifiedDate":"2023-08-25"},{"lineNumber":150,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new MissingDescriptionException(\"The description of a todo cannot be empty\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":151,"author":{"gitId":"JasonLCY-Temp"},"content":"                    } ","lastModifiedDate":"2023-08-25"},{"lineNumber":152,"author":{"gitId":"JasonLCY-Temp"},"content":"                    // Adds the Task normally to the task list if no errors are detected","lastModifiedDate":"2023-08-25"},{"lineNumber":153,"author":{"gitId":"JasonLCY-Temp"},"content":"                    Todo newTodo \u003d new Todo(currTask);","lastModifiedDate":"2023-08-25"},{"lineNumber":154,"author":{"gitId":"JasonLCY-Temp"},"content":"                    taskList.add(Task.getTaskCount(), newTodo);","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"Task added:\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":156,"author":{"gitId":"JasonLCY-Temp"},"content":"                            \"    \" + newTodo + \"\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":157,"author":{"gitId":"JasonLCY-Temp"},"content":"                    ","lastModifiedDate":"2023-08-25"},{"lineNumber":158,"author":{"gitId":"JasonLCY-Temp"},"content":"                } catch (MissingDescriptionException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":159,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-08-25"},{"lineNumber":160,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":161,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.startsWith(\"deadline \")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":162,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Checks if the user provided a proper description and \"by\" date/time.","lastModifiedDate":"2023-08-25"},{"lineNumber":163,"author":{"gitId":"JasonLCY-Temp"},"content":"                // If so, adds the \u0027deadline\u0027 Task to the task list normally","lastModifiedDate":"2023-08-25"},{"lineNumber":164,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Else throws the custom MissingDescriptionException error","lastModifiedDate":"2023-08-25"},{"lineNumber":165,"author":{"gitId":"JasonLCY-Temp"},"content":"                try {","lastModifiedDate":"2023-08-25"},{"lineNumber":166,"author":{"gitId":"JasonLCY-Temp"},"content":"                    int byDateIndex \u003d currentCommand.indexOf(\"/by \");","lastModifiedDate":"2023-08-25"},{"lineNumber":167,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (byDateIndex \u003d\u003d -1 || currentCommand.length() \u003d\u003d byDateIndex + FINDFIELD_BY_OFFSET) {","lastModifiedDate":"2023-08-25"},{"lineNumber":168,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // If the \"/by \" block is missing, throws the MissingByException","lastModifiedDate":"2023-08-25"},{"lineNumber":169,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new MissingByException(\"I cannot do that as the deadline has not been provided.\\n\" ","lastModifiedDate":"2023-08-25"},{"lineNumber":170,"author":{"gitId":"JasonLCY-Temp"},"content":"                                + \"Please add \u0027 /by \u003cTime/Date\u003e\u0027 after the task description\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":171,"author":{"gitId":"JasonLCY-Temp"},"content":"                    } ","lastModifiedDate":"2023-08-25"},{"lineNumber":172,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if ((byDateIndex - 1) \u003c\u003d FINDCOMMAND_DEADLINE_OFFSET) {","lastModifiedDate":"2023-08-25"},{"lineNumber":173,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new MissingDescriptionException(\"The description of a deadline cannot be empty\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":174,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":175,"author":{"gitId":"JasonLCY-Temp"},"content":"                    String currTask \u003d currentCommand.substring(FINDCOMMAND_DEADLINE_OFFSET, byDateIndex - 1);","lastModifiedDate":"2023-08-25"},{"lineNumber":176,"author":{"gitId":"JasonLCY-Temp"},"content":"                    String byDate \u003d currentCommand.substring(byDateIndex + FINDFIELD_BY_OFFSET);","lastModifiedDate":"2023-08-25"},{"lineNumber":177,"author":{"gitId":"JasonLCY-Temp"},"content":"                    // Adds the \u0027Deadline\u0027 Task to the task list","lastModifiedDate":"2023-08-25"},{"lineNumber":178,"author":{"gitId":"JasonLCY-Temp"},"content":"                    Deadline newDeadline \u003d new Deadline(currTask, byDate);","lastModifiedDate":"2023-08-25"},{"lineNumber":179,"author":{"gitId":"JasonLCY-Temp"},"content":"                    taskList.add(Task.getTaskCount(), newDeadline);","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"Deadline added:\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":181,"author":{"gitId":"JasonLCY-Temp"},"content":"                            \"    \" + newDeadline + \"\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":182,"author":{"gitId":"JasonLCY-Temp"},"content":"                        ","lastModifiedDate":"2023-08-25"},{"lineNumber":183,"author":{"gitId":"JasonLCY-Temp"},"content":"                } catch (MissingDescriptionException | MissingByException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":184,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-08-25"},{"lineNumber":185,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":186,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.startsWith(\"event \")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":187,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Checks if the user provided a description","lastModifiedDate":"2023-08-25"},{"lineNumber":188,"author":{"gitId":"JasonLCY-Temp"},"content":"                // If so, adds the \u0027dead\u0027 Task to the task list normally","lastModifiedDate":"2023-08-25"},{"lineNumber":189,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Else throws the custom MissingDescriptionException error","lastModifiedDate":"2023-08-25"},{"lineNumber":190,"author":{"gitId":"JasonLCY-Temp"},"content":"                try {","lastModifiedDate":"2023-08-25"},{"lineNumber":191,"author":{"gitId":"JasonLCY-Temp"},"content":"                    int fromDateIndex \u003d currentCommand.indexOf(\"/from \");","lastModifiedDate":"2023-08-25"},{"lineNumber":192,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (fromDateIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":193,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // If the \"/from \" block is missing, throws the MissingFromException","lastModifiedDate":"2023-08-25"},{"lineNumber":194,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new MissingFromException(\"I cannot do that as the start time has not been provided.\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":195,"author":{"gitId":"JasonLCY-Temp"},"content":"                                + \"Please add \u0027 /from \u003cTime/Date\u003e\u0027 after the task description\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":196,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":197,"author":{"gitId":"JasonLCY-Temp"},"content":"                    ","lastModifiedDate":"2023-08-25"},{"lineNumber":198,"author":{"gitId":"JasonLCY-Temp"},"content":"                    int toDateIndex \u003d currentCommand.indexOf(\"/to \");","lastModifiedDate":"2023-08-25"},{"lineNumber":199,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (toDateIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-25"},{"lineNumber":200,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // If the \"/to \" block is missing, throws the MissingByException","lastModifiedDate":"2023-08-25"},{"lineNumber":201,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new MissingToException(\"I cannot do that as the end time has not been provided.\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":202,"author":{"gitId":"JasonLCY-Temp"},"content":"                                + \"Please add \u0027 /to \u003cTime/Date\u003e\u0027 after the task end date (after /from block)\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":203,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":204,"author":{"gitId":"JasonLCY-Temp"},"content":"                    ","lastModifiedDate":"2023-08-25"},{"lineNumber":205,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if ((fromDateIndex - 1) \u003c\u003d FINDCOMMAND_DEADLINE_OFFSET) {","lastModifiedDate":"2023-08-25"},{"lineNumber":206,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new MissingDescriptionException(\"The description of a event cannot be empty\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":207,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":208,"author":{"gitId":"JasonLCY-Temp"},"content":"                    ","lastModifiedDate":"2023-08-25"},{"lineNumber":209,"author":{"gitId":"JasonLCY-Temp"},"content":"                    String currTask \u003d currentCommand.substring(FINDCOMMAND_EVENT_OFFSET, fromDateIndex - 1);","lastModifiedDate":"2023-08-25"},{"lineNumber":210,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":211,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if ((toDateIndex - 1) \u003c\u003d (fromDateIndex + FINDFIELD_FROM_OFFSET)) {","lastModifiedDate":"2023-08-25"},{"lineNumber":212,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // If the /from block is present but no data has been given to the field, throw ","lastModifiedDate":"2023-08-25"},{"lineNumber":213,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // the MissingFromException","lastModifiedDate":"2023-08-25"},{"lineNumber":214,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new MissingFromException(\"I cannot do that as the start time has not been provided.\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":215,"author":{"gitId":"JasonLCY-Temp"},"content":"                                + \"Please add \u0027 /from \u003cTime/Date\u003e\u0027 after the task description\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":216,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":217,"author":{"gitId":"JasonLCY-Temp"},"content":"                    String fromDate \u003d currentCommand.substring(fromDateIndex + FINDFIELD_FROM_OFFSET, toDateIndex - 1);","lastModifiedDate":"2023-08-25"},{"lineNumber":218,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":219,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (currentCommand.length() \u003d\u003d (toDateIndex + FINDFIELD_TO_OFFSET)) {","lastModifiedDate":"2023-08-25"},{"lineNumber":220,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // If the /to block is present but no data has been given to the field, throw ","lastModifiedDate":"2023-08-25"},{"lineNumber":221,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // the MissingToException","lastModifiedDate":"2023-08-25"},{"lineNumber":222,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new MissingToException(\"I cannot do that as the end time has not been provided.\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":223,"author":{"gitId":"JasonLCY-Temp"},"content":"                                + \"Please add \u0027 /to \u003cTime/Date\u003e\u0027 after the task end date (after /from block)\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":224,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-08-25"},{"lineNumber":225,"author":{"gitId":"JasonLCY-Temp"},"content":"                    String toDate \u003d currentCommand.substring(toDateIndex + FINDFIELD_TO_OFFSET);","lastModifiedDate":"2023-08-25"},{"lineNumber":226,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":227,"author":{"gitId":"JasonLCY-Temp"},"content":"                    // Adds the \u0027Event\u0027 Task to the task list","lastModifiedDate":"2023-08-25"},{"lineNumber":228,"author":{"gitId":"JasonLCY-Temp"},"content":"                    Event newEvent \u003d new Event(currTask, fromDate, toDate);","lastModifiedDate":"2023-08-25"},{"lineNumber":229,"author":{"gitId":"JasonLCY-Temp"},"content":"                    taskList.add(Task.getTaskCount(), newEvent);","lastModifiedDate":"2023-08-26"},{"lineNumber":230,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(\"Event added:\\n\" +","lastModifiedDate":"2023-08-25"},{"lineNumber":231,"author":{"gitId":"JasonLCY-Temp"},"content":"                            \"    \" + newEvent + \"\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":232,"author":{"gitId":"JasonLCY-Temp"},"content":"                } catch (MissingDescriptionException | MissingFromException | MissingToException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":233,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-08-26"},{"lineNumber":234,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":235,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":236,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Gets the task ID that the user wish to delete","lastModifiedDate":"2023-08-26"},{"lineNumber":237,"author":{"gitId":"JasonLCY-Temp"},"content":"                String idString \u003d currentCommand.substring(FINDCOMMAND_DELETE_OFFSET);","lastModifiedDate":"2023-08-26"},{"lineNumber":238,"author":{"gitId":"JasonLCY-Temp"},"content":"                // If the task ID is invalid or not found, throw an error","lastModifiedDate":"2023-08-26"},{"lineNumber":239,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Else, update the task\u0027s status and notifies the user","lastModifiedDate":"2023-08-26"},{"lineNumber":240,"author":{"gitId":"JasonLCY-Temp"},"content":"                try {","lastModifiedDate":"2023-08-26"},{"lineNumber":241,"author":{"gitId":"JasonLCY-Temp"},"content":"                    if (idString.isEmpty()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":242,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // id field is empty","lastModifiedDate":"2023-08-26"},{"lineNumber":243,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new MissingIdException(\"I cannot do that as you have not provided me with a Task ID\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":244,"author":{"gitId":"JasonLCY-Temp"},"content":"                    } else if (isNotNumber(idString)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":245,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // id field is not an integer","lastModifiedDate":"2023-08-26"},{"lineNumber":246,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new NotIntegerIdException(\"I cannot do that as that is not a valid Task ID \"","lastModifiedDate":"2023-08-26"},{"lineNumber":247,"author":{"gitId":"JasonLCY-Temp"},"content":"                                + \"(ID provided is not an integer)\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":248,"author":{"gitId":"JasonLCY-Temp"},"content":"                    } else if (Integer.parseInt(idString) \u003e Task.getTaskCount()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":249,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // id does not exist","lastModifiedDate":"2023-08-26"},{"lineNumber":250,"author":{"gitId":"JasonLCY-Temp"},"content":"                        throw new OutOfBoundIdException(\"I cannot do that as that is not a valid Task ID \"","lastModifiedDate":"2023-08-26"},{"lineNumber":251,"author":{"gitId":"JasonLCY-Temp"},"content":"                                + \"(ID provided does not exist)\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":252,"author":{"gitId":"JasonLCY-Temp"},"content":"                    } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":253,"author":{"gitId":"JasonLCY-Temp"},"content":"                        // Updates the task status","lastModifiedDate":"2023-08-26"},{"lineNumber":254,"author":{"gitId":"JasonLCY-Temp"},"content":"                        int id \u003d Integer.parseInt(idString);","lastModifiedDate":"2023-08-26"},{"lineNumber":255,"author":{"gitId":"JasonLCY-Temp"},"content":"                        if (taskList.get(id) \u003d\u003d null) {","lastModifiedDate":"2023-08-26"},{"lineNumber":256,"author":{"gitId":"JasonLCY-Temp"},"content":"                            // If the id to be marked belongs to a deleted task (null), throws the DeletedIdException","lastModifiedDate":"2023-08-26"},{"lineNumber":257,"author":{"gitId":"JasonLCY-Temp"},"content":"                            throw new DeletedIdException(\"I cannot do that as that is not a valid Task ID \"","lastModifiedDate":"2023-08-26"},{"lineNumber":258,"author":{"gitId":"JasonLCY-Temp"},"content":"                                    + \"(ID provided belongs to a deleted task)\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":259,"author":{"gitId":"JasonLCY-Temp"},"content":"                        }","lastModifiedDate":"2023-08-26"},{"lineNumber":260,"author":{"gitId":"JasonLCY-Temp"},"content":"                        System.out.println(\"Understood, I have deleted the following task:\");","lastModifiedDate":"2023-08-26"},{"lineNumber":261,"author":{"gitId":"JasonLCY-Temp"},"content":"                        System.out.println(\"    \" + taskList.get(id).toString() + \"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":262,"author":{"gitId":"JasonLCY-Temp"},"content":"                        taskList.set(id, null);","lastModifiedDate":"2023-08-26"},{"lineNumber":263,"author":{"gitId":"JasonLCY-Temp"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":264,"author":{"gitId":"JasonLCY-Temp"},"content":"                } catch (MissingIdException | NotIntegerIdException | OutOfBoundIdException | DeletedIdException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":265,"author":{"gitId":"JasonLCY-Temp"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-08-25"},{"lineNumber":266,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-08-25"},{"lineNumber":267,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else if (currentCommand.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":268,"author":{"gitId":"JasonLCY-Temp"},"content":"                // Displays the farewell message and terminates the application","lastModifiedDate":"2023-08-21"},{"lineNumber":269,"author":{"gitId":"JasonLCY-Temp"},"content":"                System.out.println(\"I bid you farewell, Master\");","lastModifiedDate":"2023-08-21"},{"lineNumber":270,"author":{"gitId":"JasonLCY-Temp"},"content":"                System.exit(0);","lastModifiedDate":"2023-08-21"},{"lineNumber":271,"author":{"gitId":"JasonLCY-Temp"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":272,"author":{"gitId":"JasonLCY-Temp"},"content":"                // By default, informs the user that the command is not recognized.","lastModifiedDate":"2023-08-25"},{"lineNumber":273,"author":{"gitId":"JasonLCY-Temp"},"content":"                System.out.println(\"Apologies Master, I am unable to understand that command.\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":274,"author":{"gitId":"JasonLCY-Temp"},"content":"                        + \"I will improve myself to better serve you in the future.\\n\");","lastModifiedDate":"2023-08-25"},{"lineNumber":275,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":276,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":277,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":278,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":279,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":280,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Checks if a string is only made up of integer numbers.","lastModifiedDate":"2023-08-25"},{"lineNumber":281,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Uses regex to determine if a string contains only integers","lastModifiedDate":"2023-08-25"},{"lineNumber":282,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":283,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @param input The string to be checked","lastModifiedDate":"2023-08-25"},{"lineNumber":284,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return Whether the string is fully comprised of integers","lastModifiedDate":"2023-08-25"},{"lineNumber":285,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":286,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static boolean isNotNumber(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":287,"author":{"gitId":"JasonLCY-Temp"},"content":"        return !input.matches(\"[0-9]+\");","lastModifiedDate":"2023-08-26"},{"lineNumber":288,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":289,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":290,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"JasonLCY-Temp":290}},{"path":"src/main/java/jeeves/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.task;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    protected String by;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Deadline(String desc, String by) {","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(desc);","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"        return String.format(this.id + \". [D]\" + super.toString() + \" (by: \" + by + \")\");","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":16}},{"path":"src/main/java/jeeves/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.task;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    protected String from;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"    protected String to;","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Event(String desc, String from, String to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(desc);","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"        return String.format(this.id + \". [E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\");","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":18}},{"path":"src/main/java/jeeves/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.task;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":" * Contains logic related to the Task object.","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    /** Tracks the number of task objects to guarantee the assigned ID will be unique */","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"    /** Unique identification number for the task */","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"    protected final int id;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"    /** The description of the task */","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"    protected final String desc;","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Default constructor for the Task object.","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Automatically assigns the instance\u0027s ID based on the global task count.","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @param desc Description of the task","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"        // Increments the taskCount and uses the value as the unique ID for the current task","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"        Task.taskCount +\u003d 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"        id \u003d Task.taskCount;","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Getter method for the global Task count.","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return Number of Tasks initialized","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"        return taskCount;","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Getter method for the Task description.","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return Description of the task","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String getDesc() {","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"        return desc;","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Setter method for the Task status","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @param isDone Status of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Obtain a string representation of a Task object","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return String representation of Task","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"        // Checks if a task has its status marked as complete","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"        // and displays the appropriate visual","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"            return String.format(\"[X] \" + this.getDesc());","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"            return String.format(\"[ ] \" + this.getDesc());","lastModifiedDate":"2023-08-25"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"JasonLCY-Temp":73}},{"path":"src/main/java/jeeves/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package jeeves.task;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(desc);","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"        return String.format(this.id + \". [T]\" + super.toString());","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"abcd","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"todo something","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"deadline return stuff /by Monday","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"event project meeting /from Tue 2pm /to 4pm","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"mark 3","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"unmark 3","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"mark ","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"mark xyz","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"mark 48","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"unmark ","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"unmark xyz","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"unmark 13","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"todo ","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"deadline something","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"deadline /by stuff","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"deadline /by ","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"event something","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"event something /from x","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"event /from something /to something","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"event something /from /to ","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"event something /from x /to ","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"delete ","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"delete xyz","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"delete 50","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"delete 1","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"delete 1","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"mark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"unmark 1","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"list","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"bye","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":35}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\jeeves\\task\\*.java","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\jeeves\\exception\\*.java","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\jeeves\\main\\*.java","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"java -classpath ..\\bin jeeves.main.Jeeves \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"REM pause so it\u0027s actually possible to read the results","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"pause","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"JasonLCY-Temp":7,"-":19}}]
