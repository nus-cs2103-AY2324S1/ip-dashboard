[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"butteredyakiimo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"checkstyle {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"    mainClass.set(\"duke.controllers.Launcher\")","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"butteredyakiimo":23}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"T | 1 | eat cookies","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"T | 1 | bake cookie","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"T | 1 | bake more cookies","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"D | 1 | cookies marathon | 2023-09-08 17:00","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"D | 0 | make cookies for friends | 2023-09-09 18:00","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"E | 1 | hahahha | 2023-09-09 18:00 | 2023-09-10 18:00","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"D | 0 | lecture | 2023-09-13 13:00","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"E | 0 | check | 2023-09-13 13:00 | 2023-09-19 13:00","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"E | 0 | check again | 2023-09-13 00:00 | 2023-09-13 01:00","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"D | 0 | hahahha | 2023-09-19 00:00","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"butteredyakiimo":10}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":" * Main class to run BUTTER.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"    private Parser parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"     * Class constructor for Duke.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"     * Initialises the ui, storage and tasks used in for the BUTTER chatbot program.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"     * @param filePath the path of the file containing results from previous interactions.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"        tasks \u003d new TaskList(storage.loadTasks(), storage, ui);","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"        parser \u003d new Parser(tasks, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns a pair of the form [message, isErrorMessage].","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"     * isErrorMessage is true if the response from the chatbot is an error message.","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"     * @param input user input.","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"     * @return the response to the user\u0027s command.","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"    public Pair\u003cString, Boolean\u003e getResponse(String input) {","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"            return new Pair\u003c\u003e(parser.parseInput(input), false);","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"            return new Pair\u003c\u003e(e.getMessage(), true);","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"            return new Pair\u003c\u003e(this.ui.showInvalidDateFormat(), true);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"butteredyakiimo":47,"-":3}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import duke.controllers.MainWindow;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"    private Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"     * Creates the primary stage for this application.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"     *              the application scene can be set.","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"     *              Applications may create other stages, if needed, but","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"     *              they will not be primary stages.","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"            stage.setTitle(\"BUTTER\");","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"butteredyakiimo":42}},{"path":"src/main/java/duke/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.components;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidDeadlineException;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidEventException;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidFindTaskException;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidListFlagException;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidStartEndException;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidTaskIdException;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.NoDescException;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.NoEndException;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.NoStartException;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.NoTaskIdException;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":" * Interprets user commands, and controls what the user can or cannot do. An object acts as a","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":" * parser to parse commands and carry them out.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"public class Parser {","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"     * Class constructor for Parser.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"     * @param tasks tasks in the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"     * @param ui    ui to be used.","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"    public Parser(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns true if the string can be parsed as an integer.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"     * @param s the string to be tested.","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"     * @return true if s can be parsed as an integer.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"    //credit: https://www.freecodecamp.org/news/java-string-to-int-how-to-convert-a-string-to-an-integer/","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"    private static boolean isNumber(String s) {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"        return s !\u003d null \u0026\u0026 s.matches(\"[0-9.]+\");","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"     * Converts a string of the format YYYY-MM-dd HH:mm to a LocalDateTime object.","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"     * @param str a datetime string.","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"     * @return the corresponding LocalDateTime object.","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws DateTimeParseException if str is not of the correct format.","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"    public static LocalDateTime convertToDateTime(String str) throws DateTimeParseException {","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(str, formatter);","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"        return dateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"butteredyakiimo"},"content":"     * Parses the input by user, and carries out valid commands.","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"butteredyakiimo"},"content":"     * @param input user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a String message describing the action taken.","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws DukeException          when there are invalid commands.","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws DateTimeParseException when a date inputted by user is of the incorrect format.","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"butteredyakiimo"},"content":"    public String parseInput(String input) throws DukeException, DateTimeParseException {","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"butteredyakiimo"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"butteredyakiimo"},"content":"        String command \u003d inputs[0];","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"butteredyakiimo"},"content":"        switch (command) {","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"butteredyakiimo"},"content":"        case \"list\":","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"butteredyakiimo"},"content":"            return parseList(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"butteredyakiimo"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"butteredyakiimo"},"content":"            return parseDelete(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"butteredyakiimo"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"butteredyakiimo"},"content":"            return parseMark(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"butteredyakiimo"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"butteredyakiimo"},"content":"            return parseUnMark(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"butteredyakiimo"},"content":"        case \"find\":","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"butteredyakiimo"},"content":"            return findTask(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"butteredyakiimo"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"butteredyakiimo"},"content":"            return parseToDo(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"butteredyakiimo"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"butteredyakiimo"},"content":"            return parseDeadline(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":93,"author":{"gitId":"butteredyakiimo"},"content":"        case \"event\":","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"butteredyakiimo"},"content":"            return parseEvent(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"butteredyakiimo"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"butteredyakiimo"},"content":"            return parseBye();","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"butteredyakiimo"},"content":"        default:","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns the list of tasks that are within a certain period.","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"butteredyakiimo"},"content":"     * User can specify \u0027today\u0027, \u0027week\u0027 or \u0027fort\u0027 after the \u0027soon\u0027 command.","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"butteredyakiimo"},"content":"     * \u0027today\u0027 will list the tasks within/due today,\u0027week\u0027 will list","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"butteredyakiimo"},"content":"     * the tasks within/due this week, while \u0027fort\u0027 will","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"butteredyakiimo"},"content":"     * list the tasks within/ due in 2 weeks.","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"butteredyakiimo"},"content":"     * @param input user input.","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidListFlagException if command is not of the correct format.","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"butteredyakiimo"},"content":"    public String parseList(String input) throws InvalidListFlagException {","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"butteredyakiimo"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"butteredyakiimo"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"butteredyakiimo"},"content":"            return tasks.listTasks();","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"butteredyakiimo"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidListFlagException();","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"butteredyakiimo"},"content":"        String when \u003d inputs[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"butteredyakiimo"},"content":"        String upcoming \u003d this.tasks.getUpcoming(when);","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"butteredyakiimo"},"content":"        return upcoming;","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"butteredyakiimo"},"content":"     * Handles the deleting of a specified task.","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"butteredyakiimo"},"content":"     * @param input user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws NoTaskIdException      if no taskID is provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidTaskIdException if a non-numerical id is provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"butteredyakiimo"},"content":"    public String parseDelete(String input) throws NoTaskIdException,","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"butteredyakiimo"},"content":"            InvalidTaskIdException {","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"butteredyakiimo"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"butteredyakiimo"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":136,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoTaskIdException();","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"butteredyakiimo"},"content":"        String strIndex \u003d inputArr[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":139,"author":{"gitId":"butteredyakiimo"},"content":"        if (!isNumber(strIndex)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidTaskIdException();","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":142,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"butteredyakiimo"},"content":"        int index \u003d Integer.parseInt(strIndex) - 1; // index starts from 1","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"butteredyakiimo"},"content":"        return tasks.deleteTask(index);","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"butteredyakiimo"},"content":"     * Handles the marking of a specified task.","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"butteredyakiimo"},"content":"     * @param input user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws NoTaskIdException      if no taskID is provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidTaskIdException If a non-numerical id is provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"butteredyakiimo"},"content":"    public String parseMark(String input) throws NoTaskIdException,","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"butteredyakiimo"},"content":"            InvalidTaskIdException {","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"butteredyakiimo"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"butteredyakiimo"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-04"},{"lineNumber":158,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoTaskIdException();","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"butteredyakiimo"},"content":"        String strIndex \u003d inputArr[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":161,"author":{"gitId":"butteredyakiimo"},"content":"        if (!isNumber(strIndex)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidTaskIdException();","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":164,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"butteredyakiimo"},"content":"        int index \u003d Integer.parseInt(strIndex) - 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"butteredyakiimo"},"content":"        return tasks.markTask(index);","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"butteredyakiimo"},"content":"     * Handles the unmarking of a specified task.","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"butteredyakiimo"},"content":"     * @param input user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws NoTaskIdException      if no taskID is provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidTaskIdException If a non-numerical id is provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"butteredyakiimo"},"content":"    public String parseUnMark(String input) throws NoTaskIdException,","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"butteredyakiimo"},"content":"            InvalidTaskIdException {","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"butteredyakiimo"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-08"},{"lineNumber":179,"author":{"gitId":"butteredyakiimo"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-08"},{"lineNumber":180,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoTaskIdException();","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"butteredyakiimo"},"content":"        String strIndex \u003d inputArr[1];","lastModifiedDate":"2023-09-08"},{"lineNumber":183,"author":{"gitId":"butteredyakiimo"},"content":"        if (!isNumber(strIndex)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidTaskIdException();","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"butteredyakiimo"},"content":"        int index \u003d Integer.parseInt(strIndex) - 1;","lastModifiedDate":"2023-09-08"},{"lineNumber":188,"author":{"gitId":"butteredyakiimo"},"content":"        return tasks.unMarkTask(index);","lastModifiedDate":"2023-09-09"},{"lineNumber":189,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":190,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":191,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"butteredyakiimo"},"content":"     * Creates a uncompleted ToDo with the details provided.","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"butteredyakiimo"},"content":"     * @param task task description.","lastModifiedDate":"2023-09-13"},{"lineNumber":195,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a ToDo.","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"butteredyakiimo"},"content":"    public String createToDo(String task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"butteredyakiimo"},"content":"        ToDo toDo \u003d new ToDo(Status.NOT_DONE, task);","lastModifiedDate":"2023-09-13"},{"lineNumber":199,"author":{"gitId":"butteredyakiimo"},"content":"        return tasks.addTask(toDo);","lastModifiedDate":"2023-09-13"},{"lineNumber":200,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":201,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":203,"author":{"gitId":"butteredyakiimo"},"content":"     * Creates an uncompleted deadline with the details provided.","lastModifiedDate":"2023-09-13"},{"lineNumber":204,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":205,"author":{"gitId":"butteredyakiimo"},"content":"     * @param task task description.","lastModifiedDate":"2023-09-13"},{"lineNumber":206,"author":{"gitId":"butteredyakiimo"},"content":"     * @param date deadline.","lastModifiedDate":"2023-09-13"},{"lineNumber":207,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a Deadline.","lastModifiedDate":"2023-09-13"},{"lineNumber":208,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws DateTimeParseException when the date provided is of the incorrect format.","lastModifiedDate":"2023-09-13"},{"lineNumber":209,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":210,"author":{"gitId":"butteredyakiimo"},"content":"    public String createDeadline(String task, String date) throws DateTimeParseException {","lastModifiedDate":"2023-09-13"},{"lineNumber":211,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime dateTime \u003d convertToDateTime(date);","lastModifiedDate":"2023-09-13"},{"lineNumber":212,"author":{"gitId":"butteredyakiimo"},"content":"        Deadline deadline \u003d new Deadline(Status.NOT_DONE, task, dateTime);","lastModifiedDate":"2023-09-13"},{"lineNumber":213,"author":{"gitId":"butteredyakiimo"},"content":"        return tasks.addTask(deadline);","lastModifiedDate":"2023-09-13"},{"lineNumber":214,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":215,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":216,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":217,"author":{"gitId":"butteredyakiimo"},"content":"     * Creates an uncompleted event with the details provided.","lastModifiedDate":"2023-09-13"},{"lineNumber":218,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":219,"author":{"gitId":"butteredyakiimo"},"content":"     * @param task  task description.","lastModifiedDate":"2023-09-13"},{"lineNumber":220,"author":{"gitId":"butteredyakiimo"},"content":"     * @param start start date.","lastModifiedDate":"2023-09-13"},{"lineNumber":221,"author":{"gitId":"butteredyakiimo"},"content":"     * @param end   end date.","lastModifiedDate":"2023-09-13"},{"lineNumber":222,"author":{"gitId":"butteredyakiimo"},"content":"     * @return an Event.","lastModifiedDate":"2023-09-13"},{"lineNumber":223,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws DateTimeParseException   when the dates provided are of the incorrect format.","lastModifiedDate":"2023-09-13"},{"lineNumber":224,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidStartEndException when start date greater than end date.","lastModifiedDate":"2023-09-13"},{"lineNumber":225,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":226,"author":{"gitId":"butteredyakiimo"},"content":"    public String createEvent(String task, String start, String end) throws DateTimeParseException,","lastModifiedDate":"2023-09-13"},{"lineNumber":227,"author":{"gitId":"butteredyakiimo"},"content":"            InvalidStartEndException {","lastModifiedDate":"2023-09-13"},{"lineNumber":228,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime startDateTime \u003d convertToDateTime(start);","lastModifiedDate":"2023-09-13"},{"lineNumber":229,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime endDateTime \u003d convertToDateTime(end);","lastModifiedDate":"2023-09-13"},{"lineNumber":230,"author":{"gitId":"butteredyakiimo"},"content":"        Event event \u003d new Event(Status.NOT_DONE, task, startDateTime, endDateTime);","lastModifiedDate":"2023-09-13"},{"lineNumber":231,"author":{"gitId":"butteredyakiimo"},"content":"        return tasks.addTask(event);","lastModifiedDate":"2023-09-13"},{"lineNumber":232,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":233,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":234,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":235,"author":{"gitId":"butteredyakiimo"},"content":"     * Handles the creation of a ToDo if format is correct.","lastModifiedDate":"2023-09-13"},{"lineNumber":236,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":237,"author":{"gitId":"butteredyakiimo"},"content":"     * @param input user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":238,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a ToDo if format is correct.","lastModifiedDate":"2023-09-13"},{"lineNumber":239,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws NoDescException if no description is provided.","lastModifiedDate":"2023-09-05"},{"lineNumber":240,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":241,"author":{"gitId":"butteredyakiimo"},"content":"    public String parseToDo(String input) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":242,"author":{"gitId":"butteredyakiimo"},"content":"        String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":243,"author":{"gitId":"butteredyakiimo"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":244,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoDescException();","lastModifiedDate":"2023-09-04"},{"lineNumber":245,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":246,"author":{"gitId":"butteredyakiimo"},"content":"        String task \u003d inputs[1].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":247,"author":{"gitId":"butteredyakiimo"},"content":"        if (task.isBlank()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":248,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoDescException();","lastModifiedDate":"2023-09-04"},{"lineNumber":249,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":250,"author":{"gitId":"butteredyakiimo"},"content":"        return createToDo(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":251,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":252,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":253,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":254,"author":{"gitId":"butteredyakiimo"},"content":"     * Handles the creation of a Deadline if format is correct.","lastModifiedDate":"2023-09-13"},{"lineNumber":255,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":256,"author":{"gitId":"butteredyakiimo"},"content":"     * @param input user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":257,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a Deadline if format is correct.","lastModifiedDate":"2023-09-13"},{"lineNumber":258,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws NoDescException          when no description is provided.","lastModifiedDate":"2023-09-13"},{"lineNumber":259,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws DateTimeParseException   when date is of the incorrect format.","lastModifiedDate":"2023-09-13"},{"lineNumber":260,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidDeadlineException when deadline is of the incorrect format.","lastModifiedDate":"2023-09-13"},{"lineNumber":261,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":262,"author":{"gitId":"butteredyakiimo"},"content":"    public String parseDeadline(String input) throws NoDescException,","lastModifiedDate":"2023-09-13"},{"lineNumber":263,"author":{"gitId":"butteredyakiimo"},"content":"            DateTimeParseException, InvalidDeadlineException {","lastModifiedDate":"2023-09-13"},{"lineNumber":264,"author":{"gitId":"butteredyakiimo"},"content":"        String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":265,"author":{"gitId":"butteredyakiimo"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":266,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoDescException();","lastModifiedDate":"2023-09-04"},{"lineNumber":267,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":268,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":269,"author":{"gitId":"butteredyakiimo"},"content":"        String afterCommand \u003d inputs[1];","lastModifiedDate":"2023-09-05"},{"lineNumber":270,"author":{"gitId":"butteredyakiimo"},"content":"        String[] details \u003d afterCommand.split(\" /by \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":271,"author":{"gitId":"butteredyakiimo"},"content":"        if (details.length \u003c 2) {","lastModifiedDate":"2023-09-05"},{"lineNumber":272,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2023-09-04"},{"lineNumber":273,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":274,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":275,"author":{"gitId":"butteredyakiimo"},"content":"        String task \u003d details[0].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":276,"author":{"gitId":"butteredyakiimo"},"content":"        String date \u003d details[1];","lastModifiedDate":"2023-09-05"},{"lineNumber":277,"author":{"gitId":"butteredyakiimo"},"content":"        if (task.isBlank()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":278,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoDescException();","lastModifiedDate":"2023-09-04"},{"lineNumber":279,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":280,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":281,"author":{"gitId":"butteredyakiimo"},"content":"        return createDeadline(task, date);","lastModifiedDate":"2023-09-13"},{"lineNumber":282,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":283,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":284,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":285,"author":{"gitId":"butteredyakiimo"},"content":"     * Handles the creation of an event if format is correct.","lastModifiedDate":"2023-09-13"},{"lineNumber":286,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":287,"author":{"gitId":"butteredyakiimo"},"content":"     * @param input user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":288,"author":{"gitId":"butteredyakiimo"},"content":"     * @return an Event if format is correct.","lastModifiedDate":"2023-09-13"},{"lineNumber":289,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws NoDescException          when no description is provided.","lastModifiedDate":"2023-09-13"},{"lineNumber":290,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidEventException    when event is of the incorrect format.","lastModifiedDate":"2023-09-13"},{"lineNumber":291,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws NoStartException         when no start is provided.","lastModifiedDate":"2023-09-13"},{"lineNumber":292,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws NoEndException           when no end is provided.","lastModifiedDate":"2023-09-13"},{"lineNumber":293,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws DateTimeParseException   when date is of the incorrect format.","lastModifiedDate":"2023-09-13"},{"lineNumber":294,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidStartEndException when start greater than end date.","lastModifiedDate":"2023-09-13"},{"lineNumber":295,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":296,"author":{"gitId":"butteredyakiimo"},"content":"    public String parseEvent(String input) throws NoDescException,","lastModifiedDate":"2023-09-13"},{"lineNumber":297,"author":{"gitId":"butteredyakiimo"},"content":"            InvalidEventException, NoStartException, NoEndException,","lastModifiedDate":"2023-09-13"},{"lineNumber":298,"author":{"gitId":"butteredyakiimo"},"content":"            DateTimeParseException, InvalidStartEndException {","lastModifiedDate":"2023-09-13"},{"lineNumber":299,"author":{"gitId":"butteredyakiimo"},"content":"        String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":300,"author":{"gitId":"butteredyakiimo"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":301,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoDescException();","lastModifiedDate":"2023-09-04"},{"lineNumber":302,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":303,"author":{"gitId":"butteredyakiimo"},"content":"        if (inputs[1].isBlank()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":304,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoDescException();","lastModifiedDate":"2023-09-04"},{"lineNumber":305,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":306,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":307,"author":{"gitId":"butteredyakiimo"},"content":"        String afterCommand \u003d inputs[1];","lastModifiedDate":"2023-09-05"},{"lineNumber":308,"author":{"gitId":"butteredyakiimo"},"content":"        String[] details \u003d afterCommand.split(\"/from\", 2);","lastModifiedDate":"2023-09-05"},{"lineNumber":309,"author":{"gitId":"butteredyakiimo"},"content":"        if (details[0].isBlank()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":310,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoDescException();","lastModifiedDate":"2023-09-04"},{"lineNumber":311,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":312,"author":{"gitId":"butteredyakiimo"},"content":"        if (details.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-08"},{"lineNumber":313,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidEventException(); //can either be no desc or no start","lastModifiedDate":"2023-09-08"},{"lineNumber":314,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":315,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":316,"author":{"gitId":"butteredyakiimo"},"content":"        String task \u003d details[0].trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":317,"author":{"gitId":"butteredyakiimo"},"content":"        String[] dateDetails \u003d details[1].split(\"/to\");","lastModifiedDate":"2023-09-08"},{"lineNumber":318,"author":{"gitId":"butteredyakiimo"},"content":"        String start \u003d dateDetails[0].trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":319,"author":{"gitId":"butteredyakiimo"},"content":"        if (start.isBlank()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":320,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoStartException();","lastModifiedDate":"2023-09-04"},{"lineNumber":321,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":322,"author":{"gitId":"butteredyakiimo"},"content":"        if (dateDetails.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-08"},{"lineNumber":323,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoEndException();","lastModifiedDate":"2023-09-04"},{"lineNumber":324,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":325,"author":{"gitId":"butteredyakiimo"},"content":"        String end \u003d dateDetails[1].trim();","lastModifiedDate":"2023-09-08"},{"lineNumber":326,"author":{"gitId":"butteredyakiimo"},"content":"        if (end.isBlank()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":327,"author":{"gitId":"butteredyakiimo"},"content":"            throw new NoEndException();","lastModifiedDate":"2023-09-04"},{"lineNumber":328,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":329,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":330,"author":{"gitId":"butteredyakiimo"},"content":"        return createEvent(task, start, end);","lastModifiedDate":"2023-09-13"},{"lineNumber":331,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":332,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":333,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":334,"author":{"gitId":"butteredyakiimo"},"content":"     * Handles the finding of tasks that match the specified keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":335,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":336,"author":{"gitId":"butteredyakiimo"},"content":"     * @param input user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":337,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidFindTaskException if 0 or more than 1 keyword is specified.","lastModifiedDate":"2023-09-05"},{"lineNumber":338,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":339,"author":{"gitId":"butteredyakiimo"},"content":"    public String findTask(String input) throws InvalidFindTaskException {","lastModifiedDate":"2023-09-09"},{"lineNumber":340,"author":{"gitId":"butteredyakiimo"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-09-05"},{"lineNumber":341,"author":{"gitId":"butteredyakiimo"},"content":"        if (inputs.length !\u003d 2) {","lastModifiedDate":"2023-09-05"},{"lineNumber":342,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidFindTaskException();","lastModifiedDate":"2023-09-05"},{"lineNumber":343,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":344,"author":{"gitId":"butteredyakiimo"},"content":"        String keyword \u003d inputs[1];","lastModifiedDate":"2023-09-05"},{"lineNumber":345,"author":{"gitId":"butteredyakiimo"},"content":"        String matches \u003d tasks.findMatches(keyword);","lastModifiedDate":"2023-09-13"},{"lineNumber":346,"author":{"gitId":"butteredyakiimo"},"content":"        return matches;","lastModifiedDate":"2023-09-13"},{"lineNumber":347,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":348,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":349,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":350,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns a goodbye to the user.","lastModifiedDate":"2023-09-13"},{"lineNumber":351,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":352,"author":{"gitId":"butteredyakiimo"},"content":"    public String parseBye() {","lastModifiedDate":"2023-09-13"},{"lineNumber":353,"author":{"gitId":"butteredyakiimo"},"content":"        return ui.bye();","lastModifiedDate":"2023-09-13"},{"lineNumber":354,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":355,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"butteredyakiimo":355}},{"path":"src/main/java/duke/components/Status.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.components;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * Enum is used to show the status of a Task. A task can either be done, or not done.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"public enum Status {","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"    DONE {","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"        @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"        public String toString() {","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"            return \"1\";","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"    },","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"    NOT_DONE {","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"        @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"        public String toString() {","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"            return \"0\";","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"    };","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"     * Converts the status value stored in the data file to its enum equivalent.","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"     * @param status the Status to convert.","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"     * @return the enum equivalent of the Status.","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"    public static Status convertToStatus(int status) {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"        if (status \u003d\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"            return Status.NOT_DONE;","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"            return Status.DONE;","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"butteredyakiimo":33}},{"path":"src/main/java/duke/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.components;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"import java.io.File;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.DataCorruptedException;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidStartEndException;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":" * Handles interactions between task list and hard drive.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"public class Storage {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"    private String path;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"     * @param path path of file where data is stored.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"     * Creates a file with the path .data/duke.txt (hardcoded value).","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a File object to store tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"    public File createDataFile() {","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"        File dataFile \u003d new File(this.path);","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"            Path dirPath \u003d Paths.get(\"./data/\");","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"            if (!Files.exists(dirPath)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"                Files.createDirectory(dirPath);","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"            System.out.println(\"Unable to create file!!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"        assert dataFile.exists() : \"Data file does not exist\";","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"        return dataFile;","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"     * Converts the task text in the data file to a Task.","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"     * @param taskDetails details of the task.","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"     * @return the Task equivalent.","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws DataCorruptedException   when text is not of the task format.","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidStartEndException when start greater than end time in event.","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"butteredyakiimo"},"content":"    public Task convertToTask(String[] taskDetails) throws DataCorruptedException,","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"butteredyakiimo"},"content":"            InvalidStartEndException {","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"butteredyakiimo"},"content":"        String type \u003d taskDetails[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"butteredyakiimo"},"content":"        int intStatus \u003d Integer.parseInt(taskDetails[1]);","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"butteredyakiimo"},"content":"        Status status \u003d Status.convertToStatus(intStatus);","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"butteredyakiimo"},"content":"        String desc \u003d taskDetails[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"butteredyakiimo"},"content":"        switch (type) {","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"butteredyakiimo"},"content":"        case \"T\":","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"butteredyakiimo"},"content":"            return new ToDo(status, desc);","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"butteredyakiimo"},"content":"        case \"D\":","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"butteredyakiimo"},"content":"            LocalDateTime date \u003d Parser.convertToDateTime(taskDetails[3]);","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"butteredyakiimo"},"content":"            return new Deadline(status, desc, date);","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"butteredyakiimo"},"content":"        case \"E\":","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"butteredyakiimo"},"content":"            LocalDateTime start \u003d Parser.convertToDateTime(taskDetails[3]);","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"butteredyakiimo"},"content":"            LocalDateTime end \u003d Parser.convertToDateTime(taskDetails[4]);","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"butteredyakiimo"},"content":"            return new Event(status, desc, start, end);","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"butteredyakiimo"},"content":"        default:","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"butteredyakiimo"},"content":"            throw new DataCorruptedException();","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"butteredyakiimo"},"content":"     * Retrieves the tasks stored in the data file, and returns them in an arraylist.","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"butteredyakiimo"},"content":"     * @return an ArrayList of Task objects.","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"butteredyakiimo"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"butteredyakiimo"},"content":"        File dataFile \u003d new File(this.path);","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"butteredyakiimo"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"butteredyakiimo"},"content":"            dataFile \u003d createDataFile();","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"butteredyakiimo"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"butteredyakiimo"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"butteredyakiimo"},"content":"            Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"butteredyakiimo"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"butteredyakiimo"},"content":"                String task \u003d sc.nextLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"butteredyakiimo"},"content":"                String[] taskDetails \u003d task.split(\" \" + \"\\\\|\" + \" \");","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"butteredyakiimo"},"content":"                Task toAdd \u003d convertToTask(taskDetails);","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"butteredyakiimo"},"content":"                list.add(toAdd);","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"butteredyakiimo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"butteredyakiimo"},"content":"            sc.close();","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"butteredyakiimo"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"butteredyakiimo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"butteredyakiimo"},"content":"        return list;","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"butteredyakiimo"},"content":"     * Writes the tasks in the given list to the data file.","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"butteredyakiimo"},"content":"     * This overwrites the existing data in the file.","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"butteredyakiimo"},"content":"     * @param list list of Task objects.","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"butteredyakiimo"},"content":"    public void updateFile(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"butteredyakiimo"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"butteredyakiimo"},"content":"            //check if file exists, else create","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"butteredyakiimo"},"content":"            File dataFile \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"butteredyakiimo"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"butteredyakiimo"},"content":"                dataFile \u003d createDataFile();","lastModifiedDate":"2023-09-04"},{"lineNumber":131,"author":{"gitId":"butteredyakiimo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":133,"author":{"gitId":"butteredyakiimo"},"content":"            //create a FileWriter object to write to file. Note that this overwrites the existing data!","lastModifiedDate":"2023-09-04"},{"lineNumber":134,"author":{"gitId":"butteredyakiimo"},"content":"            FileWriter file \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"butteredyakiimo"},"content":"            BufferedWriter writer \u003d new BufferedWriter(file);","lastModifiedDate":"2023-09-04"},{"lineNumber":136,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"butteredyakiimo"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":138,"author":{"gitId":"butteredyakiimo"},"content":"                Task task \u003d list.get(i);","lastModifiedDate":"2023-09-04"},{"lineNumber":139,"author":{"gitId":"butteredyakiimo"},"content":"                String taskStr \u003d task.convertTask();","lastModifiedDate":"2023-09-04"},{"lineNumber":140,"author":{"gitId":"butteredyakiimo"},"content":"                writer.write(taskStr);","lastModifiedDate":"2023-09-04"},{"lineNumber":141,"author":{"gitId":"butteredyakiimo"},"content":"                writer.newLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":142,"author":{"gitId":"butteredyakiimo"},"content":"                writer.flush();","lastModifiedDate":"2023-09-04"},{"lineNumber":143,"author":{"gitId":"butteredyakiimo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":144,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"butteredyakiimo"},"content":"            writer.close();","lastModifiedDate":"2023-09-04"},{"lineNumber":146,"author":{"gitId":"butteredyakiimo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":147,"author":{"gitId":"butteredyakiimo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":148,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":149,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":150,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":151,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"butteredyakiimo":151}},{"path":"src/main/java/duke/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.components;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidListFlagException;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidTaskIdException;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":" * Contains the task list, and methods to modify the tasks in the list","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"public class TaskList {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"     * Class constructor for TaskList.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"     * @param list    list to be initialised.","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"     * @param storage storage to be used.","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"     * @param ui      ui to be used.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"    public TaskList(ArrayList\u003cTask\u003e list, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns true if the input taskID is in the range [0, list.size() -1].","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"     * @param taskId id to be checked.","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"     * @return true if the taskID is valid.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"    public boolean isValidTaskId(int taskId) {","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"        if (taskId \u003e this.list.size() - 1 || taskId \u003c 0) {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"            return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"        return true;","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"     * Appends all the current tasks into a string, and passes it to ui object for printing.","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"     * @return the tasks the user currently has.","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"    public String listTasks() {","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"        if (this.list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"            return ui.showNumberOfTasks(0);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"            String result \u003d \"\";","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"            for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"                Task task \u003d this.list.get(i);","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"                result +\u003d index + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"            return ui.showTasks(result);","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"butteredyakiimo"},"content":"     * Appends all tasks in the given list into a single string.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"butteredyakiimo"},"content":"     * @param tasks list of Tasks to be printed.","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a String of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"butteredyakiimo"},"content":"    public String listTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"butteredyakiimo"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"butteredyakiimo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"butteredyakiimo"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"butteredyakiimo"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"butteredyakiimo"},"content":"            result +\u003d index + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"butteredyakiimo"},"content":"        return result;","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"butteredyakiimo"},"content":"     * Adds a task to the list, and updates storage.","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"butteredyakiimo"},"content":"     * @param task id of task to be added.","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"butteredyakiimo"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"butteredyakiimo"},"content":"        this.list.add(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"butteredyakiimo"},"content":"        this.storage.updateFile(this.list);","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"butteredyakiimo"},"content":"        return ui.showTaskAdded(task, this.list.size());","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"butteredyakiimo"},"content":"     * Deletes a task from the list if the input taskID is valid.","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"butteredyakiimo"},"content":"     * Updates storage.","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"butteredyakiimo"},"content":"     * @param taskId if of task to delete.","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidTaskIdException if taskId is invalid.","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"butteredyakiimo"},"content":"    public String deleteTask(int taskId) throws InvalidTaskIdException {","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"butteredyakiimo"},"content":"        if (!isValidTaskId(taskId)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidTaskIdException();","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"butteredyakiimo"},"content":"        Task toRemove \u003d this.list.get(taskId);","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"butteredyakiimo"},"content":"        this.list.remove(taskId);","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"butteredyakiimo"},"content":"        this.storage.updateFile(this.list);","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"butteredyakiimo"},"content":"        return ui.showDeleteTask(toRemove, this.list.size());","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"butteredyakiimo"},"content":"     * Marks a task as completed, and updates storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"butteredyakiimo"},"content":"     * @param taskId id of task to be marked.","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a success or failure message.","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidTaskIdException if taskId is invalid.","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"butteredyakiimo"},"content":"    public String markTask(int taskId) throws InvalidTaskIdException {","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"butteredyakiimo"},"content":"        if (!isValidTaskId(taskId)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidTaskIdException();","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"butteredyakiimo"},"content":"        Task task \u003d this.list.get(taskId);","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"butteredyakiimo"},"content":"        if (task.canMark()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"butteredyakiimo"},"content":"            this.storage.updateFile(this.list);","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"butteredyakiimo"},"content":"            return ui.showMarkTask(false, task);","lastModifiedDate":"2023-09-09"},{"lineNumber":126,"author":{"gitId":"butteredyakiimo"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"butteredyakiimo"},"content":"            return ui.showMarkTask(true, task);","lastModifiedDate":"2023-09-09"},{"lineNumber":128,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":131,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"butteredyakiimo"},"content":"     * Marks a task as uncompleted, and updates storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"butteredyakiimo"},"content":"     * @param taskId id of task to be unmarked.","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a success or failure message.","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidTaskIdException if taskId is invalid.","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"butteredyakiimo"},"content":"    public String unMarkTask(int taskId) throws InvalidTaskIdException {","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"butteredyakiimo"},"content":"        if (!isValidTaskId(taskId)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidTaskIdException();","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"butteredyakiimo"},"content":"        Task task \u003d this.list.get(taskId);","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"butteredyakiimo"},"content":"        if (task.canUnMark()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"butteredyakiimo"},"content":"            this.storage.updateFile(this.list);","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"butteredyakiimo"},"content":"            return ui.showUnMarkTask(true, task);","lastModifiedDate":"2023-09-09"},{"lineNumber":147,"author":{"gitId":"butteredyakiimo"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"butteredyakiimo"},"content":"            return ui.showUnMarkTask(false, task);","lastModifiedDate":"2023-09-09"},{"lineNumber":149,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":151,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":152,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns a list of tasks that contains the keyword.","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"butteredyakiimo"},"content":"     * @param keyword specified keyword to be searched for.","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"butteredyakiimo"},"content":"     * @return list of tasks that contain keyword.","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"butteredyakiimo"},"content":"    public String findMatches(String keyword) {","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"butteredyakiimo"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"butteredyakiimo"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"butteredyakiimo"},"content":"            String desc \u003d task.getTask();","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"butteredyakiimo"},"content":"            assert !desc.isEmpty() : \"Description cannot be empty\";","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"butteredyakiimo"},"content":"            if (desc.contains(keyword)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"butteredyakiimo"},"content":"                matches.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"butteredyakiimo"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"butteredyakiimo"},"content":"        return ui.showMatches(listTasks(matches));","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":169,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns the tasks that are either due/ within the specified period.","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"butteredyakiimo"},"content":"     * Today refers to the start of today, at 00:00.","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"butteredyakiimo"},"content":"     * @param when specified period.","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"butteredyakiimo"},"content":"     * @return tasks that are due/ within the specified period.","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidListFlagException when list flag is of the incorrect format.","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"butteredyakiimo"},"content":"    public String getUpcoming(String when) throws InvalidListFlagException {","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime start \u003d today.atStartOfDay();","lastModifiedDate":"2023-09-13"},{"lineNumber":181,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime endOfPeriod;","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"butteredyakiimo"},"content":"        switch (when) {","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"butteredyakiimo"},"content":"        case \"today\":","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"butteredyakiimo"},"content":"            endOfPeriod \u003d start.plusDays(1);","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"butteredyakiimo"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":188,"author":{"gitId":"butteredyakiimo"},"content":"        case \"week\":","lastModifiedDate":"2023-09-13"},{"lineNumber":189,"author":{"gitId":"butteredyakiimo"},"content":"            endOfPeriod \u003d start.plusWeeks(1);","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"butteredyakiimo"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":191,"author":{"gitId":"butteredyakiimo"},"content":"        case \"fort\":","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"butteredyakiimo"},"content":"            endOfPeriod \u003d start.plusWeeks(2);","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"butteredyakiimo"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"butteredyakiimo"},"content":"        default:","lastModifiedDate":"2023-09-13"},{"lineNumber":195,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidListFlagException();","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"butteredyakiimo"},"content":"        ArrayList\u003cTask\u003e upcoming \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":199,"author":{"gitId":"butteredyakiimo"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2023-09-13"},{"lineNumber":200,"author":{"gitId":"butteredyakiimo"},"content":"            if (task.isWithin(start, endOfPeriod)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":201,"author":{"gitId":"butteredyakiimo"},"content":"                upcoming.add(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"butteredyakiimo"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":203,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":204,"author":{"gitId":"butteredyakiimo"},"content":"        return ui.showUpcoming(listTasks(upcoming));","lastModifiedDate":"2023-09-13"},{"lineNumber":205,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":206,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"butteredyakiimo":206}},{"path":"src/main/java/duke/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.components;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":" * Handles interactions with the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"public class Ui {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"     * Prints goodbye words to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a string of goodbyes.","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"    public String bye() {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"        String bye \u003d \"໒(⊙ᴗ⊙)७ Signing off, see you later!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"        return bye;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"     * Prints the number of tasks the user has in their list.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"     * @param size the size of the list.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"    public String showNumberOfTasks(int size) {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"        return size \u003d\u003d 0","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"                ? \"(o´ω`o)ﾉ You have no upcoming tasks!\"","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"                : size \u003d\u003d 1","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"                ? \"Now you have \" + size + \" task in the list!\"","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"                : \"Now you have \" + size + \" tasks in the list!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"     * Prints when list is the command, and there is at least one task in the list.","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"     * @param tasks tasks to be printed.","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a list of tasks in the user\u0027s list.","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"    public String showTasks(String tasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"        String header \u003d \"(⇀‸↼‶)⊃━☆ﾟ.*･｡ﾟHere are your tasks for the day:\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"        return header + tasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"     * Prints when the user adds a tasks successfully.","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"     * @param task     task that was added.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"     * @param listSize the new list size.","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"     * @return an update that task was added successfully.","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"    public String showTaskAdded(Task task, int listSize) {","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"        String header \u003d \"(｀･ω･´)ﾉ New task added:\\n\" + task + \"\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"        String numberOfTasksLeft \u003d this.showNumberOfTasks(listSize);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"        return header + numberOfTasksLeft;","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"     * Prints when the user deletes a task successfully.","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"     * @param removed  task that was removed","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"     * @param listSize the new list size.","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"     * @return an update that task was deleted successfully.","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"    public String showDeleteTask(Task removed, int listSize) {","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"butteredyakiimo"},"content":"        String header \u003d \"ଘ(੭ˊᵕˋ)੭ Ok! I\u0027ve removed this task:\\n\" + removed + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"butteredyakiimo"},"content":"        String numberOfTasksLeft \u003d this.showNumberOfTasks(listSize);","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"butteredyakiimo"},"content":"        return header + numberOfTasksLeft;","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"butteredyakiimo"},"content":"     * Prints when the user attempts to mark a task as completed.","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"butteredyakiimo"},"content":"     * If task is not marked, success message is printed out. Else,","lastModifiedDate":"2023-09-09"},{"lineNumber":73,"author":{"gitId":"butteredyakiimo"},"content":"     * unsuccessful message printed.","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"butteredyakiimo"},"content":"     * @param isMarked true if the task was already marked.","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"butteredyakiimo"},"content":"     * @param task     task to be marked.","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"butteredyakiimo"},"content":"     * @return either a success or failure message.","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"butteredyakiimo"},"content":"    public String showMarkTask(boolean isMarked, Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"butteredyakiimo"},"content":"        if (!isMarked) {","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"butteredyakiimo"},"content":"            return \"ଘ(੭ˊᵕˋ)੭ Yay! This task is completed:\\n\" + task.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"butteredyakiimo"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"butteredyakiimo"},"content":"            return \"┐(´～｀)┌ This task is already marked as completed!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"butteredyakiimo"},"content":"     * Prints when the user attempts to unmark a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"butteredyakiimo"},"content":"     * If task is marked, success message is printed out. Else,","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"butteredyakiimo"},"content":"     * an unsuccessful message is printed.","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"butteredyakiimo"},"content":"     * @param isMarked true if the task was already marked.","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"butteredyakiimo"},"content":"     * @param task     task to be unmarked.","lastModifiedDate":"2023-09-09"},{"lineNumber":94,"author":{"gitId":"butteredyakiimo"},"content":"     * @return either a success or failure message.","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"butteredyakiimo"},"content":"    public String showUnMarkTask(boolean isMarked, Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"butteredyakiimo"},"content":"        if (isMarked) {","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"butteredyakiimo"},"content":"            return \"໒( ̿･ ᴥ ̿･ )ʋ All righty, I\u0027ve marked this task as uncompleted:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"butteredyakiimo"},"content":"                    + task.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"butteredyakiimo"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":101,"author":{"gitId":"butteredyakiimo"},"content":"            return \"┐(´～｀)┌ This task is already marked as uncompleted!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":104,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":105,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":106,"author":{"gitId":"butteredyakiimo"},"content":"     * Prints a custom error message for invalid datetime formats.","lastModifiedDate":"2023-09-09"},{"lineNumber":107,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"butteredyakiimo"},"content":"    public String showInvalidDateFormat() {","lastModifiedDate":"2023-09-09"},{"lineNumber":109,"author":{"gitId":"butteredyakiimo"},"content":"        return \"(・´з`・) Uh oh...dates must be of YYYY-MM-DD HH:mm format\";","lastModifiedDate":"2023-09-09"},{"lineNumber":110,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":111,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":112,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"butteredyakiimo"},"content":"     * Prints the given list of tasks, which contain tasks matching the","lastModifiedDate":"2023-09-09"},{"lineNumber":114,"author":{"gitId":"butteredyakiimo"},"content":"     * keyword specified by user.","lastModifiedDate":"2023-09-09"},{"lineNumber":115,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":116,"author":{"gitId":"butteredyakiimo"},"content":"     * @param tasks String format of tasks that match keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"butteredyakiimo"},"content":"    public String showMatches(String tasks) {","lastModifiedDate":"2023-09-09"},{"lineNumber":119,"author":{"gitId":"butteredyakiimo"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2023-09-09"},{"lineNumber":120,"author":{"gitId":"butteredyakiimo"},"content":"            String header \u003d \"(⇀‸↼‶)⊃━☆ﾟ.*･｡ﾟ Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":121,"author":{"gitId":"butteredyakiimo"},"content":"            return header + tasks;","lastModifiedDate":"2023-09-09"},{"lineNumber":122,"author":{"gitId":"butteredyakiimo"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":123,"author":{"gitId":"butteredyakiimo"},"content":"            return \"(・´з`・) Uh oh...there are no matching tasks!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":125,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":126,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"butteredyakiimo"},"content":"     * Prints upcoming tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"butteredyakiimo"},"content":"     * @param tasks input upcoming tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"butteredyakiimo"},"content":"    public String showUpcoming(String tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"butteredyakiimo"},"content":"        if (tasks.isBlank()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"butteredyakiimo"},"content":"            return \"ヾ(´〇`)ﾉ♪♪♪ You have no upcoming tasks!\";","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"butteredyakiimo"},"content":"        String header \u003d \"(*・ω・)ﾉ Here are some upcoming tasks!\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"butteredyakiimo"},"content":"        return header + tasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"butteredyakiimo":139}},{"path":"src/main/java/duke/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.controllers;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"        return db;","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"    public static DialogBox getButterDialog(Pair\u003cString, Boolean\u003e response, Image img) {","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"        String text \u003d response.getKey();","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"        boolean isErrorMessage \u003d response.getValue();","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"        if (isErrorMessage) {","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"            //sets background color to red","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"            db.dialog.setStyle(\"-fx-background-color: #E8CBD0; -fx-background-radius: 12\");","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"butteredyakiimo"},"content":"        } else {","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"butteredyakiimo"},"content":"            //sets background color to green","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"butteredyakiimo"},"content":"            db.dialog.setStyle(\"-fx-background-color: #D9DDBB; -fx-background-radius: 12\");","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"butteredyakiimo"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"butteredyakiimo"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"butteredyakiimo":72}},{"path":"src/main/java/duke/controllers/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.controllers;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import duke.Main;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"butteredyakiimo":13}},{"path":"src/main/java/duke/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.controllers;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"            \"/images/bread.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"            \"/images/butter.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"        Pair\u003cString, Boolean\u003e response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"        String text \u003d response.getKey();","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"        if (text.equals(\"໒(⊙ᴗ⊙)७ Signing off, see you later!\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1.5));","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"            delay.play();","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"                DialogBox.getButterDialog(response, dukeImage)","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"butteredyakiimo":66}},{"path":"src/main/java/duke/exceptions/DataCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * Exception is thrown when the data file contains text not of the Task format.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"public class DataCorruptedException extends DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"    public DataCorruptedException() {","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"(・´з`・) Uh oh... data is corrupted. Please delete the file and retry.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"butteredyakiimo":10}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * This is the parent exception of all exceptions created in this duke program.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"    public DukeException() {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"(・´з`・) Uh oh...smt went wrong\");","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"        super(message);","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"butteredyakiimo":14}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * This exception is thrown when the user input does not match valid command.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"Sorry, I don\u0027t understand what you mean \u003e\u003c\");","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"butteredyakiimo":10}},{"path":"src/main/java/duke/exceptions/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * This exception is thrown when the deadline command is of the incorrect format.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"public class InvalidDeadlineException extends DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"(・´з`・) Uh oh... make sure your deadline has a description and date\");","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"butteredyakiimo":10}},{"path":"src/main/java/duke/exceptions/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * This exception is thrown when the event command is of the incorrect format.","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"public class InvalidEventException extends DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"    public InvalidEventException() {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"(・´з`・) Uh oh... improper event format!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"butteredyakiimo":11}},{"path":"src/main/java/duke/exceptions/InvalidFindTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * This exception is thrown when no/more than one keyword is provided","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" * when user enters the find command.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"public class InvalidFindTaskException extends DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"    public InvalidFindTaskException() {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"(・´з`・) Uh oh...please provide exactly one keyword\");","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"butteredyakiimo":11}},{"path":"src/main/java/duke/exceptions/InvalidListFlagException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * Exception is thrown when the list command is of the incorrect format.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"public class InvalidListFlagException extends DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"    public InvalidListFlagException() {","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"(・´з`・) Uh oh... please ensure format is \u0027list today/week/fort\u0027\");","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"butteredyakiimo":11}},{"path":"src/main/java/duke/exceptions/InvalidStartEndException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * This exception is thrown when start datetime is after end datetime when creating","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" * an Event.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"public class InvalidStartEndException extends DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"    public InvalidStartEndException() {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"(・´з`・) Uh oh... start must be after end!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"butteredyakiimo":11}},{"path":"src/main/java/duke/exceptions/InvalidTaskIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * This exception is thrown when the task id provided is out of range","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" * when attempting actions such as delete, mark and unmark.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"public class InvalidTaskIdException extends DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"    public InvalidTaskIdException() {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"(・´з`・) Uh oh... invalid taskID\");","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"butteredyakiimo":12}},{"path":"src/main/java/duke/exceptions/NoDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * This exception is thrown when no description is provided when attempting to","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" * create any Task object.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"public class NoDescException extends DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"    public NoDescException() {","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"(・´з`・) Uh oh... please add a description\");","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"butteredyakiimo":11}},{"path":"src/main/java/duke/exceptions/NoEndException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * This exception is thrown when no end datetime is provided when attempting","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" * to create an Event.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"public class NoEndException extends DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"    public NoEndException() {","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"(・´з`・) Uh oh... please add an end date\");","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"butteredyakiimo":11}},{"path":"src/main/java/duke/exceptions/NoStartException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * This exception is thrown when no start datetime is provided when attempting","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" * to create an Event.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"public class NoStartException extends DukeException {","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"    public NoStartException() {","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"(・´з`・) Uh oh... please add a start date\");","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"butteredyakiimo":11}},{"path":"src/main/java/duke/exceptions/NoTaskIdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":" * This exception is thrown when no task id is provided when attempting actions","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":" * such as delete, mark and unmark.","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"public class NoTaskIdException extends DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"    public NoTaskIdException() {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"        super(\"(・´з`・) Uh oh... please provide a taskID\");","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"butteredyakiimo":11}},{"path":"src/main/java/duke/stubs/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.stubs;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"import java.io.File;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Storage;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":" * Stub for Storage class, created for testing purposes.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"     * Class constructor for StorageStub.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"     * @param path path of file where data is stored.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"    public StorageStub(String path) {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"        super(path);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"    public void updateFile(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"            //check if file exists, else create","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"            File dataFile \u003d new File(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"                dataFile \u003d createDataFile();","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"            //create a FileWriter object to write to file. Note that this overwrites the existing data!","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"            FileWriter file \u003d new FileWriter(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"            BufferedWriter writer \u003d new BufferedWriter(file);","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"                Task task \u003d list.get(i);","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"                String taskStr \u003d task.convertTask();","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"                writer.write(taskStr);","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"                writer.newLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"                writer.flush();","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"            writer.close();","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"butteredyakiimo":51}},{"path":"src/main/java/duke/stubs/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.stubs;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":" * Stub for TaskList created for testing purposes.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"    private ArrayList\u003cTask\u003e listStub;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"    private UiStub uiStub;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"    private StorageStub storageStub;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"     * Class constructor for TaskListStub.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"     * @param list list to be initialised.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"     * @param storage storage to be used.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"     * @param ui ui to be used.","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"    public TaskListStub(ArrayList\u003cTask\u003e list, StorageStub storage, UiStub ui) {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"        super(list, storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"        this.listStub \u003d list;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"        this.uiStub \u003d ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"        this.storageStub \u003d storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"        this.listStub.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"        this.storageStub.updateFile(listStub);","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"        return this.uiStub.showTaskAdded(task, this.listStub.size());","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"    public String listTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"            result +\u003d index + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"        return result;","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"butteredyakiimo":47}},{"path":"src/main/java/duke/stubs/UiStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.stubs;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":" * Stub for Ui class, created for testing purposes.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"public class UiStub extends Ui {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"    public String showInvalidDateFormat() {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"        return \"(・´з`・) Uh oh...dates must be of YYYY-MM-DD HH:mm format\";","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"    public String showTaskAdded(Task task, int listSize) {","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"        String header \u003d \"(｀･ω･´)ﾉ New task added:\\n\" + task + \"\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"        String numberOfTasksLeft \u003d this.showNumberOfTasks(listSize);","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"        return header + numberOfTasksLeft;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"butteredyakiimo":22}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Status;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":" * Encapsulates a Deadline. Contains the task description, completion status","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":" * and date of deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"    private LocalDateTime date;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"     * Class constructor for Deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"     * @param status either DONE or NOT_DONE.","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"     * @param task   task description.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"     * @param date   deadline of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"    public Deadline(Status status, String task, LocalDateTime date) {","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"        super(status, task);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns true if the deadline is within the desired period.","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"     * @param start start date to compare to.","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"     * @param end   end date to compare to.","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"     * @return true if start is before the input date.","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"    public boolean isWithin(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"        boolean isEqualStart \u003d this.date.isEqual(start);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"        boolean isAfterStart \u003d this.date.isAfter(start);","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"        boolean isGreaterEqual \u003d isEqualStart || isAfterStart;","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"        boolean isBeforeEnd \u003d this.date.isBefore(end);","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"        return isGreaterEqual \u0026\u0026 isBeforeEnd;","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"     * Converts Deadline to the correct string format to write to data file.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"     * @return string to write to data file.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"    public String convertTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"        return \"D | \" + super.getStatus() + \" | \" + super.getTask()","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"                + \" | \" + this.date.format(formatter);","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns string representation of a Deadline object.","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"     * @return string Deadline.","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + this.date.format(formatter) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"butteredyakiimo":63}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Status;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidStartEndException;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":" * Encapsulates an Event. Contains the task description, completion status,","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":" * start and end date times.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"     * Class constructor for Event.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"     * @param status either DONE or NOT_DONE.","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"     * @param task   task description.","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"     * @param start  start datetime.","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"     * @param end    end datetime.","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"     * @throws InvalidStartEndException if start after end.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"    public Event(Status status, String task, LocalDateTime start, LocalDateTime end) throws InvalidStartEndException {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"        super(status, task);","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"            throw new InvalidStartEndException();","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"            this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"            this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns true if the start of the event is within the desired period.","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"     * @param start start date to compare to.","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"     * @param end   end date to compare to.","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"     * @return true if start is before the input date.","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"    public boolean isWithin(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"        boolean isEqualStart \u003d this.start.isEqual(start);","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"        boolean isAfterStart \u003d this.start.isAfter(start);","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"        boolean isGreaterEqual \u003d isEqualStart || isAfterStart;","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"        boolean isBeforeEnd \u003d this.start.isBefore(end);","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"        return isGreaterEqual \u0026\u0026 isBeforeEnd;","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"     * Converts Event to the correct string format to write to data file.","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"     * @return string to write to data file.","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"    public String convertTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"        return \"E | \" + super.getStatus() + \" | \" + super.getTask()","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"                + \" | \" + this.start.format(formatter) + \" | \" + this.end.format(formatter);","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns string representation of an Event object.","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"butteredyakiimo"},"content":"     * @return string Event.","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"butteredyakiimo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"butteredyakiimo"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + this.start.format(formatter)","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"butteredyakiimo"},"content":"                + \" to: \" + this.end.format(formatter) + \")\";","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"butteredyakiimo":73}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Status;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":" * Encapsulates a Task. Contains methods that allows users to interact with a Task","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":" * object, such as marking, unmarking or deleting tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"    private Status status;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"    private String task;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"     * Class constructor for Task.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"     * @param status either DONE or NOT_DONE","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"     * @param task   task description.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"    public Task(Status status, String task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"    public abstract String convertTask();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"    public abstract boolean isWithin(LocalDateTime start, LocalDateTime end);","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"     * Marks this task as completed.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"     * @return true if the task is marked successfully.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"    public boolean canMark() {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"        if (this.status \u003d\u003d Status.NOT_DONE) {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"            this.status \u003d Status.DONE;","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"            return true;","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"        return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"     * Marks this task as uncompleted.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"     * @return true if task is unmarked successfully.","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"    public boolean canUnMark() {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"        if (this.status \u003d\u003d Status.DONE) {","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"            this.status \u003d Status.NOT_DONE;","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"            return true;","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"        return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns the status of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a task is either DONE or NOT_DONE.","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"        return this.status;","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns the task description.","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"butteredyakiimo"},"content":"     * @return task description.","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"butteredyakiimo"},"content":"    public String getTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"butteredyakiimo"},"content":"        return this.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns the string representation of a task object.","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"butteredyakiimo"},"content":"     * @return a string task.","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"butteredyakiimo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"butteredyakiimo"},"content":"        if (this.status \u003d\u003d Status.NOT_DONE) {","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"butteredyakiimo"},"content":"            return \"[ ] \" + task;","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"butteredyakiimo"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"butteredyakiimo"},"content":"            return \"[X] \" + task;","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"butteredyakiimo":87}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Status;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":" * Encapsulates a ToDo. Contains the task description, and","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":" * completion status.","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"     * Class constructor for ToDo.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"     * @param status either DONE or NOT_DONE.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"     * @param task   task description.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"    public ToDo(Status status, String task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"        super(status, task);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"     * Always returns false as ToDo does not have a date for comparison.","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"     * @param start start of period to check.","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"     * @param end   end of period to check.","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"     * @return false.","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"    public boolean isWithin(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"        return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"     * Converts ToDo to the correct string format to write to the data file.","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"     * @return string to write to data file.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"    public String convertTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"        return \"T | \" + super.getStatus() + \" | \" + super.getTask();","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"     * Returns string representation of a ToDo object.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"     * @return string ToDo.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"butteredyakiimo":54}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #FFFFFF; -fx-background-radius: 12;\" text\u003d\"Label\" translateY\u003d\"12.0\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"            \u003cInsets bottom\u003d\"7.0\" left\u003d\"7.0\" right\u003d\"7.0\" top\u003d\"7.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"55.0\" fitWidth\u003d\"55.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"butteredyakiimo":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controllers.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"5.0\" layoutY\u003d\"560.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"36.0\" prefWidth\u003d\"315.0\" promptText\u003d\"Enter a command\" AnchorPane.bottomAnchor\u003d\"4.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"                \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"325.0\" layoutY\u003d\"560.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"36.0\" prefWidth\u003d\"70.0\" text\u003d\"Send\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"                \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"                \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #91A4BB;\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"                  \u003cjavafx.scene.layout.HBox alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"99.0\" prefWidth\u003d\"388.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"                      \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"                          \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"55.0\" fitWidth\u003d\"55.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"                              \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"                           \u003cimage\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"                              \u003cImage url\u003d\"@../images/butter.png\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"                           \u003c/image\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"                        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"                          \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #D9DDBB; -fx-background-radius: 12;\" text\u003d\"(｡･o･｡)ﾉ Hey there! I\u0027m BUTTER.  How can I help you today?\" translateY\u003d\"12.0\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"                           \u003cfont\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"                              \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"                           \u003c/font\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"                              \u003cInsets bottom\u003d\"7.0\" left\u003d\"7.0\" right\u003d\"7.0\" top\u003d\"7.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"                              \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"                           \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"                      \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"                          \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"                  \u003c/javafx.scene.layout.HBox\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"               \u003c/children\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"butteredyakiimo":64}},{"path":"src/test/java/duke/components/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.components;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidEventException;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidStartEndException;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.NoDescException;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.NoEndException;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.NoStartException;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"import duke.stubs.StorageStub;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"import duke.stubs.TaskListStub;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"import duke.stubs.UiStub;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_noDescriptionExceptionThrown_eventCommandOnly() {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event\";","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"(・´з`・) Uh oh... please add a description\";","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"        NoDescException e \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"                NoDescException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_noDescriptionExceptionThrown_whiteSpaceDesc() {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event      \";","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"(・´з`・) Uh oh... please add a description\";","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"        NoDescException e \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"                NoDescException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_noDescriptionExceptionThrown_whiteSpaceFromToCorrect() {","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event     /from 2023-09-09 18:00 /to 2023-09-09 19:00\";","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"(・´з`・) Uh oh... please add a description\";","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"butteredyakiimo"},"content":"        NoDescException e \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"butteredyakiimo"},"content":"                NoDescException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":70,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_invalidEventExceptionThrown_noDesc() {","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event/from 2023-09-09 19:00 /to 2023-09-09 19:00\";","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"(・´з`・) Uh oh... improper event format!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"butteredyakiimo"},"content":"        InvalidEventException e \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"butteredyakiimo"},"content":"                InvalidEventException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_invalidEventExceptionThrown_noFrom() {","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event live lecture /to 2023-09-09 19:00\";","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"(・´з`・) Uh oh... improper event format!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"butteredyakiimo"},"content":"        InvalidEventException e \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"butteredyakiimo"},"content":"                InvalidEventException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_noStartException_fromWithNoSpaces() {","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":108,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":111,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event live lecture /from/to 2023-09-09 19:00\";","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"(・´з`・) Uh oh... please add a start date\";","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"butteredyakiimo"},"content":"        NoStartException e \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"butteredyakiimo"},"content":"                NoStartException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":121,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_noStartException_fromWithWhiteSpaces() {","lastModifiedDate":"2023-09-08"},{"lineNumber":122,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":124,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event live lecture /from     /to 2023-09-09 19:00\";","lastModifiedDate":"2023-09-08"},{"lineNumber":128,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"(・´з`・) Uh oh... please add a start date\";","lastModifiedDate":"2023-09-09"},{"lineNumber":129,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":130,"author":{"gitId":"butteredyakiimo"},"content":"        NoStartException e \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":131,"author":{"gitId":"butteredyakiimo"},"content":"                NoStartException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":132,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":134,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":135,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":136,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":137,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_noEndException_noTo() {","lastModifiedDate":"2023-09-08"},{"lineNumber":138,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":139,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":140,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":141,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event live lecture /from 2023-09-09 19:00\";","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"(・´з`・) Uh oh... please add an end date\";","lastModifiedDate":"2023-09-09"},{"lineNumber":145,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"butteredyakiimo"},"content":"        NoEndException e \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"butteredyakiimo"},"content":"                NoEndException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":149,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":150,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":151,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":153,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_noEndException_toWithNoSpace() {","lastModifiedDate":"2023-09-08"},{"lineNumber":154,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":155,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":156,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":157,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":159,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event live lecture /from 2023-09-09 19:00 /to\";","lastModifiedDate":"2023-09-08"},{"lineNumber":160,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"(・´з`・) Uh oh... please add an end date\";","lastModifiedDate":"2023-09-09"},{"lineNumber":161,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"butteredyakiimo"},"content":"        NoEndException e \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"butteredyakiimo"},"content":"                NoEndException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":164,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":165,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":166,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":167,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":168,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":169,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_noEndException_toWithWhiteSpaces() {","lastModifiedDate":"2023-09-08"},{"lineNumber":170,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":171,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":172,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":173,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":175,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event live lecture /from 2023-09-09 19:00 /to     \";","lastModifiedDate":"2023-09-08"},{"lineNumber":176,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"(・´з`・) Uh oh... please add an end date\";","lastModifiedDate":"2023-09-09"},{"lineNumber":177,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":178,"author":{"gitId":"butteredyakiimo"},"content":"        NoEndException e \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":179,"author":{"gitId":"butteredyakiimo"},"content":"                NoEndException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":180,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":181,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":182,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":183,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":184,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":185,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_invalidStartEndException() {","lastModifiedDate":"2023-09-08"},{"lineNumber":186,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":187,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":188,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":189,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":191,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event live lecture /from 2023-09-09 19:00 /to 2023-09-09 14:00\";","lastModifiedDate":"2023-09-08"},{"lineNumber":192,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"(・´з`・) Uh oh... start must be after end!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":193,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":194,"author":{"gitId":"butteredyakiimo"},"content":"        InvalidStartEndException e \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":195,"author":{"gitId":"butteredyakiimo"},"content":"                InvalidStartEndException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-08"},{"lineNumber":196,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":197,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":198,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":199,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":200,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":201,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_wrongDateFormat_words() {","lastModifiedDate":"2023-09-08"},{"lineNumber":202,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":203,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":204,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":205,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":206,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":207,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event live lecture /from now /to tmr\";","lastModifiedDate":"2023-09-08"},{"lineNumber":208,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":209,"author":{"gitId":"butteredyakiimo"},"content":"        DateTimeParseException e \u003d assertThrows(","lastModifiedDate":"2023-09-13"},{"lineNumber":210,"author":{"gitId":"butteredyakiimo"},"content":"                DateTimeParseException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-13"},{"lineNumber":211,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":212,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":213,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":214,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_wrongDateFormat_invalidDates() {","lastModifiedDate":"2023-09-08"},{"lineNumber":215,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":216,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":217,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":218,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":219,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":220,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event live lecture /from 2023-13-21 /to 2023-13-90\";","lastModifiedDate":"2023-09-08"},{"lineNumber":221,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":222,"author":{"gitId":"butteredyakiimo"},"content":"        DateTimeParseException e \u003d assertThrows(","lastModifiedDate":"2023-09-13"},{"lineNumber":223,"author":{"gitId":"butteredyakiimo"},"content":"                DateTimeParseException.class, () -\u003e parser.parseEvent(input));","lastModifiedDate":"2023-09-13"},{"lineNumber":224,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":225,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":226,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":227,"author":{"gitId":"butteredyakiimo"},"content":"    public void parseEvent_addToListSuccessfully() {","lastModifiedDate":"2023-09-08"},{"lineNumber":228,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":229,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":230,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(new ArrayList\u003c\u003e(), storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":231,"author":{"gitId":"butteredyakiimo"},"content":"        Parser parser \u003d new Parser(list, ui);","lastModifiedDate":"2023-09-13"},{"lineNumber":232,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":233,"author":{"gitId":"butteredyakiimo"},"content":"        String input \u003d \"event live lecture /from 2023-09-09 10:00 /to 2023-09-09 14:00\";","lastModifiedDate":"2023-09-08"},{"lineNumber":234,"author":{"gitId":"butteredyakiimo"},"content":"        String expectedEvent \u003d \"[E] [ ] live lecture (from: 2023-09-09 10:00 to: 2023-09-09 14:00)\" + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":235,"author":{"gitId":"butteredyakiimo"},"content":"        String expectedMessage \u003d \"(｀･ω･´)ﾉ New task added:\\n\" + expectedEvent","lastModifiedDate":"2023-09-08"},{"lineNumber":236,"author":{"gitId":"butteredyakiimo"},"content":"                + \"Now you have 1 task in the list!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":237,"author":{"gitId":"butteredyakiimo"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":238,"author":{"gitId":"butteredyakiimo"},"content":"            String result \u003d parser.parseEvent(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":239,"author":{"gitId":"butteredyakiimo"},"content":"            assertEquals(expectedMessage, result); //check message to user","lastModifiedDate":"2023-09-09"},{"lineNumber":240,"author":{"gitId":"butteredyakiimo"},"content":"            ArrayList\u003cTask\u003e tasks \u003d storage.loadTasks();","lastModifiedDate":"2023-09-08"},{"lineNumber":241,"author":{"gitId":"butteredyakiimo"},"content":"            assertEquals(\"1. \" + expectedEvent, list.listTasks(tasks)); //check storage","lastModifiedDate":"2023-09-08"},{"lineNumber":242,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":243,"author":{"gitId":"butteredyakiimo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":244,"author":{"gitId":"butteredyakiimo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":245,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":246,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":247,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"butteredyakiimo":247}},{"path":"src/test/java/duke/components/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.components;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidStartEndException;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"import duke.stubs.StorageStub;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"import duke.stubs.TaskListStub;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"import duke.stubs.UiStub;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"    public void loadTasks() {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"            tasks.add(new ToDo(Status.NOT_DONE, \"cookies\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"            tasks.add(new ToDo(Status.NOT_DONE, \"bake cookies\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"            tasks.add(new ToDo(Status.NOT_DONE, \"eat cookies\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"            tasks.add(new Deadline(Status.NOT_DONE, \"bake more cookies\", LocalDateTime.now()));","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"            tasks.add(new Deadline(Status.NOT_DONE, \"watch lecture\", LocalDateTime.now()));","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"            tasks.add(new Deadline(Status.NOT_DONE, \"lecture quiz\", LocalDateTime.now()));","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"            tasks.add(new Event(Status.NOT_DONE, \"cookie marathon\", LocalDateTime.now(),","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"                    LocalDateTime.now().plusHours(10)));","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"            tasks.add(new Event(Status.NOT_DONE, \"cookie baking class\", LocalDateTime.now(),","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"                    LocalDateTime.now().plusHours(10)));","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"        } catch (InvalidStartEndException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"    public void findMatches_emptyString() {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(this.tasks, storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"        String result \u003d list.findMatches(\"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d ui.showMatches(list.listTasks(expectedList));","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"    public void findMatches_keywordFound() {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(this.tasks, storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"        String result \u003d list.findMatches(\"cookies\");","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"        expectedList.add(tasks.get(0));","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"        expectedList.add(tasks.get(1));","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"butteredyakiimo"},"content":"        expectedList.add(tasks.get(2));","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"butteredyakiimo"},"content":"        expectedList.add(tasks.get(3));","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d ui.showMatches(list.listTasks(expectedList));","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"butteredyakiimo"},"content":"    public void findMatches_keywordNotFound() {","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(this.tasks, storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"butteredyakiimo"},"content":"        String result \u003d list.findMatches(\"math\");","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"butteredyakiimo"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d ui.showMatches(list.listTasks(expectedList));","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"butteredyakiimo"},"content":"    public void findMatches_keywordWithSpaces() {","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":90,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(this.tasks, storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"butteredyakiimo"},"content":"        String result \u003d list.findMatches(\"cookies   \");","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"butteredyakiimo"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d ui.showMatches(list.listTasks(expectedList));","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"butteredyakiimo"},"content":"    public void findMatches_moreThanOneKeyword() {","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":103,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(this.tasks, storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"butteredyakiimo"},"content":"        String result \u003d list.findMatches(\"bake cookies\");","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"butteredyakiimo"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"butteredyakiimo"},"content":"        expectedList.add(tasks.get(1));","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d ui.showMatches(list.listTasks(expectedList));","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":110,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-09-08"},{"lineNumber":111,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"butteredyakiimo"},"content":"    public void findMatches_byDate() {","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"butteredyakiimo"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"butteredyakiimo"},"content":"        StorageStub storage \u003d new StorageStub(\"./src/test/testdata.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":117,"author":{"gitId":"butteredyakiimo"},"content":"        TaskListStub list \u003d new TaskListStub(this.tasks, storage, ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"butteredyakiimo"},"content":"        String result \u003d list.findMatches(LocalDateTime.now().toString());","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"butteredyakiimo"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":121,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":122,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d ui.showMatches(list.listTasks(expectedList));","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":124,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"butteredyakiimo":126}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Status;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"    public void convertTask_uncompleted() {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"        Deadline deadline \u003d new Deadline(Status.NOT_DONE, \"bake cookies\", LocalDateTime.now());","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"D | 0 | bake cookies | \" + LocalDateTime.now().format(formatter);","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, deadline.convertTask());","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"    public void convertTask_completed() {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"        Deadline deadline \u003d new Deadline(Status.DONE, \"bake cookies\", LocalDateTime.now());","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"D | 1 | bake cookies | \" + LocalDateTime.now().format(formatter);","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, deadline.convertTask());","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"    public void toString_uncompleted() {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"        Deadline deadline \u003d new Deadline(Status.NOT_DONE, \"bake cookies\", LocalDateTime.now());","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"[D] [ ] bake cookies (by: \" + LocalDateTime.now().format(formatter) + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"    public void toString_completed() {","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"        Deadline deadline \u003d new Deadline(Status.DONE, \"bake cookies\", LocalDateTime.now());","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"[D] [X] bake cookies (by: \" + LocalDateTime.now().format(formatter) + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"butteredyakiimo":42}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Status;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"import duke.exceptions.InvalidStartEndException;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"public class EventTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"    public void event_exceptionThrown_hours() {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime end \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime start \u003d end.plusHours(9);","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"        InvalidStartEndException ex \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"                InvalidStartEndException.class, () -\u003e new Event(Status.NOT_DONE, \"bake cookies\", start, end));","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(\"(・´з`・) Uh oh... start must be after end!\", ex.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"    public void event_exceptionThrown_minutes() {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime end \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime start \u003d end.plusMinutes(1);","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"        InvalidStartEndException ex \u003d assertThrows(","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"                InvalidStartEndException.class, () -\u003e new Event(Status.NOT_DONE, \"bake cookies\", start, end));","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(\"(・´з`・) Uh oh... start must be after end!\", ex.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"    public void convertTask_uncompleted() throws InvalidStartEndException {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime start \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime end \u003d start.plusHours(9);","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"        Event event \u003d new Event(Status.NOT_DONE, \"bake cookies\", start, end);","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"E | 0 | bake cookies | \" + start.format(formatter)","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"                + \" | \" + end.format(formatter);","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, event.convertTask());","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"    public void convertTask_completed() throws InvalidStartEndException {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime start \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime end \u003d start.plusHours(9);","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"        Event event \u003d new Event(Status.DONE, \"bake cookies\", start, end);","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"E | 1 | bake cookies | \" + start.format(formatter)","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"                + \" | \" + end.format(formatter);","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, event.convertTask());","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"    public void toString_uncompleted() throws InvalidStartEndException {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime start \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime end \u003d start.plusHours(9);","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"        Event event \u003d new Event(Status.NOT_DONE, \"bake cookies\", start, end);","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"[E] [ ] bake cookies (from: \" + start.format(formatter)","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"                + \" to: \" + end.format(formatter) + \")\";","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"butteredyakiimo"},"content":"    public void toString_completed() throws InvalidStartEndException {","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime start \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"butteredyakiimo"},"content":"        LocalDateTime end \u003d start.plusHours(9);","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"butteredyakiimo"},"content":"        Event event \u003d new Event(Status.DONE, \"bake cookies\", start, end);","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"[E] [X] bake cookies (from: \" + start.format(formatter)","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"butteredyakiimo"},"content":"                + \" to: \" + end.format(formatter) + \")\";","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"butteredyakiimo":74}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Status;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"    //this is the concrete implementation of Task, used for testing","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"    public class ConcreteTask extends Task {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"        public ConcreteTask(Status status, String task) {","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"            super(status, task);","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"        @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"        public boolean isWithin(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"            return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"        @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"        public String convertTask() {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"            return \"task converted\";","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"    public void canMark_successful() {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"        ConcreteTask task \u003d new ConcreteTask(Status.NOT_DONE, \"Set up unit tests\");","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"        task.canMark();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(Status.DONE, task.getStatus());","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"    public void canMark_unsuccessful() {","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"        ConcreteTask task \u003d new ConcreteTask(Status.DONE, \"Set up unit tests\");","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"        task.canMark();","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(Status.DONE, task.getStatus());","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"    public void canUnMark_successful() {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"butteredyakiimo"},"content":"        ConcreteTask task \u003d new ConcreteTask(Status.DONE, \"Set up unit tests\");","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"butteredyakiimo"},"content":"        task.canUnMark();","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(Status.NOT_DONE, task.getStatus());","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"butteredyakiimo"},"content":"    public void canUnMark_unsuccessful() {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"butteredyakiimo"},"content":"        ConcreteTask task \u003d new ConcreteTask(Status.NOT_DONE, \"Set up unit tests\");","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"butteredyakiimo"},"content":"        task.canUnMark();","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(Status.NOT_DONE, task.getStatus());","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"butteredyakiimo"},"content":"    public void getStatus_uncompleted() {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"butteredyakiimo"},"content":"        ConcreteTask task \u003d new ConcreteTask(Status.NOT_DONE, \"Set up unit tests\");","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(Status.NOT_DONE, task.getStatus());","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"butteredyakiimo"},"content":"    public void getStatus_completed() {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"butteredyakiimo"},"content":"        ConcreteTask task \u003d new ConcreteTask(Status.DONE, \"Set up unit tests\");","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(Status.DONE, task.getStatus());","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"butteredyakiimo"},"content":"    public void getTask_completed() {","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"butteredyakiimo"},"content":"        ConcreteTask task \u003d new ConcreteTask(Status.DONE, \"Set up unit tests\");","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(\"Set up unit tests\", task.getTask());","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"butteredyakiimo"},"content":"    public void toString_uncompleted() {","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"butteredyakiimo"},"content":"        ConcreteTask task \u003d new ConcreteTask(Status.NOT_DONE, \"Set up unit tests\");","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(\"[ ] \" + \"Set up unit tests\", task.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"butteredyakiimo"},"content":"    public void toString_completed() {","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"butteredyakiimo"},"content":"        ConcreteTask task \u003d new ConcreteTask(Status.DONE, \"Set up unit tests\");","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(\"[X] \" + \"Set up unit tests\", task.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"butteredyakiimo":87}},{"path":"src/test/java/duke/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"package duke.tasks;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"import duke.components.Status;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"    public void convertTask_uncompleted() {","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"        ToDo todo \u003d new ToDo(Status.NOT_DONE, \"bake cookies!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"T | 0 | bake cookies!\";","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, todo.convertTask());","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"    public void convertTask_completed() {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"        ToDo todo \u003d new ToDo(Status.DONE, \"bake cookies!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"T | 1 | bake cookies!\";","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, todo.convertTask());","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"    public void toString_uncompleted() {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"        ToDo todo \u003d new ToDo(Status.NOT_DONE, \"bake cookies!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"[T] [ ] bake cookies!\";","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"    public void toString_completed() {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"        ToDo todo \u003d new ToDo(Status.DONE, \"bake cookies!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"        String expected \u003d \"[T] [X] bake cookies!\";","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"butteredyakiimo":38}},{"path":"src/test/testdata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"E | 0 | live lecture | 2023-09-09 10:00 | 2023-09-09 14:00","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"butteredyakiimo":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"butteredyakiimo"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"butteredyakiimo"},"content":"hahahhah","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"butteredyakiimo"},"content":"wow so cool","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"butteredyakiimo"},"content":"todo","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"butteredyakiimo"},"content":"deadline","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"butteredyakiimo"},"content":"event","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"butteredyakiimo"},"content":"todo watch lecture","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"butteredyakiimo"},"content":"todo eat lunch","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"butteredyakiimo"},"content":"deadline bake cookies /by tmr","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"butteredyakiimo"},"content":"deadline bake cookies /by 2023-09-03 18:00","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"butteredyakiimo"},"content":"deadline /by 2023-09-03 18:00","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"butteredyakiimo"},"content":"deadline bake cookies /by 2023-20-03 18:00","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"butteredyakiimo"},"content":"deadline bake cookies /by 2023-09-03 29:00","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"butteredyakiimo"},"content":"deadline go fishing /by 2024-02-05","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"butteredyakiimo"},"content":"list","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"event math meeting! /from now /to tmr","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"butteredyakiimo"},"content":"event math meeting! /from 2023-08-25 7:00 /to 2023-08-25 23:00","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"event math meeting! /from 2023-08-25 07:00 /to 2023-08-25 23:00","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"butteredyakiimo"},"content":"event /from 2023-08-25 7:00 /to 2023-08-25 23:00","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"butteredyakiimo"},"content":"event math meeting! /from 2023-08-25 07:00","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"butteredyakiimo"},"content":"event math meeting! /to 2023-08-25 23:00","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"butteredyakiimo"},"content":"event math meeting! 2023-08-25 7:00 2023-08-25 23:00","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"butteredyakiimo"},"content":"list","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"butteredyakiimo"},"content":"event dinner w choir gals! /from 2023-09-25 23:00 /to 2023-09-25 17:00","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"butteredyakiimo"},"content":"event dinner w choir gals! /from 2023-09-25 17:00 /to 2023-09-25 23:00","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"butteredyakiimo"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"butteredyakiimo"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"butteredyakiimo"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"butteredyakiimo"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"butteredyakiimo"},"content":"mark 3","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"butteredyakiimo"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"butteredyakiimo"},"content":"unmark 4","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"butteredyakiimo"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"butteredyakiimo"},"content":"delete 1","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"butteredyakiimo"},"content":"delete 7","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"butteredyakiimo"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"butteredyakiimo"},"content":"bye","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"butteredyakiimo"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"butteredyakiimo":45}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"butteredyakiimo"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"butteredyakiimo":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"butteredyakiimo"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"butteredyakiimo":1}}]
