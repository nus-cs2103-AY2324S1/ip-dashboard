[{"path":"src/main/data/actualData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm,true","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"todo return book,false","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"deadline return book /by 2019-10-15,true","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":3}},{"path":"src/main/data/backUpData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"todo borrow book,false","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"deadline return book /by Sunday,true","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm,false","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"AaronJT1":3}},{"path":"src/main/data/exampleInput.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"todo return book","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":3}},{"path":"src/main/data/testData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"deadline return book /by 2019-10-15,false","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"todo return book,true","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm,false","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":3}},{"path":"src/main/java/aj/Aj.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"public class Aj {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"    Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"    Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"    public boolean askCommand(Scanner scanner) throws NoSuchCommandException, EmptyDescriptionException, IndexOutOfRangeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"        String command \u003d scanner.next().toLowerCase();","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"            this.ui.printList();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"            this.ui.exit();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"            return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"            String remaining \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"                this.ui.checkMessage(command, remaining);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"//            String back \u003d scanner.next();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"                int idx \u003d Integer.parseInt(remaining.substring(1)) - 1; // this idx is idx of tasklst","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"                this.ui.checkIndex(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"                Task task \u003d this.taskList.getTask(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"                this.ui.horiLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"                if (task.isCompleted()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"                    System.out.println(\"You have already marked it!!!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"                } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"                    task.toggleComplete();","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"                    this.storage.updateData(idx, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"                    System.out.println(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"                }","lastModifiedDate":"2023-08-19"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"                this.ui.checkMessage(command, remaining);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"//            String back \u003d scanner.next();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"                int idx \u003d Integer.parseInt(remaining.substring(1)) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"                this.ui.checkIndex(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"//      aj.Task task \u003d this.lst[idx];","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"                Task task \u003d this.taskList.getTask(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"                this.ui.horiLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"                if (!task.isCompleted()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"                    System.out.println(\"aj.Task is already unmarked!!!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"                } else {","lastModifiedDate":"2023-08-19"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"                    task.toggleComplete();","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"                    this.storage.updateData(idx, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"                    System.out.println(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"//            String back \u003d scanner.next();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"                this.ui.checkMessage(command, remaining);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"                int idx \u003d Integer.parseInt(remaining.substring(1)) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"                this.ui.checkIndex(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"                this.ui.horiLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"                Task removedTask \u003d this.taskList.getTask(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"                this.taskList.removeTask(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"                this.storage.deleteData(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"                System.out.println(removedTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"                this.ui.printNoTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"            } else { // if its none of the main commands, then its a task. do logic for parsing here or thr","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"//            String remaining \u003d scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"                this.ui.horiLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"                Task task \u003d null;","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"                if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"                    this.ui.checkMessage(command, remaining);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"                    task \u003d this.parser.getTodoTask(remaining, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"                    this.ui.checkMessage(command, remaining);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"                    task \u003d this.parser.getDeadlineTask(remaining, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"                } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"                    this.ui.checkMessage(command, remaining);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"                    task \u003d this.parser.getEventTask(remaining, false);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"                } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"//        System.out.println(\"No such command!!! Try again!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"                    throw new NoSuchCommandException();","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"                if (task !\u003d null) { // have a task","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"                    this.storage.addData(command + remaining + \",false\");","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"                    this.taskList.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-20"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"                    System.out.println(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"                    this.ui.printNoTask();","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        this.ui.horiLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"        return false;","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"    public void setUpBot(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"        this.storage \u003d new Storage(this.parser, filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"        this.taskList \u003d new TaskList(this.storage.initialiseData());","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"        this.ui \u003d new Ui(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":110,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"        this.ui.greet();","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"                if (askCommand(scanner)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"                    break;","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"            } catch (AjException | IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"                this.ui.horiLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"        String filePath \u003d System.getProperty(\"user.dir\") + \"/src/main/data/actualData.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"        /*","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"AaronJT1"},"content":"        Since test script run in different directory, change setUpBot() below accordingly","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"         */","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"        String testingFilePath \u003d System.getProperty(\"user.dir\") + \"/../src/main/data/testData.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"AaronJT1"},"content":"        Aj bot \u003d new Aj(); // create bot instance","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"        bot.setUpBot(testingFilePath); // setup bot with necessary instances","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"        bot.run(); // run bot","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AaronJT1":136,"-":2}},{"path":"src/main/java/aj/AjException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"public class AjException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"    AjException(String msg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"        super(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":7}},{"path":"src/main/java/aj/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"    private final LocalDate by;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"        String formattedDate \u003d by.format(formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"    Deadline(String taskName, boolean isMarked, LocalDate by) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"        super(taskName, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AaronJT1":20}},{"path":"src/main/java/aj/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"public class EmptyDescriptionException extends AjException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"    EmptyDescriptionException(String cmd, String helpMsg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"        super(\"OOPS!!! The description of a \" + cmd + \" cannot be empty.\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"                \"Try:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"                helpMsg);","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":9}},{"path":"src/main/java/aj/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"    private final String from, to;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    Event(String taskName, boolean isMarked, String from, String to) {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"        super(taskName, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AaronJT1":16}},{"path":"src/main/java/aj/IndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"public class IndexOutOfRangeException extends AjException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"    IndexOutOfRangeException(int val) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"        super(\"OOPS!!! Please choose an index within the number of items in the list \" + \"(\" + val + \")\");","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":7}},{"path":"src/main/java/aj/NoSuchCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"public class NoSuchCommandException extends AjException {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"    NoSuchCommandException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"                \"Heres some commands for you:\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"                \"type \\\"list\\\" to list tasks\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"                \"type \\\"todo\\\" to view available todo options\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"                \"type \\\"deadline\\\" to view available deadline options\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"                \"type \\\"event\\\" to view available event options\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":12}},{"path":"src/main/java/aj/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    public Task getTodoTask(String remaining, boolean isMark) {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"        return new Todo(remaining.substring(1), isMark);","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    public Task getDeadlineTask(String remaining, boolean isMark) { // takes in command, parse it and return task object","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"        // deadline return book /by 2019-10-15","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"        String pattern \u003d \" (.*) /by (.*)\";","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"        Pattern regexPattern \u003d Pattern.compile(pattern);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"        Matcher matcher \u003d regexPattern.matcher(remaining);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"            String taskName \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"            String by \u003d matcher.group(2);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"            LocalDate newDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"//            System.out.println(newDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"            return new Deadline(taskName, isMark, newDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"    public Task getEventTask(String remaining, boolean isMark) { // takes in command, parse it and return task object","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        String pattern \u003d \" (.*) /from (.*?) /to (.*)\";","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"        Pattern regexPattern \u003d Pattern.compile(pattern);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"        Matcher matcher \u003d regexPattern.matcher(remaining);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"            String taskName \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"            String startTime \u003d matcher.group(2);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"            String endTime \u003d matcher.group(3);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"            return new Event(taskName, isMark, startTime, endTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":45}},{"path":"src/main/java/aj/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"    Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"    final String FILEPATH;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"    public List\u003cTask\u003e initialiseData() { // get data from file, create necessary task objects and returns an array of task","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"//        String localDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"//        File file \u003d new File(localDir + \"/src/main/data/actualData.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"        File file \u003d new File(this.FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"            System.out.println(\"File does not exist.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"            String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"                String[] parsedValues \u003d line.split(\",\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"                Scanner strScanner \u003d new Scanner(parsedValues[0]); // original command","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"                String command \u003d strScanner.next().toLowerCase();","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"                String remaining \u003d strScanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"                boolean isMark \u003d Boolean.parseBoolean(parsedValues[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"                Task task;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"                if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"//                    task \u003d new aj.Todo(remaining.substring(1), isMark);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"                    task \u003d this.parser.getTodoTask(remaining, isMark);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"                    task \u003d this.parser.getDeadlineTask(remaining, isMark);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"                } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"                    task \u003d this.parser.getEventTask(remaining, isMark);","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"                    task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"                taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"    public void updateData(int idx, boolean isMarked) throws IOException { // linenumber refers to index from 0","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"//        String localDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"//        Path myPath \u003d Paths.get(localDir + \"/src/main/data/actualData.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        Path myPath \u003d Paths.get(this.FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(myPath, StandardCharsets.UTF_8));","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 0; i \u003c fileContent.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"            if (i \u003d\u003d idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"                String[] parsedValues \u003d fileContent.get(i).split(\",\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"                String newLineContent \u003d parsedValues[0] + \",\" + Boolean.toString(isMarked);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"                fileContent.set(i, newLineContent);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"        Files.write(myPath, fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"    public void deleteData(int idx) throws IOException { // get linenumber and delete that entry","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"//        String localDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"//        Path myPath \u003d Paths.get(localDir + \"/src/main/data/actualData.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        Path myPath \u003d Paths.get(this.FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(myPath, StandardCharsets.UTF_8));","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 0; i \u003c fileContent.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"            if (i \u003d\u003d idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"                fileContent.remove(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"        Files.write(myPath, fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"    public void addData(String str) throws IOException { // get linenumber and delete that entry","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"//        String localDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"//        Path myPath \u003d Paths.get(localDir + \"/src/main/data/actualData.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"        Path myPath \u003d Paths.get(this.FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(myPath, StandardCharsets.UTF_8));","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        fileContent.add(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"        Files.write(myPath, fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"    Storage(Parser parser, String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"        this.FILEPATH \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":107}},{"path":"src/main/java/aj/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"    protected boolean isMarked;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"    protected String taskName;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"    public void toggleComplete() {","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"        this.isMarked \u003d !this.isMarked;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"        return this.isMarked;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"        return (this.isMarked ? \"[X] \" : \"[ ] \") + this.taskName;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"    Task(String taskName, boolean completed) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"        this.isMarked \u003d completed;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AaronJT1":26}},{"path":"src/main/java/aj/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"    List\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"        return this.taskList.get(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"    public void removeTask(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"        this.taskList.remove(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"    TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":28}},{"path":"src/main/java/aj/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    Todo(String taskName, boolean isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"        super(taskName, isMarked);","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AaronJT1":12}},{"path":"src/main/java/aj/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"    TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"    public void horiLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"---------------------\");","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    public void greet() {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"        horiLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"Hello! I\u0027m Aj\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"Loading data....\\nHere are your saved data:\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"        printList();","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"\\nWhat can i do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"        horiLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"    public void checkMessage(String cmd, String msg) throws EmptyDescriptionException { // if no arguments, give help message","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"        String helpMessage;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"        if (msg.length() \u003d\u003d 0 || msg.equals(\" \")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"            if (cmd.equals(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"todo \u003ctask name\u003e\";","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"            } else if (cmd.equals(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"deadline \u003ctask name\u003e /by \u003cdate/time\u003e\";","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"            } else if (cmd.equals(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"event \u003ctask name\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e\";","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"            } else if (cmd.equals(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"mark \u003cidx\u003e\";","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"            } else if (cmd.equals(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"unmark \u003cidx\u003e\";","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"            } else if (cmd.equals(\"delete\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"delete \u003cidx\u003e\";","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"            throw new EmptyDescriptionException(cmd, helpMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"    public void checkIndex(int val) throws IndexOutOfRangeException { // throws error if index invalid","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        if (val \u003c\u003d this.taskList.getSize() - 1 \u0026\u0026 val \u003e\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"            return;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"            throw new IndexOutOfRangeException(this.taskList.getSize());","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"    public void printNoTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", this.taskList.getSize());","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"    public void printList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        if (this.taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"            System.out.println(\"No items yet, add something!!!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 1; i \u003c\u003d this.taskList.getSize(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"//        System.out.println(i + \".\" + this.lst[i - 1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"            System.out.println(i + \".\" + this.taskList.getTask(i - 1));","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"    public void exit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        horiLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"    Ui(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":71}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"unmark 2","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"unmark 3","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"mark","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"mark 2","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"deadline return book /by 2023-10-20","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"mark 5","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"mark 4","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"unmark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"delete 5","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"delete 7","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"delete 3","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"delete 3","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"delete 2","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"event","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"todo return book","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"AaronJT1":28}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/aj/*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"java -classpath ../bin Aj \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AaronJT1":2,"-":36}}]
