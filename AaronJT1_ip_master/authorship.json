[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"javafx {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    version \u003d \u002717.0.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"//    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"//    mainClass.set(\"aj.Aj\")","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"    mainClass.set(\"aj.Launcher\")","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"//    mainClassName \u003d \u0027aj.Aj\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"    mainClassName \u003d \u0027aj.Launcher\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"    archiveBaseName \u003d \"aj\"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"    archiveFileName \u003d \u0027aj.jar\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AaronJT1":29,"-":40}},{"path":"src/main/data/actualData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm,true","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"event yooo /from mon 2pm /to 3pm,false","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"todo few,false","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"deadline project meeting /by 2022-12-12,false","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"AaronJT1":4}},{"path":"src/main/data/backUpData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"todo borrow book,false","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"deadline return book /by Sunday,true","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm,false","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"AaronJT1":3}},{"path":"src/main/data/exampleInput.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"todo return book","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":3}},{"path":"src/main/data/testData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"deadline return book /by 2019-10-15,false","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"todo return book,true","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm,false","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":3}},{"path":"src/main/java/aj/Aj.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":" * Aj chat-bot class.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"public class Aj extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"    Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    private Image ajImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/aj_bot.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"    private String latestCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"    private Task lastTaskAdded;","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"    private Task lastTaskRemoved;","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"    private String lastTaskRemovedEntry;","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"     * Takes in description portion of user input and mark the task specified in the taskList and database.","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"     * @param outMsg     StringBuilder object to craft bot response.","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"     * @param descString Description portion of user input","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"     * @throws IndexOutOfRangeException If user gives an index bigger than taskList size.","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"     * @throws IOException              Arose if there is issue updating database.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"    public void markTask(StringBuilder outMsg, String descString) throws IndexOutOfRangeException, IOException {","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        int idx \u003d Integer.parseInt(descString.substring(1)) - 1; // this idx is idx of tasklst","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        this.ui.checkIndex(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"        Task taskToMark \u003d this.taskList.getTask(idx);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"        outMsg.append(this.ui.horiLine());","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        if (taskToMark.isCompleted()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"            outMsg.append(\"You have already marked it!!!\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"            taskToMark.toggleComplete();","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"            this.storage.updateData(idx, true);","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"            outMsg.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"            outMsg.append(taskToMark);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"     * Takes in description portion of user input and unmark the task specified in the taskList and database.","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"     * @param outMsg     StringBuilder object to craft bot response.","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"     * @param descString Description portion of user input","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"     * @throws IndexOutOfRangeException If user gives an index bigger than taskList size.","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"     * @throws IOException              Arose if there is issue updating database.","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"    public void unmarkTask(StringBuilder outMsg, String descString) throws IndexOutOfRangeException, IOException {","lastModifiedDate":"2023-09-11"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"        int idx \u003d Integer.parseInt(descString.substring(1)) - 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"        this.ui.checkIndex(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"        Task taskToUnmark \u003d this.taskList.getTask(idx);","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        outMsg.append(this.ui.horiLine());","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"        if (!taskToUnmark.isCompleted()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"            outMsg.append(\"Task is already unmarked!!!\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"        } else {","lastModifiedDate":"2023-08-19"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"            taskToUnmark.toggleComplete();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"            this.storage.updateData(idx, false);","lastModifiedDate":"2023-09-11"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"            outMsg.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"            outMsg.append(taskToUnmark);","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"     * Takes in user input and add the task in the taskList and database.","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"     * @param outMsg     StringBuilder object to craft bot response.","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"     * @param cmdString  Command portion of user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"     * @param descString Description portion of user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"     * @param task       Task to be added in the taskList and database.","lastModifiedDate":"2023-09-11"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"     * @throws IndexOutOfRangeException If user gives an index bigger than taskList size.","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"     * @throws IOException              Arose if there is issue updating database.","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"    public void addTask(StringBuilder outMsg, String cmdString, String descString, Task task)","lastModifiedDate":"2023-09-11"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"            throws IndexOutOfRangeException, IOException {","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"        this.storage.addData(cmdString + descString + \",false\");","lastModifiedDate":"2023-09-11"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"        this.taskList.addTask(task);","lastModifiedDate":"2023-09-11"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"        this.lastTaskAdded \u003d task;","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"        outMsg.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"        outMsg.append(task).append(\"\\n\");","lastModifiedDate":"2023-09-11"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"        outMsg.append(this.ui.printNumTask());","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":110,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"     * Takes in index of task in taskList to be deleted.","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"     * @param outMsg     StringBuilder object to craft bot response.","lastModifiedDate":"2023-09-11"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"     * @param descString Description portion of user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"     * @throws IndexOutOfRangeException If user gives an index bigger than taskList size.","lastModifiedDate":"2023-09-11"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"     * @throws IOException              Arose if there is issue updating database.","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"    public void deleteTask(StringBuilder outMsg, String descString) throws IndexOutOfRangeException, IOException {","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"        int idx \u003d Integer.parseInt(descString.substring(1)) - 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"        this.ui.checkIndex(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"        outMsg.append(this.ui.horiLine());","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"        outMsg.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"        Task removedTask \u003d this.taskList.getTask(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"        this.taskList.removeTask(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"        this.lastTaskRemovedEntry \u003d this.storage.deleteData(idx);","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"        this.lastTaskRemoved \u003d removedTask;","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"        outMsg.append(removedTask).append(\"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"        outMsg.append(this.ui.printNumTask());","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"     * Takes in a string keyword from user input and find tasks with that keyword.","lastModifiedDate":"2023-09-11"},{"lineNumber":134,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"     * @param outMsg     StringBuilder object to craft bot response.","lastModifiedDate":"2023-09-11"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"     * @param descString Description portion of user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":137,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":138,"author":{"gitId":"AaronJT1"},"content":"    public void findTask(StringBuilder outMsg, String descString) {","lastModifiedDate":"2023-09-11"},{"lineNumber":139,"author":{"gitId":"AaronJT1"},"content":"        outMsg.append(this.ui.printKeywordTask(descString.substring(1)));","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"        outMsg.append(this.ui.printNumTask());","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":142,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":143,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"AaronJT1"},"content":"    public void undoCommand(StringBuilder outMsg) throws IndexOutOfRangeException, IOException {","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"AaronJT1"},"content":"        String[] cmdAndDesc \u003d this.parser.parseCommand(this.latestCommand);","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"AaronJT1"},"content":"        String cmdString;","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"AaronJT1"},"content":"        if (cmdAndDesc.length !\u003d 0) { // if user input is not a single command","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"AaronJT1"},"content":"            cmdString \u003d cmdAndDesc[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"AaronJT1"},"content":"            String descString \u003d cmdAndDesc[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"AaronJT1"},"content":"            switch (cmdString) {","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"AaronJT1"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"AaronJT1"},"content":"                unmarkTask(outMsg, descString);","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"AaronJT1"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"AaronJT1"},"content":"                markTask(outMsg, descString);","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"AaronJT1"},"content":"            case \"delete\":  // adds the last task removed into taskList again","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"AaronJT1"},"content":"                this.storage.addData(this.lastTaskRemovedEntry); // add entry to database","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"AaronJT1"},"content":"                this.taskList.addTask(this.lastTaskRemoved); // add to tasklist","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"AaronJT1"},"content":"                outMsg.append(\"Readded task \").append(this.lastTaskRemoved).append(\"!!!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"AaronJT1"},"content":"            default: // latest command is add task","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"AaronJT1"},"content":"                outMsg.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"AaronJT1"},"content":"                int idx \u003d this.taskList.getSize() - 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"AaronJT1"},"content":"                Task removedTask \u003d this.taskList.getTask(idx);","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"AaronJT1"},"content":"                this.taskList.removeTask(idx);","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"AaronJT1"},"content":"                this.storage.deleteData(idx);","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"AaronJT1"},"content":"                outMsg.append(removedTask);","lastModifiedDate":"2023-09-13"},{"lineNumber":169,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"AaronJT1"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"AaronJT1"},"content":"            outMsg.append(\"Latest command \\\"\").append(this.latestCommand).append(\"\\\" is not undoable!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":177,"author":{"gitId":"AaronJT1"},"content":"     * Takes in command portion of userinput and carry out respective action.","lastModifiedDate":"2023-09-11"},{"lineNumber":178,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":179,"author":{"gitId":"AaronJT1"},"content":"     * @param outMsg    StringBuilder object to craft bot response.","lastModifiedDate":"2023-09-11"},{"lineNumber":180,"author":{"gitId":"AaronJT1"},"content":"     * @param cmdString Command portion of user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":181,"author":{"gitId":"AaronJT1"},"content":"     * @throws NoSuchCommandException    If command does not exist.","lastModifiedDate":"2023-09-11"},{"lineNumber":182,"author":{"gitId":"AaronJT1"},"content":"     * @throws EmptyDescriptionException If second part of user input does not exist.","lastModifiedDate":"2023-09-11"},{"lineNumber":183,"author":{"gitId":"AaronJT1"},"content":"     * @throws IOException               Arose if there is issue updating database.","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":185,"author":{"gitId":"AaronJT1"},"content":"    public void getSingleCommandResponse(StringBuilder outMsg, String cmdString)","lastModifiedDate":"2023-09-11"},{"lineNumber":186,"author":{"gitId":"AaronJT1"},"content":"            throws NoSuchCommandException, EmptyDescriptionException, IndexOutOfRangeException, IOException {","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"AaronJT1"},"content":"        switch (cmdString) {","lastModifiedDate":"2023-09-11"},{"lineNumber":188,"author":{"gitId":"AaronJT1"},"content":"        case \"list\":","lastModifiedDate":"2023-09-11"},{"lineNumber":189,"author":{"gitId":"AaronJT1"},"content":"            outMsg.append(this.ui.printList());","lastModifiedDate":"2023-09-11"},{"lineNumber":190,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":191,"author":{"gitId":"AaronJT1"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-11"},{"lineNumber":192,"author":{"gitId":"AaronJT1"},"content":"            outMsg.append(this.ui.exit());","lastModifiedDate":"2023-09-11"},{"lineNumber":193,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":194,"author":{"gitId":"AaronJT1"},"content":"        case \"help\":","lastModifiedDate":"2023-09-11"},{"lineNumber":195,"author":{"gitId":"AaronJT1"},"content":"            outMsg.append(this.ui.getHelpMessage());","lastModifiedDate":"2023-09-11"},{"lineNumber":196,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"AaronJT1"},"content":"        case \"undo\":","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"AaronJT1"},"content":"            undoCommand(outMsg);","lastModifiedDate":"2023-09-13"},{"lineNumber":199,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":200,"author":{"gitId":"AaronJT1"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":201,"author":{"gitId":"AaronJT1"},"content":"            this.ui.checkCommand(cmdString);","lastModifiedDate":"2023-09-11"},{"lineNumber":202,"author":{"gitId":"AaronJT1"},"content":"            throw new NoSuchCommandException();","lastModifiedDate":"2023-09-11"},{"lineNumber":203,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":204,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":205,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":206,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":207,"author":{"gitId":"AaronJT1"},"content":"     * Takes in a full command (first part and description) of userinput and carry out respective action.","lastModifiedDate":"2023-09-11"},{"lineNumber":208,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":209,"author":{"gitId":"AaronJT1"},"content":"     * @param outMsg     StringBuilder object to craft bot response.","lastModifiedDate":"2023-09-11"},{"lineNumber":210,"author":{"gitId":"AaronJT1"},"content":"     * @param cmdString  Command portion of user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":211,"author":{"gitId":"AaronJT1"},"content":"     * @param descString Description portion of user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":212,"author":{"gitId":"AaronJT1"},"content":"     * @return Task object specified in user input.","lastModifiedDate":"2023-09-11"},{"lineNumber":213,"author":{"gitId":"AaronJT1"},"content":"     * @throws NoSuchCommandException    If command does not exist.","lastModifiedDate":"2023-09-11"},{"lineNumber":214,"author":{"gitId":"AaronJT1"},"content":"     * @throws IndexOutOfRangeException  If user gives an index bigger than taskList size.","lastModifiedDate":"2023-09-11"},{"lineNumber":215,"author":{"gitId":"AaronJT1"},"content":"     * @throws IOException               Arose if there is issue updating database.","lastModifiedDate":"2023-09-11"},{"lineNumber":216,"author":{"gitId":"AaronJT1"},"content":"     * @throws WrongDescriptionException If task description is invalid.","lastModifiedDate":"2023-09-11"},{"lineNumber":217,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":218,"author":{"gitId":"AaronJT1"},"content":"    public Task getFullCommandResponse(StringBuilder outMsg, String cmdString, String descString)","lastModifiedDate":"2023-09-11"},{"lineNumber":219,"author":{"gitId":"AaronJT1"},"content":"            throws NoSuchCommandException, IndexOutOfRangeException, IOException, WrongDescriptionException {","lastModifiedDate":"2023-09-11"},{"lineNumber":220,"author":{"gitId":"AaronJT1"},"content":"        switch (cmdString) {","lastModifiedDate":"2023-09-11"},{"lineNumber":221,"author":{"gitId":"AaronJT1"},"content":"        case \"mark\": {","lastModifiedDate":"2023-09-11"},{"lineNumber":222,"author":{"gitId":"AaronJT1"},"content":"            markTask(outMsg, descString);","lastModifiedDate":"2023-09-11"},{"lineNumber":223,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-11"},{"lineNumber":224,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":225,"author":{"gitId":"AaronJT1"},"content":"        case \"unmark\": {","lastModifiedDate":"2023-09-11"},{"lineNumber":226,"author":{"gitId":"AaronJT1"},"content":"            unmarkTask(outMsg, descString);","lastModifiedDate":"2023-09-11"},{"lineNumber":227,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-11"},{"lineNumber":228,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":229,"author":{"gitId":"AaronJT1"},"content":"        case \"delete\": {","lastModifiedDate":"2023-09-11"},{"lineNumber":230,"author":{"gitId":"AaronJT1"},"content":"            deleteTask(outMsg, descString);","lastModifiedDate":"2023-09-11"},{"lineNumber":231,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-11"},{"lineNumber":232,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":233,"author":{"gitId":"AaronJT1"},"content":"        case \"find\":","lastModifiedDate":"2023-09-11"},{"lineNumber":234,"author":{"gitId":"AaronJT1"},"content":"            findTask(outMsg, descString);","lastModifiedDate":"2023-09-11"},{"lineNumber":235,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":236,"author":{"gitId":"AaronJT1"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-11"},{"lineNumber":237,"author":{"gitId":"AaronJT1"},"content":"            return this.parser.getTodoTask(descString, false);","lastModifiedDate":"2023-09-11"},{"lineNumber":238,"author":{"gitId":"AaronJT1"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-11"},{"lineNumber":239,"author":{"gitId":"AaronJT1"},"content":"            return this.parser.getDeadlineTask(descString, false);","lastModifiedDate":"2023-09-11"},{"lineNumber":240,"author":{"gitId":"AaronJT1"},"content":"        case \"event\":","lastModifiedDate":"2023-09-11"},{"lineNumber":241,"author":{"gitId":"AaronJT1"},"content":"            return this.parser.getEventTask(descString, false);","lastModifiedDate":"2023-09-11"},{"lineNumber":242,"author":{"gitId":"AaronJT1"},"content":"        default:","lastModifiedDate":"2023-09-07"},{"lineNumber":243,"author":{"gitId":"AaronJT1"},"content":"            throw new NoSuchCommandException();","lastModifiedDate":"2023-08-22"},{"lineNumber":244,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":245,"author":{"gitId":"AaronJT1"},"content":"        return null;","lastModifiedDate":"2023-09-11"},{"lineNumber":246,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":247,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":248,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":249,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":250,"author":{"gitId":"AaronJT1"},"content":"     * Takes in user input and return the corresponding response.","lastModifiedDate":"2023-09-11"},{"lineNumber":251,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":252,"author":{"gitId":"AaronJT1"},"content":"     * @param userInput User Input from GUI","lastModifiedDate":"2023-09-11"},{"lineNumber":253,"author":{"gitId":"AaronJT1"},"content":"     * @return true to exit program, else function will be continuously called.","lastModifiedDate":"2023-09-11"},{"lineNumber":254,"author":{"gitId":"AaronJT1"},"content":"     * @throws NoSuchCommandException    If command does not exist.","lastModifiedDate":"2023-09-11"},{"lineNumber":255,"author":{"gitId":"AaronJT1"},"content":"     * @throws EmptyDescriptionException If second part of user input does not exist.","lastModifiedDate":"2023-09-11"},{"lineNumber":256,"author":{"gitId":"AaronJT1"},"content":"     * @throws IndexOutOfRangeException  If user gives an index bigger than taskList size.","lastModifiedDate":"2023-09-11"},{"lineNumber":257,"author":{"gitId":"AaronJT1"},"content":"     * @throws IOException               Arose if there is issue updating database.","lastModifiedDate":"2023-09-11"},{"lineNumber":258,"author":{"gitId":"AaronJT1"},"content":"     * @throws WrongDescriptionException If task description is invalid.","lastModifiedDate":"2023-09-11"},{"lineNumber":259,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":260,"author":{"gitId":"AaronJT1"},"content":"    public StringBuilder getBotResponse(String userInput)","lastModifiedDate":"2023-09-11"},{"lineNumber":261,"author":{"gitId":"AaronJT1"},"content":"            throws NoSuchCommandException, EmptyDescriptionException, IndexOutOfRangeException, IOException,","lastModifiedDate":"2023-09-11"},{"lineNumber":262,"author":{"gitId":"AaronJT1"},"content":"            WrongDescriptionException {","lastModifiedDate":"2023-09-11"},{"lineNumber":263,"author":{"gitId":"AaronJT1"},"content":"        StringBuilder outMsg \u003d new StringBuilder();","lastModifiedDate":"2023-09-11"},{"lineNumber":264,"author":{"gitId":"AaronJT1"},"content":"        String[] cmdAndDesc \u003d this.parser.parseCommand(userInput);","lastModifiedDate":"2023-09-11"},{"lineNumber":265,"author":{"gitId":"AaronJT1"},"content":"        String cmdString;","lastModifiedDate":"2023-09-11"},{"lineNumber":266,"author":{"gitId":"AaronJT1"},"content":"        if (cmdAndDesc.length \u003d\u003d 0) { // if user input is a single command","lastModifiedDate":"2023-09-11"},{"lineNumber":267,"author":{"gitId":"AaronJT1"},"content":"            cmdString \u003d userInput;","lastModifiedDate":"2023-09-11"},{"lineNumber":268,"author":{"gitId":"AaronJT1"},"content":"            getSingleCommandResponse(outMsg, cmdString);","lastModifiedDate":"2023-09-11"},{"lineNumber":269,"author":{"gitId":"AaronJT1"},"content":"        } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":270,"author":{"gitId":"AaronJT1"},"content":"            cmdString \u003d cmdAndDesc[0];","lastModifiedDate":"2023-09-11"},{"lineNumber":271,"author":{"gitId":"AaronJT1"},"content":"            String descString \u003d cmdAndDesc[1];","lastModifiedDate":"2023-09-11"},{"lineNumber":272,"author":{"gitId":"AaronJT1"},"content":"            Task task \u003d getFullCommandResponse(outMsg, cmdString, descString);","lastModifiedDate":"2023-09-11"},{"lineNumber":273,"author":{"gitId":"AaronJT1"},"content":"            if (task !\u003d null) { // add task to database and taskList","lastModifiedDate":"2023-09-07"},{"lineNumber":274,"author":{"gitId":"AaronJT1"},"content":"                addTask(outMsg, cmdString, descString, task);","lastModifiedDate":"2023-09-11"},{"lineNumber":275,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":276,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":277,"author":{"gitId":"AaronJT1"},"content":"        return outMsg;","lastModifiedDate":"2023-09-07"},{"lineNumber":278,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":279,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":280,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":281,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":282,"author":{"gitId":"AaronJT1"},"content":"     * Initialises the necessary components of the AJ chat-bot","lastModifiedDate":"2023-09-02"},{"lineNumber":283,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":284,"author":{"gitId":"AaronJT1"},"content":"     * @param filePath Filepath of database","lastModifiedDate":"2023-09-02"},{"lineNumber":285,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":286,"author":{"gitId":"AaronJT1"},"content":"    public void setUpBot(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":287,"author":{"gitId":"AaronJT1"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":288,"author":{"gitId":"AaronJT1"},"content":"        this.storage \u003d new Storage(this.parser, filePath);","lastModifiedDate":"2023-09-11"},{"lineNumber":289,"author":{"gitId":"AaronJT1"},"content":"        this.taskList \u003d new TaskList(this.storage.initialiseData());","lastModifiedDate":"2023-08-30"},{"lineNumber":290,"author":{"gitId":"AaronJT1"},"content":"        this.ui \u003d new Ui(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":291,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":292,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":293,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":294,"author":{"gitId":"AaronJT1"},"content":"    public void configureStage(Stage stage, AnchorPane mainLayout, Button sendButton) {","lastModifiedDate":"2023-09-11"},{"lineNumber":295,"author":{"gitId":"AaronJT1"},"content":"        stage.setTitle(\"Aj-Bot\");","lastModifiedDate":"2023-09-11"},{"lineNumber":296,"author":{"gitId":"AaronJT1"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-11"},{"lineNumber":297,"author":{"gitId":"AaronJT1"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-11"},{"lineNumber":298,"author":{"gitId":"AaronJT1"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-11"},{"lineNumber":299,"author":{"gitId":"AaronJT1"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-11"},{"lineNumber":300,"author":{"gitId":"AaronJT1"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-11"},{"lineNumber":301,"author":{"gitId":"AaronJT1"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-11"},{"lineNumber":302,"author":{"gitId":"AaronJT1"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-11"},{"lineNumber":303,"author":{"gitId":"AaronJT1"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-11"},{"lineNumber":304,"author":{"gitId":"AaronJT1"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-11"},{"lineNumber":305,"author":{"gitId":"AaronJT1"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-11"},{"lineNumber":306,"author":{"gitId":"AaronJT1"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-11"},{"lineNumber":307,"author":{"gitId":"AaronJT1"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-11"},{"lineNumber":308,"author":{"gitId":"AaronJT1"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-11"},{"lineNumber":309,"author":{"gitId":"AaronJT1"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-11"},{"lineNumber":310,"author":{"gitId":"AaronJT1"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-11"},{"lineNumber":311,"author":{"gitId":"AaronJT1"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-11"},{"lineNumber":312,"author":{"gitId":"AaronJT1"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-11"},{"lineNumber":313,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":314,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":315,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":316,"author":{"gitId":"AaronJT1"},"content":"     * Controls are like HTML elements like textField, image, button. Nodes can be controls","lastModifiedDate":"2023-09-07"},{"lineNumber":317,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":318,"author":{"gitId":"AaronJT1"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-07"},{"lineNumber":319,"author":{"gitId":"AaronJT1"},"content":"     *              the application scene can be set.","lastModifiedDate":"2023-09-07"},{"lineNumber":320,"author":{"gitId":"AaronJT1"},"content":"     *              Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-09-07"},{"lineNumber":321,"author":{"gitId":"AaronJT1"},"content":"     *              primary stages.","lastModifiedDate":"2023-09-07"},{"lineNumber":322,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":323,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":324,"author":{"gitId":"AaronJT1"},"content":"    public void start(Stage stage) { // first 2 steps in html/css, 3rd step is js","lastModifiedDate":"2023-09-07"},{"lineNumber":325,"author":{"gitId":"AaronJT1"},"content":"        String fullFilePath \u003d \"/Users/aaronjt/Documents/CS2103T_IP/ip/src/main/data/actualData.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":326,"author":{"gitId":"AaronJT1"},"content":"        setUpBot(fullFilePath);","lastModifiedDate":"2023-09-07"},{"lineNumber":327,"author":{"gitId":"AaronJT1"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":328,"author":{"gitId":"AaronJT1"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-07"},{"lineNumber":329,"author":{"gitId":"AaronJT1"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-07"},{"lineNumber":330,"author":{"gitId":"AaronJT1"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-07"},{"lineNumber":331,"author":{"gitId":"AaronJT1"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-07"},{"lineNumber":332,"author":{"gitId":"AaronJT1"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":333,"author":{"gitId":"AaronJT1"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-11"},{"lineNumber":334,"author":{"gitId":"AaronJT1"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-07"},{"lineNumber":335,"author":{"gitId":"AaronJT1"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":336,"author":{"gitId":"AaronJT1"},"content":"        stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":337,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":338,"author":{"gitId":"AaronJT1"},"content":"        configureStage(stage, mainLayout, sendButton);","lastModifiedDate":"2023-09-11"},{"lineNumber":339,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":340,"author":{"gitId":"AaronJT1"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":341,"author":{"gitId":"AaronJT1"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":342,"author":{"gitId":"AaronJT1"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":343,"author":{"gitId":"AaronJT1"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":344,"author":{"gitId":"AaronJT1"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":345,"author":{"gitId":"AaronJT1"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":346,"author":{"gitId":"AaronJT1"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-07"},{"lineNumber":347,"author":{"gitId":"AaronJT1"},"content":"        dialogContainer.getChildren()","lastModifiedDate":"2023-09-11"},{"lineNumber":348,"author":{"gitId":"AaronJT1"},"content":"                .addAll(DialogBox.getAjDialog(getDialogLabel(this.ui.greet()), new ImageView(ajImage)));","lastModifiedDate":"2023-09-11"},{"lineNumber":349,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":350,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":351,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":352,"author":{"gitId":"AaronJT1"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-07"},{"lineNumber":353,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":354,"author":{"gitId":"AaronJT1"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-09-07"},{"lineNumber":355,"author":{"gitId":"AaronJT1"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-07"},{"lineNumber":356,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":357,"author":{"gitId":"AaronJT1"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-07"},{"lineNumber":358,"author":{"gitId":"AaronJT1"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-09-07"},{"lineNumber":359,"author":{"gitId":"AaronJT1"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":360,"author":{"gitId":"AaronJT1"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":361,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":362,"author":{"gitId":"AaronJT1"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-07"},{"lineNumber":363,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":364,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":365,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":366,"author":{"gitId":"AaronJT1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":367,"author":{"gitId":"AaronJT1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":368,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":369,"author":{"gitId":"AaronJT1"},"content":"    private void handleUserInput() { // need change here***","lastModifiedDate":"2023-09-07"},{"lineNumber":370,"author":{"gitId":"AaronJT1"},"content":"        Label userLabel \u003d getDialogLabel(userInput.getText()); // get userinput from textField","lastModifiedDate":"2023-09-07"},{"lineNumber":371,"author":{"gitId":"AaronJT1"},"content":"        Label ajLabel \u003d getDialogLabel(getResponse(userInput.getText())); // get string, create label for dialogBox","lastModifiedDate":"2023-09-07"},{"lineNumber":372,"author":{"gitId":"AaronJT1"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(userLabel, new ImageView(userImage)),","lastModifiedDate":"2023-09-11"},{"lineNumber":373,"author":{"gitId":"AaronJT1"},"content":"                DialogBox.getAjDialog(ajLabel, new ImageView(ajImage)));","lastModifiedDate":"2023-09-11"},{"lineNumber":374,"author":{"gitId":"AaronJT1"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":375,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":376,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":377,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":378,"author":{"gitId":"AaronJT1"},"content":"     * Gets response from bot to be displayed to user.","lastModifiedDate":"2023-09-11"},{"lineNumber":379,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":380,"author":{"gitId":"AaronJT1"},"content":"     * @param userInput User\u0027s input into bot.","lastModifiedDate":"2023-09-11"},{"lineNumber":381,"author":{"gitId":"AaronJT1"},"content":"     * @return String response to be displayed to user.","lastModifiedDate":"2023-09-11"},{"lineNumber":382,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":383,"author":{"gitId":"AaronJT1"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-09-11"},{"lineNumber":384,"author":{"gitId":"AaronJT1"},"content":"        String outMsg \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":385,"author":{"gitId":"AaronJT1"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":386,"author":{"gitId":"AaronJT1"},"content":"            outMsg \u003d getBotResponse(userInput).toString();","lastModifiedDate":"2023-09-11"},{"lineNumber":387,"author":{"gitId":"AaronJT1"},"content":"        } catch (AjException | IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":388,"author":{"gitId":"AaronJT1"},"content":"            outMsg \u003d e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":389,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":390,"author":{"gitId":"AaronJT1"},"content":"        this.latestCommand \u003d userInput; // set user input as latest command","lastModifiedDate":"2023-09-13"},{"lineNumber":391,"author":{"gitId":"AaronJT1"},"content":"        return outMsg;","lastModifiedDate":"2023-09-07"},{"lineNumber":392,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":393,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":394,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":395,"author":{"gitId":"AaronJT1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":396,"author":{"gitId":"AaronJT1"},"content":"        Application.launch(Aj.class, args);","lastModifiedDate":"2023-09-11"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":398,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":399,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AaronJT1":397,"-":2}},{"path":"src/main/java/aj/AjException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":" * AjException class for exceptions related to Aj chat-bot.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"public class AjException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"    AjException(String msg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"        super(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":11}},{"path":"src/main/java/aj/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":" * Deadline class for Deadline Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    private final LocalDate by;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"        String formattedDate \u003d by.format(formatter);","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    Deadline(String taskName, boolean isMarked, LocalDate by) {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"        super(taskName,","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"                isMarked);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AaronJT1":25}},{"path":"src/main/java/aj/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"    private Label text;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"     * Factory method that takes in a Label and Imageview and return a DialogBox control for Aj-bot.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"     * @param l  Label control with text","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"     * @param iv Imageview control with the image","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"     * @return DialogBox control to be displayed in scene","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"    public static DialogBox getAjDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"        return new DialogBox(l,","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"                iv);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"     * Factory method that takes in a Label and Imageview and return a DialogBox control for user.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"     * @param l  Label control with text","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"     * @param iv Imageview control with the image","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"     * @return DialogBox control to be displayed in scene","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        var db \u003d new DialogBox(l,","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"                iv);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"        this.text \u003d l;","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        this.displayPicture \u003d iv;","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        this.getChildren().addAll(text,","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"                displayPicture);","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AaronJT1":64}},{"path":"src/main/java/aj/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":" * EmptyDescriptionException class for exceptions related to empty description.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"public class EmptyDescriptionException extends AjException {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    EmptyDescriptionException(String cmd, String helpMsg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"        super(\"OOPS!!! The description of a \" + cmd + \" cannot be empty.\\n\" + \"Try:\\n\" + helpMsg);","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":12}},{"path":"src/main/java/aj/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":" * Event class for Event Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    private final String fromDt, toDt;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    public String getFromDt() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"        return this.fromDt;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"    public String getToDt() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"        return this.toDt;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.fromDt + \" to: \" + this.toDt + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    Event(String taskName, boolean isMarked, String fromDt, String toDt) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"        super(taskName,","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"                isMarked);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"        this.fromDt \u003d fromDt;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"        this.toDt \u003d toDt;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AaronJT1":30}},{"path":"src/main/java/aj/IndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":" * IndexOutOfRangeException class for exceptions related to index being out of range.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"public class IndexOutOfRangeException extends AjException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"    IndexOutOfRangeException(int val) {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"        super(\"OOPS!!! Please choose an index within the number of items in the list \" + \"(\" + val + \")\");","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":11}},{"path":"src/main/java/aj/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"        Application.launch(Aj.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"//        Aj.main(args);","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AaronJT1":10}},{"path":"src/main/java/aj/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"    private Aj aj \u003d new Aj();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAj(aj);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AaronJT1":32}},{"path":"src/main/java/aj/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    private Aj aj;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"    public void setAj(Aj d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"        aj \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"//        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"//        String response \u003d aj.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"//        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input,","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"//                        userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"//                DialogBox.getDukeDialog(response,","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"//                        dukeImage));","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"//        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        Label dukeText \u003d new Label(aj.getResponse(userInput.getText()));","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(userText,","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"                        new ImageView(userImage)),","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"                DialogBox.getAjDialog(dukeText,","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"                        new ImageView(dukeImage)));","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AaronJT1":63}},{"path":"src/main/java/aj/NoSuchCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":" * NoSuchCommandException class for exceptions related to unknown commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"public class NoSuchCommandException extends AjException {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    NoSuchCommandException() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n Type \u0027help\u0027 to find out more!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":12}},{"path":"src/main/java/aj/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":" * Parser class to parse user input and return respective Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"     * Takes in user input string, parse it, and return command string and task string","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"     * @return String array, where first element is command, and second element is task, if no match, return empty","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"     * array.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    public String[] parseCommand(String userInput) {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"        Pattern pattern \u003d Pattern.compile(\"(\\\\w+) (.*)\");","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"        Matcher matcher \u003d pattern.matcher(userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"        String[] strArray;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"            String command \u003d matcher.group(1);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"            String taskString \u003d matcher.group(2);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"            taskString \u003d \" \" + taskString;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"            strArray \u003d new String[]{command, taskString};","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"            return strArray;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        return new String[]{};","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"     * Creates and return a Todo Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"     * @param remaining The remaining sub-command from user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"     * @param isMark    Mark task as complete or not.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"     * @return Todo Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"    public Task getTodoTask(String remaining, boolean isMark) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        return new Todo(remaining.substring(1), isMark);","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"     * Creates and return a Deadline Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"     * @param remaining The remaining sub-command from user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"     * @param isMark    Mark task as complete or not.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"     * @return Deadline Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"     * @throws WrongDescriptionException If task description is invalid.","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"    public Task getDeadlineTask(String remaining, boolean isMark)","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"            throws WrongDescriptionException { // takes in command, parse it and return task object","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"        String pattern \u003d \" (.*) /by (.*)\";","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        Pattern regexPattern \u003d Pattern.compile(pattern);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"        Matcher matcher \u003d regexPattern.matcher(remaining);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"                String taskName \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"                String by \u003d matcher.group(2);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"                LocalDate newDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"                return new Deadline(taskName, isMark, newDate);","lastModifiedDate":"2023-09-11"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"            throw new WrongDescriptionException(\"ERROR!! Please ensure that your date format is correct\");","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        throw new WrongDescriptionException(\"ERROR!! Please type \u0027deadline\u0027 to view correct format!!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"     * Creates and return a Event Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"     * @param remaining The remaining sub-command from user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"     * @param isMark    Mark task as complete or not.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"     * @return Event Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"     * @throws WrongDescriptionException If task description is invalid.","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"    public Task getEventTask(String remaining, boolean isMark)","lastModifiedDate":"2023-09-11"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"            throws WrongDescriptionException { // takes in command, parse it and return task object","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"        String pattern \u003d \" (.*) /from (.*?) /to (.*)\";","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"        Pattern regexPattern \u003d Pattern.compile(pattern);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"        Matcher matcher \u003d regexPattern.matcher(remaining);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"            String taskName \u003d matcher.group(1);","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"            String startTime \u003d matcher.group(2);","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"            String endTime \u003d matcher.group(3);","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"            return new Event(taskName, isMark, startTime, endTime);","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"        throw new WrongDescriptionException(\"ERROR!! Please type \u0027event\u0027 to view correct format!!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":96}},{"path":"src/main/java/aj/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":" * Storage class responsible for CRUD operations with database.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    final String FILEPATH;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"     * Gets raw data from database and return task related to it.","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"     * @param line Data from database.","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"     * @return Task associated to the data.","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"     * @throws WrongDescriptionException If command from user input does not exist.","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    public Task getTaskFromData(String line) throws WrongDescriptionException {","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"        String[] parsedValues \u003d line.split(\",\");","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        Scanner strScanner \u003d new Scanner(parsedValues[0]);","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"        String command \u003d strScanner.next().toLowerCase();","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"        String remaining \u003d strScanner.nextLine();","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"        boolean isMark \u003d Boolean.parseBoolean(parsedValues[1]);","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        Task task;","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"        switch (command) {","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"            task \u003d this.parser.getTodoTask(remaining, isMark);","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"            task \u003d this.parser.getDeadlineTask(remaining, isMark);","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        case \"event\":","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"            task \u003d this.parser.getEventTask(remaining, isMark);","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"            task \u003d null;","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"        return task;","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"     * Reads data from database, creates the necessary Task objects and returns an Arraylist of Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"     * @return Arraylist of Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"    public List\u003cTask\u003e initialiseData() {","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        File file \u003d new File(this.FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"            System.out.println(\"File does not exist.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"            return null;","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"            String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"                taskList.add(getTaskFromData(line));","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"        } catch (IOException | WrongDescriptionException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"        return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"     * Set the \u0027isMarked\u0027 attribute of the Task at index \u0027idx\u0027 to \u0027isMarked\u0027 in database.","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"     * @param idx      Index of the database (starting from 0).","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"     * @param isMarked True to mark Task as completed, false otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"     * @throws IOException Arose if there is issue updating database.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"    public void updateData(int idx, boolean isMarked) throws IOException { // linenumber refers to index from 0","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"        Path myPath \u003d Paths.get(this.FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(myPath, StandardCharsets.UTF_8));","lastModifiedDate":"2023-09-11"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 0; i \u003c fileContent.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"            if (i \u003d\u003d idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"                String[] parsedValues \u003d fileContent.get(i).split(\",\");","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"                String newLineContent \u003d parsedValues[0] + \",\" + Boolean.toString(isMarked);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"                fileContent.set(i, newLineContent);","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"        Files.write(myPath, fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"     * Deletes data of Task at index \u0027idx\u0027 from database.","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"     * @param idx Index of that Task to be deleted (starting from 0).","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"     * @throws IOException Arose if there is issue updating database.","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"    public String deleteData(int idx) throws IOException { // get linenumber and delete that entry","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"        Path myPath \u003d Paths.get(this.FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"        String deletedLine \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"AaronJT1"},"content":"        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(myPath, StandardCharsets.UTF_8));","lastModifiedDate":"2023-09-11"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 0; i \u003c fileContent.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"            if (i \u003d\u003d idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"                deletedLine \u003d fileContent.get(i);","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"                fileContent.remove(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"        Files.write(myPath, fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"        return deletedLine;","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"     * Adds new Task into database.","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"     * @param str Full data string to be stored in database.","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"     * @throws IOException Arose if there is issue updating database.","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"    public void addData(String str) throws IOException { // get linenumber and delete that entry","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"AaronJT1"},"content":"        Path myPath \u003d Paths.get(this.FILEPATH);","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(myPath, StandardCharsets.UTF_8));","lastModifiedDate":"2023-09-11"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"        fileContent.add(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"        Files.write(myPath, fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2023-09-11"},{"lineNumber":134,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"    Storage(Parser parser, String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"AaronJT1"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"AaronJT1"},"content":"        this.FILEPATH \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":140}},{"path":"src/main/java/aj/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":" * Task abstract class for user tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    protected boolean isMarked;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    protected String taskName;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"    public void toggleComplete() {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"        this.isMarked \u003d !this.isMarked;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"        return this.isMarked;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"        return this.taskName;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"        return (this.isMarked ? \"[X] \" : \"[ ] \") + this.taskName;","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"    Task(String taskName, boolean completed) {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"        this.isMarked \u003d completed;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AaronJT1":35}},{"path":"src/main/java/aj/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":" * TaskList wrapper class to integrate with Storage class.","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    List\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"        return this.taskList.get(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"    public void removeTask(int idx) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"        this.taskList.remove(idx);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":31}},{"path":"src/main/java/aj/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":" * Todo class for Todo Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    Todo(String taskName, boolean isMarked) {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"        super(taskName,","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"                isMarked);","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AaronJT1":18}},{"path":"src/main/java/aj/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":" * Ui class responsible for User Interface of the programme. Return string instead","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":" * change java doc","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"    TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    public String horiLine() {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"        return \"---------------------\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"     * Greets user.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"    public String greet() {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"        return horiLine() + \"Hello! I\u0027m Aj\\n\" + \"Loading data....\\nHere are your saved data:\\n\" + printList() +","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"                \"\\nWhat can i do for you?\\n\" + horiLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"        return \"Here is a list of commands you can try:\\n\\n\" + \"list - To list your added tasks\\n\" + \"mark - To mark \"","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"                + \"a \" + \"task as completed\\n\" + \"unmark - To unmark a task\\n\" + \"delete - To delete a task\\n\" +","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"                \"find \" + \"- To \" + \"find any keyword related to the task\\n\" + \"todo - To create a \u0027Todo\u0027 task\\n\" +","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"                \"deadline -\" + \" To \" + \"creete\" + \" a \u0027deadline\u0027 task\\n\" + \"event - To create an \u0027event\u0027 \" + \"task\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"                + \"undo - To undo latest command \\n\" + \"\\n\\n\\n\" + \"To get \" + \"more \" + \"specific help for \" + \"each \" +","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"                \"command, type the command itself!!!\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"     * Throws error with help message if command is valid, throws NoSuchCommandException otherwise","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"     * @param cmd First part of user input which indicates type of command.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"     * @throws EmptyDescriptionException If second part of user input does not exist.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"     * @throws NoSuchCommandException    If command from user input does not exist.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"    public void checkCommand(String cmd)","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"            throws EmptyDescriptionException, NoSuchCommandException { // if no arguments, give help message","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"        String helpMessage;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        switch (cmd) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"            helpMessage \u003d \"todo \u003ctask name\u003e\";","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"            helpMessage \u003d \"deadline \u003ctask name\u003e /by \u003cYYYY-MM-DD\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"        case \"event\":","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"            helpMessage \u003d \"event \u003ctask name\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e\";","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"            helpMessage \u003d \"mark \u003ctask_no\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"            helpMessage \u003d \"unmark \u003ctask_no\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"            helpMessage \u003d \"delete \u003ctask_no\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        case \"find\":","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"            helpMessage \u003d \"find \u003cany keyword related to the task\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"        default:","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"            throw new NoSuchCommandException();","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        throw new EmptyDescriptionException(cmd, helpMessage);","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"     * Takes in an index \u0027idx\u0027 and checks if it is within range of taskList size.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"     * @param idx Index given by user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"     * @throws IndexOutOfRangeException If user gives an index \u0027idx\u0027 bigger than taskList size.","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"    public void checkIndex(int idx) throws IndexOutOfRangeException { // throws error if index invalid","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"        if (idx \u003c\u003d this.taskList.getSize() - 1 \u0026\u0026 idx \u003e\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"            return;","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"            throw new IndexOutOfRangeException(this.taskList.getSize());","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"     * Prints number of Tasks in taskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"    public String printNumTask() {","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"//        System.out.printf(\"Now you have %d tasks in the list.\\n\",","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"//                this.taskList.getSize());","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"        return String.format(\"Now you have %d tasks in the list.\\n\", this.taskList.getSize());","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"     * Prints the Tasks in taskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"    public String printList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"        if (this.taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"//            System.out.println(\"No items yet, add something!!!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"            str \u003d \"No items yet, add something!!!\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 1; i \u003c\u003d this.taskList.getSize(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"            assert this.taskList.getSize() !\u003d 0 : \"Tasklist size should be 0\";","lastModifiedDate":"2023-09-11"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"//        System.out.println(i + \".\" + this.lst[i - 1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"//            System.out.println(i + \".\" + this.taskList.getTask(i - 1));","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"            str +\u003d i + \".\" + this.taskList.getTask(i - 1) + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"        return str;","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"AaronJT1"},"content":"    public String printKeywordTask(String k) {","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"        str +\u003d \"Finding tasks with names matching : \\\"\" + k + \"\\\"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"        str +\u003d \"Here they are!!:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"//        System.out.println(\"Finding tasks with names matching : \\\"\" + k + \"\\\"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"//        System.out.println(\"Here they are!!:\");","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"        int no \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 0; i \u003c this.taskList.getSize(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"            Task task \u003d this.taskList.getTask(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"            if (task.getTaskName().contains(k)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"//                System.out.println(Integer.toString(no) + \".\" + task);","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"                str +\u003d Integer.toString(no++) + \".\" + task + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"        str +\u003d horiLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"        return str;","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"     * Prints exit message.","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"    public String exit() {","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"//        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"        horiLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"AaronJT1"},"content":"        return \"Bye. Hope to see you again soon!\" + horiLine() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"AaronJT1"},"content":"    Ui(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"AaronJT1"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":140}},{"path":"src/main/java/aj/UiOld.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":" * Ui class responsible for User Interface of the programme.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"public class UiOld {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"    TaskList taskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    public void horiLine() {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"---------------------\");","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"     * Greets user.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"    public void greet() {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"        horiLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"Hello! I\u0027m Aj\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"Loading data....\\nHere are your saved data:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"        printList();","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"\\nWhat can i do for you?\");","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"        horiLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"     * Checks that user input is correct, prints help message and throws error otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"     * @param cmd First part of user input which indicates type of command.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"     * @param msg Second part of user input which indicates content and parameters.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"     * @throws EmptyDescriptionException If second part of user input does not exist.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"    public void checkMessage(String cmd, String msg) throws","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"            EmptyDescriptionException { // if no arguments, give help message","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"        String helpMessage;","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        if (msg.length() \u003d\u003d 0 || msg.equals(\" \")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"            if (cmd.equals(\"todo\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"todo \u003ctask name\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"            } else if (cmd.equals(\"deadline\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"deadline \u003ctask name\u003e /by \u003cdate/time\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"            } else if (cmd.equals(\"event\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"event \u003ctask name\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"            } else if (cmd.equals(\"mark\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"mark \u003cidx\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"            } else if (cmd.equals(\"unmark\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"unmark \u003cidx\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"            } else if (cmd.equals(\"delete\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"delete \u003cidx\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"            } else if (cmd.equals(\"find\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"find \u003cany keyword for task name\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"            } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"                helpMessage \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"            throw new EmptyDescriptionException(cmd,","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"                    helpMessage);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"     * Takes in an index \u0027idx\u0027 and checks if it is within range of taskList size.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"     * @param idx Index given by user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"     * @throws IndexOutOfRangeException If user gives an index \u0027idx\u0027 bigger than taskList size.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"    public void checkIndex(int idx) throws IndexOutOfRangeException { // throws error if index invalid","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        if (idx \u003c\u003d this.taskList.getSize() - 1 \u0026\u0026 idx \u003e\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"            return;","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"            throw new IndexOutOfRangeException(this.taskList.getSize());","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"     * Prints number of Tasks in taskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"    public void printNumTask() {","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\",","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"                this.taskList.getSize());","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"     * Prints the Tasks in taskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"    public void printList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"        if (this.taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"            System.out.println(\"No items yet, add something!!!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 1; i \u003c\u003d this.taskList.getSize(); i++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"//        System.out.println(i + \".\" + this.lst[i - 1]);","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"            System.out.println(i + \".\" + this.taskList.getTask(i - 1));","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"    public void printKeywordTask(String k) {","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"Finding tasks with names matching : \\\"\" + k + \"\\\"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"Here they are!!:\");","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"        int no \u003d 1;","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 0; i \u003c this.taskList.getSize(); i++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"            Task task \u003d this.taskList.getTask(i);","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"            if (task.getTaskName().contains(k)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"                System.out.println(Integer.toString(no) + \".\" + task);","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"        horiLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"     * Prints exit message.","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"AaronJT1"},"content":"    public void exit() {","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"        horiLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"    UiOld(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AaronJT1":118}},{"path":"src/main/java/aj/WrongDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":" * WrongDescriptionException class for exceptions related to invalid task description from user input","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"public class WrongDescriptionException extends AjException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"    WrongDescriptionException(String errMsg) {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"        super(errMsg);","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AaronJT1":10}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AaronJT1":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"aj.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"AaronJT1":19}},{"path":"src/test/java/aj/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"public class EventTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    public void fromDt_correctInput_stringReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"        Event testTask \u003d new Event(\"project meeting\", false, \"Mon 2pm\", \"4pm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(testTask.getFromDt(), \"Mon 2pm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"    public void toDt_correctInput_stringReturned() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"        Event testTask \u003d new Event(\"project meeting\", false, \"Mon 2pm\", \"4pm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(testTask.getToDt(), \"4pm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    public void toString_noInput_stringPrinted() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"        Event testTask \u003d new Event(\"project meeting\", false, \"Mon 2pm\", \"4pm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(testTask.toString(), \"[E][ ] project meeting (from: Mon 2pm to: 4pm)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":25}},{"path":"src/test/java/aj/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    public void getTodoTask_correctInput_taskReturned() { // test that the Todo Task created have same behaviour","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d \"todo return book\";","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"        Scanner scanner \u003d new Scanner(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"        String command \u003d scanner.next().toLowerCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"        String remaining \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"        Task testTask \u003d parser.getTodoTask(remaining, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(testTask instanceof Todo); // test object returned is Todo task","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(testTask.taskName, \"return book\"); // test taskName correct","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(testTask.isMarked); // test isMarked set to false","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    public void getDeadlineTask_correctInput_taskReturned() throws WrongDescriptionException { // test that the deadline Task created have same behaviour","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d \"deadline homework /by 2019-10-15\";","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"        Scanner scanner \u003d new Scanner(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"        String command \u003d scanner.next().toLowerCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"        String remaining \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"        Task testTask \u003d parser.getDeadlineTask(remaining, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(testTask instanceof Deadline); // test object returned is Deadline task","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(testTask.taskName, \"homework\"); // test taskName correct","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(testTask.isMarked); // test isMarked set to false","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(testTask.toString(), \"[D][ ] homework (by: Oct 15 2019)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"    public void getEventTask_correctInput_taskReturned() throws WrongDescriptionException { // test that the event Task created have same behaviour","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d \"event project meeting /from Mon 2pm /to 4pm\";","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"        Scanner scanner \u003d new Scanner(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        String command \u003d scanner.next().toLowerCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        String remaining \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        Task testTask \u003d parser.getEventTask(remaining, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(testTask instanceof Event); // test object returned is Deadline task","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(testTask.taskName, \"project meeting\"); // test taskName correct","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(testTask.isMarked); // test isMarked set to false","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(testTask.toString(), \"[E][ ] project meeting (from: Mon 2pm to: 4pm)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"AaronJT1":50}},{"path":"src/test/java/aj/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package aj;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"public class UiTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"    public TaskList createTestTaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d \"todo return book\";","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"        Scanner scanner \u003d new Scanner(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"        String command \u003d scanner.next().toLowerCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"        String remaining \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"        Task testTodoTask \u003d parser.getTodoTask(remaining,","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"                false);","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"        taskList.add(testTodoTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"        return new TaskList(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    public void checkIndex_correctIndex_noExceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"        TaskList testTaskList \u003d createTestTaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"        Ui testUi \u003d new Ui(testTaskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        boolean haveException \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"            testUi.checkIndex(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        } catch (IndexOutOfRangeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"            haveException \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"        } finally {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"            assertFalse(haveException);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"    public void checkIndex_incorrectIndex_ExceptionThrown() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        TaskList testTaskList \u003d createTestTaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        Ui testUi \u003d new Ui(testTaskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        boolean haveException \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"            testUi.checkIndex(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        } catch (IndexOutOfRangeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"            haveException \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"        } finally {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"            assertTrue(haveException);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"    public void checkCommand_wrongInput_EmptyDescriptionExceptionThrown() {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        TaskList testTaskList \u003d createTestTaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"        Ui testUi \u003d new Ui(testTaskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d \"todo\";","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        boolean isCorrect \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"            testUi.checkCommand(userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        } catch (AjException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"            if (e instanceof EmptyDescriptionException) {","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"                isCorrect \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        } finally {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"            assertTrue(isCorrect);","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"    public void checkCommand_wrongInput_NoSuchCommandExceptionThrown() {","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"        TaskList testTaskList \u003d createTestTaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"        Ui testUi \u003d new Ui(testTaskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d \"deadline wrong command\"; // no \u0027by\u0027 flag","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"        boolean isCorrect \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"            testUi.checkCommand(userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"        } catch (AjException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"            if (e instanceof NoSuchCommandException) {","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"                isCorrect \u003d true;","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"        } finally {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"            assertTrue(isCorrect);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"AaronJT1":86}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"unmark 2","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"unmark 3","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"mark","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"mark 2","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"deadline return book /by 2023-10-20","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"mark 5","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"mark 4","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"unmark 1","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"delete 5","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"delete 7","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"delete 3","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"delete 3","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"delete 2","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"delete 1","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"event","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"todo return book","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"AaronJT1":28}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/aj/*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"java -classpath ../bin Aj \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AaronJT1":2,"-":36}}]
