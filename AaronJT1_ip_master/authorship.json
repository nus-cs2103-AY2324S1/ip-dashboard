[{"path":"src/main/java/Aj.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"import java.util.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-19"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import java.util.regex.*;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"public class Aj {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"/*","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"First take a command, parse to parser, create the necessary task objects, add the task etc","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"Since each task have different flags, we parse to that task object to parse the remaining themselves","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"//  Task[] lst \u003d new Task[100];","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"  List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"//  int count \u003d 0;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"  public void horiLine() {","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"    System.out.println(\"---------------------\");","lastModifiedDate":"2023-08-19"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"  public void greet() {","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"    System.out.println(\"---------------------\");","lastModifiedDate":"2023-08-19"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"    System.out.println(\"Hello! I\u0027m Aj\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    horiLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"  public Task getDeadlineTask(String remaining) { // takes in command, parse it and return task object","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    String pattern \u003d \" (.*) /by (.*)\";","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    Pattern regexPattern \u003d Pattern.compile(pattern);","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"    Matcher matcher \u003d regexPattern.matcher(remaining);","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"    if (matcher.matches()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"      String taskName \u003d matcher.group(1);","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"      String by \u003d matcher.group(2);","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"      return new Deadline(taskName, by);","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"    return null;","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"  public Task getEventTask(String remaining) { // takes in command, parse it and return task object","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"    String pattern \u003d \" (.*) /from (.*?) /to (.*)\";","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"    Pattern regexPattern \u003d Pattern.compile(pattern);","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"    Matcher matcher \u003d regexPattern.matcher(remaining);","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"    if (matcher.matches()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"      String taskName \u003d matcher.group(1);","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"      String startTime \u003d matcher.group(2);","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"      String endTime \u003d matcher.group(3);","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"      return new Event(taskName, startTime, endTime);","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"    return null;","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"  public void checkIndex(int val) throws IndexOutOfRangeException { // throws error if index invalid","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"    if (val \u003c\u003d this.lst.size() - 1 \u0026\u0026 val \u003e\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"      return;","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"    } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"      throw new IndexOutOfRangeException(this.lst.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"  public void printNoTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"    System.out.printf(\"Now you have %d tasks in the list.\\n\", this.lst.size());","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"  public boolean askCommand(Scanner scanner) throws NoSuchCommandException, EmptyDescriptionException, IndexOutOfRangeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"    // returns true if \u0027bye\u0027 is called","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"//    System.out.println(\"Calling\");","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"    String command \u003d scanner.next().toLowerCase();","lastModifiedDate":"2023-08-19"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"//        String front \u003d command.split(\" \")[0];","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"//        String back \u003d command.split(\" \")[1];","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"    if (command.equals(\"mark\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"      String back \u003d scanner.next();","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"      int idx \u003d Integer.parseInt(back) - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"      checkIndex(idx);","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"//      Task task \u003d this.lst[idx];","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"      Task task \u003d this.lst.get(idx);","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"      horiLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"      if (task.isCompleted()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"You have already marked it!!!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"      } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"        task.toggleComplete();","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"      }","lastModifiedDate":"2023-08-19"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"    } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"      String back \u003d scanner.next();","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"      int idx \u003d Integer.parseInt(back) - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"      checkIndex(idx);","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"//      Task task \u003d this.lst[idx];","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"      Task task \u003d this.lst.get(idx);","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"      horiLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"      if (!task.isCompleted()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"Task is already unmarked!!!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"      } else {","lastModifiedDate":"2023-08-19"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"        task.toggleComplete();","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"      }","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"    } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"      if (this.lst.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"No items yet, add something!!!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"      }","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"      for (int i \u003d 1; i \u003c\u003d this.lst.size(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"//        System.out.println(i + \".\" + this.lst[i - 1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(i + \".\" + this.lst.get(i - 1));","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"      }","lastModifiedDate":"2023-08-20"},{"lineNumber":110,"author":{"gitId":"AaronJT1"},"content":"    } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"      String back \u003d scanner.next();","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"      int idx \u003d Integer.parseInt(back) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"      checkIndex(idx);","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"      horiLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"      System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"      Task removedTask \u003d this.lst.get(idx);","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"      this.lst.remove(idx);","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"      System.out.println(removedTask);","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"      printNoTask();","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"    } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"      exit();","lastModifiedDate":"2023-08-20"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"      return true;","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"    } else { // if its none of the main commands, then its a task. do logic for parsing here or thr","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"      String remaining \u003d scanner.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"      horiLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"      Task task \u003d null;","lastModifiedDate":"2023-08-20"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"      if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":130,"author":{"gitId":"AaronJT1"},"content":"        checkMessage(command, remaining);","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"        task \u003d new Todo(remaining.substring(1));","lastModifiedDate":"2023-08-20"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"      } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"        checkMessage(command, remaining);","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"AaronJT1"},"content":"        task \u003d getDeadlineTask(remaining);","lastModifiedDate":"2023-08-20"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"      } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"        checkMessage(command, remaining);","lastModifiedDate":"2023-08-22"},{"lineNumber":137,"author":{"gitId":"AaronJT1"},"content":"        task \u003d getEventTask(remaining);","lastModifiedDate":"2023-08-20"},{"lineNumber":138,"author":{"gitId":"AaronJT1"},"content":"      } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":139,"author":{"gitId":"AaronJT1"},"content":"//        System.out.println(\"No such command!!! Try again!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"        throw new NoSuchCommandException();","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"AaronJT1"},"content":"      }","lastModifiedDate":"2023-08-20"},{"lineNumber":142,"author":{"gitId":"AaronJT1"},"content":"      if (task !\u003d null) { // have a task","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"AaronJT1"},"content":"//        lst[count] \u003d task;","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"AaronJT1"},"content":"        this.lst.add(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"AaronJT1"},"content":"//        this.count +\u003d 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-20"},{"lineNumber":147,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-20"},{"lineNumber":148,"author":{"gitId":"AaronJT1"},"content":"        printNoTask();","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"AaronJT1"},"content":"      }","lastModifiedDate":"2023-08-20"},{"lineNumber":150,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":151,"author":{"gitId":"AaronJT1"},"content":"    horiLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":152,"author":{"gitId":"AaronJT1"},"content":"    return false;","lastModifiedDate":"2023-08-22"},{"lineNumber":153,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":154,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":155,"author":{"gitId":"AaronJT1"},"content":"  public void checkMessage(String cmd, String msg) throws EmptyDescriptionException {","lastModifiedDate":"2023-08-22"},{"lineNumber":156,"author":{"gitId":"AaronJT1"},"content":"    String helpMessage;","lastModifiedDate":"2023-08-22"},{"lineNumber":157,"author":{"gitId":"AaronJT1"},"content":"    if (msg.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-22"},{"lineNumber":158,"author":{"gitId":"AaronJT1"},"content":"      if (cmd.equals(\"todo\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":159,"author":{"gitId":"AaronJT1"},"content":"        helpMessage \u003d \"todo \u003ctask name\u003e\";","lastModifiedDate":"2023-08-22"},{"lineNumber":160,"author":{"gitId":"AaronJT1"},"content":"      } else if (cmd.equals(\"deadline\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":161,"author":{"gitId":"AaronJT1"},"content":"        helpMessage \u003d \"deadline \u003ctask name\u003e /by \u003cdate/time\u003e\";","lastModifiedDate":"2023-08-22"},{"lineNumber":162,"author":{"gitId":"AaronJT1"},"content":"      } else if (cmd.equals(\"event\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":163,"author":{"gitId":"AaronJT1"},"content":"        helpMessage \u003d \"event \u003ctask name\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e\";","lastModifiedDate":"2023-08-22"},{"lineNumber":164,"author":{"gitId":"AaronJT1"},"content":"      } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":165,"author":{"gitId":"AaronJT1"},"content":"        helpMessage \u003d \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":166,"author":{"gitId":"AaronJT1"},"content":"      }","lastModifiedDate":"2023-08-22"},{"lineNumber":167,"author":{"gitId":"AaronJT1"},"content":"      throw new EmptyDescriptionException(cmd, helpMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":168,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":169,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":170,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":171,"author":{"gitId":"AaronJT1"},"content":"  public void exit() {","lastModifiedDate":"2023-08-20"},{"lineNumber":172,"author":{"gitId":"AaronJT1"},"content":"    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-19"},{"lineNumber":173,"author":{"gitId":"AaronJT1"},"content":"    horiLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":174,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-19"},{"lineNumber":175,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"AaronJT1"},"content":"//        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-08-19"},{"lineNumber":178,"author":{"gitId":"AaronJT1"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-08-19"},{"lineNumber":179,"author":{"gitId":"AaronJT1"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-08-19"},{"lineNumber":180,"author":{"gitId":"AaronJT1"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-08-19"},{"lineNumber":181,"author":{"gitId":"AaronJT1"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-08-19"},{"lineNumber":182,"author":{"gitId":"AaronJT1"},"content":"//        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-08-19"},{"lineNumber":183,"author":{"gitId":"AaronJT1"},"content":"    Aj bot \u003d new Aj();","lastModifiedDate":"2023-08-22"},{"lineNumber":184,"author":{"gitId":"AaronJT1"},"content":"    bot.greet();","lastModifiedDate":"2023-08-20"},{"lineNumber":185,"author":{"gitId":"AaronJT1"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":186,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":187,"author":{"gitId":"AaronJT1"},"content":"    while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":188,"author":{"gitId":"AaronJT1"},"content":"      try {","lastModifiedDate":"2023-08-22"},{"lineNumber":189,"author":{"gitId":"AaronJT1"},"content":"        if (bot.askCommand(scanner)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":190,"author":{"gitId":"AaronJT1"},"content":"          break;","lastModifiedDate":"2023-08-22"},{"lineNumber":191,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":192,"author":{"gitId":"AaronJT1"},"content":"      } catch (AjException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":193,"author":{"gitId":"AaronJT1"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-22"},{"lineNumber":194,"author":{"gitId":"AaronJT1"},"content":"        bot.horiLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":195,"author":{"gitId":"AaronJT1"},"content":"      }","lastModifiedDate":"2023-08-22"},{"lineNumber":196,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AaronJT1":195,"-":3}},{"path":"src/main/java/AjException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"public class AjException extends Exception{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"  AjException(String msg) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"    super(msg);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"AaronJT1":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"  private final String by;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"  Deadline(String taskName, String by) {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    super(taskName);","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    this.by \u003d by;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AaronJT1":13}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"public class EmptyDescriptionException extends AjException{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"  EmptyDescriptionException(String cmd, String helpMsg) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"    super(\"OOPS!!! The description of a \" + cmd + \" cannot be empty.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"            \"Try:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"            helpMsg);","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"AaronJT1":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"import java.util.regex.*;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"  private final String from, to;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"    return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"  Event(String taskName, String from, String to) {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"    super(taskName);","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"    this.from \u003d from;","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    this.to \u003d to;","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AaronJT1":16}},{"path":"src/main/java/IndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"public class IndexOutOfRangeException extends AjException {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"  IndexOutOfRangeException(int val) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"    super(\"OOPS!!! Please choose an index within the number of items in the list \" + \"(\" + val + \")\");","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"AaronJT1":5}},{"path":"src/main/java/NoSuchCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"public class NoSuchCommandException extends AjException{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"  NoSuchCommandException() {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"    super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"            \"Heres some commands for you:\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"            \"type \\\"list\\\" to list tasks\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"            \"type \\\"todo\\\" to view available todo options\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"            \"type \\\"deadline\\\" to view available deadline options\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"            \"type \\\"event\\\" to view available event options\\n\");","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"AaronJT1":10}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"  protected boolean completed;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"  protected String taskName;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"  public void toggleComplete() {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"    this.completed \u003d !this.completed;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"  public boolean isCompleted() {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    return this.completed;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"    return (this.completed ? \"[X] \" : \"[ ] \") + this.taskName;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"  Task(String taskName) {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    this.taskName \u003d taskName;","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"    this.completed \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AaronJT1":24}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"  @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"  public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"  Todo(String taskName) {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"    super(taskName);","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"  }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"AaronJT1":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"todo","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"deadline","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"event","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"mark 3","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"unmark 4","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"delete 4","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"delete 3","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"AaronJT1":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"java -classpath ../bin Aj \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AaronJT1":1,"-":37}}]
