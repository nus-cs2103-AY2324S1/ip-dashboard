[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    mainClass.set(\"duke.CheeChat\")","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"cheeggered":2}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"[T][ ] ip","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"[D][X] assignment (by: 2019-10-15)","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"[D][ ] vote (by: 2023-09-01)","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"[E][ ] repair (from: 2023-09-01 to: 2023-09-02)","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"[D][ ] 2101 script (by: 2023-09-04)","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":5}},{"path":"src/main/java/duke/CheeChat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":" * This class implements the CheeChatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":" * The chatbot reads and stores tasks that users input.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":" * It will run until the \"bye\" command is read.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"public class CheeChat {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"     * Constructor for the CheeChat class","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * @param filePath the filePath of the file that stores the tasks that users input.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    public CheeChat(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        new CheeChat(\"data/duke.txt\").run();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"     * Run the chatbot until the \"bye\" command is read.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     * Will store tasks in a file and read tasks stored in the file beforehand.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     * Print the tasks added in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"            } finally {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"-":2,"cheeggered":56}},{"path":"src/main/java/duke/CheeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":" * The class represents exceptions used in situations where error occurs in CheeChat.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"public class CheeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"    /** Constructs a new CheeException with the specified error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"     * @param message The detail message that describes the reason for this exception.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"     *                It should provide context about the error condition.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    public CheeException(String message){","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cheeggered":15}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"    Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * Constructor of AddCommand class.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * @param task The task to be added into the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"     * To ass the Task to the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        // add task into tasks, input coming from Parse class, Parse class is supposed to make the String into a duke.task.Task","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"        // print in ui","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        // write in storage","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        taskList.add(this.task);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        ui.printAddedTask(this.task, taskList.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        String toBeWritten \u003d taskList.toWrite();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        storage.write(toBeWritten);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":43}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * To execute the Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * @param tasks The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    private int num;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * Constructor of the DeleteCommand class.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     * @param num The index number of the Task in the TaskList that stores it.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public DeleteCommand(int num) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * To delete the Task from the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        Task task \u003d taskList.delete(this.num);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        ui.printDeletedTask(task, taskList.size());","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        String toBeWritten \u003d taskList.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        storage.write(toBeWritten);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit(){","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":44}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"     * To exit the program and print the exit message.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        ui.printExitMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":28}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"     * To print an error due to the invalid input.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        ui.printInvalidMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit(){","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"     * To print the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        ui.printList(taskList.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit(){","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":28}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    private int num;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * Constructor of the MarkCommand class","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     * @param num The index of the Task in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public MarkCommand(int num) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * To Mark the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        Task task \u003d taskList.mark(num);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        ui.printMarkMessage(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        String toBeWritten \u003d taskList.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        storage.write(toBeWritten);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":43}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    private int num;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * Constructor of the UnmarkCommand class","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param num The index of the Task in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    public UnmarkCommand(int num) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * To Unmark the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        Task task \u003d taskList.unmark(num);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        ui.printMarkMessage(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        String toBeWritten \u003d taskList.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        storage.write(toBeWritten);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":42}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * Constructor of the DeadLine class.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param by The deadline of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the Task that is to be stored in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the Task that is to be stored in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public String toWrite() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        return \"[D]\" + super.toWrite() + \" (by: \" + this.by.toString() + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the Task that is printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the Task that is printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cheeggered":37}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * Constructor of the Event class.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     * @param from When the event starts.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     * @param to When the event ends.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the Task that is to be stored in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the Task that is to be stored in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"    public String toWrite() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        return \"[E]\" + super.toWrite() + \"(from: \" + this.from.toString() + \" to: \" + this.to.toString() + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the Task that is printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the Task that is printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cheeggered":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"     * Returns a String representation of whether the task us marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     * @return a String representation of whether the task us marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"     * Edits the status of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"     * @param status Boolean value that represents whether the task is marked as done or undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"     * @return The Task that has been marked or unmarked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    public Task getDescription(boolean status) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        isDone \u003d status;","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        return this;","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the Task that is to be stored in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the Task that is to be stored in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    public String toWrite() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the Task that is printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the Task that is printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cheeggered":51}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"     * Constructor of Todo Class.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     * Returns the String that should be written in the file that stores","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     * the Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"     * @return The String that should be written in the file that stores","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     *      * the Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    public String toWrite() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        return \"[T]\" + super.toWrite();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"     * Returns the String that should be printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"     * @return the String that should be printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cheeggered":33}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.CheeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.command.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     * Parse through the String command and return the correct type of Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     * @param command String that has the String input from the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"     * @return A Command instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    public static Command parse(String command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"            int index \u003d command.length() - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"            char c \u003d command.charAt(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"            int number \u003d c - 48 - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"            return new MarkCommand(number);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"            int index \u003d command.length() - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"            char c \u003d command.charAt(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"            int number \u003d c - 48 - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"            return new UnmarkCommand(number);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"                if (command.substring(4).isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"                    throw new CheeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"                String desc \u003d command.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"                Task instance \u003d new Todo(desc);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"                return new AddCommand(instance);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"            } catch (CheeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"            int index \u003d command.indexOf(47);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"            String description \u003d command.substring(9, index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"            String time \u003d command.substring(index + 4);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"            LocalDate day \u003d LocalDate.parse(time);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"            Task instance \u003d new Deadline(description, day);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"            return new AddCommand(instance);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"            int index1 \u003d command.indexOf(47);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"            String description \u003d command.substring(6, index1);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"            String duration \u003d command.substring(index1 + 6);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"            int index2 \u003d duration.indexOf(47);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"            String from \u003d duration.substring(0, index2 - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"            String to \u003d duration.substring(index2 + 4);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"            LocalDate d1 \u003d LocalDate.parse(from);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"            LocalDate d2 \u003d LocalDate.parse(to);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"            Task instance \u003d new Event(description, d1, d2);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"            return new AddCommand(instance);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"            int index \u003d command.length() - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"            char c \u003d command.charAt(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"            int number \u003d c - 48 - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"            return new DeleteCommand(number);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"        return new InvalidCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":74}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    private File file;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * Constructor for the Storage class","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @param filePath The filePath of the file that stores all the Task inputs from user.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"     * Update the file that stores all the Task inputs from user.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"     * @param task The String representation of the Tasks in a TaskList that","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"     *             should be stored in the file that stores all the Task inputs","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"     *             from user.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    public void write(String task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        FileWriter fw;","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"            fw \u003d new FileWriter(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"            fw.write(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"     * Read and load the Tasks stored by previous inputs in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"     * @return An ArrayList that stores all the previous Tasks stored in the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"                String task \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"                Task instance \u003d Storage.readFile(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"                tasks.add(instance);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"            System.out.println(\"error file not found\");","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"     * Read the input command and create the corresponding type of Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"     * @param nextLine The command String.","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"     * @return The Task according to the user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"    public static Task readFile(String nextLine) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"        String next \u003d nextLine.substring(3);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"        Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"        if(nextLine.startsWith(\"[T]\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"            String desc \u003d next.substring(4);","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"            task \u003d new Todo(desc);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        } else if (nextLine.startsWith(\"[D]\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"            int endDesc \u003d next.indexOf(\"(by: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"            String desc \u003d next.substring(4, endDesc);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"            int len \u003d next.length();","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"            String time \u003d next.substring(endDesc + 5, len - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"            LocalDate d1 \u003d LocalDate.parse(time);","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"            task \u003d new Deadline(desc, d1);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"            int endDesc \u003d next.indexOf(\"(from: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"            String desc \u003d next.substring(4, endDesc);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"            int endFrom \u003d next.indexOf(\"to: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"            String from \u003d next.substring(endDesc + 7, endFrom - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"            String to \u003d next.substring(endFrom + 4, next.length() - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"            LocalDate d1 \u003d LocalDate.parse(from);","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"            LocalDate d2 \u003d LocalDate.parse(to);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"            task \u003d new Event(desc, d1, d2);","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"        Task toReturn;","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"        if (next.startsWith(\"[X]\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"            toReturn \u003d task.getDescription(true);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"            toReturn \u003d task.getDescription(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"        return toReturn;","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":113}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"    private ArrayList\u003cTask\u003e arr;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"     * Constructor of class TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * @param arr The input ArrayList that stores the past tasks that were stored","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     *            in a file if there were any.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    public TaskList(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"        // arr is given from the duke.util.Storage.load()","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"        this.arr \u003d arr;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"     * To add a Task into the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * @param instance The task added into the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    public void add(Task instance) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"        this.arr.add(instance);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"     * To delete a task from the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"     * @param num The index number of the Task in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"     * @return The Task that got deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    public Task delete(int num) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"        if (num \u003e\u003d this.arr.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"        Task task \u003d this.arr.get(num);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"        this.arr.remove(num);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"     * Mark the Task of the specified index number in TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"     * @param num The index number of the Task in the TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"     * @return the marked Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"    public Task mark(int num) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        return arr.get(num).getDescription(true);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"     * Unmark the Task of the specified index number in TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"     * @param num The index number of the Task in the TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"     * @return the unmarked Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"    public Task unmark(int num){","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"        return arr.get(num).getDescription(false);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"     * Returns the number of Tasks in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"     * @return The number of Tasks in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"    public int size() {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"        return this.arr.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"        String toBePrinted \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"        for (int i \u003d 0; i \u003c arr.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"            toBePrinted \u003d toBePrinted.concat(arr.get(i).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"            toBePrinted +\u003d System.lineSeparator();","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"        return toBePrinted;","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"     * Returns the String that should be stored into the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"     * @return the String that should be stored into the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"    public String toWrite() {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"        String toBeWritten \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        for (int i \u003d 0; i \u003c arr.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"            toBeWritten \u003d toBeWritten.concat(arr.get(i).toWrite());","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"            toBeWritten +\u003d System.lineSeparator();","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"        return toBeWritten;","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":95}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.CheeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    private Scanner input;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"    public Ui(){","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"        input \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     * Print the error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"     * @param error The error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    public void showError(String error) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        System.out.println(error);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"     * Print a line.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"    public void showLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"________________________________________________________\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"     * Print the welcome message.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"Hello! I\u0027m duke.CheeChat\");","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"     * read the command that the users input.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"     * @return String representation of the user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        return input.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"     * Print out the Task that is added into the TaskList and the number of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"     * in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"     * @param task The task that got added into the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"     * @param size The size of the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"    public void printAddedTask(Task task, int size) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"     * Print the task that got deleted and the remaining number of","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"     * tasks left in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"     * @param task The task that is getting deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"     * @param size The size of the TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"    public void printDeletedTask(Task task, int size) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"     * Print the exit message.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"    public void printExitMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"     * Print the task that got marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"     * @param task The task that got marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"    public void printMarkMessage(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"     * Print error message when there is an invalid command.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"    public void printInvalidMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"            throw new CheeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"        } catch (CheeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"     * Print the tasks present in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"     * @param list The string representation of all the Tasks in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"    public void printList(String list) {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"        System.out.println(list);","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":110}},{"path":"src/test/java/duke/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":" * Tests the Storage Class used in CheeChat","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     * Tests whether an empty ArrayList will be returned by the load method in the Storage class","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"     * when the file inserted is empty.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    public void load_emptyFile_emptyArrayListReturned() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"        Storage storage \u003d new Storage(\"./data/empty.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"        assertEquals(0, size);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":26}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":" * Tests the TaskList Class used in CheeChat","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"public class TaskListTest{","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     * Tests whether the delete function in the TaskList class will return a null value","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     * when the input index if larger than the size of the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    public void delete_indexOutOfBound_nullReturned() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        TaskList tasklist \u003d new TaskList(arr);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"        Task deleted \u003d tasklist.delete(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        assertNull(deleted);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"todo read","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"event meeting /from 1pm /to 2pm","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"deadline ip /by 2359","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cheeggered":6}}]
