[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"    1. Click `Open`.","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"   ```","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"-":20,"cheeggered":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"cheeggered":23}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"[E][ ] HIGH vote (from: 2023-09-01 to: 2023-09-02)","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"[D][X] NORMAL assignment  (by: 2023-09-01)","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"[T][ ] NORMAL lecture recording","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"[T][ ] LOW buy groceries","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"[T][ ] LOW ip","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"cheeggered":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"CheeChat is an application that is used for managing tasks. You can use this application to store your tasks in an organised order.","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"## Add Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"There are several types of tasks to add:","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"- Todo","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"- Deadline","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"- Event","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"### Add Todo Tasks: `todo`","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"Add a todo task into the list of tasks stored. \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"Format: `todo DESCRIPTION` \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"- Adds a todo task named `DESCRIPTION` \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"  Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"- `todo assignment`","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"- `todo buy groceries`","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"### Add Deadline Tasks: `deadline`","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"Add a deadline task into the list of tasks stored. \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"Format: `deadline DESCRIPTION /by: DATE`","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"- Adds a deadline task named `DESCRIPTION` and a due date set to `DATE`","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"- Key in the deadline date starting with `/by: `","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"- `DATE` should be in the format YYYY-MM-DD \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"  Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"- `deadline homework /by: 2023-09-01`","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"- `deadline internship application /by: 2023-09-24`","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"### Add Event Tasks: `event`","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"Add an event task into the list of tasks stored. \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"Format: `event DESCRIPTION /from: START_DATE /to: END_DATE`","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"- Adds an event task named `DESCRIPTION`, a starting date `START_DATE` and an ending date `END_DATE`","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"- Key in the `START_DATE` starting with `/from` and `END_DATE` with `/to: `","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"- `START_DATE` and `END_DATE` should be in the format YYYY-MM-DD \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"  Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"- `event 2023 vote /from: 2023-09-01 /to: 2023-09-02`","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"- `event soc walk-in interview /from: 2023-09-26 /to: 2023-09-27`","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"## Delete Tasks: `delete`","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"Delete a task from the list of tasks stored. \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"- Deletes the task at the specified `INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"- The `INDEX` refers to the index number shown in the displayed task list. `INDEX` must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"- Existing values will be updated to the input values. \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"  Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"- `delete 2`","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"## Listing all tasks: `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"Shows a list of all tasks stored in the task list in the order of the set priority. \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"Format: `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"## Mark a test as done: `mark`","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"Mark a current task stored in the task list as done. \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"- Marks the task at the specified `INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"- The `INDEX` refers to the index number shown in the displayed task list. `INDEX` must be a positive integer 1, 2, 3, …​ \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"  Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"- `mark 3`","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"## Unmark a test as done: `unmark`","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"Unmark a current task stored in the task list as done. \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"- Unmarks the task at the specified `INDEX` if it was previously marked as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"- The `INDEX` refers to the index number shown in the displayed task list. `INDEX` must be a positive integer 1, 2, 3, …​ \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"  Example","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"- `unmark 1`","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"## Find a task: `find`","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"Find a task in the current task list by searching for a keyword. \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"- Shows a list of tasks containing `KEYWORD` \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"  Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"- `find book`","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"## Set priority: `priority`","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"Set a task to have `HIGH`, `NORMAL`, or `LOW` priority \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"Format: `priority PRIORITY INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"- `PRIORITY` should be set to either `HIGH`, `NORMAL` or `LOW`","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"- Set the priority of the task at the specified `INDEX`.","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"- The `INDEX` refers to the index number shown in the displayed task list. `INDEX` must be a positive integer 1, 2, 3, …​ \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"  Example:","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"- `priority HIGH 2`","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"## Exit program: `bye`","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"Exit the current program \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"Format: `bye` \u003cbr\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"## Saving the data","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"CheeChat data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"## Command Summary","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"| Action       | Summary                                                                                                          |","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"|--------------|------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"| Add Todo     | `todo DESCRIPTION` \u003cbr\u003e eg. `todo assignment`                                                                    |","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"| Add Deadline | `deadline DESCRIPTION /by: DATE` \u003cbr\u003e eg. `deadline homework /by: 2023-09-01`                                    |","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"| Add Event    | `event DESCRIPTION /from: START_DATE /to: END_DATE` \u003cbr\u003e eg. `event 2023 vote /from: 2023-09-01 /to: 2023-09-02` |","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"| Delete Task  | `delete INDEX` \u003cbr\u003e eg. `delete 2`                                                                               |","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"| List Tasks | `list`                                                                                                           |","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"| Mark Task | `mark INDEX` \u003cbr\u003e eg. `mark 2`                                                                                   |","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"| Unmark Task | `unmark INDEX` \u003cbr\u003e eg. `unmark 2`                                                                               |","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"| Find Task | `find KEYWORD` \u003cbr\u003e eg. `find book`                                                                              |","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"| Set Priority | `priority PRIORITY INDEX` \u003cbr\u003e eg. `priority HIGH 2`                                                              |","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"| Exit program | `bye`                                                                                                            |","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":14,"cheeggered":94}},{"path":"src/main/java/duke/CheeChat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"public class CheeChat {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    private String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    public CheeChat() {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"            output +\u003d command.executeTask(tasks, ui, storage);","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"            output \u003d e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"//","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"//","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"//    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"//        new CheeChat().run();","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"//    }","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"//    public void run() {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"//        ui.showWelcome();","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"//        boolean isExit \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"//        while (!isExit) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"//            try {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"//                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"//                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"//                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"//                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"//                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"//            } catch (Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"//                ui.showError(e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"//            } finally {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"//                ui.showLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"//            }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"//        }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"//    }","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"//}","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"-":2,"cheeggered":59}},{"path":"src/main/java/duke/CheeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":" * The class represents exceptions used in situations where error occurs in CheeChat.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"public class CheeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"    /** Constructs a new CheeException with the specified error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"     * @param message The detail message that describes the reason for this exception.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"     *                It should provide context about the error condition.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    public CheeException(String message){","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cheeggered":15}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"cheeggered":61}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"cheeggered":7}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    private CheeChat duke \u003d new CheeChat();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"cheeggered":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    private CheeChat duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Screenshot 2023-09-21 at 10.44.54 AM.png\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Screenshot 2023-09-21 at 10.45.36 AM.png\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    public void setDuke(CheeChat d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"cheeggered":52}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"    Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * Constructor of AddCommand class.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * @param task The task to be added into the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"     * To ass the Task to the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public String executeTask(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        // add task into tasks, input coming from Parse class, Parse class is supposed to make the String into a duke.task.Task","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"        // print in ui","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        // write in storage","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        taskList.add(this.task);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        String toBeWritten \u003d taskList.toWrite();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        storage.write(toBeWritten);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        return ui.printAddedTask(this.task, taskList.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":43}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * To execute the Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * @param tasks The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public abstract String executeTask(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    private int num;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * Constructor of the DeleteCommand class.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     * @param num The index number of the Task in the TaskList that stores it.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public DeleteCommand(int num) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * To delete the Task from the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    public String executeTask(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        Task task \u003d taskList.delete(this.num);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        String toBeWritten \u003d taskList.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        storage.write(toBeWritten);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        return ui.printDeletedTask(task, taskList.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit(){","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":44}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"     * To exit the program and print the exit message.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public String executeTask(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        return ui.printExitMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":28}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    private String keyword;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    public FindCommand(String find) {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"        this.keyword \u003d find;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    public String executeTask(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"        // add task into tasks, input coming from Parse class, Parse class is supposed to make the String into a duke.task.Task","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"        // print in ui","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        // write in storage","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"        return ui.printFind(taskList.find(this.keyword));","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"cheeggered":25}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"     * To print an error due to the invalid input.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public String executeTask(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        return ui.printInvalidMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit(){","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"     * To print the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public String executeTask(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        return ui.printList(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit(){","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":28}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    private int number;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * Constructor of the MarkCommand class","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     * @param number The index of the Task in the TaskList.","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public MarkCommand(int number) {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        this.number \u003d number;","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * To Mark the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"    public String executeTask(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        Task task \u003d taskList.mark(number);","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        String toBeWritten \u003d taskList.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        storage.write(toBeWritten);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        return ui.printMarkMessage(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":43}},{"path":"src/main/java/duke/command/PriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"public class PriorityCommand extends Command {","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    private Task.Prioritylist priority;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    private int number;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"    public PriorityCommand(Task.Prioritylist priority, int number) {","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"        this.number \u003d number;","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    public String executeTask(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        taskList.getTask(number).setPriority(this.priority);","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"        String toBeWritten \u003d taskList.toWrite();","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        storage.write(toBeWritten);","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"        return ui.printPriorityMessage(this.priority);","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"cheeggered":31}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    private int num;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * Constructor of the UnmarkCommand class","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param num The index of the Task in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    public UnmarkCommand(int num) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * To Unmark the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @param taskList The TaskList that stores the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     * @param ui The Ui instance that will interact with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"     * @param storage The Storage instance that will update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    public String executeTask(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        Task task \u003d taskList.unmark(num);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        String toBeWritten \u003d taskList.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        storage.write(toBeWritten);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        return ui.printUnmarkMessage(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"     * To check whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"     * @return Boolean value representing whether the user wanted to exit the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":42}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"     * Constructor of the DeadLine class.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param by The deadline of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the Task that is to be stored in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the Task that is to be stored in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    public String toWrite() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        return \"[D]\" + super.toWrite() + \" (by: \" + this.by.toString() + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the Task that is printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the Task that is printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cheeggered":37}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * Constructor of the Event class.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     * @param from When the event starts.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     * @param to When the event ends.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the Task that is to be stored in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the Task that is to be stored in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"    public String toWrite() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        return \"[E]\" + super.toWrite() + \"(from: \" + this.from.toString() + \" to: \" + this.to.toString() + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the Task that is printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the Task that is printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cheeggered":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"public class Task implements Comparable\u003cTask\u003e{","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"    public enum Prioritylist {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"        HIGH, LOW, NORMAL","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    private Prioritylist priority \u003d Prioritylist.NORMAL;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"    public int compareTo(Task other) {","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"        if ((this.priority \u003d\u003d Prioritylist.HIGH) \u0026\u0026 (other.priority \u003d\u003d Prioritylist.HIGH)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"            return 0;","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"        } else if ((this.priority \u003d\u003d Prioritylist.LOW) \u0026\u0026 (other.priority \u003d\u003d Prioritylist.LOW)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"            return 0;","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"        } else if ((this.priority \u003d\u003d Prioritylist.NORMAL) \u0026\u0026 (other.priority \u003d\u003d Prioritylist.NORMAL)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"            return 0;","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        } else if ((this.priority \u003d\u003d Prioritylist.HIGH) \u0026\u0026 (other.priority \u003d\u003d Prioritylist.LOW)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"            return -1;","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        } else if ((this.priority \u003d\u003d Prioritylist.NORMAL) \u0026\u0026 (other.priority \u003d\u003d Prioritylist.LOW)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"            return -1;","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"        } else if ((this.priority \u003d\u003d Prioritylist.HIGH) \u0026\u0026 (other.priority \u003d\u003d Prioritylist.NORMAL)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"            return -1;","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        } else if ((this.priority \u003d\u003d Prioritylist.LOW) \u0026\u0026 (other.priority \u003d\u003d Prioritylist.NORMAL)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"            return 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        } else if ((this.priority \u003d\u003d Prioritylist.LOW) \u0026\u0026 (other.priority \u003d\u003d Prioritylist.HIGH)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"            return 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"            return 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"     * Returns a String representation of whether the task us marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"     * @return a String representation of whether the task us marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"     * Edits the status of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"     * @param status Boolean value that represents whether the task is marked as done or undone.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        isDone \u003d status;","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"    public void setPriority(Prioritylist priority) {","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the Task that is to be stored in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the Task that is to be stored in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"    public String toWrite() {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"        return \"[\" + getStatusIcon() + \"] \" + priority + \" \" + this.description;","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the Task that is printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the Task that is printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"        return \"[\" + getStatusIcon() + \"] \" + priority + \" \" + this.description;","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cheeggered":83}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"     * Constructor of Todo Class.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     * Returns the String that should be written in the file that stores","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     * the Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"     * @return The String that should be written in the file that stores","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     *      * the Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    public String toWrite() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        return \"[T]\" + super.toWrite();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"     * Returns the String that should be printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"     * @return the String that should be printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cheeggered":33}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.CheeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.command.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     * Parse through the String command and return the correct type of Command.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     * @param command String that has the String input from the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"     * @return A Command instance.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    public static Command parse(String command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"            return new MarkCommand(parseUserIndex(command));","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"            return new UnmarkCommand(parseUserIndex(command));","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"            return new AddCommand(parseUserTodo(command));","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"            return new AddCommand(parseUserDeadline(command));","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"            return new AddCommand(parseUserEvent(command));","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"            return new DeleteCommand(parseUserIndex(command));","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"            return new FindCommand(command.substring(5));","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"        } else if (command.startsWith(\"priority\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"            return new PriorityCommand(parseUserPriority(command), parseUserIndex(command));","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"        return new InvalidCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"    private static Task.Prioritylist parseUserPriority(String command) {","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"        String priorityString \u003d command.substring(8);","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"        if (priorityString.contains(\"HIGH\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"            return Task.Prioritylist.HIGH;","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"        } else if (priorityString.contains(\"NORMAL\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"            return Task.Prioritylist.NORMAL;","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"        } else if (priorityString.contains(\"LOW\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"            return Task.Prioritylist.LOW;","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"        } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"            return null;","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"    private static int parseUserIndex(String command) {","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        int index \u003d command.length() - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        return command.charAt(index) - 48 - 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"    private static Todo parseUserTodo(String command) {","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"            if (command.substring(4).isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"                throw new CheeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"        } catch (CheeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"        Todo instance;","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"        String description \u003d command.substring(5);","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"        instance \u003d new Todo(description);","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"        return instance;","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"    private static Deadline parseUserDeadline(String command) {","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"        int index \u003d command.indexOf(47);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"        String description \u003d command.substring(9, index - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"        String time \u003d command.substring(index + 5);","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"        LocalDate day \u003d LocalDate.parse(time);","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"        return new Deadline(description, day);","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"    private static Event parseUserEvent(String command) {","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"        int endOfDescription \u003d command.indexOf(47);","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"        String description \u003d command.substring(6, endOfDescription);","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"        String duration \u003d command.substring(endOfDescription + 7);","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        int startOfEndTime \u003d duration.indexOf(47);","lastModifiedDate":"2023-09-14"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"        String from \u003d duration.substring(0, startOfEndTime - 1);","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"        String to \u003d duration.substring(startOfEndTime + 5);","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"        LocalDate startDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"        LocalDate endDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"        return new Event(description, startDate, endDate);","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"    public static Todo parseFileTodo(String command) {","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"        String description \u003d command.substring(4);","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"        if (description.startsWith(\"HIGH\") \u0026\u0026 command.startsWith(\"[X]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedTodo(command, true, 9, Task.Prioritylist.HIGH);","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"HIGH\") \u0026\u0026 command.startsWith(\"[ ]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedTodo(command, false, 9, Task.Prioritylist.HIGH);","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"NORMAL\") \u0026\u0026 command.startsWith(\"[X]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedTodo(command, true, 11, Task.Prioritylist.NORMAL);","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"NORMAL\") \u0026\u0026 command.startsWith(\"[ ]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedTodo(command, false, 11, Task.Prioritylist.NORMAL);","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"LOW\") \u0026\u0026 command.startsWith(\"[X]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedTodo(command, true, 8, Task.Prioritylist.LOW);","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"LOW\") \u0026\u0026 command.startsWith(\"[ ]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedTodo(command, false, 8, Task.Prioritylist.LOW);","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"        } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"            return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"    public static Todo createPrioritisedTodo(String command, boolean mark, int stringIndex, Task.Prioritylist priority) {","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"        String name \u003d command.substring(stringIndex);","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"cheeggered"},"content":"        Todo task \u003d new Todo(name);","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"cheeggered"},"content":"        task.setStatus(mark);","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"cheeggered"},"content":"        task.setPriority(priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"cheeggered"},"content":"        return task;","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"cheeggered"},"content":"    public static Deadline parseFileDeadline(String command) {","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"cheeggered"},"content":"        String description \u003d command.substring(4);","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"cheeggered"},"content":"        if (description.startsWith(\"HIGH\") \u0026\u0026 command.startsWith(\"[X]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedDeadline(description, true, 5, Task.Prioritylist.HIGH);","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"HIGH\") \u0026\u0026 command.startsWith(\"[ ]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedDeadline(description, false, 5, Task.Prioritylist.HIGH);","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"NORMAL\") \u0026\u0026 command.startsWith(\"[X]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedDeadline(description, true, 7, Task.Prioritylist.NORMAL);","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"NORMAL\") \u0026\u0026 command.startsWith(\"[ ]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedDeadline(description, false, 7, Task.Prioritylist.NORMAL);","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"LOW\") \u0026\u0026 command.startsWith(\"[X]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedDeadline(description, true, 4, Task.Prioritylist.LOW);","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"LOW\") \u0026\u0026 command.startsWith(\"[ ]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedDeadline(description, false, 4, Task.Prioritylist.LOW);","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"cheeggered"},"content":"        } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"cheeggered"},"content":"            return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"cheeggered"},"content":"    public static Deadline createPrioritisedDeadline(String command, boolean mark, int stringIndex, Task.Prioritylist priority) {","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"cheeggered"},"content":"        int endDescription \u003d command.indexOf(\"(by: \");","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"cheeggered"},"content":"        String description \u003d command.substring(stringIndex, endDescription);","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"cheeggered"},"content":"        String time \u003d command.substring(endDescription + 5, command.length() - 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"cheeggered"},"content":"        assert time.equals(\"\") : \"time should not be empty\";","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"cheeggered"},"content":"        Deadline task \u003d new Deadline(description, LocalDate.parse(time));","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"cheeggered"},"content":"        task.setStatus(mark);","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"cheeggered"},"content":"        task.setPriority(priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"cheeggered"},"content":"        return task;","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"cheeggered"},"content":"    public static Event parseFileEvent(String command) {","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"cheeggered"},"content":"        String description \u003d command.substring(4);","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"cheeggered"},"content":"        if (description.startsWith(\"HIGH\") \u0026\u0026 command.startsWith(\"[X]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedEvent(description, true, 5, Task.Prioritylist.HIGH);","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"HIGH\") \u0026\u0026 command.startsWith(\"[ ]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":158,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedEvent(description, false, 5, Task.Prioritylist.HIGH);","lastModifiedDate":"2023-09-21"},{"lineNumber":159,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"NORMAL\") \u0026\u0026 command.startsWith(\"[X]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":160,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedEvent(description, true, 7, Task.Prioritylist.NORMAL);","lastModifiedDate":"2023-09-21"},{"lineNumber":161,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"NORMAL\") \u0026\u0026 command.startsWith(\"[ ]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedEvent(description, false, 7, Task.Prioritylist.NORMAL);","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"LOW\") \u0026\u0026 command.startsWith(\"[X]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":164,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedEvent(description, true, 4, Task.Prioritylist.LOW);","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"cheeggered"},"content":"        } else if (description.startsWith(\"LOW\") \u0026\u0026 command.startsWith(\"[ ]\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"cheeggered"},"content":"            return createPrioritisedEvent(description, false, 4, Task.Prioritylist.LOW);","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"cheeggered"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"cheeggered"},"content":"            return null;","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"cheeggered"},"content":"    public static Event createPrioritisedEvent(String command, boolean mark, int stringIndex, Task.Prioritylist priority) {","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"cheeggered"},"content":"        int endDescription \u003d command.indexOf(\"(from: \");","lastModifiedDate":"2023-09-14"},{"lineNumber":174,"author":{"gitId":"cheeggered"},"content":"        String description \u003d command.substring(stringIndex, endDescription);","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"cheeggered"},"content":"        int endFrom \u003d command.indexOf(\"to: \");","lastModifiedDate":"2023-09-14"},{"lineNumber":176,"author":{"gitId":"cheeggered"},"content":"        String from \u003d command.substring(endDescription + 7, endFrom - 1);","lastModifiedDate":"2023-09-14"},{"lineNumber":177,"author":{"gitId":"cheeggered"},"content":"        assert from.equals(\"\") : \"from value should not be empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"cheeggered"},"content":"        String to \u003d command.substring(endFrom + 4, command.length() - 1);","lastModifiedDate":"2023-09-14"},{"lineNumber":179,"author":{"gitId":"cheeggered"},"content":"        assert to.equals(\"\") : \"to value should not be empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"cheeggered"},"content":"        Event task \u003d new Event(description, LocalDate.parse(from), LocalDate.parse(to));","lastModifiedDate":"2023-09-21"},{"lineNumber":181,"author":{"gitId":"cheeggered"},"content":"        task.setStatus(mark);","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"cheeggered"},"content":"        task.setPriority(priority);","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"cheeggered"},"content":"        return task;","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"cheeggered":188}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"    private File file;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"     * Constructor for the Storage class","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     * @param filePath The filePath of the file that stores all the Task inputs from user.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"     * Update the file that stores all the Task inputs from user.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"     * @param task The String representation of the Tasks in a TaskList that","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     *             should be stored in the file that stores all the Task inputs","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"     *             from user.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    public void write(String task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"        FileWriter fw;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"            fw \u003d new FileWriter(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"            fw.write(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"            fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"     * Read and load the Tasks stored by previous inputs in the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"     * @return An ArrayList that stores all the previous Tasks stored in the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"                String task \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"                Task instance \u003d Storage.readLine(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"                tasks.add(instance);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"            System.out.println(\"error file not found\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"        return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"     * Read the input command and create the corresponding type of Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"     * @param nextLine The command String.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"     * @return The Task according to the user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"    public static Task readLine(String nextLine) {","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"        String description \u003d nextLine.substring(3);","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"        Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"        if(nextLine.startsWith(\"[T]\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"            return Parser.parseFileTodo(description);","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"        } else if (nextLine.startsWith(\"[D]\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"            return Parser.parseFileDeadline(description);","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"            return Parser.parseFileEvent(description);","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"cheeggered":90}},{"path":"src/main/java/duke/util/TaskComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"import duke.task.*;","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"public class TaskComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"    public TaskComparator(){","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"        return task1.compareTo(task2);","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"cheeggered":13}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"    private ArrayList\u003cTask\u003e array;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"    private TaskComparator comparator;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * Constructor of class TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * @param array The input ArrayList that stores the past tasks that were stored","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     *            in a file if there were any.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    public TaskList(ArrayList\u003cTask\u003e array) {","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        // arr is given from the duke.util.Storage.load()","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"        this.array \u003d array;","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"        this.comparator \u003d new TaskComparator();","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"     * To find tasks containing the String keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"     * @param keyword The input keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"     * @return An ArrayList containing the tasks containing the keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"        ArrayList\u003cTask\u003e tasksContainingkey \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"        for (Task task : this.array) {","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"                tasksContainingkey.add(task);","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"        return tasksContainingkey;","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"     * To add a Task into the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"     * @param instance The task added into the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"    public void add(Task instance) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"        this.array.add(instance);","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        this.array.sort(comparator);","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"     * To delete a task from the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"     * @param num The index number of the Task in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"     * @return The Task that got deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    public Task delete(int num) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"        if (num \u003e\u003d this.array.size()) {","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"            return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"        Task task \u003d this.array.get(num);","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"        this.array.remove(num);","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"        return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"     * Mark the Task of the specified index number in TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"     * @param num The index number of the Task in the TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"     * @return the marked Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"    public Task mark(int num) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"        array.get(num).setStatus(true);","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"        return array.get(num);","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"     * Unmark the Task of the specified index number in TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"     * @param num The index number of the Task in the TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"     * @return the unmarked Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"    public Task unmark(int num){","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"        array.get(num).setStatus(false);","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"        return array.get(num);","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"     * Returns the number of Tasks in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"     * @return The number of Tasks in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"    public int size() {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"        return this.array.size();","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"     * Returns the String representation of the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"     * @return The String representation of the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"cheeggered"},"content":"    public String getTaskDescription(int index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"cheeggered"},"content":"        return this.array.get(index).toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"cheeggered"},"content":"    public Task getTask(int number) {","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"cheeggered"},"content":"        return this.array.get(number);","lastModifiedDate":"2023-09-14"},{"lineNumber":100,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":101,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"cheeggered"},"content":"     * Returns the String that should be stored into the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"cheeggered"},"content":"     * @return the String that should be stored into the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"cheeggered"},"content":"    public String toWrite() {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"cheeggered"},"content":"        String toBeWritten \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"cheeggered"},"content":"        for (Task task : this.array) {","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"cheeggered"},"content":"            toBeWritten \u003d toBeWritten.concat(task.toWrite());","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"cheeggered"},"content":"            toBeWritten +\u003d System.lineSeparator();","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"cheeggered"},"content":"        return toBeWritten;","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":116}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import duke.CheeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"     * Print out the Task that is added into the TaskList and the number of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"     * in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     * @param task The task that got added into the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     * @param size The size of the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    public String printAddedTask(Task task, int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"        return \"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"                + \"\\n  \" + task.toString()","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"     * Print the task that got deleted and the remaining number of","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"     * tasks left in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"     * @param task The task that is getting deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"cheeggered"},"content":"     * @param size The size of the TaskList","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"cheeggered"},"content":"    public String printDeletedTask(Task task, int size) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"cheeggered"},"content":"        return \"Noted. I\u0027ve removed this task:\"","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"cheeggered"},"content":"                + \"\\n  \" + task.toString()","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"cheeggered"},"content":"                + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"cheeggered"},"content":"    public String printFind (ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"cheeggered"},"content":"        String output \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"cheeggered"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"cheeggered"},"content":"            output +\u003d \"\\n\" + i + \". \" + tasks.get(i).toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"cheeggered"},"content":"        return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"cheeggered"},"content":"    public String printPriorityMessage(Task.Prioritylist priority) {","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"cheeggered"},"content":"        return \"OK! Priority of this task is set to \" + priority;","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"cheeggered"},"content":"     * Print the exit message.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"cheeggered"},"content":"    public String printExitMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"cheeggered"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"cheeggered"},"content":"     * Print the task that got marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"cheeggered"},"content":"     * @param task The task that got marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"cheeggered"},"content":"    public String printMarkMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"cheeggered"},"content":"        return \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"cheeggered"},"content":"                    + \"\\n  \" + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"cheeggered"},"content":"    public String printUnmarkMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"cheeggered"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\"","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"cheeggered"},"content":"                + \"\\n  \" + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"cheeggered"},"content":"     * Print error message when there is an invalid command.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"cheeggered"},"content":"    public String printInvalidMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"cheeggered"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"cheeggered"},"content":"            throw new CheeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"cheeggered"},"content":"        } catch (CheeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"cheeggered"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"cheeggered"},"content":"     * Print the tasks present in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"cheeggered"},"content":"     * @param tasklist The TaskList with all the Tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"cheeggered"},"content":"    public String printList(TaskList tasklist) {","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"cheeggered"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"cheeggered"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++){","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"cheeggered"},"content":"            output +\u003d tasklist.getTaskDescription(i) + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"cheeggered"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"cheeggered"},"content":"        return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":91}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-radius: 30; -fx-background-color: FFE9E9; -fx-padding: 10;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-padding: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"            \u003cFont size\u003d\"11.0\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"cheeggered":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: FFFFFF;\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"cheeggered":19}},{"path":"src/test/java/duke/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":" * Tests the Storage Class used in CheeChat","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     * Tests whether an empty ArrayList will be returned by the load method in the Storage class","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"     * when the file inserted is empty.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"    public void load_emptyFile_emptyArrayListReturned() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"        Storage storage \u003d new Storage(\"./data/empty.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"        assertEquals(0, size);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":26}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"package duke.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"cheeggered"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"cheeggered"},"content":" * Tests the TaskList Class used in CheeChat","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"cheeggered"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"cheeggered"},"content":"public class TaskListTest{","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"cheeggered"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"cheeggered"},"content":"     * Tests whether the delete function in the TaskList class will return a null value","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"cheeggered"},"content":"     * when the input index if larger than the size of the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"cheeggered"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"cheeggered"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"cheeggered"},"content":"    public void delete_indexOutOfBound_nullReturned() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"cheeggered"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"cheeggered"},"content":"        TaskList tasklist \u003d new TaskList(arr);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"cheeggered"},"content":"        Task deleted \u003d tasklist.delete(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"cheeggered"},"content":"        assertNull(deleted);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"cheeggered"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"cheeggered"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"cheeggered"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"cheeggered":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheeggered"},"content":"todo read","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"cheeggered"},"content":"event meeting /from 1pm /to 2pm","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"cheeggered"},"content":"deadline ip /by 2359","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"cheeggered"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"cheeggered"},"content":"delete 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"cheeggered"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"cheeggered":6}}]
