[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"# duke.main.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"3. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wesho1107":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"    mainClass.set(\"duke.main.Launcher\")","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"wesho1107":14}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"# ___Birdy User Guide___","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"Birdy is a **desktop chat-bot application for managing your tasks optimised for use on a Command Line Interface (CLI)**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"or on a **Graphical User Interface (GUI)**.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"- [Features](#features)","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"  - [Viewing help: `help`](#viewing-help-codehelpcode)","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"  - [Adding a task: `todo`/`deadline`/`event`](#adding-a-task-codetodocodecodedeadlinecodecodeeventcode)","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"  - [Marking a task: `mark`/`unmark`](#marking-a-task-codemarkcodecodeunmarkcode)","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"  - [Listing tasks: `list`](#listing-tasks-codelistcode)","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"  - [Deleting a task: `delete`](#deleting-a-task-codedeletecode)","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"  - [Setting a reminder: `remind`](#setting-a-reminder-coderemindcode)","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"  - [Listing reminders: `reminder`](#listing-reminders-coderemindercode)","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"  - [Finding a task by keyword: `find`](#finding-a-task-by-keyword-codefindcode)","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"\u003cbr/\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"## Quick Start","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"1. Ensure you have Java `11` or above installed on your computer.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"2. Download the latest `Duke.jar` from [here]()","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"3. Copy the file to the folder of your choice as the _home folder_ for your Birdy chat-bot.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"4. Open your command terminal, `cd` into the folder with your .jar file, then run the command to start the application","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    ```","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    java -jar ip.jar","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    ```","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"5. Type a command in the text box and press Enter to execute it. e.g. typing `help` and pressing Enter will display help","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"and feature information.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"   - `list`: List all existing tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"   - `todo Learn how to use Birdy`: Adds a todo task of `Learn how to use Birdy` to the tasks list.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"   - `delete 1`: Delete the first task shown in the current tasks list.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"   - `mark 2`: Marks the second task shown in the current tasks list as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"6. Refer to the [Features](#features) below for more features and details.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"___","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"\u003e NOTE","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"\u003e Notes about the command format:","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"\u003e - Commands that do not take in parameters: `help`, `list`, `reminder`","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"\u003e - Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"\u003e    e.g. in `todo TODO_TASK`, `TODO_TASK` is a parameter and describes the task of the todo. ","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"\u003e - Datetime are strictly in the format `dd/MM/yyyy hh:mm`. ","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"\u003e   e.g. in `deadline /by 01/01/2000 11:00` creates a deadline ","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"task with due date of `01/01/01 11:00`.","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"### Viewing help: `help`","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"Shows a message with the help and features instructions.","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"Format: `help`","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"\u003cbr/\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"### Adding a task: `todo`/`deadline`/`event`","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"1. **Adding a todo task:** `todo TODO`","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"    Add a todo task of `TODO` to the tasks list.","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"    Format: `todo TODO`","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"2. **Adding a deadline task:** `deadline DEADLINE /by DUE_DATE`","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"    Add a deadline of `DEADLINE` with the due date `DUE_DATE`.","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"    Format: `deadline DEADLINE /by DUE_DATE`","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"   \u003e NOTE","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"   \u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"   \u003e `DEADLINE` is strictly in the format `dd/MM/yyyy HH:mm`.","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"3. **Adding a event task:** `event EVENT /from START /to END`","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"    Add an event of `EVENT` starting at `START` and ending at `END`.","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"    Format: `event EVENT /from START /to END`","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"    ","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"    \u003e NOTE","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"   \u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"   \u003e `START` and `END` are strictly in the format `dd/MM/yyyy HH:mm`. ","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"   ","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"- `todo Buy groceries`","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"wesho1107"},"content":"- `deadline Lecture quiz /by 11/11/2020 23:59`","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"wesho1107"},"content":"- `event Summer camp /from 06/06/2021 08:00 /to 08/06/2021 15:00`","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"wesho1107"},"content":"\u003cbr/\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"wesho1107"},"content":"### Marking a task: `mark`/`unmark`","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"wesho1107"},"content":"Marks or unmarks a task in the tasks list at `INDEX`.","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"wesho1107"},"content":"Format: `mark INDEX`, `unmark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"wesho1107"},"content":"\u003cbr/\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"wesho1107"},"content":"### Listing tasks: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"wesho1107"},"content":"Shows a list of all tasks in the tasks list.","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"wesho1107"},"content":"Format: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"wesho1107"},"content":"\u003cbr/\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"wesho1107"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"wesho1107"},"content":"Deletes a task in the tasks list at `INDEX`.","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"wesho1107"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"wesho1107"},"content":"Examples:","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"wesho1107"},"content":"- `list` followed by `delete 3` deletes the 3rd task ","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"wesho1107"},"content":"in the tasks list.","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"wesho1107"},"content":"\u003cbr/\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"wesho1107"},"content":"### Setting a reminder: `remind`","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"wesho1107"},"content":"Sets a task in the tasks list at `INDEX` as a reminder.","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"wesho1107"},"content":"Format: `remind INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"wesho1107"},"content":"\u003cbr/\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"wesho1107"},"content":"### Listing reminders: `reminder`","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"wesho1107"},"content":"Shows a list of all reminders in the tasks list.","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"wesho1107"},"content":"Format: `remind`","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"wesho1107"},"content":"\u003cbr/\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"wesho1107"},"content":"### Finding a task by keyword: `find`","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"wesho1107"},"content":"Finds the tasks with description matching the `KEYWORD`","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"wesho1107"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"wesho1107"},"content":"\u003cbr/\u003e ","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"wesho1107"},"content":"## Command Summary","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"wesho1107"},"content":"|      Action       |                                        Format                                         |","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"wesho1107"},"content":"|:-----------------:|:-------------------------------------------------------------------------------------:|","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"wesho1107"},"content":"|      **Add**      | `todo TODO`\u003cbr/\u003e`deadline DEADLINE /by DUEDATE`\u003cbr/\u003e`event EVENT /from START /to END` |","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"wesho1107"},"content":"|    **Delete**     |                                    `delete INDEX`                                     |","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"wesho1107"},"content":"|     **Find**      |                                    `find KEYWORD`                                     |","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"wesho1107"},"content":"|     **Help**      |                                        `help`                                         |","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"wesho1107"},"content":"|     **List**      |                                        `list`                                         |","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"wesho1107"},"content":"| **Mark / Unmark** |                           `mark INDEX`\u003cbr/\u003e `unmark INDEX`                            |","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"wesho1107"},"content":"|   **Reminder**    |                                      `reminder`                                       |","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"wesho1107"},"content":"|    **Remind**     |                                    `remind INDEX`                                     |","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"wesho1107":127,"-":24}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":" * The AddCommand class represents a command to add a task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"     * Constructs an AddCommand with the specified task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"        super(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"     * Executes the AddCommand to add the task to the task list, update storage, and display a success message.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"     * @param tasks The task list to which the task should be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"     * @param storage The storage object for saving tasks to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"     * @throws IOException If there\u0027s an error while updating the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"        storage.append(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"        ui.showAddSuccess(task.toString(), tasks.getTasks().size());","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.exception.InvalidTaskNumberException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":" * The Command class is the base class for all command type classes.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"public class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    public Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"     * Constructs a Command object with the specified task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"     * @param task The task associated with the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"    public Command(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"     * Executes the command depending on the specific command type.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"     * @param tasks The task list to interact with.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"     * @param storage The storage object for saving or loading tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"     * @throws IOException If there\u0027s an error while updating storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"     * @throws InvalidTaskNumberException If an invalid task number is encountered during execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, InvalidTaskNumberException {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"     * Checks if the given index is valid for the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"     * @param index The index to check.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"     * @param tasks The task list to validate against.","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"     * @return true if the index is valid, false otherwise.","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    boolean isValidIndex(int index, TaskList tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"        return index \u003c tasks.getSize() \u0026\u0026 index \u003e\u003d 0;","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":50}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.exception.InvalidTaskNumberException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":" * The DeleteCommand class represents a command to delete a task from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"     * Constructs a DeleteCommand object with the index of a specified task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"     * @param index The index of the specified task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"        super(null);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"     * Executes the command to delete a task from the task list, update storage, and display a success message.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"     * @param tasks The task list from which the task should be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"     * @param storage The storage object for saving tasks to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"     * @throws IOException If there\u0027s an error while updating the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     * @throws InvalidTaskNumberException If an invalid task number is encountered during command execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, InvalidTaskNumberException {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"        if (!isValidIndex(index, tasks)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"            throw new InvalidTaskNumberException();","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"        Task task \u003d tasks.getTaskAtIndex(this.index);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"        tasks.remove(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"        storage.update(tasks.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"        ui.showDeleteSuccess(task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":48}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":" * The ExitCommand represents a command for exiting the chatbot application.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"     * Constructs an exit command to exit the chatbot application.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"     * @param task The task associated with the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    public ExitCommand(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"        super(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"     * Executes the command and displays parting messages through user interface.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"     * @param tasks The task list to interact with (not used).","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"     * @param storage The storage object for saving or loading tasks (not used).","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"        ui.showParting();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":" * The FindCommand is a class representing a command to find tasks containing the keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    private final String keyword;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"     * Constructs a FindCommand object with the keyword to search for.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"     * @param keyword The keyword associated with the task to be searched.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"        super(null);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"     * Executes the find command searching and displaying tasks related to keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"     * @param tasks The task list to be interacted with.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"     * @param storage The storage to save or update tasks to.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"        ui.showMatch(tasks.filterTasks(task -\u003e task.contains(keyword)));","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"wesho1107":37}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.command;","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"public class HelpCommand extends Command{","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"     * Constructs a HelpCommand object with the specified task.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"     * @param task The task associated with the command.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    public HelpCommand(Task task) {","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"        super(task);","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"     * Executes the command and displays help information through user interface.","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"     * @param tasks   The task list (not used).","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"     * @param storage The storage object (not used).","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"        ui.showHelp();","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        ui.showFeatures();","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"wesho1107":31}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":" * The ListCommand represents the command to list the tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"     * Constructs a ListCommand object to display all tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"     * @param task The task associated with the command (not used).","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    public ListCommand(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"        super(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"     * Executes the command to display the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"     * @param tasks The task list to interact with.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"     * @param storage The storage object for saving or loading tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"        ui.showList(tasks.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":33}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.exception.InvalidTaskNumberException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":" * The MarkCommand represents a command to mark or unmark a task in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    private boolean isMark;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"     * Constructs a MarkCommand object that marks or unmarks a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"     * @param index The index of the task to be marked or unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"     * @param isMark true to mark the task, false to unmark the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    public MarkCommand(int index, boolean isMark) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"        super(null);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"     * Executes the command to mark or unmark a task in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"     * @param tasks The task list to interact with.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"     * @param storage The storage object for saving or loading tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"     * @throws IOException If there\u0027s an error with the input/output.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"     * @throws InvalidTaskNumberException If an invalid task number is encountered during execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, InvalidTaskNumberException {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"        if (!isValidIndex(index, tasks)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"            throw new InvalidTaskNumberException();","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"        Task task \u003d tasks.getTaskAtIndex(index);","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"        if (isMark) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"            task.markTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"            ui.showMark(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"            task.unmarkTask();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"            ui.showUnmark(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"        storage.update(tasks.getTasks());","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":59}},{"path":"src/main/java/duke/command/RemindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.exception.InvalidTaskNumberException;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":" * The MarkCommand represents a command to set a task as reminder in the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    private int index;","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"     * Constructs a RemindCommand object with the specified task.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"     * @param index The task associated with the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    public RemindCommand(int index) {","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"        super(null);","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"     * Executes the command to set a reminder on a task and updates the storage.","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"     * @param tasks   The task list to interact with.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"     * @param storage The storage object for saving or loading tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"     * @throws IOException             If there\u0027s an error while updating storage.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"     * @throws InvalidTaskNumberException If an invalid task number is encountered during command execution.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, InvalidTaskNumberException {","lastModifiedDate":"2023-09-15"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        if (index \u003e\u003d tasks.getSize() || index \u003c 0) throw new InvalidTaskNumberException();","lastModifiedDate":"2023-09-15"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"        Task task \u003d tasks.getTaskAtIndex(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"        task.setReminder();","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"        storage.update(tasks.getTasks());","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"wesho1107":44}},{"path":"src/main/java/duke/command/ReminderCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.command;","lastModifiedDate":"2023-09-15"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import duke.main.TaskList;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":" * The ReminderCommand represents a command to list the reminders of the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"public class ReminderCommand extends Command {","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"     * Constructs a ReminderCommand object with the specified task.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"     * @param task The task associated with the command.","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    public ReminderCommand(Task task) {","lastModifiedDate":"2023-09-15"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"        super(task);","lastModifiedDate":"2023-09-15"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"     * Executes the command to display the list of reminders.","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"     * @param tasks The task list to interact with.","lastModifiedDate":"2023-09-15"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"     * @param storage The storage object for saving or loading tasks.","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-09-15"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"        ui.showReminders(tasks.getReminders());","lastModifiedDate":"2023-09-15"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-09-15"}],"authorContributionMap":{"wesho1107":33}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class DukeException extends Throwable {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"        super(\"\\n\" + error);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wesho1107":8}},{"path":"src/main/java/duke/exception/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class EmptyDeadlineException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    public EmptyDeadlineException(String error) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"        super(error);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wesho1107":7}},{"path":"src/main/java/duke/exception/EmptyEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class EmptyEventException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    public EmptyEventException(String error) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"        super(error);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wesho1107":7}},{"path":"src/main/java/duke/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class EmptyTaskException extends DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    public EmptyTaskException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"        super(\"    TWEET!!! A task cannot be empty\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":7}},{"path":"src/main/java/duke/exception/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class EmptyTodoException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    public EmptyTodoException(String error) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"        super(error);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wesho1107":7}},{"path":"src/main/java/duke/exception/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    public InvalidTaskNumberException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"        super(\"    TWEET!!! I can\u0027t find the task you are looking for!\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":7}},{"path":"src/main/java/duke/exception/NoDueDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class NoDueDateException extends DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    public NoDueDateException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"        super(\"    TWEET!!! A deadline cannot have no due date\");","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":7}},{"path":"src/main/java/duke/exception/NoEventEndException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class NoEventEndException extends DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"    public NoEventEndException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"        super(\"    TWEET!!! An event cannot have no end timing\");","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":8}},{"path":"src/main/java/duke/exception/NoEventStartException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class NoEventStartException extends DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"    public NoEventStartException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"        super(\"    TWEET!!! An event cannot have no start timing\");","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":8}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.main;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import duke.exception.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":" * The main class for Duke chatbot application.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"    private static final String FILE_PATH \u003d \"./tasks.txt\";","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"     * Constructs a Duke object with the given file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    public Duke() {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"        assert !FILE_PATH.isEmpty() : \"There should be a valid filepath\";","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"     * Initializes the chatbot and displays the greeting message.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     * @return The initial message from the chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    public String initialise() {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"        ui.showHeader();","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"        ui.showReminders(tasks.getReminders());","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"        ui.showGreeting();","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"        return ui.getCurrentMessage();","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"     * Runs the chatbot application by processing the user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"     * @param input The input provided by the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"    public void run(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"     * Gets the response from the chatbot for the given input.","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"     * @param input The input provided by the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"     * @return The response generated by the chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"        run(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"        return ui.getCurrentMessage();","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wesho1107":69,"-":2}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.main;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"wesho1107":12}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.main;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":" * The main class for launching the Duke chatbot application using JavaFX.","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"     * The entry point for the Duke chatbot application.","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"     * @param stage The primary stage for the JavaFX application.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"            stage.setTitle(\"Birdy\");","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"wesho1107":41}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.main;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import duke.exception.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":" * Parser class is responsible for parsing user input, understanding the command and return","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":" * the appropriate Command objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"     * Parses the given full command by user and returns corresponding Command object.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"     * @param fullCommand The full user input command.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"     * @throws DukeException If there\u0027s an error during parsing.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"        String[] splitCommand \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"        String headCommand \u003d splitCommand[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"        String commandDetails;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"        if (headCommand.equals(\"bye\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"            return new ExitCommand(null);","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"        if (headCommand.equals(\"list\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"            return new ListCommand(null);","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"        if (headCommand.equals(\"reminder\")) {","lastModifiedDate":"2023-09-15"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"            return new ReminderCommand(null);","lastModifiedDate":"2023-09-15"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        if (headCommand.equals(\"help\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"            return new HelpCommand(null);","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"        if (splitCommand.length \u003c 2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"        commandDetails \u003d splitCommand[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"        String task;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"        String[] details;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"        int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"        switch(headCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"            index \u003d Integer.parseInt(commandDetails) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"            index \u003d Integer.parseInt(commandDetails) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"            return new MarkCommand(index, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"            index \u003d Integer.parseInt(commandDetails) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"            return new MarkCommand(index, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"        case \"remind\":","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"            index \u003d Integer.parseInt(commandDetails) - 1;","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"            return new RemindCommand(index);","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"        case \"find\":","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"            return new FindCommand(commandDetails);","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"            task \u003d commandDetails;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"            Todo todo \u003d new Todo(task, false, false);","lastModifiedDate":"2023-09-15"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"            return new AddCommand(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"            details \u003d commandDetails.split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"            if (details.length \u003c 2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"                throw new NoDueDateException();","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"            task \u003d details[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"            String duedate \u003d details[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"            Deadline deadline \u003d new Deadline(task, duedate, false, false);","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"            return new AddCommand(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"            details \u003d commandDetails.split(\" /from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"            if(details.length \u003c 2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"                throw new NoEventStartException();","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"wesho1107"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"wesho1107"},"content":"            task \u003d details[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"wesho1107"},"content":"            String[] timeDetails \u003d details[1].split(\" /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"wesho1107"},"content":"            if(timeDetails.length \u003c 2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"wesho1107"},"content":"                throw new NoEventEndException();","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"wesho1107"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"wesho1107"},"content":"            String start \u003d timeDetails[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"wesho1107"},"content":"            String end \u003d timeDetails[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"wesho1107"},"content":"            Event event \u003d new Event(task, start, end, false, false);","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"wesho1107"},"content":"            return new AddCommand(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"wesho1107"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"wesho1107"},"content":"            throw new DukeException(\"    TWEET!!! No such command\");","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":106}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.main;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":" * Storage class handles loading and saving tasks to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    private static final String DONE \u003d \"1\";","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    private String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"     * Constructs a Storage object with the given file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"     * @param filePath The path to the file used for storing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"     * Loads tasks from the file in the constructor.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"     * @throws IOException If there\u0027s an error while reading the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"            f.createNewFile();","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"        assert f.exists() : \"There needs to be a output file to load from\";","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"            Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"            String[] taskDetails \u003d sc.nextLine().split(\" , \");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"            switch (taskDetails[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"            case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"                task \u003d new Todo(taskDetails[3], taskDetails[2].equals(\"1\"), taskDetails[1].equals(\"1\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"            case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"                task \u003d new Deadline(taskDetails[3], taskDetails[4], taskDetails[2].equals(\"1\"), taskDetails[1].equals(\"1\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"            case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"                task \u003d new Event(taskDetails[3], taskDetails[4], taskDetails[5], taskDetails[2].equals(\"1\"), taskDetails[1].equals(\"1\"));","lastModifiedDate":"2023-09-15"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"                task \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"            tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"     * Appends a task to the file specified in the constructor.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"     * @param task The task to be appended to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"     * @throws IOException If there\u0027s an error while writing to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"    public void append(Task task) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"        assert !filePath.isEmpty() : \"There needs to be a valid filepath\";","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"        fw.write(task.getTaskFileString() + System.lineSeparator());","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"        fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"     * Update the file with a list of tasks, for when deleting or marking.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"     * @param tasks The list of tasks to be saved to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"     * @throws IOException If there\u0027s an error while writing to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"    public void update(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"wesho1107"},"content":"        assert !filePath.isEmpty() : \"There needs to be a valid filepath\";","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"wesho1107"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"wesho1107"},"content":"        tasks.forEach(task -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"wesho1107"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"wesho1107"},"content":"                fw.write(task.getTaskFileString() + System.lineSeparator());","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"wesho1107"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"wesho1107"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"wesho1107"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"wesho1107"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"wesho1107"},"content":"        fw.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":101}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.main;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":" * TaskList class represents a collection of tasks and provides methods to manage them.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"     * @param tasks The list of tasks to initialize the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"     * Adds a Task object to the TaskList","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        assert tasks !\u003d null : \"Tasks list should be initialised\";","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"     * Removes a task from the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"     * @param task The task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    public void remove(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"        assert tasks.contains(task) : \"Task to be removed needs to be in tasks list\";","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"        tasks.remove(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"     * Retrieves the list of tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"     * @return A List containing the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"        assert tasks !\u003d null : \"Tasks list should be initialised\";","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"     * Retrieves a task at the given index in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"     * @param index THe index of the task to be retrieved.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"     * @return The Task at the given index.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"    public Task getTaskAtIndex(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"     * Retrieve the number of tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"     * Filters and returns a list of tasks meeting the given predicate.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"     * @param predicate The predicate specified by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"     * @return A list of tasks meeting the given predicate.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"    public List\u003cTask\u003e filterTasks(Predicate\u003c? super Task\u003e predicate) {","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"        return tasks.stream().filter(predicate).collect(Collectors.\u003cTask\u003etoList());","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"wesho1107"},"content":"     * Retrieve a list of reminders from the TaskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"wesho1107"},"content":"     * @return A list of tasks that are reminders and not marked as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"wesho1107"},"content":"    public List\u003cTask\u003e getReminders() {","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"wesho1107"},"content":"        return filterTasks(task -\u003e !task.isMarked() \u0026\u0026 task.isReminder());","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":99}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.main;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":" * Ui class handles user interface interactions for the chatbot application, such as displaying messages.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"    // Constants","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    private static final String LOGO \u003d \"(• \u003e       (• \u003e       (• \u003e       (• \u003e       (• \u003e       (• \u003e\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"            +  \"/  ))        /  ))        /  ))        /  ))        /  ))        /  ))\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"            +  \"  ``          ``          ``          ``          ``         ``\";","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    private static final String HELP \u003d \"HELP INFORMATION\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"            + \"Show help: help\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"            + \"Add Todo: todo {task}\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"            + \"Add Deadline: deadline {deadline} /by {duedate}\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"            + \"Add Event: event {event} /from {start} /to {end}\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"            + \"NOTE: Datetime format: \\\"dd/MM/yyyy HH:mm\\\"\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    private static final String FEATURES \u003d \"Find tasks: find {keyword}\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"            + \"Delete tasks: delete {index}\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"            + \"Mark tasks: mark {index}\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"            + \"Unmark tasks: unmark {index}\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"            + \"Set reminder: remind {index}\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"            + \"Show list: list\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"            + \"Show reminders: reminder\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    private static final String GREET \u003d \"Hello! I\u0027m Birdy\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"            + \"chirp chirp! How can I help?\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"    private static final String PARTING \u003d \"chirp! See you around!\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"    private String currentMessage \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    private void appendCurrentMessage(String message) {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"        currentMessage +\u003d message + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"     * Reads command from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"     * @return The command entered by user as a String.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"     * @param error The error message to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"    public void showError(String error) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(error);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"        String output \u003d DIVIDER + \"    \" + error + DIVIDER;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"        System.out.println(output);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"     * Displays an error message when loading tasks from a file fails.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(\"chirp! cannot load tasks from file\");","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"        String output \u003d DIVIDER + \"    chirp! cannot load tasks from file\\n\" + DIVIDER;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"        System.out.println(output);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"     * Displays a parting message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"    public void showParting() {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(PARTING);","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"        String output \u003d DIVIDER + PARTING + DIVIDER;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"        System.out.println(output);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"     * Displays a header message to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"    public void showHeader() {","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(LOGO);","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(HELP);","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"        String output \u003d LOGO + DIVIDER + HELP;","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"        System.out.println(output);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"wesho1107"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"wesho1107"},"content":"    public void showGreeting() {","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(GREET);","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"wesho1107"},"content":"        System.out.println(GREET);","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"wesho1107"},"content":"     * Displays help information to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"wesho1107"},"content":"    public void showHelp() {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(HELP);","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"wesho1107"},"content":"        String output \u003d DIVIDER + HELP + DIVIDER;","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"wesho1107"},"content":"        System.out.println(output);","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"wesho1107"},"content":"     * Displays feature lists and help information to the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"wesho1107"},"content":"    public void showFeatures() {","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(FEATURES);","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"wesho1107"},"content":"        String output \u003d DIVIDER + HELP + DIVIDER;","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"wesho1107"},"content":"        System.out.println(output);","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"wesho1107"},"content":"     * Displays a horizontal line.","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"wesho1107"},"content":"    public void addLine() {","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(\"\");","lastModifiedDate":"2023-09-08"},{"lineNumber":121,"author":{"gitId":"wesho1107"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"wesho1107"},"content":"     * Displays a list of tasks to the user","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"wesho1107"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"wesho1107"},"content":"    public void showList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"wesho1107"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"wesho1107"},"content":"        if (tasks.size() \u003c 1) {","lastModifiedDate":"2023-09-08"},{"lineNumber":132,"author":{"gitId":"wesho1107"},"content":"            appendCurrentMessage(\"CHIRP! free and easy\");","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"wesho1107"},"content":"            System.out.println(\"    CHIRP! free and easy\");","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"wesho1107"},"content":"            return;","lastModifiedDate":"2023-09-08"},{"lineNumber":135,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":136,"author":{"gitId":"wesho1107"},"content":"        tasks.forEach(task -\u003e appendCurrentMessage(task.toString()));","lastModifiedDate":"2023-09-08"},{"lineNumber":137,"author":{"gitId":"wesho1107"},"content":"        tasks.forEach(task -\u003e System.out.println(\"    \" + task.toString()));","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"wesho1107"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":142,"author":{"gitId":"wesho1107"},"content":"     * Displays a list of reminders to the user","lastModifiedDate":"2023-09-15"},{"lineNumber":143,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-15"},{"lineNumber":144,"author":{"gitId":"wesho1107"},"content":"     * @param reminders The list of reminders to be displayed.","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"wesho1107"},"content":"    public void showReminders(List\u003cTask\u003e reminders) {","lastModifiedDate":"2023-09-15"},{"lineNumber":147,"author":{"gitId":"wesho1107"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(\"Important reminders:\");","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"wesho1107"},"content":"        if (reminders.size() \u003c 1) {","lastModifiedDate":"2023-09-15"},{"lineNumber":150,"author":{"gitId":"wesho1107"},"content":"            appendCurrentMessage(\"CHIRP! no reminders set\");","lastModifiedDate":"2023-09-15"},{"lineNumber":151,"author":{"gitId":"wesho1107"},"content":"            System.out.println(\"    CHIRP! no reminders set\");","lastModifiedDate":"2023-09-15"},{"lineNumber":152,"author":{"gitId":"wesho1107"},"content":"            return;","lastModifiedDate":"2023-09-15"},{"lineNumber":153,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":154,"author":{"gitId":"wesho1107"},"content":"        reminders.forEach(task -\u003e appendCurrentMessage(task.toString()));","lastModifiedDate":"2023-09-15"},{"lineNumber":155,"author":{"gitId":"wesho1107"},"content":"        reminders.forEach(task -\u003e System.out.println(\"    \" + task.toString()));","lastModifiedDate":"2023-09-15"},{"lineNumber":156,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(\"\");","lastModifiedDate":"2023-09-15"},{"lineNumber":157,"author":{"gitId":"wesho1107"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-15"},{"lineNumber":158,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":159,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":160,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"wesho1107"},"content":"     * Displays a success message when a task is added.","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"wesho1107"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"wesho1107"},"content":"     * @param size The new size of the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"wesho1107"},"content":"    public void showAddSuccess(String task, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(\"chirp! I\u0027ve added this task\");","lastModifiedDate":"2023-09-08"},{"lineNumber":168,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":169,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(String.format(\"Now you have %d tasks in the list\", size));","lastModifiedDate":"2023-09-08"},{"lineNumber":170,"author":{"gitId":"wesho1107"},"content":"        System.out.println(DIVIDER + \"    chirp! I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"wesho1107"},"content":"                + String.format(\"    %s\\n\", task)","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"wesho1107"},"content":"                + String.format(\"    Now you have %d tasks in the list\\n\", size)","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"wesho1107"},"content":"                + DIVIDER);","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"wesho1107"},"content":"     * Displays a success message when a task is removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"wesho1107"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"wesho1107"},"content":"    public void showDeleteSuccess(String task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(\"chirp chirp! right out the window\");","lastModifiedDate":"2023-09-08"},{"lineNumber":183,"author":{"gitId":"wesho1107"},"content":"        System.out.printf(DIVIDER + \"    chirp! chirp! %s right out the window!\\n\" + DIVIDER, task);","lastModifiedDate":"2023-09-03"},{"lineNumber":184,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":186,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"wesho1107"},"content":"     * Displays a message when a task is marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"wesho1107"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"wesho1107"},"content":"    public void showMark(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(\"chirp! I\u0027ve marked this task as done: \");","lastModifiedDate":"2023-09-08"},{"lineNumber":193,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(task.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":194,"author":{"gitId":"wesho1107"},"content":"        System.out.println(DIVIDER + \"    chirp! I\u0027ve mark this task as done:\\n\" +  String.format(\"    %s\\n\", task.toString()) + DIVIDER);","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":197,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"wesho1107"},"content":"     * Displays a message when a task is unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"wesho1107"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"wesho1107"},"content":"    public void showUnmark(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(\"chirp! I\u0027ve mark this task as not done yet:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":204,"author":{"gitId":"wesho1107"},"content":"        appendCurrentMessage(task.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":205,"author":{"gitId":"wesho1107"},"content":"        System.out.println(DIVIDER + \"    chirp! I\u0027ve mark this task as not done yet:\\n\" +  String.format(\"    %s\\n\", task.toString()) + DIVIDER);","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"wesho1107"},"content":"     * Display tasks in the filtered list.","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"wesho1107"},"content":"     * @param filteredTasks The filtered list of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"wesho1107"},"content":"    public void showMatch(List\u003cTask\u003e filteredTasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"wesho1107"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-02"},{"lineNumber":215,"author":{"gitId":"wesho1107"},"content":"        System.out.println(\"    tweet! Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"wesho1107"},"content":"        for (int i \u003d 0; i \u003c filteredTasks.size(); i ++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":217,"author":{"gitId":"wesho1107"},"content":"            String task \u003d filteredTasks.get(i).toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":218,"author":{"gitId":"wesho1107"},"content":"            appendCurrentMessage(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":219,"author":{"gitId":"wesho1107"},"content":"            System.out.printf(\"    %d. %s\\n\", i + 1, task);","lastModifiedDate":"2023-09-08"},{"lineNumber":220,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":221,"author":{"gitId":"wesho1107"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":224,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"wesho1107"},"content":"     * Retrieves the current message and resets the current message.","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":227,"author":{"gitId":"wesho1107"},"content":"     * @return The current message as a String.","lastModifiedDate":"2023-09-20"},{"lineNumber":228,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":229,"author":{"gitId":"wesho1107"},"content":"    public String getCurrentMessage() {","lastModifiedDate":"2023-09-08"},{"lineNumber":230,"author":{"gitId":"wesho1107"},"content":"        String message \u003d currentMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":231,"author":{"gitId":"wesho1107"},"content":"        currentMessage \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":232,"author":{"gitId":"wesho1107"},"content":"        return message;","lastModifiedDate":"2023-09-08"},{"lineNumber":233,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":234,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"wesho1107":234}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":" * The Deadline class represents a task with a specific due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"    private LocalDateTime duedate;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"     * Constructs a Deadline task with a description, due date and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"     * @param task The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"     * @param duedate The due date and time of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"     * @param done The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    public Deadline(String task, String duedate, boolean reminderStatus, boolean done) {","lastModifiedDate":"2023-09-15"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"        super(task, reminderStatus, done);","lastModifiedDate":"2023-09-15"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"        this.duedate \u003d stringToDateObj(duedate);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    private LocalDateTime stringToDateObj(String dateString) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"        return LocalDateTime.parse(dateString, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"     * Returns a string representation of the Deadline task for Ui display..","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"     * @return A formatted string including the task type, description and due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", this.duedate.format(formatter));","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"     * Returns a string representation of Deadline task for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"     * @return A formatted string suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"    public String getTaskFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"        return \"D\" + \" , \" + super.getTaskFileString() + \" , \" + this.duedate.format(formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wesho1107":48}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":" * The Event class represents a task with a specified start and end dates and times.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"     * Constructs an Event task with a description, start date, end date and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"     * @param task The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"     * @param start The start date and time of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"     * @param end The end date and time of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"     * @param done The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    public Event(String task, String start, String end, boolean reminderStatus, boolean done) {","lastModifiedDate":"2023-09-15"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"        super(task, reminderStatus, done);","lastModifiedDate":"2023-09-15"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"        this.start \u003d stringToDateObj(start);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"        this.end \u003d stringToDateObj(end);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    private LocalDateTime stringToDateObj(String dateString) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        return LocalDateTime.parse(dateString, formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"     * Returns a string representation of the Event task for Ui display.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"     * @return A formatted string including the task type, description, start date, and end date.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s, to: %s)\", this.start.format(formatter), this.end.format(formatter));","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"     * Returns a string representation of the Event task for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"     * @return A formatted string suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"    public String getTaskFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"        return \"E\" + \" , \" + super.getTaskFileString() + \" , \" + this.start.format(formatter) + \" , \" + this.end.format(formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wesho1107":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    private String task;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"    private boolean markedStatus;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    private boolean reminderStatus \u003d false;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"     * The Task class represents a basic task with a description and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"     * @param task","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"     * @param done","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    public Task(String task, boolean reminderStatus, boolean done) {","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"        this.markedStatus \u003d done;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"        this.reminderStatus \u003d reminderStatus;","lastModifiedDate":"2023-09-15"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"     * Returns a string representation of the Task, including the completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"     * @return A formatted string representing the task and its completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"        String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"        if (this.markedStatus) {","lastModifiedDate":"2023-09-15"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"            message \u003d \"[X] \" + this.task;","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"            message \u003d \"[ ] \" + this.task;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"        return message;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"     * Returns a string representation of the Task for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"     * @return The formatted string suitable for saving to file.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    public String getTaskFileString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"        String markString \u003d markedStatus ? \"1\" : \"0\";","lastModifiedDate":"2023-09-15"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"        String reminderString \u003d reminderStatus ? \"1\" : \"0\";","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"        String fileString \u003d markString + \" , \"","lastModifiedDate":"2023-09-15"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"                + reminderString + \" , \"","lastModifiedDate":"2023-09-15"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"                + this.task;","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"        return fileString;","lastModifiedDate":"2023-09-15"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"     * @return The updated completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"    public boolean markTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"        this.markedStatus \u003d true;","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"        return this.markedStatus;","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"     * @return The updated completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"    public boolean unmarkTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"        this.markedStatus \u003d false;","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"        return this.markedStatus;","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"     * Check if task description contains the keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"     * @return true if the task description contains the keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"        return this.task.contains(keyword);","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"    public boolean isMarked() {","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"        return this.markedStatus;","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"    public boolean isReminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"        return this.reminderStatus;","lastModifiedDate":"2023-09-15"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"    public void setReminder() {","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"        this.reminderStatus \u003d true;","lastModifiedDate":"2023-09-15"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wesho1107":89}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":" * The Todo class represents a simple task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"     * Constructs a Todo task with a description and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"     * @param task The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"     * @param done The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"    public Todo(String task, boolean reminderStatus, boolean done) {","lastModifiedDate":"2023-09-15"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"        super(task, reminderStatus, done);","lastModifiedDate":"2023-09-15"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"     * Returns a string representation of the Todo task for Ui display.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"     * @return A formatted string including the task type and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"     * Returns a string representation of the Todo task for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"     * @return A formatted string suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    public String getTaskFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"        return \"T\" + \" , \" + super.getTaskFileString();","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wesho1107":36}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"     * Creates and returns a user dialog box with the given text and image.","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"     * @param text The text to display in the user dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"     * @param img The image to display in the user dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"     * @return A DialogBox representing the user\u0027s dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"     * Creates and returns a Birdy dialog box with the given text and image.","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"     * This dialog is flipped to position the image on the left and the text on the right.","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"     * @param text The text to display in Birdy\u0027s dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"     * @param img The image to display in Birdy\u0027s dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"     * @return A DialogBox representing Birdy\u0027s dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"    public static DialogBox getBirdyDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"wesho1107":76}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import duke.main.Duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/img/user.jpeg\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"    private Image birdyImage \u003d new Image(this.getClass().getResourceAsStream(\"/img/bird.jpeg\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"     * Initializes the controller. Binds the scrollPane\u0027s vvalue to the dialogContainer\u0027s height property.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"     * Sets the Duke instance for the application and displays the initial Duke message in the dialog container.","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"     * @param d The Duke instance to set.","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"                DialogBox.getBirdyDialog(duke.initialise(), birdyImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"                DialogBox.getBirdyDialog(response, birdyImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"wesho1107":66}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"                \u003cInsets left\u003d\"10\" right\u003d\"10\"/\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"wesho1107":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"wesho1107":22}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"    Deadline deadline \u003d new Deadline(\"task\", \"11/11/2002 11:11\", false, false);","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"    public void testMarkDeadline() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"        assertEquals(true, deadline.markTask(), \"Marking deadline should work\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    public void testUnmarkTodo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"        assertEquals(false, deadline.unmarkTask(), \"Unmarking deadline should work\");","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"        assertEquals(\"[D][ ] task (by: 11/11/2002 11:11)\", deadline.toString(), \"deadline.toString() should work\");","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wesho1107":23}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"public class EventTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"    Event event \u003d new Event(\"task\", \"11/11/2002 11:11\", \"11/11/2002 22:22\", false, false);","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"    public void testMarkDeadline() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"        assertEquals(true, event.markTask(), \"Marking event should work\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    public void testUnmarkTodo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"        assertEquals(false, event.unmarkTask(), \"Unmarking event should work\");","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"        assertEquals(\"[E][ ] task (from: 11/11/2002 11:11, to: 11/11/2002 22:22)\", event.toString(), \"event.toString() should work\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wesho1107":23}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"    Todo todo \u003d new Todo(\"task\", false, false);","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"    public void testMarkTodo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"        assertEquals(true, todo.markTask(), \"Marking todo should work\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    public void testUnmarkTodo() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"        assertEquals(false, todo.unmarkTask(), \"Unmarking todo should work\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"        assertEquals(\"[T][ ] task\", todo.toString(), \"todo.toString() should work\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"wesho1107":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"todo get eggs","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"deadline make cake /by this Friday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"event birthday /from next Saturday /to next Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"todo get candles","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wesho1107":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"wesho1107":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"if ! javac -cp ../src/main/java/ipduke -Xlint:none -d ../bin ../src/main/java/ipduke/*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"java -classpath ../bin ipduke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":31,"wesho1107":3}}]
