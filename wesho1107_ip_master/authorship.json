[{"path":"src/main/java/ipduke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package ipduke;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    private String datetime;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"    Deadline(String taskDetails) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"        super(taskDetails.split(\" /by \")[0]);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"        this.datetime \u003d taskDetails.split(\" /by \")[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", this.datetime);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wesho1107":14}},{"path":"src/main/java/ipduke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package ipduke;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"import java.util.List;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"    static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"    static String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"    static String divider \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"    static String logo_bird \u003d \"    (• \u003e       (• \u003e       (• \u003e       (• \u003e       (• \u003e       (• \u003e\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"            +  \"    /))        /))        /))        /))        /))        /))\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"            +  \"     ``         ``         ``         ``         ``         ``\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"            + divider;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"    static String greet \u003d \"    Hello! I\u0027m Birdy\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"            + \"    chirp chirp! How can I help?\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"            + divider;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    static String parting \u003d divider + \"    chirp! See you around!\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"            + divider;","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"    public static void echo() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"        while(true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"wesho1107"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"wesho1107"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"wesho1107"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"wesho1107"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"wesho1107"},"content":"                System.out.println(divider + \"    \" + input + \"\\n\" + divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"wesho1107"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"wesho1107"},"content":"    public static void setTaskList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"wesho1107"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"wesho1107"},"content":"        boolean inLoop \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"wesho1107"},"content":"        while (inLoop) {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"wesho1107"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"wesho1107"},"content":"                String[] input \u003d sc.nextLine().split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"wesho1107"},"content":"                String firstWord \u003d input[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"wesho1107"},"content":"                String taskDetails \u003d input.length \u003d\u003d 1 ? \"\" : input[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"wesho1107"},"content":"                if (firstWord.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"wesho1107"},"content":"                    System.out.println(parting);","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"wesho1107"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"wesho1107"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"wesho1107"},"content":"                if (firstWord.equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"wesho1107"},"content":"                    System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"wesho1107"},"content":"                    for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"wesho1107"},"content":"                        System.out.println(\"    \" + (i + 1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"wesho1107"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"wesho1107"},"content":"                    System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"wesho1107"},"content":"                    continue;","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"wesho1107"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"wesho1107"},"content":"                switch (firstWord) {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"wesho1107"},"content":"                    case \"todo\":","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"wesho1107"},"content":"                        if (taskDetails.equals(\"\")) throw new EmptyTodoException(","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"wesho1107"},"content":"                                divider + \"    TWEET!!! The description of a todo cannot be empty.\\n\" + divider","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"wesho1107"},"content":"                        );","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"wesho1107"},"content":"                        taskList.add(new Todo(taskDetails));","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"wesho1107"},"content":"                        System.out.println(divider + \"    chirp! I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"wesho1107"},"content":"                                + String.format(\"    %s\", taskList.get(taskList.size() - 1).toString()) + \"\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"wesho1107"},"content":"                                + String.format(\"    Now you have %d tasks in the list\\n\", taskList.size())","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"wesho1107"},"content":"                                + divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"wesho1107"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"wesho1107"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"wesho1107"},"content":"                        if (taskDetails.equals(\"\")) throw new EmptyDeadlineException(","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"wesho1107"},"content":"                                divider + \"    TWEET!!! The description of a deadline cannot be empty.\\n\" + divider","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"wesho1107"},"content":"                        );","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"wesho1107"},"content":"                        taskList.add(new Deadline(taskDetails));","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"wesho1107"},"content":"                        System.out.println(divider + \"    chirp! I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"wesho1107"},"content":"                                + String.format(\"    %s\", taskList.get(taskList.size() - 1).toString()) + \"\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"wesho1107"},"content":"                                + String.format(\"    Now you have %d tasks in the list\\n\", taskList.size())","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"wesho1107"},"content":"                                + divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"wesho1107"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"wesho1107"},"content":"                    case \"event\":","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"wesho1107"},"content":"                        if (taskDetails.equals(\"\")) throw new EmptyEventException(","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"wesho1107"},"content":"                                divider + \"    TWEET!!! The description of an event cannot be empty.\\n\" + divider","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"wesho1107"},"content":"                        );","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"wesho1107"},"content":"                        taskList.add(new Event(taskDetails));","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"wesho1107"},"content":"                        System.out.println(divider + \"    chirp! I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"wesho1107"},"content":"                                + String.format(\"    %s\", taskList.get(taskList.size() - 1).toString()) + \"\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"wesho1107"},"content":"                                + String.format(\"    Now you have %d tasks in the list\\n\", taskList.size())","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"wesho1107"},"content":"                                + divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"wesho1107"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"wesho1107"},"content":"                    case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"wesho1107"},"content":"                        int deleteIndex \u003d Integer.parseInt(taskDetails) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"wesho1107"},"content":"                        if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d taskList.size()) throw new InvalidTaskNumberException(","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"wesho1107"},"content":"                                divider + \"    TWEET!!! I can\u0027t find the task you are looking for!\\n\" + divider","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"wesho1107"},"content":"                        );","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"wesho1107"},"content":"                        taskList.remove(deleteIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"wesho1107"},"content":"                        System.out.print(divider + \"    chirp! chirp! Task right out the window!\\n\" + divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"wesho1107"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"wesho1107"},"content":"                    case \"mark\":","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"wesho1107"},"content":"                        int markIndex \u003d Integer.parseInt(taskDetails) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"wesho1107"},"content":"                        if (markIndex \u003c 0 || markIndex \u003e\u003d taskList.size()) throw new InvalidTaskNumberException(","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"wesho1107"},"content":"                                divider + \"    TWEET!!! I can\u0027t find the task you are looking for!\\n\" + divider","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"wesho1107"},"content":"                        );","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"wesho1107"},"content":"                        System.out.print(divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"wesho1107"},"content":"                        taskList.get(markIndex).markTask();","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"wesho1107"},"content":"                        System.out.println(divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"wesho1107"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"wesho1107"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"wesho1107"},"content":"                        int unmarkIndex \u003d Integer.parseInt(taskDetails) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"wesho1107"},"content":"                        if (unmarkIndex \u003c 0 || unmarkIndex \u003e\u003d taskList.size()) throw new InvalidTaskNumberException(","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"wesho1107"},"content":"                                divider + \"    TWEET!!! I can\u0027t find the task you are looking for!\\n\" + divider","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"wesho1107"},"content":"                        );","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"wesho1107"},"content":"                        System.out.print(divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"wesho1107"},"content":"                        taskList.get(unmarkIndex).unmarkTask();","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"wesho1107"},"content":"                        System.out.println(divider);","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"wesho1107"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"wesho1107"},"content":"                    default:","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"wesho1107"},"content":"                        throw new EmptyEventException(","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"wesho1107"},"content":"                                divider + \"    TWEET!!! I\u0027m sorry, but I don\u0027t know how to bark\\n\" + divider","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"wesho1107"},"content":"                        );","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"wesho1107"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"wesho1107"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"wesho1107"},"content":"                System.out.println(e);","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"wesho1107"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"wesho1107"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"wesho1107"},"content":"        System.out.println(\"    chirp chirp!\\n\" + logo_bird + greet);","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"wesho1107"},"content":"        setTaskList();","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wesho1107":131,"-":7}},{"path":"src/main/java/ipduke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package ipduke;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class DukeException extends Throwable {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"        super(\"\\n\" + error);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wesho1107":8}},{"path":"src/main/java/ipduke/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package ipduke;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class EmptyDeadlineException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    public EmptyDeadlineException(String error) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"        super(error);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wesho1107":7}},{"path":"src/main/java/ipduke/EmptyEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package ipduke;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class EmptyEventException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    public EmptyEventException(String error) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"        super(error);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wesho1107":7}},{"path":"src/main/java/ipduke/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package ipduke;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class EmptyTodoException extends DukeException{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    public EmptyTodoException(String error) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"        super(error);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wesho1107":7}},{"path":"src/main/java/ipduke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package ipduke;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    private String start;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"    private String end;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    Event(String taskDetails) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"        super(taskDetails.split(\" /from \")[0]);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"        String timeline \u003d taskDetails.split(\" /from \")[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"        this.start \u003d timeline.split(\" /to \")[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"        this.end \u003d timeline.split(\" /to \")[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s to: %s)\", this.start, this.end);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wesho1107":17}},{"path":"src/main/java/ipduke/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package ipduke;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    public InvalidTaskNumberException(String error) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"        super(error);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wesho1107":7}},{"path":"src/main/java/ipduke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package ipduke;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    private String task;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"    private boolean done \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"    Task(String task) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"        String message;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wesho1107"},"content":"        if (this.done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"wesho1107"},"content":"            message \u003d \"[X] \" + this.task;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"wesho1107"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"            message \u003d \"[ ] \" + this.task;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wesho1107"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"        return message;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wesho1107"},"content":"    public void markTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wesho1107"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"        System.out.println(\"    chirp chirp! I\u0027ve marked this task as done:\\n\" + String.format(\"    %s\", this.toString()));","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"wesho1107"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"wesho1107"},"content":"        System.out.println(\"    chirp! I\u0027ve mark this task as not done yet:\\n\" +  String.format(\"    %s\", this.toString()));","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wesho1107":30}},{"path":"src/main/java/ipduke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"package ipduke;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"    Todo(String taskDetails) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"        super(taskDetails);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wesho1107"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wesho1107"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wesho1107":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wesho1107"},"content":"todo get eggs","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wesho1107"},"content":"deadline make cake /by this Friday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wesho1107"},"content":"event birthday /from next Saturday /to next Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wesho1107"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wesho1107"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wesho1107"},"content":"todo get candles","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wesho1107"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wesho1107"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wesho1107"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wesho1107"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wesho1107":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wesho1107"},"content":"java -classpath ..\\bin ipduke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"wesho1107":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"wesho1107"},"content":"if ! javac -cp ../src/main/java/ipduke -Xlint:none -d ../bin ../src/main/java/ipduke/*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"wesho1107"},"content":"java -classpath ../bin ipduke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"wesho1107"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":31,"wesho1107":3}}]
