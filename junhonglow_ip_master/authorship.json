[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"# Bocchi ðŸŽ¸","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"## Features ","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"- Adding a task - todo / deadline / event","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"- Deleting a task - delete","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"- Viewing tasks - list","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"- Marking a task - mark","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"- Unmarking a task - unmark","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"- Exit the program - bye","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"  ","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"### Adding a task","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"1. Add a task with no stipulated duration.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"    \u003e Format: todo {task name}","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    ","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"    `todo Sleep`","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"2. Add a task with a deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"    \u003e Format: deadline {task name} /by {deadline}","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"    ","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"    `deadline English homework /by 2023-11-22 23:59:59`","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"3. Add a task with a duration.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"    \u003e Format: event {task name} /from {start} /to {end}","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"    `event Badminton /from 2023-11-23 10:00:00 /to 2023-11-23 12:00:00`","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"### Deleting a task","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"Delete a task at a specified index.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"\u003e Format: delete {index}`","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"`delete 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"### Viewing your task list","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"View your current tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"\u003e Format: list","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"`list`","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"### Marking a task","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"Mark a task at a specified index as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"\u003e Format: mark {index}","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"`mark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"### Unmarking a task","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"Mark a task at a specified index as not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"\u003e Format: unmark {index}","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"`unmark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"### Exit the program","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"\u003e Format: bye","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"`bye`","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"junhonglow":61}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"checkstyle {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"    mainClass.set(\"bocchi.Launcher\")","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"    archiveBaseName \u003d \"bocchi\"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"junhonglow"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junhonglow":23,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"# Bocchi ðŸŽ¸","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"- Adding a task - todo / deadline / event","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"- Deleting a task - delete","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"- Viewing tasks - list","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"- Marking a task - mark","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"- Unmarking a task - unmark","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"- Exit the program - bye","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"  ","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"### Adding a task","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"1. Add a task with no stipulated duration.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"    \u003e Format: todo {task name}","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    ","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"    `todo Sleep`","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"2. Add a task with a deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"    \u003e Format: deadline {task name} /by {deadline}","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"    ","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"    `deadline English homework /by 2023-11-22 23:59:59`","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"3. Add a task with a duration.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"    \u003e Format: event {task name} /from {start} /to {end}","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"    `event Badminton /from 2023-11-23 10:00:00 /to 2023-11-23 12:00:00`","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"### Deleting a task","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"Delete a task at a specified index.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"\u003e Format: delete {index}`","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"`delete 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"### Viewing your task list","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"View your current tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"\u003e Format: list","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"`list`","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"### Marking a task","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"Mark a task at a specified index as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"\u003e Format: mark {index}","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"`mark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"### Unmarking a task","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"Mark a task at a specified index as not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"\u003e Format: unmark {index}","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"`unmark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"### Exit the program","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"\u003e Format: bye","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"`bye`","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"junhonglow":48,"-":13}},{"path":"src/main/java/bocchi/Bocchi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package bocchi;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import exceptions.BocchiException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"import storage.BocchiLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"import storage.BocchiSaver;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":" * Class to run an instance of Bocchi","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"public class Bocchi {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"    private final Parser parser;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"     * Initializes the program","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"     * @param dialogContainer The container for displaying dialog message.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"    public Bocchi(VBox dialogContainer) {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"        this.ui \u003d new Ui(dialogContainer);","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"        this.parser \u003d new Parser(this.ui);","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"        this.taskList \u003d new BocchiLoader().loadTaskList(this.ui);","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"        ui.greet();","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"     * Processes user input and returns a response.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"     * @return True if the program should terminate, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"    public boolean getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"        if (parser.isTerminated(input)) {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"            BocchiSaver saver \u003d new BocchiSaver(taskList);","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"            saver.saveTaskList();","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"            return true;","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"            this.taskList \u003d this.parser.process(input, this.taskList);","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"        } catch (BocchiException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"            ui.exception(e);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"        return false;","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"junhonglow":51}},{"path":"src/main/java/bocchi/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package bocchi;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import gui.Main;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"junhonglow":13}},{"path":"src/main/java/exceptions/BocchiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":" * Super class for custom exceptions used in Bocchi.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"public abstract class BocchiException extends Exception {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"     * Constructs a new BocchiException with the specified detail message.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"     * @param message The detail message associated with the exception.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"    public BocchiException(String message) {","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"        super(message);","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"junhonglow":15}},{"path":"src/main/java/exceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":" * Exception class for empty task descriptions.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"public class EmptyTaskException extends BocchiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"    static final String EMPTY_TASK_ERROR_MSG \u003d \"OOPS!!! The description of a %s cannot be empty.\";","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"     * Constructs a new EmptyTaskException with a specific task type.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"     * @param taskType The type of task (e.g., \"deadline\", \"event\", \"todo\").","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    public EmptyTaskException(String taskType) {","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"        super(String.format(EMPTY_TASK_ERROR_MSG, taskType));","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"junhonglow":17}},{"path":"src/main/java/exceptions/EventConflictException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package exceptions;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":" * Exception class for event conflicts.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"public class EventConflictException extends BocchiException {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"    static final String EVENT_CONFLICT_ERROR_MSG \u003d \"There is a conflicting event time!\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"            + \"Please delete the old task or reschedule the current task.\";","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"     * Constructs a new EventConflictException.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"    public EventConflictException() {","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"        super(EVENT_CONFLICT_ERROR_MSG);","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"junhonglow":16}},{"path":"src/main/java/exceptions/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package exceptions;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":" * Exception class for invalid date and times.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"public class InvalidDateTimeException extends BocchiException {","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"    static final String INVALID_DATE_TIME_ERROR_MSG \u003d","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"            \"Failed to parse the date-time string \u0027%s\u0027.\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"                    + \"Expected format: \u0027YYYY-MM-DD HH:MM:SS\u0027.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"     * Constructs a new InvalidDateTimeException.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    public InvalidDateTimeException(String dateTime) {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"        super(String.format(INVALID_DATE_TIME_ERROR_MSG, dateTime));","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"junhonglow":17}},{"path":"src/main/java/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":" * Exception class for invalid inputs","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"public class InvalidInputException extends BocchiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"    static final String INVALID_INPUT_ERROR_MSG \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"     * Constructs a new InvalidInputException.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"        super(INVALID_INPUT_ERROR_MSG);","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"junhonglow":15}},{"path":"src/main/java/exceptions/InvalidSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":" * Exception class for invalid tasks syntax","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"public class InvalidSyntaxException extends BocchiException {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"    static final String INVALID_DEADLINE_DATE_ERROR_MSG \u003d","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"            \"Please use the following syntax when creating a deadline:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"                    + \"{activity} /by {date}\";","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"    static final String INVALID_EVENT_DATE_ERROR_MSG \u003d","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"            \"Please use the following syntax when creating an event:\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"                    + \"{activity} /from {start time} /to {end time}\";","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"    static final String DATE_TIME_FORMAT_MSG \u003d","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"            \"Please use the format for date and times: YYYY-MM-DD HH:MM:SS\";","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"    static final String UNEXPECTED_ERROR_IN_ERROR_MSG \u003d","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"            \"Unexpected error occurred! Please contact the admin.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"     * Constructs a new InvalidSyntaxException with a specific task type.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"     * @param taskType The type of task (e.g., \"deadline\", \"event\").","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"    public InvalidSyntaxException(String taskType) {","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"        super(generateErrorMessage(taskType));","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"     * Generates an appropriate error message based on the task type.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"     * @param taskType The type of task (e.g., \"deadline\", \"event\").","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"     * @return The generated error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"    private static String generateErrorMessage(String taskType) {","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"            return INVALID_DEADLINE_DATE_ERROR_MSG + \"\\n\" + DATE_TIME_FORMAT_MSG;","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"        case \"event\":","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"            return INVALID_EVENT_DATE_ERROR_MSG + \"\\n\" + DATE_TIME_FORMAT_MSG;","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"        default:","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"            return UNEXPECTED_ERROR_IN_ERROR_MSG;","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"junhonglow":43}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package gui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":" * A custom JavaFX control representing a dialog box with an image and text.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":" * This control can be used to display user and Bocchi\u0027s messages in the application\u0027s user interface.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"     * @param img  The image to be displayed in the dialog box.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"     * Creates a DialogBox for user messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"     * @param text The text of the user\u0027s message.","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"     * @param img  The user\u0027s profile image.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"junhonglow"},"content":"     * @return A DialogBox representing the user\u0027s message.","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"junhonglow"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"     * Creates a DialogBox for Bocchi\u0027s messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"     * @param text The text of Bocchi\u0027s message.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"junhonglow"},"content":"     * @param img  Bocchi\u0027s profile image.","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"junhonglow"},"content":"     * @return A DialogBox representing Bocchi\u0027s message.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"junhonglow"},"content":"    public static DialogBox getBocchiDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"junhonglow"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"junhonglow"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"junhonglow"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"junhonglow"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"junhonglow"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"junhonglow"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"junhonglow"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"junhonglow"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"junhonglow"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"junhonglow":80}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package gui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":" * A GUI for Bocchi using FXML.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"     * Starts the Bocchi GUI application.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"     * @param stage The primary stage for the GUI application.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"            stage.setTitle(\"Bocchi\");","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBocchi(stage);","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"junhonglow":35}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package gui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import bocchi.Bocchi;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":" * Controller for the main GUI window of the Bocchi application. Provides the layout for the other controls.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/larry.png\"));","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"    private Bocchi bocchi;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"    private Stage stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"     * Initializes the controller.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"     * Binds the vertical scroll position of the scrollPane to the height of the dialogContainer.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"     * Sets up the Bocchi instance and associates it with the current stage.","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"    public void setBocchi(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"        this.bocchi \u003d new Bocchi(dialogContainer);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"     * Handles user input, displays it in a dialog box, and processes the user\u0027s request using the Bocchi instance.","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"     * Clears the user input field after processing.","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"junhonglow"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"junhonglow"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"junhonglow"},"content":"        boolean isTerminated \u003d bocchi.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"junhonglow"},"content":"        if (isTerminated) {","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"            this.stage.close();","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"junhonglow":62}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import exceptions.BocchiException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"import exceptions.EmptyTaskException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"import exceptions.EventConflictException;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"import exceptions.InvalidInputException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"import exceptions.InvalidSyntaxException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"import task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"import task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"import task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":" * Class used to parse all inputs from the user","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"    private static final int EXPECTED_TOKENS_IN_EVENT \u003d 3;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"    private static final String LINE_BREAK \u003d \"___________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"     * Creates a new Parser instance.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"     * @param ui The user interface component for displaying messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"    public Parser(Ui ui) {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"     * Adds the task to the current task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"     * @param input Remaining input string excluding action","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"     * @param taskList Current list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"     * @return Updated task list","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"    private TaskList addTask(String input, String action, TaskList taskList)","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"            throws BocchiException {","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"        Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"        switch (action) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"            if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"                throw new InvalidSyntaxException(\"deadline\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"            // Further tokenize into action and deadline","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"            String[] deadlineTokens \u003d input.split(\"\\\\s*/by\\\\s*\");","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"            task \u003d new Deadline(deadlineTokens[0], deadlineTokens[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"        case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junhonglow"},"content":"            if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"                throw new InvalidSyntaxException(\"event\");","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junhonglow"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"            // Further tokenize into action, start time and end time","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junhonglow"},"content":"            // Regex identified by /to OR /from","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"            String[] eventTokens \u003d input.split(","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junhonglow"},"content":"                    \"\\\\s*/to\\\\s*|\\\\s*/from\\\\s*\",","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"                    EXPECTED_TOKENS_IN_EVENT","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junhonglow"},"content":"            );","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"            task \u003d new Event(eventTokens[0], eventTokens[1], eventTokens[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junhonglow"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"junhonglow"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"junhonglow"},"content":"            task \u003d new Todo(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"junhonglow"},"content":"            break;","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"junhonglow"},"content":"        default:","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"junhonglow"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"junhonglow"},"content":"        if (taskList.hasConflict(task)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"junhonglow"},"content":"            throw new EventConflictException();","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"junhonglow"},"content":"        TaskList newTaskList \u003d taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"junhonglow"},"content":"        boolean isAdded \u003d newTaskList.isTaskPresent(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"junhonglow"},"content":"        assert isAdded;","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"junhonglow"},"content":"        ui.addTaskSuccessful(task, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"junhonglow"},"content":"        return newTaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"junhonglow"},"content":"     * Removes the task from the current task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"junhonglow"},"content":"     * @param taskNumber Remaining input string excluding action","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"junhonglow"},"content":"     * @param taskList Current list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"junhonglow"},"content":"     * @return Updated task list","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"junhonglow"},"content":"    private TaskList deleteTask(int taskNumber, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"junhonglow"},"content":"        Task toDelete \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"junhonglow"},"content":"        TaskList newTaskList \u003d taskList.deleteTask(toDelete);","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"junhonglow"},"content":"        boolean isDeleted \u003d !newTaskList.isTaskPresent(toDelete);","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"junhonglow"},"content":"        assert isDeleted;","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"junhonglow"},"content":"        ui.deleteTaskSuccessful(toDelete, newTaskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"junhonglow"},"content":"        return newTaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"junhonglow"},"content":"     * Marks the indicated task.","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"junhonglow"},"content":"     * @param taskNumber Task.Task number","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"junhonglow"},"content":"     * @param taskList Current list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"junhonglow"},"content":"     * @return Updated task list","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"junhonglow"},"content":"    private TaskList markTask(int taskNumber, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"junhonglow"},"content":"        TaskList newTaskList \u003d taskList.markTask(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"junhonglow"},"content":"        ui.markTaskSuccessful(taskNumber, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"junhonglow"},"content":"        return newTaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"junhonglow"},"content":"     * Unmarks the indicated task.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"junhonglow"},"content":"     * @param taskNumber Task.Task number","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"junhonglow"},"content":"     * @param taskList Current list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"junhonglow"},"content":"     * @return Updated task list","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"junhonglow"},"content":"    private TaskList unmarkTask(int taskNumber, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"junhonglow"},"content":"        TaskList newTaskList \u003d taskList.unmarkTask(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"junhonglow"},"content":"        ui.unmarkTaskSuccessful(taskNumber, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"junhonglow"},"content":"        return newTaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"junhonglow"},"content":"     * Outputs the current list of tasks to be done.","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"junhonglow"},"content":"     * @param taskList Current list of tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"junhonglow"},"content":"    private void displayTasks(TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"junhonglow"},"content":"        ui.displayTasks(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"junhonglow"},"content":"    private void findSimilarTasks(String query, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"junhonglow"},"content":"        TaskList similarTasks \u003d taskList.getSimilarTasks(query);","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"junhonglow"},"content":"        ui.displayTasks(similarTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"junhonglow"},"content":"     * Processes the user\u0027s input command and updates the task list accordingly.","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"junhonglow"},"content":"     * @param command  The user\u0027s input command.","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"junhonglow"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"junhonglow"},"content":"     * @return The updated task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"junhonglow"},"content":"     * @throws BocchiException An exception thrown for invalid inputs.","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"junhonglow"},"content":"    public TaskList process(String command, TaskList taskList) throws BocchiException {","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"junhonglow"},"content":"        // This splits the input string into two to isolate the first token as an action","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"junhonglow"},"content":"        String[] tokens \u003d command.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"junhonglow"},"content":"        String action \u003d tokens[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"junhonglow"},"content":"        switch (action) {","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"junhonglow"},"content":"        case \"list\":","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"junhonglow"},"content":"            displayTasks(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"junhonglow"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"junhonglow"},"content":"        case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"junhonglow"},"content":"            findSimilarTasks(tokens[1], taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"junhonglow"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"junhonglow"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"junhonglow"},"content":"            taskList \u003d markTask(Integer.parseInt(tokens[1]), taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"junhonglow"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"junhonglow"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-01"},{"lineNumber":160,"author":{"gitId":"junhonglow"},"content":"            taskList \u003d unmarkTask(Integer.parseInt(tokens[1]), taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"junhonglow"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"junhonglow"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"junhonglow"},"content":"            taskList \u003d deleteTask(Integer.parseInt(tokens[1]), taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"junhonglow"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"junhonglow"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"junhonglow"},"content":"            // Fallthrough","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"junhonglow"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"junhonglow"},"content":"            // Fallthrough","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"junhonglow"},"content":"        case \"event\":","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"junhonglow"},"content":"            // tokens[1] which is the remaining input is parsed based on the action","lastModifiedDate":"2023-09-01"},{"lineNumber":171,"author":{"gitId":"junhonglow"},"content":"            if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":172,"author":{"gitId":"junhonglow"},"content":"                throw new EmptyTaskException(action);","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"junhonglow"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":174,"author":{"gitId":"junhonglow"},"content":"            taskList \u003d addTask(tokens[1], action, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"junhonglow"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":176,"author":{"gitId":"junhonglow"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":177,"author":{"gitId":"junhonglow"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-09-01"},{"lineNumber":178,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":179,"author":{"gitId":"junhonglow"},"content":"        return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":180,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":182,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"junhonglow"},"content":"     * Checks if the user\u0027s input command indicates termination of the program.","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"junhonglow"},"content":"     * @param command The user\u0027s input command.","lastModifiedDate":"2023-09-21"},{"lineNumber":186,"author":{"gitId":"junhonglow"},"content":"     * @return True if the program should terminate, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":187,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":188,"author":{"gitId":"junhonglow"},"content":"    public boolean isTerminated(String command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":189,"author":{"gitId":"junhonglow"},"content":"        return command.equals(\"bye\");","lastModifiedDate":"2023-09-01"},{"lineNumber":190,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junhonglow":191}},{"path":"src/main/java/storage/BocchiLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import java.io.File;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"import task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"import task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"import task.Todo;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":" * Class responsible for loading saved data from a file.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"public class BocchiLoader {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"    private static final String DEFAULT_PATH \u003d \"./data/bocchi.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"    private static final int INDEX_TYPE \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"    private static final int INDEX_MARKED \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"    private static final int INDEX_NAME \u003d 2;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"    private static final int INDEX_DEADLINE \u003d 3;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"    private static final int INDEX_START_TIME \u003d 3;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"    private static final int INDEX_END_TIME \u003d 4;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"    private final String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"     * Constructs a BocchiLoader with the default file path.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"    public BocchiLoader() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"        this.filePath \u003d DEFAULT_PATH;","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"     * Constructs a BocchiLoader with a specified file path.","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"     * @param filePath The path to the file from which to load data.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"    public BocchiLoader(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"     * Parses data from a string and creates a Task object.","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"     * @param data The string containing task data.","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"     * @return A Task object representing the parsed data.","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"     * @throws Exception If the data cannot be properly parsed.","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"    private Task parseDataToEvent(String data) throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"        String[] tokens \u003d data.split(\"\\\\|\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junhonglow"},"content":"        String type \u003d tokens[INDEX_TYPE].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"        String name \u003d tokens[INDEX_NAME].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junhonglow"},"content":"        Boolean marked \u003d tokens[INDEX_MARKED].trim().equals(\"1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"junhonglow"},"content":"        switch (type) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"        case \"T\":","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junhonglow"},"content":"            return new Todo(name, marked);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"        case \"D\":","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junhonglow"},"content":"            return new Deadline(name, tokens[INDEX_DEADLINE].trim(), marked);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"        case \"E\":","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junhonglow"},"content":"            String start \u003d tokens[INDEX_START_TIME].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"junhonglow"},"content":"            String end \u003d tokens[INDEX_END_TIME].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"junhonglow"},"content":"            return new Event(name, start, end, marked);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"junhonglow"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"junhonglow"},"content":"            throw new Exception(\"File might be corrupted, please check input file.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"junhonglow"},"content":"     * Loads a TaskList from a file.","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"junhonglow"},"content":"     * @param ui The user interface component for displaying messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"junhonglow"},"content":"     * @return The loaded TaskList.","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"junhonglow"},"content":"    public TaskList loadTaskList(Ui ui) {","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"junhonglow"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"junhonglow"},"content":"            File f \u003d new File(this.filePath); // create a File for the given file path","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"junhonglow"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"junhonglow"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"junhonglow"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"junhonglow"},"content":"                try {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"junhonglow"},"content":"                    Task task \u003d parseDataToEvent(s.nextLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"junhonglow"},"content":"                    taskList \u003d taskList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"junhonglow"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"junhonglow"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"junhonglow"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"junhonglow"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"junhonglow"},"content":"            ui.loadSuccessful();","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"junhonglow"},"content":"            return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"junhonglow"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"junhonglow"},"content":"            ui.loadUnsuccessful();","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"junhonglow"},"content":"            return new TaskList();","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junhonglow":97}},{"path":"src/main/java/storage/BocchiSaver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"import task.Task;","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":" * Class responsible for saving data to a file.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"public class BocchiSaver {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"    private static final String DEFAULT_PATH \u003d \"./data/bocchi.txt\";","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"    private final String path;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"     * Constructs a BocchiSaver with the provided TaskList and the default file path.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"     * @param taskList The TaskList to be saved.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"    public BocchiSaver(TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"        this.path \u003d DEFAULT_PATH;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"     * Constructs a BocchiSaver with the provided TaskList and a specified file path.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"     * @param taskList The TaskList to be saved.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"     * @param path     The path to the file where data will be saved.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"    public BocchiSaver(TaskList taskList, String path) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"     * Writes text data to a file at the specified file path.","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"     * @param filePath  The path to the file.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"     * @param textToAdd The text data to be written to the file.","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"        fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"junhonglow"},"content":"     * Saves the TaskList to the specified file path.","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"junhonglow"},"content":"    public void saveTaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junhonglow"},"content":"            StringBuilder dataToSave \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"            for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junhonglow"},"content":"                Task t \u003d this.taskList.getTask(i + 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"                dataToSave.append(t.saveTask());","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junhonglow"},"content":"                if (i \u003c this.taskList.size() - 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"                    dataToSave.append(System.lineSeparator());","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junhonglow"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"junhonglow"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"junhonglow"},"content":"            writeToFile(this.path, dataToSave.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"junhonglow"},"content":"            System.out.println(\"Task list has been saved successfully!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"junhonglow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"junhonglow"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junhonglow":70}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"import exceptions.InvalidDateTimeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":" * Class representing a task with a deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"     * Constructs a Deadline task with the specified name and deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"     * @param name     The name of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"     * @param deadline The deadline of the task in string format (to be parsed).","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"    public Deadline(String name, String deadline) throws InvalidDateTimeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, INPUT_FORMATTER);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"            throw new InvalidDateTimeException(deadline);","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"     * Constructs a Deadline task with the specified name, deadline, and marked status.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"     * @param name     The name of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"     * @param deadline The deadline of the task in string format (to be parsed).","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"     * @param marked   The marked status of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"    public Deadline(String name, String deadline, Boolean marked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"        super(name, marked);","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, INPUT_FORMATTER);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"     * Checks if this task has a conflict with another task.","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"     * Always returns false as a conflict cannot be encountered with a Deadline Task","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"     * @param t The task to check for conflicts with.","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"     * @return False since there are no conflicts with deadline tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"    public boolean hasConflictWith(Task t) {","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"        return false;","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"junhonglow"},"content":"    public Deadline mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"        return new Deadline(this.name, this.deadline.format(INPUT_FORMATTER), true);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"    public Deadline unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"junhonglow"},"content":"        return new Deadline(this.name, this.deadline.format(INPUT_FORMATTER), false);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"junhonglow"},"content":"    public String saveTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"junhonglow"},"content":"        return String.format(\"D | %s | %s\", super.saveTask(), this.deadline.format(INPUT_FORMATTER));","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"junhonglow"},"content":"     * Returns the name of task with deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"junhonglow"},"content":"     * @return Task to be done","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"junhonglow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"junhonglow"},"content":"        return String.format(","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"junhonglow"},"content":"                \"[D]%s (by: %s)\",","lastModifiedDate":"2023-08-25"},{"lineNumber":77,"author":{"gitId":"junhonglow"},"content":"                super.toString(),","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"junhonglow"},"content":"                this.deadline.format(OUTPUT_FORMATTER)","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"junhonglow"},"content":"        );","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"junhonglow":81}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"import exceptions.InvalidDateTimeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":" * Class representing an event task.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"     * Constructs an Event task with the specified name, start time, and end time.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"     * @param name  The name of the event task.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"     * @param start The start time of the event task in string format (to be parsed).","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"     * @param end   The end time of the event task in string format (to be parsed).","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"    public Event(String name, String start, String end) throws InvalidDateTimeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"            this.start \u003d LocalDateTime.parse(start, INPUT_FORMATTER);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"            throw new InvalidDateTimeException(start);","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"            this.end \u003d LocalDateTime.parse(end, INPUT_FORMATTER);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"            throw new InvalidDateTimeException(end);","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"     * Constructs an Event task with the specified name, start time, end time, and marked status.","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"     * @param name   The name of the event task.","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"     * @param start  The start time of the event task in string format (to be parsed).","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"     * @param end    The end time of the event task in string format (to be parsed).","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"     * @param marked The marked status of the event task.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"    public Event(String name, String start, String end, Boolean marked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"        super(name, marked);","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"        this.start \u003d LocalDateTime.parse(start, INPUT_FORMATTER);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"        this.end \u003d LocalDateTime.parse(end, INPUT_FORMATTER);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"junhonglow"},"content":"    public Event mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"        return new Event(this.name, this.start.format(INPUT_FORMATTER), this.end.format(INPUT_FORMATTER), true);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"    public Event unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"junhonglow"},"content":"        return new Event(this.name, this.start.format(INPUT_FORMATTER), this.end.format(INPUT_FORMATTER), false);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"junhonglow"},"content":"    public boolean hasConflictWith(Task t) {","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"junhonglow"},"content":"        // Only events can conflict with other events","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"junhonglow"},"content":"        if (!(t instanceof Event)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"junhonglow"},"content":"            return false;","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"junhonglow"},"content":"        Event other \u003d (Event) t;","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"junhonglow"},"content":"        boolean isStartTimeBeforeEndTime \u003d this.start.isBefore(other.end);","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"junhonglow"},"content":"        boolean isEndTimeAfterStartTime \u003d this.end.isAfter(other.start);","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"junhonglow"},"content":"        return isStartTimeBeforeEndTime \u0026\u0026 isEndTimeAfterStartTime;","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"junhonglow"},"content":"    public String saveTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"junhonglow"},"content":"        return String.format(\"E | %s | %s | %s\", super.saveTask(),","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"junhonglow"},"content":"                this.start.format(INPUT_FORMATTER), this.end.format(INPUT_FORMATTER));","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"junhonglow"},"content":"     * Returns a string representation of the Event task, including its name, start time, and end time.","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"junhonglow"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"junhonglow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"junhonglow"},"content":"        return String.format(","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"junhonglow"},"content":"                \"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-08-25"},{"lineNumber":88,"author":{"gitId":"junhonglow"},"content":"                super.toString(),","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"junhonglow"},"content":"                this.start.format(OUTPUT_FORMATTER),","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"junhonglow"},"content":"                this.end.format(OUTPUT_FORMATTER));","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"junhonglow":92}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":" * Superclass for all tasks used in Bocchi.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"    protected static final DateTimeFormatter INPUT_FORMATTER \u003d","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"    protected static final DateTimeFormatter OUTPUT_FORMATTER \u003d","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MMM-dd HH:mm:ss\");","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    protected final String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"    private final boolean isMarked;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"    private final int taskId;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"     * Constructs a Task with the given name and marked status.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"     * @param name   The name of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"     * @param marked The marked status of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"    public Task(String name, boolean marked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"        this.isMarked \u003d marked;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"        this.taskId \u003d taskCount;","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"        taskCount++;","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"     * Constructs an unmarked Task with the given name.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"    public Task(String name) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"        this(name, false);","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"     * Marks the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"     * @return A marked task.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"    abstract Task mark();","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"     * Unmarks the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"     * @return An unmarked task.","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"junhonglow"},"content":"    abstract Task unmark();","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"     * Returns the name of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"     * @return Name of task.","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"    public String getName() {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junhonglow"},"content":"        return this.name;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"junhonglow"},"content":"     * Creates the string representation to be saved into the save file.","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"junhonglow"},"content":"     * @return String representation to be saved.","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"junhonglow"},"content":"    public String saveTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"junhonglow"},"content":"        return String.format(\"%s | %s\", this.isMarked ? \"1\" : \"0\", this.name);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"junhonglow"},"content":"     * Checks if this task has a conflict with another task.","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"junhonglow"},"content":"     * @param t The task to check for conflicts with.","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"junhonglow"},"content":"     * @return True if there is a conflict, False otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"junhonglow"},"content":"    abstract boolean hasConflictWith(Task t);","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"junhonglow"},"content":"     * Checks if two tasks are equal based on their names and task IDs.","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"junhonglow"},"content":"     * @param other The object to compare to this task.","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"junhonglow"},"content":"     * @return true if the tasks are equal, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"junhonglow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"junhonglow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"junhonglow"},"content":"            return true;","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"junhonglow"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"junhonglow"},"content":"            return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"junhonglow"},"content":"        Task t \u003d (Task) other;","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"junhonglow"},"content":"        return this.name.equals(t.name) \u0026\u0026 (this.taskId \u003d\u003d t.taskId);","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"junhonglow"},"content":"     * Returns a string representation of the task, including its name and marked status.","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"junhonglow"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"junhonglow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"junhonglow"},"content":"        return String.format(\"[%s] %s\", this.isMarked ? \"X\" : \" \", this.name);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"junhonglow":107}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":" * Class that handles task management.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"     * Constructs a task list with the specified tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"     * @param tasks The list of tasks to initialize the task list with.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"     * Returns a new task list after adding the specified task.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"     * @return Task list with added task.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"    public TaskList addTask(Task task) {","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d this.tasks;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"        updatedTasks.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"     * Returns a new task list after deleting the specified task.","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"     * @param task Task to be removed.","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"     * @return Task list after removing task.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"    public TaskList deleteTask(Task task) {","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d this.tasks;","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"        updatedTasks.remove(task);","lastModifiedDate":"2023-08-25"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2023-08-25"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"junhonglow"},"content":"     * Returns a task based on the specified task number.","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"junhonglow"},"content":"     * @param taskNumber The task number.","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"     * @return The task corresponding to the task number.","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"junhonglow"},"content":"        return this.tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"junhonglow"},"content":"     * Returns a new task list with the specified task marked.","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"junhonglow"},"content":"     * @param numberToMark The task number to be marked.","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"junhonglow"},"content":"     * @return Task list updated with the marked task.","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"junhonglow"},"content":"    public TaskList markTask(int numberToMark) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"junhonglow"},"content":"        int index \u003d numberToMark - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"junhonglow"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d this.tasks;","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"junhonglow"},"content":"        Task taskToMark \u003d updatedTasks.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"junhonglow"},"content":"        taskToMark \u003d taskToMark.mark();","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"junhonglow"},"content":"        updatedTasks.set(index, taskToMark);","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"junhonglow"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"junhonglow"},"content":"     * Checks if a task is present in the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"junhonglow"},"content":"     * @param t The task to check.","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"junhonglow"},"content":"     * @return True if the task is present, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"junhonglow"},"content":"    public boolean isTaskPresent(Task t) {","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"junhonglow"},"content":"        return this.tasks.contains(t);","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"junhonglow"},"content":"     * Checks if there is a conflict with a given task.","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"junhonglow"},"content":"     * @param task The task to check for conflicts with.","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"junhonglow"},"content":"     * @return True if there is a conflict, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"junhonglow"},"content":"    public boolean hasConflict(Task task) {","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"junhonglow"},"content":"        return this.tasks.stream().anyMatch(t -\u003e task.hasConflictWith(t));","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"junhonglow"},"content":"     * Returns a new task list with the specified task unmarked.","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"junhonglow"},"content":"     * @param numberToUnmark The task number to be unmarked.","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"junhonglow"},"content":"     * @return Task list updated with the unmarked task.","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"junhonglow"},"content":"    public TaskList unmarkTask(int numberToUnmark) {","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"junhonglow"},"content":"        int index \u003d numberToUnmark - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"junhonglow"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d this.tasks;","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"junhonglow"},"content":"        Task taskToUnmark \u003d updatedTasks.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"junhonglow"},"content":"        taskToUnmark \u003d taskToUnmark.unmark();","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"junhonglow"},"content":"        updatedTasks.set(index, taskToUnmark);","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"junhonglow"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":112,"author":{"gitId":"junhonglow"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"junhonglow"},"content":"     * @return Size of the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":116,"author":{"gitId":"junhonglow"},"content":"    public int size() {","lastModifiedDate":"2023-08-25"},{"lineNumber":117,"author":{"gitId":"junhonglow"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-25"},{"lineNumber":118,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":119,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":120,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"junhonglow"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"junhonglow"},"content":"     * @return True if the task list is empty, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"junhonglow"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"junhonglow"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"junhonglow"},"content":"     * Returns a task list of tasks containing a similar query term.","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"junhonglow"},"content":"     * @param query The query term to search for in task names.","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"junhonglow"},"content":"     * @return Task list containing similar tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"junhonglow"},"content":"    public TaskList getSimilarTasks(String query) {","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"junhonglow"},"content":"        TaskList similarTasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"junhonglow"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"junhonglow"},"content":"            if (t.getName().contains(query)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":139,"author":{"gitId":"junhonglow"},"content":"                similarTasks \u003d similarTasks.addTask((t));","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"junhonglow"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"junhonglow"},"content":"        return similarTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":143,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"junhonglow"},"content":"     * Returns a string representation of the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"junhonglow"},"content":"     * @return String representation of the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"junhonglow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"junhonglow"},"content":"        StringBuilder outputString \u003d new StringBuilder();","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"junhonglow"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"junhonglow"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"junhonglow"},"content":"            outputString.append(String.format(\"%d. %s\", i + 1, task.toString()));","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"junhonglow"},"content":"            if (i \u003c this.tasks.size() - 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"junhonglow"},"content":"                outputString.append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"junhonglow"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"junhonglow"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"junhonglow"},"content":"            outputString.append(\"You have no pending tasks.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"junhonglow"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"junhonglow"},"content":"        return outputString.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":165,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"junhonglow":165}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":" * Class representing a todo task.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"     * Constructs a Todo task with the specified name.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"     * @param name The name of the todo task.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"     * Constructs a Todo task with the specified name and marked status.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"     * @param name   The name of the todo task.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"     * @param marked The marked status of the todo task.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"    public Todo(String name, boolean marked) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"        super(name, marked);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"    public Todo mark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"        return new Todo(this.name, true);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"    public Todo unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"        return new Todo(this.name, false);","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"    public String saveTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"        return String.format(\"T | %s\", super.saveTask());","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"     * Checks if this task has a conflict with another task.","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"     * Always returns false as a conflict cannot be encountered with a todo task.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"     * @param t The task to check for conflicts with.","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"     * @return False since there are no conflicts with todo tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"    public boolean hasConflictWith(Task t) {","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"        return false;","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"junhonglow"},"content":"     * Returns a string representation of the Todo task, including its name.","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"junhonglow"},"content":"     * @return The string representation of the Todo task.","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"junhonglow"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"junhonglow"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"junhonglow":62}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import exceptions.BocchiException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"import gui.DialogBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"import task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":" * The User Interface (UI) class responsible for displaying messages and dialogues in the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    private static final String LINE_BREAK \u003d \"___________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/larry.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"    private final Image bocchiImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dorito.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"    private final VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"     * Constructs a Ui object with the specified dialog container.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"     * @param dialogContainer The container where dialog boxes will be displayed.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"    public Ui(VBox dialogContainer) {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"        this.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"     * Outputs a dialogue box with the given message.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"    private void outputDialogueBox(String message) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"        DialogBox dialogBox \u003d DialogBox.getBocchiDialog(message, bocchiImage);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"        dialogContainer.getChildren().add(dialogBox);","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"     * Displays a greeting message when the application starts.","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"    public void greet() {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"        this.outputDialogueBox(\"Hello! I\u0027m Bocchi\\nWhat can I do for you?\");","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"junhonglow"},"content":"     * Displays an exit message when the user exits the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"junhonglow"},"content":"    public void exit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"junhonglow"},"content":"        this.outputDialogueBox(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"junhonglow"},"content":"     * Displays a message indicating successful loading of data.","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"junhonglow"},"content":"    public void loadSuccessful() {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"junhonglow"},"content":"        this.outputDialogueBox(\"Your previous data has made a return!\");","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"junhonglow"},"content":"     * Displays a message indicating unsuccessful loading of data.","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"junhonglow"},"content":"    public void loadUnsuccessful() {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"junhonglow"},"content":"        this.outputDialogueBox(\"No previous data found\");","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"junhonglow"},"content":"     * Displays a message indicating successful addition of a task.","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"junhonglow"},"content":"     * @param task     The task that was added.","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"junhonglow"},"content":"     * @param taskList The updated task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"junhonglow"},"content":"    public void addTaskSuccessful(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"junhonglow"},"content":"        this.outputDialogueBox(","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"junhonglow"},"content":"                String.format(","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"junhonglow"},"content":"                        \"Got it. I\u0027ve added this task: %s\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"junhonglow"},"content":"                                + \"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"junhonglow"},"content":"                        task, taskList.size()","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"junhonglow"},"content":"                )","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"junhonglow"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"junhonglow"},"content":"     * Displays a message indicating successful deletion of a task.","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"junhonglow"},"content":"     * @param task     The task that was deleted.","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"junhonglow"},"content":"     * @param taskList The updated task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"junhonglow"},"content":"    public void deleteTaskSuccessful(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"junhonglow"},"content":"        this.outputDialogueBox(","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"junhonglow"},"content":"                String.format(","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"junhonglow"},"content":"                        \"Noted. I\u0027ve removed this task: %s\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"junhonglow"},"content":"                                + \"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"junhonglow"},"content":"                        task, taskList.size()","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"junhonglow"},"content":"                )","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"junhonglow"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"junhonglow"},"content":"     * Displays a message indicating successful marking of a task as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"junhonglow"},"content":"     * @param taskNumber The task number that was marked as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"junhonglow"},"content":"     * @param taskList   The updated task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"junhonglow"},"content":"    public void markTaskSuccessful(int taskNumber, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"junhonglow"},"content":"        this.outputDialogueBox(","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"junhonglow"},"content":"                String.format(","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"junhonglow"},"content":"                        \"Nice! I\u0027ve marked this task as done: %s\",","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"junhonglow"},"content":"                        taskList.getTask(taskNumber)","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"junhonglow"},"content":"                )","lastModifiedDate":"2023-09-08"},{"lineNumber":110,"author":{"gitId":"junhonglow"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":111,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"junhonglow"},"content":"     * Displays a message indicating successful unmarking of a task.","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"junhonglow"},"content":"     * @param taskNumber The task number that was unmarked.","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"junhonglow"},"content":"     * @param taskList   The updated task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"junhonglow"},"content":"    public void unmarkTaskSuccessful(int taskNumber, TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"junhonglow"},"content":"        this.outputDialogueBox(","lastModifiedDate":"2023-09-08"},{"lineNumber":121,"author":{"gitId":"junhonglow"},"content":"                String.format(","lastModifiedDate":"2023-09-08"},{"lineNumber":122,"author":{"gitId":"junhonglow"},"content":"                        \"OK, I\u0027ve marked this task as not done yet: %s\",","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"junhonglow"},"content":"                        taskList.getTask(taskNumber)","lastModifiedDate":"2023-09-08"},{"lineNumber":124,"author":{"gitId":"junhonglow"},"content":"                )","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"junhonglow"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"junhonglow"},"content":"     * Displays a list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"junhonglow"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"junhonglow"},"content":"    public void displayTasks(TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"junhonglow"},"content":"        this.outputDialogueBox(taskList.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"junhonglow"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"junhonglow"},"content":"     * Displays an exception message.","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"junhonglow"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"junhonglow"},"content":"     * @param e The exception containing the error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"junhonglow"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"junhonglow"},"content":"    public void exception(BocchiException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"junhonglow"},"content":"        this.outputDialogueBox(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junhonglow":144}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"junhonglow":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"            fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"junhonglow":23}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"import exceptions.InvalidDateTimeException;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"    public void createDeadline() throws Exception {","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2019-10-14 10:30:35\");","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"        assertEquals(\"[D][ ] return book (by: 2019-Oct-14 10:30:35)\", deadline.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"    public void mark_success() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2019-10-14 10:30:35\");","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"        Deadline markedDeadline \u003d deadline.mark();","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"        assertEquals(\"[D][X] return book (by: 2019-Oct-14 10:30:35)\", markedDeadline.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"    public void unmark_success() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2019-10-14 10:30:35\");","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"        Deadline markedDeadline \u003d deadline.mark();","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"        Deadline unmarkedDeadline \u003d markedDeadline.unmark();","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"        assertEquals(\"[D][ ] return book (by: 2019-Oct-14 10:30:35)\", unmarkedDeadline.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"    public void saveTask_success() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"        Deadline deadline \u003d new Deadline(\"borrow book\", \"2019-10-14 10:30:35\");","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"        String savedTask \u003d deadline.saveTask();","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"junhonglow"},"content":"        assertEquals(\"D | 0 | borrow book | 2019-10-14 10:30:35\", savedTask);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"junhonglow"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"junhonglow"},"content":"    public void invalidDeadline() throws Exception {","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"junhonglow"},"content":"        assertThrows(InvalidDateTimeException.class, () -\u003e new Deadline(\"borrow book\", \"none\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junhonglow":43}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"    public void createTodo() throws Exception {","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"        assertEquals(\"[T][ ] borrow book\", todo.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"junhonglow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"junhonglow"},"content":"    public void mark_success() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"junhonglow"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"junhonglow"},"content":"        Todo markedTodo \u003d todo.mark();","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"junhonglow"},"content":"        assertEquals(\"[T][X] borrow book\", markedTodo.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"junhonglow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"junhonglow"},"content":"    public void unmark_success() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"junhonglow"},"content":"        Todo markedTodo \u003d todo.mark();","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"junhonglow"},"content":"        Todo unmarkedTodo \u003d markedTodo.unmark();","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"junhonglow"},"content":"        assertEquals(\"[T][ ] borrow book\", unmarkedTodo.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"junhonglow"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"junhonglow"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"junhonglow"},"content":"    public void saveTask_success() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"junhonglow"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"junhonglow"},"content":"        String savedTask \u003d todo.saveTask();","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"junhonglow"},"content":"        assertEquals(\"T | 0 | borrow book\", savedTask);","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"junhonglow"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"junhonglow"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"junhonglow":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junhonglow"},"content":"todo borrow book","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"junhonglow"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"junhonglow"},"content":"deadline return book /by 2019-10-14 10:30:35","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"junhonglow"},"content":"event project meeting /from 2019-10-14 10:30:35 /to 2019-10-14 10:30:35","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"junhonglow"},"content":"event do nothing","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"junhonglow"},"content":"mark 1","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"junhonglow"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"junhonglow"},"content":"mark 2","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"junhonglow"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"junhonglow"},"content":"unmark 2","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"junhonglow"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"junhonglow"},"content":"bye","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"junhonglow":12}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"junhonglow"},"content":"java -classpath ../bin Bocchi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junhonglow":1,"-":37}}]
