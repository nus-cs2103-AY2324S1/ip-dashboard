[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"ryamgoh"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ryamgoh":1,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryamgoh"},"content":"T | 0 | suck thumb","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryamgoh"},"content":"D | 0 | eat | 2023-09-20T09:00","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryamgoh"},"content":"E | 0 | eat me | 2008-02-20T13:00 | 2030-09-23T12:00","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ryamgoh":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryamgoh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryamgoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ryamgoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ryamgoh"},"content":"\tpublic Deadline(String description, LocalDateTime timeline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ryamgoh"},"content":"\t\tsuper(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.letter \u003d \"D\";","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.timeline \u003d timeline;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ryamgoh"},"content":"\t@Override","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ryamgoh"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ryamgoh"},"content":"\t\treturn super.toString() + \" (by: \" + super.formatLocalDateTimeToString(this.timeline) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ryamgoh"},"content":"\t@Override","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryamgoh"},"content":"\tpublic String toFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ryamgoh"},"content":"\t\treturn super.toFile() + \" | \" + this.timeline;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ryamgoh"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ryamgoh":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryamgoh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ryamgoh"},"content":"\t * The storage object","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ryamgoh"},"content":"\tprivate final Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ryamgoh"},"content":"\t * The task list object","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ryamgoh"},"content":"\tprivate final TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ryamgoh"},"content":"\t * The ui object","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ryamgoh"},"content":"\tprivate final Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ryamgoh"},"content":"\t * Constructor for Duke","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ryamgoh"},"content":"\t * @param filePath the path to the file","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ryamgoh"},"content":"\tpublic Duke(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.taskList \u003d this.storage.readFromFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"ryamgoh"},"content":"\t * The main function where the program starts","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"ryamgoh"},"content":"\t * @param args input args","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\tpublic static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"ryamgoh"},"content":"\t\tnew Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ryamgoh"},"content":"\t * The main function where the program starts","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ryamgoh"},"content":"\tpublic void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ryamgoh"},"content":"\t\tParser parser \u003d new Parser(this.taskList, this.storage, this.ui);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ryamgoh"},"content":"\t\tui.greet();","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ryamgoh"},"content":"\t\tparser.queryBot();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ryamgoh":44,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryamgoh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryamgoh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ryamgoh"},"content":"\tDukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ryamgoh"},"content":"\t\tsuper(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ryamgoh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ryamgoh":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryamgoh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryamgoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ryamgoh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ryamgoh"},"content":"\tprotected LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ryamgoh"},"content":"\tprotected LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ryamgoh"},"content":"\tpublic Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ryamgoh"},"content":"\t\tsuper(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.letter \u003d \"E\";","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ryamgoh"},"content":"\t@Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ryamgoh"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ryamgoh"},"content":"\t\treturn super.toString() + \" (from: \" + super.formatLocalDateTimeToString(this.from) + \" to: \" + formatLocalDateTimeToString(this.to) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ryamgoh"},"content":"\t@Override","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ryamgoh"},"content":"\tpublic String toFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ryamgoh"},"content":"\t\treturn super.toFile() + \" | \" + this.from.toString() + \" | \" + this.to.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ryamgoh"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ryamgoh":26}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryamgoh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryamgoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryamgoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ryamgoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ryamgoh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ryamgoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ryamgoh"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ryamgoh"},"content":"\t * The storage to read and write to the file","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ryamgoh"},"content":"\tprivate final Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ryamgoh"},"content":"\t * The tasklist to store the tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryamgoh"},"content":"\tprivate final TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ryamgoh"},"content":"\t * The ui to print the messages","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ryamgoh"},"content":"\tprivate final Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ryamgoh"},"content":"\t * Constructor for duke.Parser","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ryamgoh"},"content":"\t * @param taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ryamgoh"},"content":"\t * @param storage","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ryamgoh"},"content":"\t * @param ui","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ryamgoh"},"content":"\tpublic Parser(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.storage \u003d storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.taskList \u003d taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.ui \u003d ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"ryamgoh"},"content":"\t * The main function where the program starts","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ryamgoh"},"content":"\tvoid queryBot() {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ryamgoh"},"content":"\t\tScanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ryamgoh"},"content":"\t\twhile (input.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ryamgoh"},"content":"\t\t\ttry {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tString query \u003d input.nextLine();  // Read user input","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tui.printLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tif (query.equals(\"bye\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tui.exit();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t} else if (query.equals(\"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tlist(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t} else if (query.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tdelete(query, taskList, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t} else if (query.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tmark(query, taskList, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t} else if (query.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tunmark(query, taskList, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t} else if (query.startsWith(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tevent(query, taskList, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t} else if (query.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tdeadline(query, taskList, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t} else if (query.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\ttodo(query, taskList, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t} else {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tthrow new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tui.printLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"ryamgoh"},"content":"\t\t\t} catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tSystem.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tui.printLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"ryamgoh"},"content":"\t\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"ryamgoh"},"content":"\t\tui.printLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"ryamgoh"},"content":"\t * Checks if the argument is numeric or not. Leading and trailing whitespace characters in str are ignored. Empty","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"ryamgoh"},"content":"\t * or null str return false.","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"ryamgoh"},"content":"\t * @param str - the string to be checked","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"ryamgoh"},"content":"\t * @return true if the argument is numeric and can be parsed as a number. Returns false otherwise.","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"ryamgoh"},"content":"\tboolean isNumeric(String str) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"ryamgoh"},"content":"\t\tif (str \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"ryamgoh"},"content":"\t\t\treturn false;","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"ryamgoh"},"content":"\t\ttry {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"ryamgoh"},"content":"\t\t\tDouble.parseDouble(str);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"ryamgoh"},"content":"\t\t\treturn true;","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"ryamgoh"},"content":"\t\t} catch (NumberFormatException nfe) {","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"ryamgoh"},"content":"\t\t\treturn false;","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"ryamgoh"},"content":"\t * Prints the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"ryamgoh"},"content":"\t * @param taskList the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"ryamgoh"},"content":"\t * @throws DukeException if the list is empty","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"ryamgoh"},"content":"\tvoid list(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"ryamgoh"},"content":"\t\tif (taskList.length() \u003c\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! I\u0027m sorry, but you don\u0027t have any tasks yet!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"ryamgoh"},"content":"\t\ttaskList.printList();","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"ryamgoh"},"content":"\t * Deletes the task from the list at the specified index","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"ryamgoh"},"content":"\t * @param query    the query from the user","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"ryamgoh"},"content":"\t * @param taskList the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"ryamgoh"},"content":"\t * @param storage  the storage to read and write to the file","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"ryamgoh"},"content":"\t * @throws DukeException if the query is not in the correct format","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"ryamgoh"},"content":"\tvoid delete(String query, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"ryamgoh"},"content":"\t\tif (query.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You are missing a number\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid delete query - delete 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"ryamgoh"},"content":"\t\tif (query.split(\" \").length \u003e 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You have too many numbers\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid delete query - delete 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"ryamgoh"},"content":"\t\tString[] splitted \u003d query.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"ryamgoh"},"content":"\t\tif (!isNumeric(splitted[1])) {","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You entered a non-numeric item!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid delete query - delete 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"ryamgoh"},"content":"\t\tint index \u003d Integer.parseInt(splitted[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"ryamgoh"},"content":"\t\tif (index \u003e\u003d taskList.length() || index \u003c 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"No such task exists! Please enter a valid number within following list!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please use the command list to see the list of tasks\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"and then delete the following task that you would like\");","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"ryamgoh"},"content":"\t\t} else {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"ryamgoh"},"content":"\t\t\ttaskList.delete(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"ryamgoh"},"content":"\t\t\tstorage.writeToFile(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"ryamgoh"},"content":"\t * Marks the task from the list at the specified index","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"ryamgoh"},"content":"\t * @param query    the query from the user","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"ryamgoh"},"content":"\t * @param taskList the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"ryamgoh"},"content":"\t * @param storage  the storage to read and write to the file","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"ryamgoh"},"content":"\t * @throws DukeException if the query is not in the correct format","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"ryamgoh"},"content":"\tvoid mark(String query, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"ryamgoh"},"content":"\t\tif (query.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You are missing a number\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid mark query - mark 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"ryamgoh"},"content":"\t\tif (query.split(\" \").length \u003e 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You have too many numbers\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid mark query - mark 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"ryamgoh"},"content":"\t\tString[] splitted \u003d query.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"ryamgoh"},"content":"\t\tif (!isNumeric(splitted[1])) {","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You entered a non-numeric item!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid mark query - mark 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"ryamgoh"},"content":"\t\tint index \u003d Integer.parseInt(splitted[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"ryamgoh"},"content":"\t\tif (index \u003e\u003d taskList.length() || index \u003c 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"No such task exists! Please enter a valid number within following list!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please use the command list to see the list of tasks\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"and then mark the following task that you would like\");","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"ryamgoh"},"content":"\t\t} else {","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"ryamgoh"},"content":"\t\t\tTask currTask \u003d taskList.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"ryamgoh"},"content":"\t\t\tcurrTask.mark();","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"ryamgoh"},"content":"\t\t\tstorage.writeToFile(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"ryamgoh"},"content":"\t * Unmarks the task from the list at the specified index","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"ryamgoh"},"content":"\t * @param query    the query from the user","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"ryamgoh"},"content":"\t * @param taskList the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"ryamgoh"},"content":"\t * @param storage  the storage to read and write to the file","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"ryamgoh"},"content":"\t * @throws DukeException if the query is not in the correct format","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"ryamgoh"},"content":"\tvoid unmark(String query, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"ryamgoh"},"content":"\t\tif (query.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You are missing a number\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid unmark query - unmark 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"ryamgoh"},"content":"\t\tif (query.split(\" \").length \u003e 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You have too many numbers\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid unmark query - unmark 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"ryamgoh"},"content":"\t\tString[] splitted \u003d query.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"ryamgoh"},"content":"\t\tif (!isNumeric(splitted[1])) {","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You entered a non-numeric item!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid mark query - mark 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"ryamgoh"},"content":"\t\tint index \u003d Integer.parseInt(splitted[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"ryamgoh"},"content":"\t\tif (index \u003e\u003d taskList.length()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"No such task exists! Please enter a valid number within following list!\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please use the command list to see the list of tasks\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"and then unmark the following task that you would like\");","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"ryamgoh"},"content":"\t\t} else {","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"ryamgoh"},"content":"\t\t\tTask currTask \u003d taskList.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"ryamgoh"},"content":"\t\t\tcurrTask.unmark();","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"ryamgoh"},"content":"\t\t\tstorage.writeToFile(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"ryamgoh"},"content":"\t * todo should be in the following format - todo read book","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"ryamgoh"},"content":"\t * @param query    the query from the user","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"ryamgoh"},"content":"\t * @param taskList the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"ryamgoh"},"content":"\t * @param storage  the storage to read and write to the file","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"ryamgoh"},"content":"\t * @throws DukeException if the query is not in the correct format","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"ryamgoh"},"content":"\tvoid todo(String query, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"ryamgoh"},"content":"\t\tif (query.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid todo - todo read book or todo sleep\");","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"ryamgoh"},"content":"\t\tString[] splitted \u003d query.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"ryamgoh"},"content":"\t\tTask newTask \u003d new ToDo(splitted[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"ryamgoh"},"content":"\t\ttaskList.addToList(newTask, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"ryamgoh"},"content":"\t * duke.Deadline should be in the following format - deadline return book /by dd/MM/yy HHmm","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"ryamgoh"},"content":"\t * @param query    the query from the user","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"ryamgoh"},"content":"\t * @param taskList the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"ryamgoh"},"content":"\t * @param storage  the storage to read and write to the file","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"ryamgoh"},"content":"\t * @throws DukeException if the query is not in the correct format","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"ryamgoh"},"content":"\tvoid deadline(String query, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"ryamgoh"},"content":"\t\tif (query.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid deadline - deadline return book /by dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"ryamgoh"},"content":"\t\tif (!query.contains(\"/by\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! Please enter a valid deadline - deadline return book /by 2pm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":242,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":243,"author":{"gitId":"ryamgoh"},"content":"\t\tif (query.split(\"\\\\s+/by\\\\s+\").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":244,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You added a /by but did not include a deadline!.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid deadline - deadline return book /by dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":247,"author":{"gitId":"ryamgoh"},"content":"\t\tString[] splitted \u003d query.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":248,"author":{"gitId":"ryamgoh"},"content":"\t\tString[] parts \u003d splitted[1].split(\"\\\\s*/by\\\\s+\");","lastModifiedDate":"2023-08-29"},{"lineNumber":249,"author":{"gitId":"ryamgoh"},"content":"\t\tString taskName \u003d parts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":250,"author":{"gitId":"ryamgoh"},"content":"\t\tif (taskName.equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":251,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":252,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid deadline - deadline return book /by dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":253,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":254,"author":{"gitId":"ryamgoh"},"content":"\t\tString deadline \u003d parts[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":255,"author":{"gitId":"ryamgoh"},"content":"\t\ttry {","lastModifiedDate":"2023-08-29"},{"lineNumber":256,"author":{"gitId":"ryamgoh"},"content":"\t\t\tLocalDateTime deadlineDate \u003d formatInputDate(deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":257,"author":{"gitId":"ryamgoh"},"content":"\t\t\tTask newTask \u003d new Deadline(taskName, deadlineDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":258,"author":{"gitId":"ryamgoh"},"content":"\t\t\ttaskList.addToList(newTask, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":259,"author":{"gitId":"ryamgoh"},"content":"\t\t} catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":260,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You entered an invalid date format!.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":261,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid date format in the following format - dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":262,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":263,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":264,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":265,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":266,"author":{"gitId":"ryamgoh"},"content":"\t * duke.Event should be in the following format - event read book /from dd/MM/yy HHmm /to dd/MM/yy HHmm","lastModifiedDate":"2023-08-29"},{"lineNumber":267,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-29"},{"lineNumber":268,"author":{"gitId":"ryamgoh"},"content":"\t * @param query    the query from the user","lastModifiedDate":"2023-08-29"},{"lineNumber":269,"author":{"gitId":"ryamgoh"},"content":"\t * @param taskList the list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":270,"author":{"gitId":"ryamgoh"},"content":"\t * @param storage  the storage to read and write to the file","lastModifiedDate":"2023-08-29"},{"lineNumber":271,"author":{"gitId":"ryamgoh"},"content":"\t * @throws DukeException if the query is not in the correct format","lastModifiedDate":"2023-08-29"},{"lineNumber":272,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":273,"author":{"gitId":"ryamgoh"},"content":"\tvoid event(String query, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":274,"author":{"gitId":"ryamgoh"},"content":"\t\tif (query.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":275,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":276,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid event - event read book /from dd/MM/yy HHmm /to dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":277,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":278,"author":{"gitId":"ryamgoh"},"content":"\t\tif (!query.contains(\"/from\") || !query.contains(\"/to\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":279,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! Your query is missing the prefixes /from or /to\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":280,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid event - event read book /from dd/MM/yy HHmm /to dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":281,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":282,"author":{"gitId":"ryamgoh"},"content":"\t\tint fromIndex \u003d query.indexOf(\"/from\");","lastModifiedDate":"2023-08-29"},{"lineNumber":283,"author":{"gitId":"ryamgoh"},"content":"\t\tint toIndex \u003d query.indexOf(\"/to\");","lastModifiedDate":"2023-08-29"},{"lineNumber":284,"author":{"gitId":"ryamgoh"},"content":"\t\tif (fromIndex \u003e toIndex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":285,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! The /from prefix should come before the /to prefix.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":286,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid event - event read book /from dd/MM/yy HHmm /to dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":287,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":288,"author":{"gitId":"ryamgoh"},"content":"\t\tif (query.split(\"\\\\s+/from\\\\s+\").length \u003d\u003d 1 || query.split(\"\\\\s+/to\\\\s+\").length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":289,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You added a /from or /to but did not include a time!.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":290,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid event - event read book /from dd/MM/yy HHmm /to dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":291,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":292,"author":{"gitId":"ryamgoh"},"content":"\t\tString[] splitted \u003d query.split(\" \", 2); // Split into 2 parts: tasktype and the rest","lastModifiedDate":"2023-08-29"},{"lineNumber":293,"author":{"gitId":"ryamgoh"},"content":"\t\tString[] parts \u003d splitted[1].split(\"\\\\s*/from\\\\s+|\\\\s*/to\\\\s+\");","lastModifiedDate":"2023-08-29"},{"lineNumber":294,"author":{"gitId":"ryamgoh"},"content":"\t\tString taskName \u003d parts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":295,"author":{"gitId":"ryamgoh"},"content":"\t\tif (Objects.equals(taskName, \"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":296,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":297,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid event - event read book /from dd/MM/yy HHmm /to dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":298,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":299,"author":{"gitId":"ryamgoh"},"content":"\t\tString from \u003d parts[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":300,"author":{"gitId":"ryamgoh"},"content":"\t\tif (from.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":301,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You added a /from but did not include a time!.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":302,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid event - event read book /from dd/MM/yy HHmm /to dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":303,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":304,"author":{"gitId":"ryamgoh"},"content":"\t\tString to \u003d parts[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":305,"author":{"gitId":"ryamgoh"},"content":"\t\tif (to.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":306,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You added a /to but did not include a time!.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":307,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid event - event read book /from dd/MM/yy HHmm /to dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":308,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":309,"author":{"gitId":"ryamgoh"},"content":"\t\ttry {","lastModifiedDate":"2023-08-29"},{"lineNumber":310,"author":{"gitId":"ryamgoh"},"content":"\t\t\tLocalDateTime fromDate \u003d formatInputDate(from);","lastModifiedDate":"2023-08-29"},{"lineNumber":311,"author":{"gitId":"ryamgoh"},"content":"\t\t\tLocalDateTime toDate \u003d formatInputDate(to);","lastModifiedDate":"2023-08-29"},{"lineNumber":312,"author":{"gitId":"ryamgoh"},"content":"\t\t\tif (fromDate.isBefore(toDate)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":313,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tTask newTask \u003d new Event(taskName, fromDate, toDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":314,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\ttaskList.addToList(newTask, storage);","lastModifiedDate":"2023-08-29"},{"lineNumber":315,"author":{"gitId":"ryamgoh"},"content":"\t\t\t} else {","lastModifiedDate":"2023-08-29"},{"lineNumber":316,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The start date cannot be after the end date!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":317,"author":{"gitId":"ryamgoh"},"content":"\t\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":318,"author":{"gitId":"ryamgoh"},"content":"\t\t} catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":319,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! You entered an invalid date format!.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":320,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\t\t\"Please enter a valid date format in the following format - dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":321,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":322,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":323,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":324,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":325,"author":{"gitId":"ryamgoh"},"content":"\t * Formats the input date to the following format - dd/MM/yy HHmm","lastModifiedDate":"2023-08-29"},{"lineNumber":326,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-29"},{"lineNumber":327,"author":{"gitId":"ryamgoh"},"content":"\t * @param date the input date","lastModifiedDate":"2023-08-29"},{"lineNumber":328,"author":{"gitId":"ryamgoh"},"content":"\t * @return LocalDateTime","lastModifiedDate":"2023-08-29"},{"lineNumber":329,"author":{"gitId":"ryamgoh"},"content":"\t * @throws DateTimeParseException if the date is not in the correct format","lastModifiedDate":"2023-08-29"},{"lineNumber":330,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":331,"author":{"gitId":"ryamgoh"},"content":"\tLocalDateTime formatInputDate(String date) throws DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":332,"author":{"gitId":"ryamgoh"},"content":"\t\tDateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":333,"author":{"gitId":"ryamgoh"},"content":"\t\treturn LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":334,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":335,"author":{"gitId":"ryamgoh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ryamgoh":335}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryamgoh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryamgoh"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"ryamgoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ryamgoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"ryamgoh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"ryamgoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ryamgoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ryamgoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"ryamgoh"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"ryamgoh"},"content":"\tprivate File file;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"ryamgoh"},"content":"\tprivate File folder;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"ryamgoh"},"content":"\tpublic Storage(String filePath) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"ryamgoh"},"content":"\t\ttry {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"ryamgoh"},"content":"\t\t\tString[] split \u003d filePath.split(\"/\");","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthis.file \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthis.folder \u003d new File(split[0]);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"ryamgoh"},"content":"\t\t\tif (!this.folder.isDirectory()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tthis.folder.mkdir();","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"ryamgoh"},"content":"\t\t\t}","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"ryamgoh"},"content":"\t\t\tif (!this.file.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tthis.file.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"ryamgoh"},"content":"\t\t\t}","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"ryamgoh"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"ryamgoh"},"content":"\t\t\tSystem.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"ryamgoh"},"content":"\tpublic void writeToFile(TaskList tasks) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"ryamgoh"},"content":"\t\ttry {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"ryamgoh"},"content":"\t\t\tFileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"ryamgoh"},"content":"\t\t\tfor (int i \u003d 0; i \u003c tasks.length(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tTask currTask \u003d tasks.get(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tfw.write(currTask.toFile() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ryamgoh"},"content":"\t\t\t}","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"ryamgoh"},"content":"\t\t\tfw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"ryamgoh"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"ryamgoh"},"content":"\t\t\tSystem.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ryamgoh"},"content":"\t * Reads from the file and returns a task list","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ryamgoh"},"content":"\t *","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ryamgoh"},"content":"\t * @return Tasklist a task list","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ryamgoh"},"content":"\tpublic TaskList readFromFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ryamgoh"},"content":"\t\tTaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ryamgoh"},"content":"\t\tint count \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ryamgoh"},"content":"\t\ttry {","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"ryamgoh"},"content":"\t\t\tScanner s \u003d new Scanner(this.file);","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"ryamgoh"},"content":"\t\t\twhile (s.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tString currentLine \u003d s.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tString[] splitted \u003d currentLine.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tString taskType \u003d splitted[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tString isDone \u003d splitted[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tString description \u003d splitted[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tTask currTask \u003d createTask(taskType, description, splitted, count++);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tif (isDone.equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tcurrTask.mark();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\ttasks.addToList(currTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"ryamgoh"},"content":"\t\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"ryamgoh"},"content":"\t\t} catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"ryamgoh"},"content":"\t\t\tSystem.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"ryamgoh"},"content":"\t\treturn tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"ryamgoh"},"content":"\tprivate Task createTask(String taskType, String description, String[] splitted, int count) throws DukeException, DateTimeParseException {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"ryamgoh"},"content":"\t\ttry {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"ryamgoh"},"content":"\t\t\tTask task;","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"ryamgoh"},"content":"\t\t\tswitch (taskType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tcase \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\ttask \u003d new ToDo(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tcase \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tLocalDateTime deadline \u003d LocalDateTime.parse(splitted[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\ttask \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tcase \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tLocalDateTime from \u003d LocalDateTime.parse(splitted[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tLocalDateTime to \u003d LocalDateTime.parse(splitted[4]);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tif (from.isAfter(to)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t\tthrow new DukeException(\"Invalid date format: from date is after to date!! Please check your duke.txt at line \" + count);","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\ttask \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\tdefault:","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\t\tthrow new DukeException(\"Invalid task type: \" + taskType);","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"ryamgoh"},"content":"\t\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"ryamgoh"},"content":"\t\t\treturn task;","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"ryamgoh"},"content":"\t\t} catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"Invalid date format: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"ryamgoh"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"ryamgoh":101}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryamgoh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryamgoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryamgoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ryamgoh"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ryamgoh"},"content":"\tprotected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ryamgoh"},"content":"\tprotected String letter;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ryamgoh"},"content":"\tprotected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ryamgoh"},"content":"\tprotected LocalDateTime timeline;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ryamgoh"},"content":"\tpublic Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.letter \u003d \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ryamgoh"},"content":"\tpublic void mark() throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ryamgoh"},"content":"\t\tif (this.isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! This task is already marked as done!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(this);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ryamgoh"},"content":"\tpublic void unmark() throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"ryamgoh"},"content":"\t\tif (!this.isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"ryamgoh"},"content":"\t\t\tthrow new DukeException(\"☹ OOPS!!! This task is already marked as not done!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(this);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"ryamgoh"},"content":"\tpublic String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"ryamgoh"},"content":"\t\treturn (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"ryamgoh"},"content":"\t@Override","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"ryamgoh"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"ryamgoh"},"content":"\t\treturn \"[\" + this.letter + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"ryamgoh"},"content":"\tpublic String toFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"ryamgoh"},"content":"\t\treturn this.letter + \" | \" + (this.isDone ? 1 : 0) + \" | \" + this.description;","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"ryamgoh"},"content":"\tpublic String formatLocalDateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"ryamgoh"},"content":"\t\tString dayOfMonth \u003d dateTime.getDayOfMonth() + getDayOfMonthSuffix(dateTime.getDayOfMonth());","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ryamgoh"},"content":"\t\tString month \u003d dateTime.getMonth().toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ryamgoh"},"content":"\t\tmonth \u003d month.substring(0, 1).toUpperCase() + month.substring(1).toLowerCase();// Capitalize the month name","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ryamgoh"},"content":"\t\tString year \u003d String.valueOf(dateTime.getYear());","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ryamgoh"},"content":"\t\tString hour \u003d dateTime.format(DateTimeFormatter.ofPattern(\"h\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"ryamgoh"},"content":"\t\tString minute \u003d dateTime.format(DateTimeFormatter.ofPattern(\"mm\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"ryamgoh"},"content":"\t\tString amPm \u003d dateTime.format(DateTimeFormatter.ofPattern(\"a\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"ryamgoh"},"content":"\t\treturn String.format(\"%s of %s %s, %s:%s%s\", dayOfMonth, month, year, hour, minute, amPm);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"ryamgoh"},"content":"\tpublic String getDayOfMonthSuffix(final int n) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ryamgoh"},"content":"\t\tif (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ryamgoh"},"content":"\t\t\treturn \"th\";","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ryamgoh"},"content":"\t\tswitch (n % 10) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"ryamgoh"},"content":"\t\t\tcase 1:","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\treturn \"st\";","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"ryamgoh"},"content":"\t\t\tcase 2:","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\treturn \"nd\";","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"ryamgoh"},"content":"\t\t\tcase 3:","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\treturn \"rd\";","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"ryamgoh"},"content":"\t\t\tdefault:","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"ryamgoh"},"content":"\t\t\t\treturn \"th\";","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"ryamgoh"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ryamgoh":77}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryamgoh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryamgoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ryamgoh"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ryamgoh"},"content":"\tprivate final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ryamgoh"},"content":"\tpublic TaskList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ryamgoh"},"content":"\tpublic void addToList(Task item, Storage storage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.list.add(item);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(item.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(\"Now you have \" + this.list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ryamgoh"},"content":"\t\tstorage.writeToFile(this);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ryamgoh"},"content":"\tpublic void addToList(Task item) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.list.add(item);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"ryamgoh"},"content":"\tpublic Task get(int index) {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"ryamgoh"},"content":"\t\treturn this.list.get(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"ryamgoh"},"content":"\tpublic void printList() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"ryamgoh"},"content":"\t\tfor (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"ryamgoh"},"content":"\t\t\tTask currTask \u003d this.list.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"ryamgoh"},"content":"\t\t\tSystem.out.println((i + 1) + \".\" + currTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"ryamgoh"},"content":"\t\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"ryamgoh"},"content":"\tpublic int length() {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"ryamgoh"},"content":"\t\treturn this.list.size();","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"ryamgoh"},"content":"\tpublic void delete(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"ryamgoh"},"content":"\t\tTask currTask \u003d this.list.get(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(currTask.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.list.remove(index);","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(\"Now you have \" + this.list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"ryamgoh"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ryamgoh":47}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryamgoh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryamgoh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ryamgoh"},"content":"\tpublic ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ryamgoh"},"content":"\t\tsuper(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ryamgoh"},"content":"\t\tthis.letter \u003d \"T\";","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ryamgoh"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ryamgoh":9}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryamgoh"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"ryamgoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ryamgoh"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"ryamgoh"},"content":"\t * Prints a line","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ryamgoh"},"content":"\tvoid printLine() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ryamgoh"},"content":"\t * Prints a line","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ryamgoh"},"content":"\t */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ryamgoh"},"content":"\tvoid greet() {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ryamgoh"},"content":"\t\tprintLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(\"Hello I\u0027m RyamBot\");","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ryamgoh"},"content":"\t\tprintLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ryamgoh"},"content":"\t/**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ryamgoh"},"content":"\t * The exit command when user types \"bye\"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ryamgoh"},"content":"\t **/","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ryamgoh"},"content":"\tpublic void exit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ryamgoh"},"content":"\t\tSystem.out.println(\"I shall now take my leave. Farewell!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ryamgoh"},"content":"\t}","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ryamgoh"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ryamgoh"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"ryamgoh":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryamgoh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ryamgoh"},"content":"event hello world /from today /to tomorrow","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ryamgoh"},"content":"deadline my man is cool /by 2020-10-10","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ryamgoh"},"content":"todo watch movie","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ryamgoh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ryamgoh"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ryamgoh"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ryamgoh"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ryamgoh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ryamgoh"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ryamgoh":10}}]
