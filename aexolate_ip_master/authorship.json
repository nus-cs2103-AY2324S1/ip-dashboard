[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"javafx {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.base\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"    mainClass.set(\"carbonbot.Launcher\")","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"    archiveFileName \u003d \u0027carbonbot.jar\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"checkstyle {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aexolate":14,"-":38}},{"path":"src/main/java/carbonbot/CarbonBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.Command;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import carbonbot.control.MainWindow;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonException;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonSerializationException;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonStorageException;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":" * CarbonBot is a simple chatbot that helps to keep track of various things such as tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"public class CarbonBot {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"    private static final String DEFAULT_DATA_FILE_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"    private final String saveFilePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"    private boolean shouldExit \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"     * Constructs a CarbonBot object that will read and write its data to the default file path.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"    public CarbonBot(MainWindow mainWindow) {","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"        this(DEFAULT_DATA_FILE_PATH, mainWindow);","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"     * Constructs a CarbonBot object that will read and write its data to the specified file path.","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"     * @param filePath Path to save file","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"    public CarbonBot(String filePath, MainWindow mainWindow) {","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"        this.saveFilePath \u003d filePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"        this.ui \u003d new Ui(mainWindow);","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"            this.tasks \u003d storage.getTasks();","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"        } catch (CarbonStorageException | CarbonSerializationException ex) {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"            this.ui.showLoadingError();","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"        this.ui.showGreetings();","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"     * Returns whether the bot is ready to be terminated.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"     * @return Boolean indicating if the bot received an ExitCommand","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"aexolate"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"aexolate"},"content":"        return this.shouldExit;","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"aexolate"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"aexolate"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"aexolate"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"aexolate"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"aexolate"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"aexolate"},"content":"            if (c.isExit()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"aexolate"},"content":"                this.shouldExit \u003d true;","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"aexolate"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"aexolate"},"content":"        } catch (CarbonException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"aexolate"},"content":"            ui.bufferMessage(e.getMessage());","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"aexolate"},"content":"        return ui.flushBuffer();","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"aexolate":74}},{"path":"src/main/java/carbonbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"public class Launcher {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"aexolate":12}},{"path":"src/main/java/carbonbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import carbonbot.control.MainWindow;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"            stage.setTitle(\"CarbonBot\");","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"            CarbonBot carbonBot \u003d new CarbonBot(fxmlLoader.\u003cMainWindow\u003egetController());","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBot(carbonBot);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"            stage.show();","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"aexolate":35}},{"path":"src/main/java/carbonbot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.AddCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.Command;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.DeleteCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.ExitCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.FindCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.ListCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.MarkCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonException;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonInputParseException;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.Event;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.Todo;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":" * The Parser class helps to parse user input strings to return the appropriate Command.","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"    private static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"    private static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"    private static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"    private static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"     * Parses the user input and returns the corresponding Command to be executed","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"     * @param fullCommand The raw string the user has input","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"     * @return The Command if the fullCommand string was valid","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"    public static Command parse(String fullCommand) throws CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"        String commandType \u003d fullCommand.split(\" \")[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"        case BYE_COMMAND:","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"        case LIST_COMMAND:","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"        case TODO_COMMAND:","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"            return parseTodoCommand(fullCommand);","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"        case DEADLINE_COMMAND:","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"            return parseDeadlineCommand(fullCommand);","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"aexolate"},"content":"        case EVENT_COMMAND:","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"aexolate"},"content":"            return parseEventCommand(fullCommand);","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"aexolate"},"content":"        case MARK_COMMAND:","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"aexolate"},"content":"            return new MarkCommand(getIntegerArgument(fullCommand), true);","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"aexolate"},"content":"        case UNMARK_COMMAND:","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"aexolate"},"content":"            return new MarkCommand(getIntegerArgument(fullCommand), false);","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"aexolate"},"content":"        case DELETE_COMMAND:","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"aexolate"},"content":"            return new DeleteCommand(getIntegerArgument(fullCommand));","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"aexolate"},"content":"        case FIND_COMMAND:","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"aexolate"},"content":"            return parseFindCommand(fullCommand);","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"aexolate"},"content":"        default:","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInputParseException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"aexolate"},"content":"                    + \"\\nMy supported commands are: list, mark, unmark, todo, deadline, event, find, bye.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"aexolate"},"content":"    private static Command parseFindCommand(String fullCommand) {","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"aexolate"},"content":"        String keyword \u003d fullCommand.substring(FIND_COMMAND.length()).trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"aexolate"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"aexolate"},"content":"    private static Command parseTodoCommand(String fullCommand) throws CarbonInputParseException {","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"aexolate"},"content":"        String description \u003d fullCommand.substring(TODO_COMMAND.length()).trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"aexolate"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInputParseException(\"The description cannot be empty.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"aexolate"},"content":"        return new AddCommand(new Todo(description));","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"aexolate"},"content":"    private static Command parseDeadlineCommand(String fullCommand) throws CarbonInputParseException {","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"aexolate"},"content":"        int indexOfBy \u003d fullCommand.indexOf(\"/by\");","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"aexolate"},"content":"        // Validates the existence of /by syntax","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"aexolate"},"content":"        if (indexOfBy \u003d\u003d -1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInputParseException(\"Please specify the deadline using /by.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"aexolate"},"content":"        String description \u003d fullCommand.substring(DEADLINE_COMMAND.length(), indexOfBy).trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"aexolate"},"content":"        String by \u003d fullCommand.substring(indexOfBy + \"/by\".length()).trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"aexolate"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInputParseException(\"The description cannot be empty.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"aexolate"},"content":"        if (by.isBlank()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInputParseException(\"The due date must be specified using /by.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"aexolate"},"content":"            LocalDateTime byDt \u003d parseDateTimeString(by);","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"aexolate"},"content":"            return new AddCommand(new Deadline(description, byDt));","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"aexolate"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInputParseException(\"The datetime was not in a valid format.\"","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"aexolate"},"content":"                    + \" Example of valid datetime: 26/12/2019 1800\");","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"aexolate"},"content":"    private static Command parseEventCommand(String fullCommand) throws CarbonInputParseException {","lastModifiedDate":"2023-09-10"},{"lineNumber":108,"author":{"gitId":"aexolate"},"content":"        int indexOfFrom \u003d fullCommand.indexOf(\"/from\");","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"aexolate"},"content":"        int indexOfTo \u003d fullCommand.indexOf(\"/to\");","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"aexolate"},"content":"        if (indexOfFrom \u003d\u003d -1 || indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInputParseException(\"Please specify the start and end of the\"","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"aexolate"},"content":"                    + \" event using /from and /to.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"aexolate"},"content":"        if (indexOfFrom \u003e indexOfTo) {","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInputParseException(\"Please specify the /from before the /to!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":116,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"aexolate"},"content":"        String description \u003d fullCommand.substring(EVENT_COMMAND.length(), indexOfFrom).trim();","lastModifiedDate":"2023-09-10"},{"lineNumber":119,"author":{"gitId":"aexolate"},"content":"        String from \u003d fullCommand.substring(indexOfFrom + \"/from\".length(), indexOfTo).trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"aexolate"},"content":"        String to \u003d fullCommand.substring(indexOfTo + \"/to\".length()).trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"aexolate"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":123,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInputParseException(\"The description cannot be empty.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":125,"author":{"gitId":"aexolate"},"content":"        if (from.isBlank()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":126,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInputParseException(\"The \u0027from\u0027 of an event cannot be empty.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":127,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":128,"author":{"gitId":"aexolate"},"content":"        if (to.isBlank()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":129,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInputParseException(\"The \u0027to\u0027 of an event cannot be empty.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":131,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":132,"author":{"gitId":"aexolate"},"content":"            LocalDateTime fromDt \u003d parseDateTimeString(from);","lastModifiedDate":"2023-08-27"},{"lineNumber":133,"author":{"gitId":"aexolate"},"content":"            LocalDateTime toDt \u003d parseDateTimeString(to);","lastModifiedDate":"2023-08-27"},{"lineNumber":134,"author":{"gitId":"aexolate"},"content":"            return new AddCommand(new Event(description, fromDt, toDt));","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"aexolate"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-08-27"},{"lineNumber":136,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInputParseException(\"The given datetime was not in a valid format.\"","lastModifiedDate":"2023-09-10"},{"lineNumber":137,"author":{"gitId":"aexolate"},"content":"                    + \" Example of valid datetime: 26/12/2019 1800\");","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":139,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":140,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":141,"author":{"gitId":"aexolate"},"content":"    private static LocalDateTime parseDateTimeString(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2023-08-27"},{"lineNumber":142,"author":{"gitId":"aexolate"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":143,"author":{"gitId":"aexolate"},"content":"        return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2023-08-27"},{"lineNumber":144,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"aexolate"},"content":"    private static int getIntegerArgument(String fullCommand) throws CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":147,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"aexolate"},"content":"            return Integer.parseInt(fullCommand.split(\" \")[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"aexolate"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"aexolate"},"content":"            throw new CarbonException(\"Please provide a valid integer for the index.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":151,"author":{"gitId":"aexolate"},"content":"        } catch (ArrayIndexOutOfBoundsException aie) {","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"aexolate"},"content":"            throw new CarbonException(\"No index was provided. Please enter the task index to be updated.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":153,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"aexolate":156}},{"path":"src/main/java/carbonbot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonSerializationException;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonStorageException;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.Task;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.TaskDeserializer;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":" * Storage provides operations to write and read from the disk.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"     * Constructs a Storage to interact with the file at the provided file path.","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"     * @param filePath Path to the file","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"     * Saves the task list to the storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"     * @throws CarbonStorageException If an IO error is encountered while writing to the disk.","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"    public void saveTasks(TaskList tasks) throws CarbonStorageException {","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"            this.write(tasks.serialize());","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"        } catch (IOException | SecurityException ex) {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"            throw new CarbonStorageException(ex.getMessage());","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"     * Fetches the tasks from the storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"     * @throws CarbonStorageException If an IO error is encountered while reading from the disk.","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"    public TaskList getTasks() throws CarbonStorageException, CarbonSerializationException {","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"        List\u003cString\u003e lines;","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"aexolate"},"content":"            lines \u003d this.load();","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"aexolate"},"content":"        } catch (IOException | SecurityException ex) {","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"aexolate"},"content":"            throw new CarbonStorageException(ex.getMessage());","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"aexolate"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"aexolate"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"aexolate"},"content":"            tasks.add(TaskDeserializer.deserialize(line));","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"aexolate"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"aexolate"},"content":"     * Loads the data from the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"aexolate"},"content":"     * @return The lines in the file in a List.","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"aexolate"},"content":"     * @throws IOException If I/O error occurs reading from the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"aexolate"},"content":"    public List\u003cString\u003e load() throws IOException, SecurityException {","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"aexolate"},"content":"        // Returns an empty list if the file does not exist","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"aexolate"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"aexolate"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"aexolate"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"aexolate"},"content":"        return Files.readAllLines(Paths.get(filePath));","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"aexolate"},"content":"     * Writes data to the file. Note that it overwrites instead of append to file.","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"aexolate"},"content":"     * @param data The data to be written in the file.","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"aexolate"},"content":"     * @throws IOException If the data could not be written to the file.","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"aexolate"},"content":"    public void write(String data) throws IOException, SecurityException {","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"aexolate"},"content":"        // Create the file, and its directories if it does not already exist","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"aexolate"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"aexolate"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"aexolate"},"content":"            // Creates the required directories","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"aexolate"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"aexolate"},"content":"            // Creates the specified file at the file path","lastModifiedDate":"2023-09-10"},{"lineNumber":94,"author":{"gitId":"aexolate"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"aexolate"},"content":"            assert file.exists();","lastModifiedDate":"2023-09-10"},{"lineNumber":96,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"aexolate"},"content":"        // Writes the data to the file","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"aexolate"},"content":"        // FileWriter will be closed even if exception occurs during write()","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"aexolate"},"content":"        try (FileWriter fw \u003d new FileWriter(file)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":101,"author":{"gitId":"aexolate"},"content":"            fw.write(data);","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":103,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"aexolate":104}},{"path":"src/main/java/carbonbot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import java.util.List;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":" * TaskList contains the task list and provides operations to interact with the tasks in the list.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"     * Constructs an empty list of tasks.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"     * Constructs a TaskList with a given a list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"     * @param task Task to be added","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"     * Deletes the task at the index.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"     * @param index 1-based index of the task","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"    public void delete(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"        if (index \u003c\u003d tasks.size() \u0026\u0026 index \u003e\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"            throw new IndexOutOfBoundsException(\"The task list does not contain the given index.\");","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"aexolate"},"content":"     * Fetches the task at the index.","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"aexolate"},"content":"     * @param index 1-based index of the task","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"aexolate"},"content":"    public Task get(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"aexolate"},"content":"        if (index \u003c\u003d tasks.size() \u0026\u0026 index \u003e\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"aexolate"},"content":"            return tasks.get(index - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"aexolate"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"aexolate"},"content":"            throw new IndexOutOfBoundsException(\"The task list does not contain the given index.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"aexolate"},"content":"     * Serializes the tasks in the list to a String.","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"aexolate"},"content":"     * @return Serialized tasks","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"aexolate"},"content":"    public String serialize() {","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"aexolate"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"aexolate"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"aexolate"},"content":"            sb.append(task.serialize()).append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"aexolate"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"aexolate"},"content":"     * Obtains the tasks in the task list as a single string.","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"aexolate"},"content":"     * @return The tasks in the list labelled with an index","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"aexolate"},"content":"    public String getTasks() {","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"aexolate"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"aexolate"},"content":"        int idx \u003d 1;","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"aexolate"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"aexolate"},"content":"            sb.append(String.format(\"%d.%s%n\", idx, t));","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"aexolate"},"content":"            idx++;","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"aexolate"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"aexolate"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"aexolate"},"content":"     * @return Size of the list","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"aexolate"},"content":"    public int size() {","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"aexolate"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"aexolate":99}},{"path":"src/main/java/carbonbot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import carbonbot.control.MainWindow;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":" * Ui deals with interactions with the user such as receiving inputs and printing outputs.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"    private final List\u003cString\u003e messageBuffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"     * Constructs a new Ui object to handle the displaying of output.","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"    public Ui(MainWindow mainWindow) {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"     * Prints a greeting to welcome the user and ask for input.","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"    public void showGreetings() {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"        mainWindow.addCarbonDialog(\"Hello! I\u0027m CarbonBot\\n\"","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"                + \"What can I do for you?\");;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"     * Displays the message through System.out. Also adds the message to buffer.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"     * @param message Message to be displayed.","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"        mainWindow.addCarbonDialog(message);","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"     * Adds the message to a buffer. The message will not be displayed. Call flushBuffer() to get the buffered","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"     * messages.","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"     * @param message A string message","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"    public void bufferMessage(String message) {","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"        messageBuffer.add(message);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"     * Returns the messages stored in the buffer and clears the buffer","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"     * @return Messages in the buffer","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"aexolate"},"content":"    public String flushBuffer() {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"aexolate"},"content":"        String combinedMessage \u003d String.join(\"\\n\", messageBuffer);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"aexolate"},"content":"        messageBuffer.clear();","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"aexolate"},"content":"        return combinedMessage;","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"aexolate"},"content":"     * Prints the error message when the task list could not be loaded from disk.","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"aexolate"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"aexolate"},"content":"        mainWindow.addCarbonDialog(\"[!] Failed to load save file from disk. New data file will be created.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"aexolate":64}},{"path":"src/main/java/carbonbot/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import carbonbot.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import carbonbot.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import carbonbot.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonStorageException;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":" * The command adds a task to the task list and saves the list to disk.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"    private final Task task;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"     * Constructs an AddCommand object that will add the provided task","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"     * @param task Task to be added to the list","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CarbonStorageException {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"        // Add the task to the TaskList","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"        tasks.add(this.task);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"        assert(tasks.get(tasks.size()) \u003d\u003d this.task);","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"        ui.bufferMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"        ui.bufferMessage(this.task.toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"        ui.bufferMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"aexolate":36}},{"path":"src/main/java/carbonbot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import carbonbot.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import carbonbot.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import carbonbot.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonException;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":" * This abstract class is the superclass of all classes representing a command that CarbonBot supports.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"    private final boolean isExit;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"     * Constructs a Command that should not cause the bot to exit.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"    public Command() {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"     * Constructs a Command that might exit depending on the argument.","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"     * @param isExit Whether the command should cause the bot to exit","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"     * Whether the command should cause the bot to exit.","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"     * @return Boolean value if the bot should exit after the command is executed","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"     * Executes this command. The command might interact with the TaskList, Ui, and Storage.","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"     * @param tasks   Task List","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"     * @param ui      UI","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"     * @param storage Storage","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"     * @throws CarbonException Any error that occurs due to the command","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws CarbonException;","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"aexolate":48}},{"path":"src/main/java/carbonbot/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import carbonbot.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import carbonbot.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import carbonbot.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonException;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonInvalidIndexException;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":" * The command deletes a task from the task list and saves the list to disk.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"    private final int taskIdx;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"     * Constructs a DeleteCommand object that will delete the task at the provided index","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"     * @param taskIdx Task index to be deleted from the list","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"    public DeleteCommand(int taskIdx) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"        this.taskIdx \u003d taskIdx;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"            Task task \u003d tasks.get(taskIdx);","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"            tasks.delete(taskIdx);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"            ui.bufferMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"            ui.bufferMessage(task.toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"            ui.bufferMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"            assert tasks.get(taskIdx) !\u003d task;","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInvalidIndexException();","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"aexolate":41}},{"path":"src/main/java/carbonbot/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import carbonbot.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import carbonbot.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import carbonbot.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":" * The command will close the Ui and exit the chat bot.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"     * Constructs a ExitCommand object with isExit set to true.","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"        super(true);","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"        ui.bufferMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"        assert this.isExit();","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"aexolate":24}},{"path":"src/main/java/carbonbot/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.command;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import carbonbot.Storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import carbonbot.TaskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import carbonbot.Ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":" * The command will search for tasks given a keyword","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"    private final String keyword;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"     * Constructs a FindCommand object with the provided keyword.","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"        ui.bufferMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"        // Print tasks that contains the keyword","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"            if (t.getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"                ui.bufferMessage(i + \".\" + t.toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"aexolate":33}},{"path":"src/main/java/carbonbot/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import carbonbot.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import carbonbot.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import carbonbot.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":" * The command lists all the tasks in the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"     * Constructs a ListCommand object.","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"    public ListCommand() {","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"        ui.bufferMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"        ui.bufferMessage(tasks.getTasks());","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"aexolate":23}},{"path":"src/main/java/carbonbot/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.command;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import carbonbot.Storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import carbonbot.TaskList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import carbonbot.Ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonException;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonInvalidIndexException;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":" * The command sets the marked status of a task in the task list.","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"    private final int taskIdx;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"    private final boolean isMark;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"     * Constructs a MarkCommand object.","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"     * @param isMark  The mark status of the task","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"     * @param taskIdx The task index to modify the mark status","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"    public MarkCommand(int taskIdx, boolean isMark) {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"        this.taskIdx \u003d taskIdx;","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"        Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"            task \u003d tasks.get(taskIdx);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"        } catch (IndexOutOfBoundsException ioe) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"            throw new CarbonInvalidIndexException();","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"        if (isMark) {","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"            ui.bufferMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"            ui.bufferMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"            task.markAsUndone();","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"        ui.bufferMessage(task.toString());","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"aexolate":50}},{"path":"src/main/java/carbonbot/control/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.control;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"        Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"    private void flip() {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"aexolate"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"aexolate"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"aexolate"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"aexolate"},"content":"    public static DialogBox getCarbonDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"aexolate"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"aexolate"},"content":"        db.flip();","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"aexolate"},"content":"        return db;","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"aexolate":64}},{"path":"src/main/java/carbonbot/control/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.control;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import carbonbot.CarbonBot;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"    private CarbonBot carbonbot;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"            this.getClass().getResourceAsStream(\"/images/user.png\")));","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"    private final Image carbonImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"            this.getClass().getResourceAsStream(\"/images/carbonbot.png\")));","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"     * Initializes the MainWindow and adds a greeting message by the bot.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"     * Adds a message by the CarbonBot.","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"     * @param message Message to be displayed","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"    public void addCarbonDialog(String message) {","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"                DialogBox.getCarbonDialog(message, carbonImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"aexolate"},"content":"    public void setBot(CarbonBot carbonbot) {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"aexolate"},"content":"        this.carbonbot \u003d carbonbot;","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"aexolate"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing CarbonBot\u0027s reply and then appends them","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"aexolate"},"content":"     * to the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"aexolate"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"aexolate"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"aexolate"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"aexolate"},"content":"        String response \u003d carbonbot.getResponse(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"aexolate"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"aexolate"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"aexolate"},"content":"                DialogBox.getCarbonDialog(response, carbonImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"aexolate"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"aexolate"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"aexolate"},"content":"        if (carbonbot.shouldExit()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"aexolate"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"aexolate":76}},{"path":"src/main/java/carbonbot/exception/CarbonDataFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.exception;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":" * Thrown to indicate an invalid task index was supplied.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"public class CarbonDataFileException extends CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"     * Constructs a CarbonDataFileException.","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"    public CarbonDataFileException() {","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"        super(\"The data file is corrupted and could not be read. \"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"                + \"A new data file will be created.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"aexolate":15}},{"path":"src/main/java/carbonbot/exception/CarbonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.exception;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":" * Thrown to indicate that an exception occurred that is specific to Duke.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"public class CarbonException extends Exception {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"     * Constructs a DukeException with the specified detail message.","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"     * @param errorMessage Error Message","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"    public CarbonException(String errorMessage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"aexolate":16}},{"path":"src/main/java/carbonbot/exception/CarbonInputParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.exception;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":" * Thrown to indicate the input to CarbonBot could not be parsed successfully.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"public class CarbonInputParseException extends CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"     * Constructs a CarbonInputParseException.","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"    public CarbonInputParseException(String message) {","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"        super(\"The input provided was invalid. \" + message);","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"aexolate":14}},{"path":"src/main/java/carbonbot/exception/CarbonInvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.exception;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":" * Thrown to indicate an invalid task index was supplied.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"public class CarbonInvalidIndexException extends CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"     * Constructs a CarbonInvalidIndexException.","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"    public CarbonInvalidIndexException() {","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"        super(\"The task list does not contain the given index. \"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"                + \"Enter a valid task index by checking the task list.\");","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"aexolate":15}},{"path":"src/main/java/carbonbot/exception/CarbonSerializationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.exception;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":" * Thrown when there is an issue with serializing or deserializing tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"public class CarbonSerializationException extends CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"     * Constructs a CarbonSerializationException.","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"     * @param errorMessage Error Message","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"    public CarbonSerializationException(String errorMessage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"        super(errorMessage);","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"aexolate":16}},{"path":"src/main/java/carbonbot/exception/CarbonStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.exception;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":" * Thrown to indicate an error while writing or reading from the storage.","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"public class CarbonStorageException extends CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"     * Constructs a CarbonStorageException.","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"    public CarbonStorageException(String details) {","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"        super(\"There was an error accessing the storage. \" + details);","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"aexolate":14}},{"path":"src/main/java/carbonbot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":" * Represents task that need to be done before a specific date/time","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"    private static final String TASK_ICON \u003d \"[D]\";","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"    private static final DateTimeFormatter SERIALIZE_DT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"    private static final DateTimeFormatter OUTPUT_DT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"     * Constructs a deadline task with the provided description and due datetime.","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"     * @param by          Due date / time","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"    public String serialize() {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"        return String.format(\"D | %d | %s | %s\",","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"                super.isDone ? 1 : 0,","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"                super.description,","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"                this.by.format(SERIALIZE_DT_FORMATTER));","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"        return TASK_ICON + super.toString()","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"                + \" (by: \" + by.format(OUTPUT_DT_FORMATTER) + \")\";","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"aexolate":39}},{"path":"src/main/java/carbonbot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":" * Represents task that start at a specific date/time and ends at a specific date/time","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"    private static final String TASK_ICON \u003d \"[E]\";","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"    private static final DateTimeFormatter SERIALIZE_DT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"    private static final DateTimeFormatter OUTPUT_DT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"     * Constructs an Event task with the provided description, start datetime, and end datetime.","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"     * @param from        Start date / time","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"     * @param to          End date / time","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"    public String serialize() {","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"        return String.format(\"E | %d | %s | %s | %s\",","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"                super.isDone ? 1 : 0,","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"                super.description,","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"                this.from.format(SERIALIZE_DT_FORMATTER),","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"                this.to.format(SERIALIZE_DT_FORMATTER));","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"        return TASK_ICON + super.toString()","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"                + \" (from: \" + this.from.format(OUTPUT_DT_FORMATTER)","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"                + \" to: \" + this.to.format(OUTPUT_DT_FORMATTER) + \")\";","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"aexolate":44}},{"path":"src/main/java/carbonbot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":" * This abstract class is the superclass of all classes representing a task.","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"    private static final String DONE_ICON \u003d \"[X]\";","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"    private static final String UNDONE_ICON \u003d \"[ ]\";","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"     * Constructs a task that has a completion status","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"        return (isDone ? DONE_ICON : UNDONE_ICON);","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"     * Serializes the task in a file friendly format.","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"    public abstract String serialize();","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"        return description;","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"aexolate"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"aexolate"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"aexolate":57}},{"path":"src/main/java/carbonbot/task/TaskDeserializer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.task;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonSerializationException;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":" * Helper class to handle deserialization of task data.","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"public class TaskDeserializer {","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"     * Mapping of the task prefix to the number of expected arguments.","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"     * For example, deadline tasks should have four arguments,","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"     * [D] | [isMarked] | [description] | [dueDate]","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"    private static final Map\u003cString, Integer\u003e TASK_PREFIX_ARGLEN_MAP \u003d Map.of(","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"            \"T\", 3,","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"            \"D\", 4,","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"            \"E\", 5","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"    );","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"     * Deserializes the data into a Task.","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"     * @param data Serialized task","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"     * @return Task represented by the string","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"     * @throws CarbonSerializationException If the data could not be deserialized due to error or corruption","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"    public static Task deserialize(String data) throws CarbonSerializationException {","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"        String delimiter \u003d \" \\\\| \";","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"        String[] args \u003d data.split(delimiter);","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"        // Check that there is at least one argument to decode the task type","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"        if (args.length \u003d\u003d 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"            throw new CarbonSerializationException(\"Invalid data length\");","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"        // Validate task type","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"        String taskType \u003d args[0];","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"        if (!TASK_PREFIX_ARGLEN_MAP.containsKey(taskType)) {","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"            throw new CarbonSerializationException(\"Invalid task type\");","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"        // Validate argument length","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"        int expectedArgLen \u003d TASK_PREFIX_ARGLEN_MAP.get(taskType);","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"        if (args.length !\u003d expectedArgLen) {","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"            throw new CarbonSerializationException(\"Invalid data length\");","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"aexolate"},"content":"        // Decode common properties","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"aexolate"},"content":"        String taskIsMarked \u003d args[1];","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"aexolate"},"content":"        String taskDescription \u003d args[2];","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"aexolate"},"content":"        Task task;","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"aexolate"},"content":"            switch (taskType) {","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"aexolate"},"content":"            case \"T\":","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"aexolate"},"content":"                task \u003d new Todo(taskDescription);","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"aexolate"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"aexolate"},"content":"            case \"D\":","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"aexolate"},"content":"                LocalDateTime dueDate \u003d parseDateTimeString(args[3]);","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"aexolate"},"content":"                task \u003d new Deadline(taskDescription, dueDate);","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"aexolate"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"aexolate"},"content":"            case \"E\":","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"aexolate"},"content":"                LocalDateTime startTime \u003d parseDateTimeString(args[3]);","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"aexolate"},"content":"                LocalDateTime endTime \u003d parseDateTimeString(args[4]);","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"aexolate"},"content":"                task \u003d new Event(taskDescription, startTime, endTime);","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"aexolate"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"aexolate"},"content":"            default:","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"aexolate"},"content":"                throw new CarbonSerializationException(\"Invalid task type\");","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"aexolate"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"aexolate"},"content":"        } catch (DateTimeParseException dte) {","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"aexolate"},"content":"            throw new CarbonSerializationException(\"Datetime parsing error\");","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"aexolate"},"content":"        // Set the marked status of the task","lastModifiedDate":"2023-09-10"},{"lineNumber":80,"author":{"gitId":"aexolate"},"content":"        if (!taskIsMarked.equals(\"1\") \u0026\u0026 !taskIsMarked.equals(\"0\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"aexolate"},"content":"            throw new CarbonSerializationException(\"Invalid task status\");","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"aexolate"},"content":"        if (taskIsMarked.equals(\"1\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"aexolate"},"content":"            task.markAsDone();","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"aexolate"},"content":"        return task;","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":89,"author":{"gitId":"aexolate"},"content":"    private static LocalDateTime parseDateTimeString(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"aexolate"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"aexolate"},"content":"        return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2023-09-10"},{"lineNumber":92,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"aexolate":93}},{"path":"src/main/java/carbonbot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"/**","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":" * Represents task without any date/time attached to it","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":" */","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"    private static final String TASK_ICON \u003d \"[T]\";","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"     * Constructs a Todo task with the provided description.","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"     *","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"    public String serialize() {","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"        return String.format(\"T | %d | %s\",","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"                super.isDone ? 1 : 0,","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"                super.description);","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"        return TASK_ICON + super.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"aexolate":29}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #008ace;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"aexolate":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"carbonbot.control.MainWindow\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #008ace;\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"aexolate":16}},{"path":"src/test/java/carbonbot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.AddCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.Command;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.DeleteCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.ExitCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"import carbonbot.command.ListCommand;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"import carbonbot.exception.CarbonException;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"    public void testParseExit() throws CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"        String fullCommand \u003d \"bye\";","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"        Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"        assertInstanceOf(ExitCommand.class, c);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"    public void testParseList() throws CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"        String fullCommand \u003d \"list\";","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"        Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"        assertInstanceOf(ListCommand.class, c);","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"    public void testParseTodoAdd() throws CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"        String fullCommand \u003d \"todo sleep\";","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"        Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"        assertInstanceOf(AddCommand.class, c);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"    public void testParseDeadlineAdd() throws CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"        String fullCommand \u003d \"deadline lab1 assignment /by 2/12/2020 2350\";","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"        Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"        assertInstanceOf(AddCommand.class, c);","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"    public void testParseEventAdd() throws CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"        String fullCommand \u003d \"event cs3333 lecture /from 4/12/2020 2150 /to 4/12/2020 2350\";","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"        Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"        assertInstanceOf(AddCommand.class, c);","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"aexolate"},"content":"    public void testParseDelete() throws CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"aexolate"},"content":"        String fullCommand \u003d \"delete 2\";","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"aexolate"},"content":"        Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"aexolate"},"content":"        assertInstanceOf(DeleteCommand.class, c);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"aexolate"},"content":"    public void testParseUnknown() throws CarbonException {","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"aexolate"},"content":"        String fullCommand \u003d \"somerubbishcommand 1 2 3\";","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"aexolate"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"aexolate"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"aexolate"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"aexolate"},"content":"            assertEquals(\"The input provided was invalid. :( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"aexolate"},"content":"                            + \"\\nMy supported commands are: list, mark, unmark, todo, deadline, event, find, bye.\",","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"aexolate"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"aexolate":72}},{"path":"src/test/java/carbonbot/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"    private static final String TEST_PATH \u003d \"./cs2103-tmp/test/tasks.txt\";","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"    public void testWriteLoad() throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"            Storage storage \u003d new Storage(TEST_PATH);","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"            storage.write(\"T | 1 | eat\\nT | 1 | work\\nT | 0 | sleep\");","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"            List\u003cString\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"            expected.add(\"T | 1 | eat\");","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"            expected.add(\"T | 1 | work\");","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"            expected.add(\"T | 0 | sleep\");","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"            assertEquals(expected, storage.load());","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"        } finally {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"            Files.delete(Path.of(TEST_PATH));","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"    public void testWriteNonExistingFile() throws IOException {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"        Path testPath \u003d Path.of(TEST_PATH);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"        // Delete file if already exists","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"        if (Files.exists(testPath)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"            Files.delete(testPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"        // Check if storage is able to create the file and write to it","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"        Storage storage \u003d new Storage(TEST_PATH);","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"        storage.write(\"T | 1 | eat\");","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"        List\u003cString\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"        expected.add(\"T | 1 | eat\");","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"        assertEquals(expected, storage.load());","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"aexolate"},"content":"        Files.delete(testPath);","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"aexolate":55}},{"path":"src/test/java/carbonbot/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"package carbonbot;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.Deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.Task;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"import carbonbot.task.Todo;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"    public void delete_emptyList_exceptionThrown() {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"            tasks.delete(0);","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"            assertEquals(\"The task list does not contain the given index.\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"    public void get_withinBounds_noExceptionThrown() {","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"        Task t1 \u003d new Todo(\"Task 1\");","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"        Task t2 \u003d new Deadline(\"Task 2\", LocalDateTime.parse(\"2/12/2020 2350\",","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"aexolate"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"aexolate"},"content":"        tasks.add(t1);","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"aexolate"},"content":"        tasks.add(t2);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"aexolate"},"content":"        assertEquals(tasks.get(1), t1);","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"aexolate"},"content":"        assertEquals(tasks.get(2), t2);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"aexolate"},"content":"    public void get_outOfBounds_exceptionThrown() {","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"aexolate"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"aexolate"},"content":"        Task t1 \u003d new Todo(\"Task 1\");","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"aexolate"},"content":"        Task t2 \u003d new Deadline(\"Task 2\", LocalDateTime.parse(\"2/12/2020 2350\",","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"aexolate"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"aexolate"},"content":"        tasks.add(t1);","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"aexolate"},"content":"        tasks.add(t2);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"aexolate"},"content":"            tasks.get(0);","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"aexolate"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"aexolate"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"aexolate"},"content":"            assertEquals(\"The task list does not contain the given index.\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"aexolate"},"content":"            tasks.get(3);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"aexolate"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"aexolate"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"aexolate"},"content":"            assertEquals(\"The task list does not contain the given index.\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"aexolate"},"content":"            tasks.get(-1);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"aexolate"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"aexolate"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"aexolate"},"content":"            assertEquals(\"The task list does not contain the given index.\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"aexolate"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"aexolate"},"content":"    public void delete_outOfBounds_exceptionThrown() {","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"aexolate"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"aexolate"},"content":"        tasks.add(new Todo(\"Task 1\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"aexolate"},"content":"        tasks.add(new Todo(\"Task 2\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"aexolate"},"content":"        // No Task at Index 3","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"aexolate"},"content":"            tasks.delete(3);","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"aexolate"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"aexolate"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"aexolate"},"content":"            assertEquals(\"The task list does not contain the given index.\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"aexolate"},"content":"        // Delete Task 1","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"aexolate"},"content":"        tasks.delete(1);","lastModifiedDate":"2023-08-28"},{"lineNumber":86,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"aexolate"},"content":"        // No Task at Index 2","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":89,"author":{"gitId":"aexolate"},"content":"            tasks.delete(2);","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"aexolate"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"aexolate"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"aexolate"},"content":"            assertEquals(\"The task list does not contain the given index.\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"aexolate"},"content":"        tasks.delete(1);","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"aexolate"},"content":"        // No Task at Index 1","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"aexolate"},"content":"            tasks.delete(1);","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"aexolate"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"aexolate"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"aexolate"},"content":"            assertEquals(\"The task list does not contain the given index.\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"aexolate"},"content":"        // No Task at Index 0","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"aexolate"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"aexolate"},"content":"            tasks.delete(0);","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"aexolate"},"content":"            fail();","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"aexolate"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"aexolate"},"content":"            assertEquals(\"The task list does not contain the given index.\", e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"aexolate"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"aexolate"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"aexolate"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"aexolate"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"aexolate":114}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aexolate"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"aexolate"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"aexolate"},"content":"event project meeting /from 2/12/2020 1800 /to 2/12/2020 2350","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"aexolate"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"aexolate"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"aexolate"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"aexolate"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"aexolate"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"aexolate"},"content":"unmark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"aexolate"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"aexolate"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"aexolate"},"content":"deadline do homework","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"aexolate"},"content":"deadline do homework /by","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"aexolate"},"content":"deadline /by 2/12/2024 1800","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"aexolate"},"content":"event lecture","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"aexolate"},"content":"event lecture /from","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"event lecture /from /to","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"aexolate"},"content":"event lecture /from 2/12/2020 1800","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"aexolate"},"content":"event lecture /to 2/12/2020 1800","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"aexolate"},"content":"event /from 2/12/2020 1800 /to 4/12/2020 1800","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"aexolate"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"delete 2","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"aexolate"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"aexolate"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"aexolate"},"content":"delete 3","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"aexolate"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"aexolate"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"aexolate"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"aexolate"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"aexolate"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"aexolate":31}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"aexolate"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\carbonbot\\*.java","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"aexolate"},"content":"java -classpath ..\\bin CarbonBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aexolate":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"aexolate"},"content":"java -classpath ../bin CarbonBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aexolate":1,"-":37}}]
