[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"    ","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"    mainClass.set(\"nobita.Nobita\")","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"    archiveBaseName \u003d \"nobita\"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Seonlo99":18,"-":40}},{"path":"src/main/java/nobita/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Seonlo99":14}},{"path":"src/main/java/nobita/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import nobita.ui.MainWindow;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" * A GUI for Nobita using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"    /** Create Nobita App to interact with */","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    private final Nobita nobita \u003d new Nobita();","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setNobita(nobita);","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Seonlo99":35}},{"path":"src/main/java/nobita/Nobita.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import nobita.exception.NobitaException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import nobita.parser.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import nobita.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import nobita.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates a robot application name Nobita.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"public class Nobita {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"    /** The Ui that interact with the user */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    /** The list of tasks stored */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    /** The Storage used for reading and writing data to local file */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"     * Constructs Nobita.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    public Nobita() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"        this.storage \u003d new Storage(System.getProperty(\"user.dir\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"        this.tasks \u003d storage.readFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"     * Return the output message of Nobita given a specific input message.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"     * @param text The input message.","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing the output message.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"    public String getResponse(String text) {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"        String outputMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"            Command c \u003d Parser.parse(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"            outputMessage \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"        } catch (NobitaException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"            outputMessage \u003d e.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"        return outputMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"     * Start running Nobita robot.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"            } catch (NobitaException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"            } finally {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"                ui.showLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"     * Starts Nobita robot.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"     * @param args an array of command-line arguments for the application.","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"        new Nobita().run();","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":81}},{"path":"src/main/java/nobita/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.exception.NobitaException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import nobita.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import nobita.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates AddCommand which extends from Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    /** The task to be added */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"    private final Task task;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"     * Constructor AddCommand for ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"     * @param description The description of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    public AddCommand(String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"        this.task \u003d new ToDo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"     * Constructor AddCommand for Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     * @param description The description of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"     * @param by The due date of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"    public AddCommand(String description, String by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"        this.task \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"     * Constructor AddCommand for Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"     * @param description The description of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"     * @param from  The start date for task.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"     * @param to The end data for task.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"    public AddCommand(String description, String from, String to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"        this.task \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"     * Command that executes the task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"     * @param tasks Contains all current tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"     * @param ui Ui for interacting with user.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"     * @param storage Storage that the data file is stored in.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing the output message.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"                + tasks.getTotalTask() +\" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"     * Retrieves a boolean on whether the Command is an Exit Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"     * @return false.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Seonlo99":77}},{"path":"src/main/java/nobita/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.exception.NobitaException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import nobita.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import nobita.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"     * Command that executes the corresponding task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"     * @param tasks Contains all current tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"     * @param ui Ui for interacting with user.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     * @param storage Storage that the data file is stored in.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing the output message.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"     * @throws NobitaException Allow subclasses to override the function with the throw property.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws NobitaException;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"     * Retrieves a boolean on whether the Command is an Exit Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"     * @return false.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Seonlo99":33}},{"path":"src/main/java/nobita/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.exception.NobitaException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import nobita.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import nobita.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates DeleteCommand which extends from Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"    /** The index of task to be deleted */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     * Constructs DeleteCommand using the index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"     * Command that executes the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"     * @param tasks Contains all current tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"     * @param ui Ui for interacting with user.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"     * @param storage Storage that the data file is stored in.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing the output message.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"     * @throws NobitaException If the task is not inside tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws NobitaException {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"        if (tasks.checkIndexWithinRange(index)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"            throw new NobitaException(\"Selected task number not in list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"        Task task \u003d tasks.deleteTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\nNow you have \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"                tasks.getTotalTask() +\" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"     * Retrieves a boolean on whether the Command is an Exit Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"     * @return false.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Seonlo99":57}},{"path":"src/main/java/nobita/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.exception.NobitaException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import nobita.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import nobita.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates ExitCommand which extends from Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"     * Command that executes exit of program.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"     * @param tasks Contains all current tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"     * @param ui Ui for interacting with user.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     * @param storage Storage that the data file is stored in.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing the output message.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"     * @throws NobitaException If error occurs when writing to local files.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws NobitaException {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"     * Retrieves a boolean on whether the Command is an Exit Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"     * @return true.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Seonlo99":40}},{"path":"src/main/java/nobita/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import nobita.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates FindCommand which extends from Command.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    /** The query string to search for */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    private final String query;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"     * Constructs FindCommand with a query String.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     * @param query The item to search  for.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"     * Command that executes finding of a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"     * @param tasks Contains all current tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"     * @param ui Ui for interacting with user.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"     * @param storage Storage that the data file is stored in.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing the output message.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"        return tasks.findTask(this.query).toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"     * Retrieves a boolean on whether the Command is an Exit Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"     * @return false.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Seonlo99":49}},{"path":"src/main/java/nobita/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.exception.NobitaException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import nobita.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import nobita.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates ListCommand which extends from Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"     * Command that executes listing of all tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"     * @param tasks Contains all current tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"     * @param ui Ui for interacting with user.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     * @param storage Storage that the data file is stored in.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing the output message.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"        String outputMessage \u003d tasks.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"        ui.showMessage(outputMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"        return outputMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"     * Retrieves a boolean on whether the Command is an Exit Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"     * @return false.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Seonlo99":40}},{"path":"src/main/java/nobita/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.exception.NobitaException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import nobita.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import nobita.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates MarkCommand which extends from Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"    /** The index of task to be marked*/","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     * Constructs MarkCommand using the index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"     * @param index the index of the task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"     * Command that executes the marking of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"     * @param tasks Contains all current tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"     * @param ui Ui for interacting with user.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"     * @param storage Storage that the data file is stored in.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing the output message.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"     * @throws NobitaException If the task is not inside tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws NobitaException {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"        if (tasks.checkIndexWithinRange(index)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"            throw new NobitaException(\"Selected task number not in list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"        Task task \u003d tasks.markComplete(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"        String outputMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"        ui.showMessage(outputMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"        return outputMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"     * Retrieves a boolean on whether the Command is an Exit Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"     * @return false.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Seonlo99":58}},{"path":"src/main/java/nobita/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.exception.NobitaException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import nobita.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import nobita.ui.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates UnmarkCommand which extends from Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"    /** The index of task to be marked*/","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    private final int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     * Constructs UnmarkCommand using the index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"     * @param index the index of the task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"     * Command that executes the unmarking of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"     * @param tasks Contains all current tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"     * @param ui Ui for interacting with user.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"     * @param storage Storage that the data file is stored in.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing the output message.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"     * @throws NobitaException If the task is not inside tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws NobitaException {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"        if (tasks.checkIndexWithinRange(index)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"            throw new NobitaException(\"Selected task number not in list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"        Task task \u003d tasks.markIncomplete(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"        String outputMessage \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"        ui.showMessage(outputMessage);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"        return outputMessage;","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"     * Retrieves a boolean on whether the Command is an Exit Command.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"     * @return false.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"    };","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Seonlo99":58}},{"path":"src/main/java/nobita/exception/NobitaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.exception;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates NobitaException.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":" * Throws an exception when error occurs in Nobita.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"public class NobitaException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"     * Constructs NobitaException using an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"     * @param errorMessage The error message to be printed with the exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    public NobitaException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     * Returns the String representation of NobitaException.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"     * @return String representation of NobitaException.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"        return \"☹ OOPS!!! \" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":29}},{"path":"src/main/java/nobita/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.command.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import nobita.exception.NobitaException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import java.rmi.NotBoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates Parser.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" * Parser that is used to read in and understand user commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"     * Parses the line of command given by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"     * @param fullCommand A line of user input command string to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"     * @return A Command instruction that the user specify.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     * @throws NobitaException If command received are of wrong format.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    public static Command parse(String fullCommand)  throws NobitaException {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"        String[] commands \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"        String commandType \u003d commands[0].toLowerCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"        switch (commandType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"        case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"            return new MarkCommand(checkNumber(commands[1]));","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"            return new UnmarkCommand(checkNumber(commands[1]));","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"            if (commands.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"                throw new NobitaException(\"The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"                        + \"Please specify a description.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"            return new AddCommand(commands[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"            if (commands.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"                throw new NobitaException(\"The description of a deadline cannot be empty.\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"                        + \"Please specify a description.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"            String[] deadlineFields \u003d commands[1].split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"            return new AddCommand(deadlineFields[0], deadlineFields[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"        case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"            if (commands.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"                throw new NobitaException(\"The description of a event cannot be empty.\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"                        + \"Please specify a description.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"            String[] eventFields \u003d commands[1].split(\" /from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"            String[] fromAndTo \u003d eventFields[1].split(\" /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"            return new AddCommand(eventFields[0], fromAndTo[0], fromAndTo[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"            return new DeleteCommand(Integer.parseInt(commands[1]) - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"        case \"find\":","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"            return new FindCommand(commands[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"            throw new NobitaException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"     * Check if the task number passed in is a number.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"     * @param toTest The number parameter that is pass in.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"     * @return An integer representing the correct task index.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"     * @throws NobitaException If parameter receive is not a number.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"    private static int checkNumber(String toTest) throws NobitaException {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"            return  Integer.parseInt(toTest) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"            throw new NobitaException(\"Only numbers are allow\");","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"//    private static void checkParameterLength(String[] toTest, int actual) throws NobitaException {","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"//        int len \u003d toTest.length;","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"//        if (len \u003c actual) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Seonlo99"},"content":"//            throw new NobitaException(String.format(\"Expected %d parameter but only received %d\", actual, len));","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"//        }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Seonlo99"},"content":"//    }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Seonlo99":87}},{"path":"src/main/java/nobita/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import nobita.exception.NobitaException;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates Storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":" * Storage that is used to interact with local data files.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    /** The file name that stores data */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"    private final String fileName \u003d \"Nobita.txt\";","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    /** The directory path that the file locates */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    private final String directoryPath;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"     * Constructs Storage with a file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"     * @param directoryPath The directory path that the data file is store in.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"    public Storage(String directoryPath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"        this.directoryPath \u003d directoryPath;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"     * Reads the stored data file to Nobita.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"     * @return A TaskList that contains all stored tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"    public TaskList readFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"        checkFileExist();","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"        File file \u003d new File(getFilePath());","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"            while(sc.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"                String[] data \u003d sc.nextLine().split(\";\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"                Task toAdd \u003d new Task(\"Test Subject\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"                switch (data[0]) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"                        toAdd \u003d new ToDo(data[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"                        toAdd \u003d new Deadline(data[2], data[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"                        toAdd \u003d new Event(data[2], data[3], data[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"                        break;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"                    default:","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"                if (data[1].equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"                    toAdd.markComplete();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"                tasks.addTask(toAdd);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"     * Write the tasks from Nobita into the file located in the directory specified.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"     * @throws NobitaException If error occur when saving file.","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Seonlo99"},"content":"    public void writeFile(TaskList tasks) throws NobitaException {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Seonlo99"},"content":"            FileWriter file \u003d new FileWriter(getFilePath());","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Seonlo99"},"content":"            for (Task task: tasks.getAllTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Seonlo99"},"content":"                file.write(task.toFileFormat());","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Seonlo99"},"content":"                file.write(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Seonlo99"},"content":"            file.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Seonlo99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Seonlo99"},"content":"            throw new NobitaException(e.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Seonlo99"},"content":"     * Return the file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Seonlo99"},"content":"     * Creates directory to the file if directory does not exist.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Seonlo99"},"content":"     * @return String that represents the file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Seonlo99"},"content":"    private String getFilePath() {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Seonlo99"},"content":"        Path pathDirectory \u003d java.nio.file.Paths.get(directoryPath,\"src\", \"main\", \"data\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Seonlo99"},"content":"            Files.createDirectories(pathDirectory);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"Seonlo99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Seonlo99"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Seonlo99"},"content":"        String filePath \u003d pathDirectory.toString() + \"\\\\\" + this.fileName;","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Seonlo99"},"content":"        return filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"Seonlo99"},"content":"     * Check if file exist, do nothing if exist else create a new file.","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"Seonlo99"},"content":"    private void checkFileExist() {","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Seonlo99"},"content":"        File file \u003d new File(getFilePath());","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Seonlo99"},"content":"            file.createNewFile(); // create new file if file does not exist","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Seonlo99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Seonlo99"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Seonlo99":125}},{"path":"src/main/java/nobita/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates Deadline which extends from Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    /** The data of the Deadline is due */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    private String by;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    /** The data of the Deadline is due */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"    private LocalDate date;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"    /** The time of the Deadline is due */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"    private LocalTime time;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"     * Constructs Deadline using name and due date of Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"     * @param taskName The name of the Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"     * @param by The due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"    public Deadline(String taskName, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"        super(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"        String[] dueDateTime \u003d by.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"        this.date \u003d LocalDate.parse(dueDateTime[0]); // input format \"2016-06-11\"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"        this.time \u003d LocalTime.parse(dueDateTime[1]); // input format \"06:30\"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"     * Return a String representation of Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing of Deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"     * Return a String representation of Deadline that is formatted for file reading and writing.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representation of Deadline that is formatted for file reading and writing.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"        StringJoiner joiner \u003d new StringJoiner(\";\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"        joiner.add(\"D\").add(super.toFileFormat()).add(this.by);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"        return joiner.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":59}},{"path":"src/main/java/nobita/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates Event which extends from Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"    /** The start time of the Event */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"    protected String start;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    /** The end time of the Event */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    protected String end;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"     * Constructs Deadline using name and due date of Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     * @param taskName The name of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     * @param start The start date of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"     * @param end The end date of the Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    public Event(String taskName, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"        super(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"     * Return a String representation of Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing of Event.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \"+ this.end +  \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"     * Return a String representation of Event that is formatted for file reading and writing.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representation of Event that is formatted for file reading and writing.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"        StringJoiner joiner \u003d new StringJoiner(\";\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"        joiner.add(\"E\").add(super.toFileFormat()).add(this.start).add(this.end);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"        return joiner.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":52}},{"path":"src/main/java/nobita/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"    /** The name of the task */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"    private final String taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    /** Whether the task is completed or not */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    private boolean isComplete \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"     * Constructs a task with a task name.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"     * Marks the task as complete.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"    public void markComplete() {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"    public void markIncomplete() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"     * A getter of the status icon if task is completed or not.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing the status icon.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"    private String getStatus() {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"        return isComplete ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"     * A getter of the task name.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing the task name.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"        return this.taskName;","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"     * Return a String representation of Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing of Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"        return getStatus() + this.taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"     * Return a String representation of Task that is formatted for file reading and writing.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representation of Task that is formatted for file reading and writing.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"        StringJoiner joiner \u003d new StringJoiner(\";\");","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"        joiner.add(this.isComplete ? \"1\" : \"0\").add(this.taskName);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"        return joiner.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":79}},{"path":"src/main/java/nobita/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":" * TaskList contains all tasks in an ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"    /** The list that contains all tasks */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"     * Constructs TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"     * Getter for number of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"     * @return An integer representing number of total tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    public int getTotalTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"     * Add a task to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"     * @param task The task to be added to list.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"     * Delete a task from list with given index.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"     * @param targetTask The index of task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"     * @return The deleted Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"    public Task deleteTask(int targetTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"        return this.tasks.remove(targetTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"     * Mark a task to be complete","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"     * @param targetTask The index of the task to be mark complete.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"     * @return The Task that is mark complete.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"    public Task markComplete(int targetTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"        Task task \u003d this.tasks.get(targetTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        task.markComplete();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"     * Mark a task to be incomplete","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"     * @param targetTask The index of the task to be mark incomplete.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"     * @return The Task that is mark incomplete.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"     public Task markIncomplete(int targetTask) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"        Task task \u003d this.tasks.get(targetTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"        task.markIncomplete();","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"     * Rrturn all tasks in ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"     * @return An ArrayList that contains all tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"     * Print all tasks that matches the query.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Seonlo99"},"content":"     * @param query The query to compare with all tasks name.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"Seonlo99"},"content":"     * @Return A TaskList containing all match tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Seonlo99"},"content":"    public TaskList findTask(String query) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Seonlo99"},"content":"        TaskList matchedQuery \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Seonlo99"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Seonlo99"},"content":"            if (task.getTaskName().toLowerCase().contains(query.toLowerCase())) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Seonlo99"},"content":"                matchedQuery.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Seonlo99"},"content":"        return matchedQuery;","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Seonlo99"},"content":"     * Check if a task index is within the tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Seonlo99"},"content":"     * @param ind The task index to be checked.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Seonlo99"},"content":"     * @return True if task index fall within the tasklist, False otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Seonlo99"},"content":"    public boolean checkIndexWithinRange(int ind) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Seonlo99"},"content":"        return ind \u003c 1 || ind \u003e this.tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"Seonlo99"},"content":"     * Return the Iterator for TaskList","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Seonlo99"},"content":"     * @return A Task Iterator.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"Seonlo99"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"Seonlo99"},"content":"        return tasks.iterator();","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"Seonlo99"},"content":"     * Return a String representation of the entire list.","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representation of the entire list.","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"Seonlo99"},"content":"        if (this.getTotalTask() \u003c 1) {","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"Seonlo99"},"content":"            return \"There are no tasks to be shown.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"Seonlo99"},"content":"        int listInd \u003d 1;","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"Seonlo99"},"content":"        StringBuilder tasksStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"Seonlo99"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"Seonlo99"},"content":"            tasksStringBuilder.append(String.format(\"%d. %s\\n\", listInd, task));","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"Seonlo99"},"content":"            listInd++;","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"Seonlo99"},"content":"        return tasksStringBuilder.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Seonlo99":136}},{"path":"src/main/java/nobita/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates ToDo which extends from Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"     * Constructs ToDo using name of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"        super(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"     * Return a String representation of ToDo.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representing of ToDo.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"     * Return a String representation of ToDo that is formatted for file reading and writing.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"     * @return A String representation of ToDo that is formatted for file reading and writing.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"        StringJoiner joiner \u003d new StringJoiner(\";\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"        joiner.add(\"T\").add(super.toFileFormat());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"        return joiner.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":42}},{"path":"src/main/java/nobita/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"    public static DialogBox getNobitaDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Seonlo99":62}},{"path":"src/main/java/nobita/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.ui;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import nobita.Nobita;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"    private Nobita nobita;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    private final Image NobitaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaNobita.jpg\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"     * Initialize the GUI of Nobita.","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"     * Set Nobita.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"     * @param nobita An instance of Nobita chatbot.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"    public void setNobita(Nobita nobita) {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"        this.nobita\u003d nobita;","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Nobita\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"        String response \u003d nobita.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"                DialogBox.getNobitaDialog(response, NobitaImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Seonlo99":62}},{"path":"src/main/java/nobita/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":" * Class that encapsulates Ui.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":" * Ui is used to display message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":" *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":" * @author Zheng Chenglong","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"     * Prints welcome message.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(\"Hello! I\u0027m Nobita\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"     * Reads user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"     * @return A String that represents the user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"        return new Scanner(System.in).nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"     * Print the exit message.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"    public void exitMessage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"     * Prints a line.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(\"________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"     * Prints a error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"     * @param message The error message to be display to user.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"     * Prints a message.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"     * @param message The message to be display to user.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"     * Print the content of the TaskList.","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"     * @param list The list of tasks to be printed.","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"    public void showList(TaskList list) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"        if (list.getTotalTask() \u003c 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"            System.out.println(\"There are no tasks to be shown.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"        else {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"            int listNum \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"            for (Task task: list) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"                System.out.println(listNum + \". \" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"                ++listNum;","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Seonlo99":82}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Seonlo99":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"nobita.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"Seonlo99":19}},{"path":"src/test/java/nobita/command/MarkTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.exception.NobitaException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import nobita.storage.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import nobita.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import nobita.ui.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"import org.junit.After;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"import org.junit.Before;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"public class MarkTaskTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"    public void outOfRangeTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"            MarkCommand command \u003d new MarkCommand(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"            Ui testUi \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"            Storage testStorage \u003d new Storage(\"test\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"            TaskList testList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"            testList.addTask(new ToDo(\"item 1\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"            testList.addTask(new ToDo(\"item 2\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"            testList.addTask(new ToDo(\"item 3\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"            NobitaException exception \u003d assertThrows(NobitaException.class, () -\u003e {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"                command.execute(testList, testUi, testStorage );","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"            });","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"            String expectedMessage \u003d \"Selected task number not in list\";","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"            String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"            assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"            System.out.println(\"Something went wrong with the test\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"    public void correctlyMarkTaskTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"            MarkCommand command \u003d new MarkCommand(4);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"            Ui testUi \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"            Storage testStorage \u003d new Storage(\"test\");","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"            TaskList testList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"            testList.addTask(new ToDo(\"item 1\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"            testList.addTask(new ToDo(\"item 2\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"            testList.addTask(new ToDo(\"item 3\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"            ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"            System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"            ToDo testTask \u003d new ToDo(\"item 4\");","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"            testList.addTask(testTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"            command.execute(testList, testUi, testStorage );","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"            String expectedMessage \u003d testTask.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"            String actualMessage \u003d testList.getAllTasks().get(4).toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"            assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"            System.out.println(\"Something went wrong with the test\");","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Seonlo99":75}},{"path":"src/test/java/nobita/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"package nobita.parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"import nobita.exception.NobitaException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"    public void nonIntegerTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"            NobitaException exception \u003d assertThrows(NobitaException.class, () -\u003e {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"                Parser.parse(\"mark x\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"            });","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"            String expectedMessage \u003d \"Only numbers are allow\";","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"            String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"            assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"            System.out.println(\"Something went wrong with the test\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"    public void parameterTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"            NobitaException exception \u003d assertThrows(NobitaException.class, () -\u003e {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"                Parser.parse(\"deadline\");","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"            });","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"            String expectedMessage \u003d \"The description of a deadline cannot be empty.\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"                    + \"Please specify a description.\";","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"            String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"            assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"            System.out.println(\"Something went wrong with the test\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Seonlo99":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"java -classpath ..\\bin Nobita \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Seonlo99":1,"-":20}}]
