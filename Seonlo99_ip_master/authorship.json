[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"    public Deadline(String taskName, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"        super(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"    protected String start;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"    protected String end;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"    public Event(String taskName, String start, String end) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"        super(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \"+ this.end +  \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":15}},{"path":"src/main/java/Nobita.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"public class Nobita {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"    private static int size \u003d 0;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(\"Hello! I\u0027m Nobita\");","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"        program();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"        exit();","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"    private static void program() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"        boolean live \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"        while (live) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"            String[] input \u003d sc.nextLine().split(\" \",2);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"                switch (input[0].toLowerCase()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"                    case \"bye\":","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"                        live \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"                    case \"list\":","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"                        int listNum \u003d 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"                        for (Task task: tasks) {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"Seonlo99"},"content":"                            printMessage(listNum + \". \" + task);","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"Seonlo99"},"content":"                            ++listNum;","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"Seonlo99"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"Seonlo99"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"Seonlo99"},"content":"                    case \"mark\": {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"Seonlo99"},"content":"                        int target \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"Seonlo99"},"content":"                        tasks.get(target).markComplete();","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"Seonlo99"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"Seonlo99"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"Seonlo99"},"content":"                    case \"unmark\": {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"Seonlo99"},"content":"                        int target \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"Seonlo99"},"content":"                        tasks.get(target).markIncomplete();","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"Seonlo99"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"Seonlo99"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"Seonlo99"},"content":"                    case \"todo\":","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"Seonlo99"},"content":"                        if (input.length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"Seonlo99"},"content":"                            throwDescriptionException(\"todo\");","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"Seonlo99"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"Seonlo99"},"content":"                        ToDo newToDo \u003d new ToDo(input[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"Seonlo99"},"content":"                        addTask(newToDo);","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"Seonlo99"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"Seonlo99"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"Seonlo99"},"content":"                        if (input.length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"Seonlo99"},"content":"                            throwDescriptionException(\"deadline\");","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"Seonlo99"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"Seonlo99"},"content":"                        String[] deadlineFields \u003d input[1].split(\" /by \");","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"Seonlo99"},"content":"                        Deadline newDeadline \u003d new Deadline(deadlineFields[0], deadlineFields[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"Seonlo99"},"content":"                        addTask(newDeadline);","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"Seonlo99"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"Seonlo99"},"content":"                    case \"event\":","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"Seonlo99"},"content":"                        if (input.length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"Seonlo99"},"content":"                            throwDescriptionException(\"event\");","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"Seonlo99"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"Seonlo99"},"content":"                        String[] eventFields \u003d input[1].split(\" /from \");","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"Seonlo99"},"content":"                        String[] fromAndTo \u003d eventFields[1].split(\" /to \");","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"Seonlo99"},"content":"                        Event newEvent \u003d new Event(eventFields[0], fromAndTo[0], fromAndTo[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"Seonlo99"},"content":"                        addTask(newEvent);","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"Seonlo99"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"Seonlo99"},"content":"                    case \"delete\":","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"Seonlo99"},"content":"                        int target \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"Seonlo99"},"content":"                        deleteTask(target);","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"Seonlo99"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"Seonlo99"},"content":"                    default:","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"Seonlo99"},"content":"                        throw new NobitaException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"Seonlo99"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"Seonlo99"},"content":"            } catch (NobitaException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"Seonlo99"},"content":"                printMessage(e.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"Seonlo99"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"Seonlo99"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"Seonlo99"},"content":"    private static void addTask(Task task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"Seonlo99"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"Seonlo99"},"content":"        printMessage(\"Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \" + tasks.size() +\" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"Seonlo99"},"content":"    private static void deleteTask(int targetTask) {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"Seonlo99"},"content":"        Task task \u003d tasks.remove(targetTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"Seonlo99"},"content":"        printMessage(\"Noted. I\u0027ve removed this task:\\n\" + task + \"\\nNow you have \" + tasks.size() +\" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"Seonlo99"},"content":"    private static void throwDescriptionException(String command) throws NobitaException {","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"Seonlo99"},"content":"        throw new NobitaException(\"The description of a \" + command + \" cannot be empty.\\n\"","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"Seonlo99"},"content":"                    + \"Please specify a description.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"Seonlo99"},"content":"    private static void printMessage(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"Seonlo99"},"content":"    private static void exit(){","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":103}},{"path":"src/main/java/NobitaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"public class NobitaException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"    public NobitaException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"        return \"☹ OOPS!!! \" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":10}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"    private final String taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"    private boolean isComplete \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"    public void markComplete() {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"Seonlo99"},"content":"    public void markIncomplete() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"Seonlo99"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"Seonlo99"},"content":"    private String getStatus() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"Seonlo99"},"content":"        return isComplete ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"Seonlo99"},"content":"        return getStatus() + this.taskName;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":29}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"        super(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"Seonlo99"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"Seonlo99"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"Seonlo99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"Seonlo99"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"Seonlo99"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Seonlo99"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"Seonlo99"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"Seonlo99"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"Seonlo99"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"Seonlo99"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"Seonlo99"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"Seonlo99"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"Seonlo99"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"Seonlo99":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Seonlo99"},"content":"java -classpath ..\\bin Nobita \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Seonlo99":1,"-":20}}]
