[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"markgcera"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"markgcera"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"markgcera"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"markgcera"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"markgcera"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"markgcera"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"markgcera"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"markgcera"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"markgcera"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"markgcera":16,"-":41}},{"path":"src/main/java/GUI/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package GUI;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"markgcera"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"markgcera"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"markgcera"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"markgcera"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"markgcera"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"markgcera"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"markgcera"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"markgcera"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"markgcera"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"markgcera"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"markgcera"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"markgcera"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"markgcera"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"markgcera"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"markgcera"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"markgcera"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"markgcera"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"markgcera"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"markgcera"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"markgcera"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"markgcera"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"markgcera"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"markgcera"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"markgcera"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"markgcera"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"markgcera"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"markgcera"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"markgcera"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"markgcera":62}},{"path":"src/main/java/GUI/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package GUI;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"import duke.Main;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"markgcera":14}},{"path":"src/main/java/GUI/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package GUI;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"import duke.Iris;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"markgcera"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"markgcera"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"markgcera"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"markgcera"},"content":"    private Iris iris;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"markgcera"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"markgcera"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/IRIS.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"markgcera"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"markgcera"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"markgcera"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"markgcera"},"content":"    public void setIris(Iris d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"markgcera"},"content":"        iris \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"markgcera"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"markgcera"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"markgcera"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"markgcera"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"markgcera"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"markgcera"},"content":"        String response \u003d iris.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"markgcera"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"markgcera"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"markgcera"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"markgcera"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"markgcera"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"markgcera":52}},{"path":"src/main/java/GUI/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package GUI;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":" * This class handles the UI on the terminal. Obsolete now that we have the GUI.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"    private static final String GREETING_MESSAGE \u003d LINE_SEPARATOR + \"\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"            + \" Hello! I\u0027m IRIS\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"            + \" What can I do for you?\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"            + LINE_SEPARATOR;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"    private static final String GOODBYE_MESSAGE \u003d LINE_SEPARATOR + \"\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"            + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"            + LINE_SEPARATOR;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"     * Prints the introductory message onto the terminal.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"markgcera"},"content":"    public void printIntroMsg() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"markgcera"},"content":"        System.out.println(GREETING_MESSAGE);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"markgcera"},"content":"     * Prints the outro message onto the terminal.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"markgcera"},"content":"    public void printOutroMsg() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"markgcera"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"markgcera"},"content":"     * Prints the line separators onto the terminal.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"markgcera"},"content":"    public void printSeparator() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"markgcera"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"markgcera":38}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package Tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":" * This class represents a task that has to completed by a certain point in time.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"markgcera"},"content":"     * Returns the deadline of this task in a specified String format.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"markgcera"},"content":"     * @return the deadline of this task.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"    public String getBy() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"markgcera"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"markgcera"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"markgcera"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"markgcera"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"markgcera":31}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package Tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":" * This class represents a task that has a duration of time which it has to be done.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"markgcera"},"content":"     * This method returns the dates and/or times that the event is due to take place","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"markgcera"},"content":"     * in the format specified.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"     * @return the dates and/or time of the event.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"markgcera"},"content":"    public String getFromTo() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"markgcera"},"content":"        return from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"markgcera"},"content":"                + \" to \"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"markgcera"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"markgcera"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"markgcera"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"markgcera"},"content":"        return \"[E]\" + super.toString() + \"(from:\"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"markgcera"},"content":"                + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"to:\"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"markgcera"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"markgcera":37}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package Tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":" * This class is the parent to all the types of Tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"public class Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"    protected String description;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"    protected boolean done;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"     * This method gets the description of the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"     * @return The description of the Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"markgcera"},"content":"        return description;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"markgcera"},"content":"     * This method changes the isDone field to true.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"markgcera"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"markgcera"},"content":"        done \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"markgcera"},"content":"     * This method changes the isDone field to false.","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"markgcera"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"markgcera"},"content":"        done \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"markgcera"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"markgcera"},"content":"        return done;","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"markgcera"},"content":"     * This method returns a String which indicates whether or not the task is done.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"markgcera"},"content":"     * @return X if the task is done, empty space otherwise.","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"markgcera"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"markgcera"},"content":"        return (done ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"markgcera"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"markgcera"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"markgcera"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"markgcera":57}},{"path":"src/main/java/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package Tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":" * This class represents a task that only has a description.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"    protected String by;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"markgcera":18}},{"path":"src/main/java/duke/Iris.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"import Tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":" * Where the chatBot begins and ends. Uses has-a relationship","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":" * with other classes.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"public class Iris {","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"    private TaskExecutor executor \u003d new TaskExecutor();","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"    public Iris() {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"        taskList \u003d storage.loadTasksFromFile();","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"markgcera"},"content":"    public String getResponse(String text) {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"markgcera"},"content":"        String output \u003d parser.parse(text, taskList, executor);","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"        storage.updateTasksFile(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"markgcera"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"markgcera":27}},{"path":"src/main/java/duke/IrisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":" * This class represents a subclass of runtime exception","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":" * specifically for the Duke chatBot.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"public class IrisException extends RuntimeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"    public IrisException() {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"        super();","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"    public IrisException(String message) {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"        super(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"markgcera":15}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"import GUI.MainWindow;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"    private Iris iris \u003d new Iris();","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"markgcera"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"markgcera"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"markgcera"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"markgcera"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"markgcera"},"content":"            stage.setTitle(\"IRIS\");","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"markgcera"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"markgcera"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setIris(iris);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"markgcera"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"markgcera"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"markgcera"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"markgcera"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"markgcera":33}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"import Tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":" * This class handles the input from the user and parses them and calls the","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":" * appropriate methods based on the user input,.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"    public String parse(String input, ArrayList\u003cTask\u003e taskList, TaskExecutor executor) {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"        String[] inputParts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"        String command \u003d inputParts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"        switch (command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"        case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":"            return executor.listTasks(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"markgcera"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"markgcera"},"content":"            return executor.markTask(inputParts, taskList, true);","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"markgcera"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"            return executor.markTask(inputParts, taskList, false);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"markgcera"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"markgcera"},"content":"            return executor.deleteTask(inputParts, taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"markgcera"},"content":"        case \"find\":","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"markgcera"},"content":"            return executor.findTasks(inputParts, taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"markgcera"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"markgcera"},"content":"            return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"markgcera"},"content":"        default:","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"markgcera"},"content":"            return executor.addTask(inputParts, taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"markgcera"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"markgcera":35}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"import Tasks.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"import Tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":" * This class handles the creation, writing, and loading from a txt file.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"markgcera"},"content":"     * This method loads pre-existing tasks from the file by converting text to Task objects,","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"markgcera"},"content":"     * or creates the file if it does not yet exist.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"markgcera"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"markgcera"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"markgcera"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"markgcera"},"content":"            File file \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"markgcera"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"markgcera"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"markgcera"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"markgcera"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"markgcera"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"markgcera"},"content":"                Task task;","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"markgcera"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"markgcera"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"markgcera"},"content":"                if (parts[0].equals(\"T\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"markgcera"},"content":"                    task \u003d new Todo(parts[2]);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"markgcera"},"content":"                } else if (parts[0].equals(\"D\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"markgcera"},"content":"                    task \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"markgcera"},"content":"                } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"markgcera"},"content":"                    task \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"markgcera"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"markgcera"},"content":"                boolean done \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"markgcera"},"content":"                if (done) {","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"markgcera"},"content":"                    task.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"markgcera"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"markgcera"},"content":"                taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"markgcera"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"markgcera"},"content":"            scanner.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"markgcera"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"markgcera"},"content":"            System.out.println(\"Loading went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"markgcera"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"markgcera"},"content":"        return taskList;","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"markgcera"},"content":"     * This method updates the file by converting the Tasks into text.","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"markgcera"},"content":"     * @param taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"markgcera"},"content":"    public void updateTasksFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"markgcera"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"markgcera"},"content":"            FileWriter writer \u003d new FileWriter(\"duke.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"markgcera"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"markgcera"},"content":"                String done \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"markgcera"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"markgcera"},"content":"                    writer.write(task.getClass().getSimpleName().charAt(0)","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"markgcera"},"content":"                            + \" | \" + done + \" | \" + task.getDescription() + \"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"markgcera"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"markgcera"},"content":"                    writer.write(task.getClass().getSimpleName().charAt(0)","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"markgcera"},"content":"                            + \" | \" + done + \" | \" + task.getDescription() + \"|\"","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"markgcera"},"content":"                            + ((Deadline) task).getBy() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"markgcera"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"markgcera"},"content":"                    writer.write(task.getClass().getSimpleName().charAt(0)","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"markgcera"},"content":"                            + \" | \" + done + \" | \" + task.getDescription() + \"|\"","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"markgcera"},"content":"                            + ((Event) task).getFromTo() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"markgcera"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"markgcera"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"markgcera"},"content":"            writer.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"markgcera"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"markgcera"},"content":"            System.out.println(\"Writing went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"markgcera"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"markgcera":87}},{"path":"src/main/java/duke/TaskExecutor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"import Tasks.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"import Tasks.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"import Tasks.Todo;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":" * This class handles any actions/commands that are to be done to the Task objects.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"public class TaskExecutor {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"     * This method prints out the Tasks that are inside the ArrayList.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"     * @param taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":"    public String listTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"markgcera"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"markgcera"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"markgcera"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"markgcera"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"markgcera"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"markgcera"},"content":"                output +\u003d count++ + \". \" + task + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"markgcera"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"markgcera"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"markgcera"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"markgcera"},"content":"     * This method marks the Task at the specified index as done.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"markgcera"},"content":"     * @param inputParts","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"markgcera"},"content":"     * @param taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"markgcera"},"content":"     * @param markAsDone","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"markgcera"},"content":"    public String markTask(String[] inputParts, ArrayList\u003cTask\u003e taskList, boolean markAsDone) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"markgcera"},"content":"        int index \u003d Integer.parseInt(inputParts[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"markgcera"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"markgcera"},"content":"        if (markAsDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"markgcera"},"content":"            task.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"markgcera"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"markgcera"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"markgcera"},"content":"            task.markUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"markgcera"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"markgcera"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"markgcera"},"content":"     * This method deletes the Task at the specified index.","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"markgcera"},"content":"     * @param inputParts","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"markgcera"},"content":"     * @param taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"markgcera"},"content":"    public String deleteTask(String[] inputParts, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"markgcera"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"markgcera"},"content":"            int index \u003d Integer.parseInt(inputParts[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"markgcera"},"content":"            if (index \u003e taskList.size()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"markgcera"},"content":"                throw new IrisException(\"☹ OOPS!!! Unable to delete non-existent task\");","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"markgcera"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"markgcera"},"content":"            Task removedTask \u003d taskList.remove(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"markgcera"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\" + removedTask +","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"markgcera"},"content":"                    \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"markgcera"},"content":"        } catch (IrisException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"markgcera"},"content":"            return e.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"markgcera"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"markgcera"},"content":"     * This method adds a Task to the given ArrayList.","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"markgcera"},"content":"     * @param inputParts","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"markgcera"},"content":"     * @param taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"markgcera"},"content":"    public String addTask(String[] inputParts, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"markgcera"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"markgcera"},"content":"            Task newTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"markgcera"},"content":"            if (inputParts.length \u003c 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"markgcera"},"content":"                throw new IrisException(\"☹ OOPS!!! The description of a command cannot be empty.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"markgcera"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"markgcera"},"content":"            String description \u003d inputParts[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"markgcera"},"content":"            if (inputParts[0].equals(\"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"markgcera"},"content":"                newTask \u003d new Todo(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"markgcera"},"content":"            } else if (inputParts[0].equals(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"markgcera"},"content":"                String[] commandParts \u003d description.split(\"/by \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"markgcera"},"content":"                newTask \u003d new Deadline(commandParts[0], commandParts[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"markgcera"},"content":"            } else if (inputParts[0].equals(\"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"markgcera"},"content":"                String[] commandParts \u003d description.split(\"/from \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"markgcera"},"content":"                String[] eventParts \u003d commandParts[1].split(\"/to \");","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"markgcera"},"content":"                newTask \u003d new Event(commandParts[0], eventParts[0], eventParts[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"markgcera"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"markgcera"},"content":"                throw new IrisException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"markgcera"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"markgcera"},"content":"            taskList.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"markgcera"},"content":"            return \"Got it. I\u0027ve added this task:\\n\" + newTask +","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"markgcera"},"content":"                    \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"markgcera"},"content":"        } catch (IrisException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"markgcera"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"markgcera"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"markgcera"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"markgcera"},"content":"     * This method lists out the tasks in the list of tasks that contain the target string.","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"markgcera"},"content":"     * @param inputParts","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"markgcera"},"content":"     * @param taskList","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"markgcera"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"markgcera"},"content":"    public String findTasks(String[] inputParts, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"markgcera"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"markgcera"},"content":"        String keyword \u003d inputParts[1].toLowerCase();","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"markgcera"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"markgcera"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"markgcera"},"content":"            if (task.getDescription().toLowerCase().contains(keyword)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"markgcera"},"content":"                output +\u003d count++ + \". \" + task + \"\\n\";","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"markgcera"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"markgcera"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"markgcera"},"content":"        return output;","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"markgcera":121}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"markgcera":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"GUI.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"markgcera"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"markgcera"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"markgcera"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"markgcera"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"markgcera":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"    public void deadlineTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"        Deadline dl \u003d new Deadline(\"test\", \"2019-10-15\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"        assertEquals(\"Oct 15 2019\", dl.getBy());","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"markgcera":14}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"import Tasks.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"public class EventTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"markgcera"},"content":"    public void eventTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"markgcera"},"content":"        Event dl \u003d new Event(\"test\", \"2019-10-15\", \"2019-10-16\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"markgcera"},"content":"        assertEquals(\"Oct 15 2019 to Oct 16 2019\", dl.getFromTo());","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"markgcera"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"markgcera"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"markgcera":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"markgcera"},"content":"todo read book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"markgcera"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"markgcera"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"todo join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"markgcera"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"markgcera"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"markgcera"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"markgcera"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"markgcera":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"markgcera"},"content":"if [ ! -d \"/Users/markgarcera/Desktop/Y2S1/CS2103T/ip/bin\" ]","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"markgcera"},"content":"    mkdir /Users/markgarcera/Desktop/Y2S1/CS2103T/ip/bin","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"markgcera"},"content":"if ! javac -cp /Users/markgarcera/Desktop/Y2S1/CS2103T/ip/src/main/java -Xlint:none -d /Users/markgarcera/Desktop/Y2S1/CS2103T/ip/bin /Users/markgarcera/Desktop/Y2S1/CS2103T/ip/src/main/java/*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"markgcera"},"content":"java -classpath /Users/markgarcera/Desktop/Y2S1/CS2103T/ip/bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"markgcera":4,"-":34}}]
