[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"import Tasks.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"import Utils.Commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"import Storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"import Utils.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"import Utils.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":" * Chatbot that takes in commands.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"    public Duke(String path) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wjayee"},"content":"        this.tasks \u003d new TaskList(storage.readFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"wjayee"},"content":"     * Starts the chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"wjayee"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"wjayee"},"content":"        boolean end \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"wjayee"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"wjayee"},"content":"        ui.greet();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"wjayee"},"content":"        while(!end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"wjayee"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"wjayee"},"content":"                String nextInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"wjayee"},"content":"                Commands command \u003d Parser.determineCommand(nextInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"wjayee"},"content":"                switch (command) {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"wjayee"},"content":"                    case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"wjayee"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"wjayee"},"content":"                    case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"wjayee"},"content":"                        Task t \u003d TaskList.createTask(nextInput, command, 0);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wjayee"},"content":"                        tasks.addTask(t);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wjayee"},"content":"                        ui.showTaskAdded(t.getTask());","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wjayee"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"wjayee"},"content":"                    case LIST:","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"wjayee"},"content":"                        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"wjayee"},"content":"                            ui.showNoTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"wjayee"},"content":"                        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"wjayee"},"content":"                            ui.showAllTasks(tasks.getTasksDes(1));","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"wjayee"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"wjayee"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"wjayee"},"content":"                    case UNMARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"wjayee"},"content":"                    case MARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"wjayee"},"content":"                        String completionStatus \u003d tasks.changeTaskCompletion(nextInput, command);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"wjayee"},"content":"                        ui.showStatusChanged(completionStatus);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"wjayee"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"wjayee"},"content":"                    case DELETE:","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"wjayee"},"content":"                        String deleteStatus \u003d tasks.deleteTask(nextInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"wjayee"},"content":"                        ui.showStatusChanged(deleteStatus);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"wjayee"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"wjayee"},"content":"                    case BYE:","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"wjayee"},"content":"                        end \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"wjayee"},"content":"                        String savedStatus \u003d storage.saveToDisk(tasks.getTasksDes(0));","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"wjayee"},"content":"                        ui.showStatusChanged(savedStatus);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"wjayee"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":76,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"wjayee"},"content":"                    case UNKNOWN:","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"wjayee"},"content":"                        throw new InvalidInputException(\"Invalid input\");","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"wjayee"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"wjayee"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"wjayee"},"content":"                ui.showDukeError(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"wjayee"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"wjayee"},"content":"                ui.showDateError();","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"wjayee"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"wjayee"},"content":"                ui.showGeneralError();","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"wjayee"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"wjayee"},"content":"            ui.separator();","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"wjayee"},"content":"        ui.farewell();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"wjayee"},"content":"        new Duke(\"src/main/java/Storage/toothless.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"wjayee":92}},{"path":"src/main/java/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Exceptions;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"     * Constructor for Exceptions.DukeException.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"     * @param message Exception message.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wjayee":11}},{"path":"src/main/java/Exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Exceptions;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"     * Constructor for Exceptions.InvalidInputException.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"     * @param message Exception message.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"     * Returns the description of the exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"     * @return Description of exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"        return \"I don\u0027t understand what you just said :(\";","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wjayee":22}},{"path":"src/main/java/Exceptions/MissingDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Exceptions;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"public class MissingDateException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"     * Constructor for Exceptions.MissingDateException.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"     * @param message Exception message.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"    public MissingDateException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"     * Returns the description of the exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"     * @return Description of exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"        return \"Date of the task is missing! Please give your task a date :)\";","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wjayee":23}},{"path":"src/main/java/Exceptions/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Exceptions;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"public class MissingTaskException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"     * Constructor for Exceptions.MissingTaskException.","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"     * @param message Exception message.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"    public MissingTaskException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"     * Returns the description of the exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"     * @return Description of exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"        return \"Task cannot be found :(\";","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wjayee":20}},{"path":"src/main/java/Exceptions/MissingTitleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Exceptions;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"public class MissingTitleException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"     * Constructor for Exceptions.MissingTitleException.","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"     * @param message Exception message.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"    public MissingTitleException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"     * Returns the description of the exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"     * @return Description of exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"        return \"Title of the task is missing! Please give your task a name :)\";","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wjayee":23}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":" * Class that retrieves and stores the list of tasks locally.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"    private String path;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"    private File tempFile;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"        this.tempFile \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wjayee"},"content":"     * Reads the previously saved list of tasks and returns it in a list of task descriptions.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wjayee"},"content":"     * @return A list of task descriptions.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wjayee"},"content":"    public List\u003cString\u003e readFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"wjayee"},"content":"        List\u003cString\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wjayee"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"wjayee"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wjayee"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"wjayee"},"content":"                f.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"wjayee"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"wjayee"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"wjayee"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wjayee"},"content":"                String task \u003d s.nextLine().trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wjayee"},"content":"                output.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"wjayee"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wjayee"},"content":"            return output;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"wjayee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"wjayee"},"content":"            return output;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"wjayee"},"content":"     * Writes a string of tasks to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"wjayee"},"content":"     * @param fw File to be written in.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wjayee"},"content":"     * @param tasks Tasks to be written.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wjayee"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"wjayee"},"content":"    private void writeToFile(FileWriter fw, String tasks) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"wjayee"},"content":"        fw.write(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"wjayee"},"content":"        fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"wjayee"},"content":"     * Updates the local file with the new list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"wjayee"},"content":"     * @param tasks List of task descriptions.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"wjayee"},"content":"     * @return The status of whether the save was successful or not.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"wjayee"},"content":"    public String saveToDisk(List\u003cString\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"wjayee"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"wjayee"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"wjayee"},"content":"            String input \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"wjayee"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"wjayee"},"content":"                input \u003d input + tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"wjayee"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"wjayee"},"content":"            writeToFile(fw, input);","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"wjayee"},"content":"            return \"Tasks saved successfully\";","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"wjayee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"wjayee"},"content":"            return \"Tasks could not be saved\";","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"wjayee":75}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"import Utils.DukeDateFormat;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"    /** Date that task is to be completed by. */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"     * @param taskName Name of deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"     * @param by Date where the task is due.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"    public Deadline(String taskName, int isDone, LocalDate by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"        super(taskName, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"     * Returns the string representation of the status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wjayee"},"content":"     * @return Status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"wjayee"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"wjayee"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"wjayee"},"content":"        return \"Deadline -\u003e\" + super.getTask() + \" By: \" + DukeDateFormat.dateToString(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"wjayee"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"wjayee"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wjayee"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"wjayee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"wjayee"},"content":"        return super.toString().replace(\"/TASK\", \"deadline \") + \" /by \" + by.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wjayee":39}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"import Utils.DukeDateFormat;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"    /** Date where the event start. */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"    /** Date where the event ends. */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"     * Constructor for Event.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"     * @param taskName Name of event.","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"     * @param from Date where event starts.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"     * @param to Date where event ends.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"    public Event(String taskName, int isDone, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wjayee"},"content":"        super(taskName, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"wjayee"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wjayee"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"wjayee"},"content":"     * Returns duration of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"wjayee"},"content":"     * @return Duration of event.","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"wjayee"},"content":"    private String getDuration() {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"wjayee"},"content":"        return DukeDateFormat.dateToString(from) + \" - \" + DukeDateFormat.dateToString(to);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"wjayee"},"content":"     * Returns the string representation of the status of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"wjayee"},"content":"     * @return Status of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"wjayee"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"wjayee"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"wjayee"},"content":"        return \"Event -\u003e\" + super.getTask() + \" (\" + getDuration() + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wjayee"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wjayee"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"wjayee"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wjayee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"wjayee"},"content":"        String fromDate \u003d from.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"wjayee"},"content":"        String toDate \u003d to.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"wjayee"},"content":"        return super.toString().replace(\"/TASK\", \"event \") + \" /from \" + fromDate + \" /to \" + toDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wjayee":57}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"    /** Completion status of the task. */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"    /** Title of the task. */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"    private String taskName;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"    public Task(String taskName, int isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"        this.isDone \u003d isDone \u003d\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"     * Returns the string representation of the status of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"     * @return Status of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"wjayee"},"content":"        String output \u003d (isDone ? \" [X] \" : \" [ ] \") + this.taskName;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"wjayee"},"content":"        return output;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"wjayee"},"content":"     * Marks the status of the task as completed.","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"wjayee"},"content":"     * @return Dialogue to confirm the completion status of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"wjayee"},"content":"    public String markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"wjayee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"wjayee"},"content":"        return \"\u0027\" + this.taskName + \"\u0027\" + \" is completed! Good job :)\";","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"wjayee"},"content":"     * Marks the status of the task as uncompleted.","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"wjayee"},"content":"     * @return Dialogue to confirm the completion status of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"wjayee"},"content":"    public String markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"wjayee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"wjayee"},"content":"        return \"\u0027\" + this.taskName + \"\u0027\" + \" is now not completed :(\";","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"wjayee"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wjayee"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wjayee"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"wjayee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"wjayee"},"content":"        return (isDone ? \"/C \" : \"/UC \") + \"/TASK\" + taskName ;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"wjayee":54}},{"path":"src/main/java/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"import Exceptions.MissingTaskException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"import Utils.Commands;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"import Utils.DukeDateFormat;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"import Utils.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":" * Class that contains the list of tasks when the chatbot is active.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"    public TaskList(List\u003cString\u003e stringTasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"        this.tasks \u003d stringToTask(stringTasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wjayee"},"content":"     * Converts a list of task descriptions to a list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wjayee"},"content":"     * @param input List of task descriptions.","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wjayee"},"content":"     * @return List of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wjayee"},"content":"    private static List\u003cTask\u003e stringToTask(List\u003cString\u003e input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"wjayee"},"content":"        List\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"wjayee"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"wjayee"},"content":"            for (int i \u003d 0; i \u003c input.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"wjayee"},"content":"                String nextInput \u003d input.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"wjayee"},"content":"                Commands command \u003d Parser.determineCommand(nextInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wjayee"},"content":"                int isDone \u003d nextInput.contains(\"/UC\") ? 0 : 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"wjayee"},"content":"                Task task \u003d createTask(nextInput, command, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"wjayee"},"content":"                output.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"wjayee"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"wjayee"},"content":"            return output;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"wjayee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"wjayee"},"content":"            return output;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"wjayee"},"content":"     * Creates a task based on the input given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"wjayee"},"content":"     * @param input The input given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wjayee"},"content":"     * @param command Type of command in the input","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wjayee"},"content":"     * @param isDone A field for task created.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wjayee"},"content":"     * @return The task created.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"wjayee"},"content":"     * @throws DukeException If title or date does not exist, or if input is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"wjayee"},"content":"     * @throws DateTimeParseException If date exists but is in the wrong format.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"wjayee"},"content":"    public static Task createTask(String input, Commands command, int isDone) throws DukeException, DateTimeParseException {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"wjayee"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"wjayee"},"content":"            switch (command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"wjayee"},"content":"                case TODO:","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"wjayee"},"content":"                    String todoTitle \u003d Parser.obtainTitle(input, Commands.TODO);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"wjayee"},"content":"                    return new ToDo(todoTitle, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"wjayee"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"wjayee"},"content":"                    String deadlineTitle \u003d Parser.obtainTitle(input, Commands.DEADLINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"wjayee"},"content":"                    String by \u003d Parser.obtainDate(input, Commands.DEADLINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"wjayee"},"content":"                    LocalDate byDate \u003d DukeDateFormat.stringToDate(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"wjayee"},"content":"                    return new Deadline(deadlineTitle, isDone, byDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"wjayee"},"content":"                case EVENT:","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"wjayee"},"content":"                    String eventTitle \u003d Parser.obtainTitle(input, Commands.EVENT);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"wjayee"},"content":"                    String fromTo \u003d Parser.obtainDate(input, Commands.EVENT);","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"wjayee"},"content":"                    LocalDate from \u003d DukeDateFormat.stringToDate(fromTo.split(\"/to\")[0]);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"wjayee"},"content":"                    LocalDate to \u003d DukeDateFormat.stringToDate(fromTo.split(\"/to\")[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"wjayee"},"content":"                    return new Event(eventTitle, isDone, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"wjayee"},"content":"                default:","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"wjayee"},"content":"                    throw new InvalidInputException(\"Invalid input\");","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"wjayee"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"wjayee"},"content":"        } catch (DukeException | DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"wjayee"},"content":"            throw e;","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"wjayee"},"content":"     * Checks if the list of tasks is empty.","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"wjayee"},"content":"     * @return True if list is empty.","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"wjayee"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"wjayee"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"wjayee"},"content":"     * Returns a list of task descriptions.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"wjayee"},"content":"     * @param typeOfDes The type of description to be returned.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"wjayee"},"content":"     * @return A list of description to be stored locally if typeOfDes \u003d 0 else","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"wjayee"},"content":"     * a list of description to be read by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"wjayee"},"content":"    public List\u003cString\u003e getTasksDes(int typeOfDes) {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"wjayee"},"content":"        List\u003cString\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"wjayee"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"wjayee"},"content":"            if (typeOfDes \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"wjayee"},"content":"                output.add(tasks.get(i).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"wjayee"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"wjayee"},"content":"                output.add(tasks.get(i).getTask());","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"wjayee"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"wjayee"},"content":"        return output;","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"wjayee"},"content":"     * Updates the completion status of their task and returns a String as the dialogue.","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"wjayee"},"content":"     * @param input The user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"wjayee"},"content":"     * @param command Type of command given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"wjayee"},"content":"     * @return Dialogue for the bot to confirm status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"wjayee"},"content":"     * @throws DukeException Exceptions.InvalidInputException thrown if input","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"wjayee"},"content":"     * cannot be recognised. Exceptions.MissingTaskException thrown","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"wjayee"},"content":"     * if task cannot be found in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"wjayee"},"content":"    public String changeTaskCompletion(String input, Commands command) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"wjayee"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"wjayee"},"content":"            int taskNum \u003d Integer.valueOf(input.split(\" \")[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"wjayee"},"content":"            Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"wjayee"},"content":"            if (command.equals(Commands.UNMARK)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"wjayee"},"content":"                return task.markAsUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"wjayee"},"content":"            } else if (command.equals(Commands.MARK)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"wjayee"},"content":"                return task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"wjayee"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"wjayee"},"content":"                throw new InvalidInputException(\"Invalid input\");","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"wjayee"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"wjayee"},"content":"        } catch (ArrayIndexOutOfBoundsException aoob) {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"wjayee"},"content":"            throw new MissingTaskException(\"Missing Task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"wjayee"},"content":"        } catch (IndexOutOfBoundsException ioob) {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"wjayee"},"content":"            throw new MissingTaskException(\"Missing Task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"wjayee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"wjayee"},"content":"            throw new InvalidInputException(\"Invalid input\");","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"wjayee"},"content":"     * Deletes a task from the task list and returns a String as the dialogue.","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"wjayee"},"content":"     * @param input The user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"wjayee"},"content":"     * @return Dialogue to confirm the deletion of the task from the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"wjayee"},"content":"     * @throws DukeException Exceptions.InvalidInputException thrown if input","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"wjayee"},"content":"     * cannot be recognised. Exceptions.MissingTaskException thrown","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"wjayee"},"content":"     * if task cannot be found in the task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"wjayee"},"content":"    public String deleteTask(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"wjayee"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"wjayee"},"content":"            int taskNum \u003d Integer.valueOf(input.split(\" \")[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"wjayee"},"content":"            Task deleted \u003d tasks.remove(taskNum - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"wjayee"},"content":"            return deleted.getTask() + \" has been deleted!\";","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"wjayee"},"content":"        } catch (ArrayIndexOutOfBoundsException aoob) {","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"wjayee"},"content":"            throw new MissingTaskException(\"Missing Task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"wjayee"},"content":"        } catch (IndexOutOfBoundsException ioob) {","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"wjayee"},"content":"            throw new MissingTaskException(\"Missing Task\");","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"wjayee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"wjayee"},"content":"            throw new InvalidInputException(\"Invalid input\");","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"wjayee"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"wjayee"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"wjayee"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"wjayee"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wjayee":171}},{"path":"src/main/java/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"     * @param taskName Name of todo.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"    public ToDo(String taskName, int isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"        super(taskName, isDone);","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"     * Returns the string representation of the status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"     * @return Status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"    public String getTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"        return \"To Do -\u003e\" + super.getTask();","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wjayee"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"wjayee"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"wjayee"},"content":"        return super.toString().replace(\"/TASK\", \"todo \");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wjayee":29}},{"path":"src/main/java/Utils/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Utils;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"public enum Commands {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"    TODO,","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"    EVENT,","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"    LIST,","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"    UNMARK,","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"    MARK,","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"    DELETE,","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"    BYE,","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"    UNKNOWN","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wjayee":13}},{"path":"src/main/java/Utils/DukeDateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Utils;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"import java.util.Locale;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":" * Class to format the date.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"public class DukeDateFormat {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"     * Converts a string to LocalDate.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"     * @param dateInput String representation of date.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"     * @return The LocalDate representation of date.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"    public static LocalDate stringToDate(String dateInput) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"            LocalDate date \u003d LocalDate.parse(dateInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"            return date;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"            throw e;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"wjayee"},"content":"     * Converts a date to String.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wjayee"},"content":"     * @param date LocalDate representation of date.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"wjayee"},"content":"     * @return The string representation of date.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"wjayee"},"content":"    public static String dateToString(LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"wjayee"},"content":"        String day \u003d String.valueOf(date.getDayOfMonth());","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"wjayee"},"content":"        String month \u003d date.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wjayee"},"content":"        String year \u003d String.valueOf(date.getYear());","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"wjayee"},"content":"        return month + \" \" + day + \" \" + year;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wjayee":40}},{"path":"src/main/java/Utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Utils;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"import Exceptions.MissingDateException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"import Exceptions.MissingTitleException;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":" * Makes sense of the user command.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"     * Returns the command that is called by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"     * @param input The user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"     * @return The type of command called.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"    public static Commands determineCommand(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"        for (Commands command: Commands.values()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"            if (input.contains(command.name().toLowerCase())) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"                return command;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wjayee"},"content":"        return Commands.UNKNOWN;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"wjayee"},"content":"     * Returns the title of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wjayee"},"content":"     * @param input The user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"wjayee"},"content":"     * @param command Type of command given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"wjayee"},"content":"     * @return The title of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"wjayee"},"content":"     * @throws DukeException InvalidInputException thrown if input cannot be recognised.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"wjayee"},"content":"     * @throws MissingTitleException if user did not give a title for their task.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wjayee"},"content":"    public static String obtainTitle(String input, Commands command)","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"wjayee"},"content":"            throws DukeException, MissingTitleException {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"wjayee"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"wjayee"},"content":"            if (command.equals(Commands.TODO)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"wjayee"},"content":"                return input.split(\"todo \")[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"wjayee"},"content":"            } else if (command.equals(Commands.DEADLINE)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"wjayee"},"content":"                return input.split(\"deadline \")[1].split(\" /by \")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"wjayee"},"content":"            } else if (command.equals(Commands.EVENT)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"wjayee"},"content":"                return input.split(\"event \")[1].split(\" /from \")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"wjayee"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wjayee"},"content":"                throw new InvalidInputException(\"Invalid input\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wjayee"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"wjayee"},"content":"        } catch (ArrayIndexOutOfBoundsException oob) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"wjayee"},"content":"            throw new MissingTitleException(\"Missing Title\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"wjayee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"wjayee"},"content":"            throw new InvalidInputException(\"Invalid input\");","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"wjayee"},"content":"     * Returns the date specified by the user for their task.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"wjayee"},"content":"     * @param input The user input.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"wjayee"},"content":"     * @param command Type of command given by the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"wjayee"},"content":"     * @return By date of deadlines or From and To date of events.","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"wjayee"},"content":"     * @throws DukeException InvalidInputException thrown if input cannot be recognised.","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"wjayee"},"content":"     * @throws MissingDateException if user did not give a by date for their","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"wjayee"},"content":"     * deadline or either a from or to date for their event.","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"wjayee"},"content":"    public static String obtainDate(String input, Commands command) throws DukeException, MissingDateException{","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"wjayee"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"wjayee"},"content":"            if (command.equals(Commands.DEADLINE)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"wjayee"},"content":"                return input.split(\" /by \")[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"wjayee"},"content":"            } else if (command.equals(Commands.EVENT)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"wjayee"},"content":"                String from \u003d input.split(\" /from \")[1].split(\" /to \")[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"wjayee"},"content":"                String to \u003d input.split(\" /from \")[1].split(\" /to \")[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"wjayee"},"content":"                return from + \"/to\" + to;","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"wjayee"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"wjayee"},"content":"                throw new InvalidInputException(\"Invalid Input\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"wjayee"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"wjayee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"wjayee"},"content":"            throw e;","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"wjayee"},"content":"        } catch (ArrayIndexOutOfBoundsException oob) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"wjayee"},"content":"            throw new MissingDateException(\"Missing Date\");","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"wjayee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"wjayee"},"content":"            throw new InvalidInputException(\"Invalid input\");","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wjayee":88}},{"path":"src/main/java/Utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"package Utils;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"import Exceptions.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"import Tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":" * User interface for the chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"    private String greeting \u003d \"Hello! I\u0027m Toothless.\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"            \"What can I do for you today?\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"            \"---------------------------------\";","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"    private String farewell \u003d \"Goodbye. Hope to see you soon!\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"            \"---------------------------------\";","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"    private String addTask \u003d \"A new task has been added!\\n \";","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"     * Greets the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"    public void greet() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"wjayee"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"wjayee"},"content":"     * Bids farewell to the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"wjayee"},"content":"    public void farewell() {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"wjayee"},"content":"        System.out.println(farewell);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"wjayee"},"content":"     * Displays the type of input error.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"wjayee"},"content":"     * @param e The exception thrown.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"wjayee"},"content":"    public void showDukeError(DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"wjayee"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"wjayee"},"content":"     * Tells user to input the correct date format.","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"wjayee"},"content":"    public void showDateError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"wjayee"},"content":"        System.out.println(\"Date cannot be recognised :( please input a valid date format yyyy-mm-dd !\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"wjayee"},"content":"     * Tells user that there has been an error.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"wjayee"},"content":"    public void showGeneralError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"wjayee"},"content":"        System.out.println(\"There has been an internal error. Please try again!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"wjayee"},"content":"     * Confirms that a task has been added.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"wjayee"},"content":"     * @param taskDescription Description of the task added.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"wjayee"},"content":"    public void showTaskAdded(String taskDescription) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"wjayee"},"content":"        System.out.println(addTask + taskDescription);","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"wjayee"},"content":"     * Displays a message when there are no tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"wjayee"},"content":"    public void showNoTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"wjayee"},"content":"        System.out.println(\"You have no tasks! Yay :)\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"wjayee"},"content":"     * Lists out all the tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"wjayee"},"content":"     * @param tasksDescriptions The list of descriptions of the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"wjayee"},"content":"    public void showAllTasks(List\u003cString\u003e tasksDescriptions) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"wjayee"},"content":"        System.out.println(\"Here\u0027s your list of tasks!\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"wjayee"},"content":"        for (int i \u003d 0; i \u003c tasksDescriptions.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"wjayee"},"content":"            System.out.println((i + 1) + \": \" + tasksDescriptions.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"wjayee"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"wjayee"},"content":"     * Confirms that the status of a task has changed.","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"wjayee"},"content":"     * @param status The current status of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"wjayee"},"content":"    public void showStatusChanged(String status) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"wjayee"},"content":"        System.out.println(status);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"wjayee"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"wjayee"},"content":"     * Separates the commands and output.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"wjayee"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"wjayee"},"content":"    public void separator() {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"wjayee"},"content":"        System.out.println(\"---------------------------------\");","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"wjayee"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"wjayee"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"wjayee"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"wjayee":97}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wjayee"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"wjayee"},"content":"todo return books","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"wjayee"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"wjayee"},"content":"delete","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"wjayee"},"content":"delete 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"wjayee"},"content":"delete 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"wjayee"},"content":"todo return books","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"wjayee"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"wjayee"},"content":"deadline write essay /by 2023-08-30","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"wjayee"},"content":"deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"wjayee"},"content":"deadline write essay","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"wjayee"},"content":"deadline write essay /by today","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"wjayee"},"content":"event hackathon /from 2023-08-30 /to 2023-08-31","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"wjayee"},"content":"event","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"wjayee"},"content":"event hackathon","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"wjayee"},"content":"event hackathon /from 23/9","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"wjayee"},"content":"event hackathon /to 25/9","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"wjayee"},"content":"event hackathon /from 2023-08-30 /to next day","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"wjayee"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"wjayee"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"wjayee"},"content":"mark 5","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"wjayee"},"content":"mark","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"wjayee"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"wjayee"},"content":"unmark 5","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"wjayee"},"content":"unmark","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"wjayee"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"wjayee"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"wjayee"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"wjayee":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"wjayee"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"wjayee":1}}]
