[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"java {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"-":42,"Leb14":6}},{"path":"data/TaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"T | 0 | add","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"D | 0 | sleep | 23 Aug 2023 7:00PM","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"T | 0 | sleep later","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"T | 0 | read book","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"T | 1 | read and sleep","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"E | 1 | sleep again | 23 Aug 2023 9:00AM | 29 Sep 2023 3:00PM","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Leb14":6}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":" * Duke class is a simple chatbot that allows users","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":" * to mark down their tasks.It allows users to add,","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":" * list, and manage tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    private FileHandler fileHandler; //FileHandler to read or write file.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    private TaskList task; // The list of task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    private Ui ui; //The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    private static final String DATA_FILE_PATH \u003d \"data/TaskList.txt\"; //The file path of the .txt file","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * Construct a Duke instance with the specified file path.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     * @param filePath The file path to store task data.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        this.fileHandler \u003d new FileHandler(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        this.task \u003d new TaskList(FileHandler.readTasksFromFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        this.ui \u003d new Ui(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     * Runs the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     * It displays a welcome message and processes user commands","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     * until the \u0027bye\u0027 command is received to terminate the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        while (!isExit) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"                c.execute(task, ui, fileHandler);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"                // Handle the specific exception here","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"     * The main for the Duke application.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"     * Create a Duke instance to run.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"     * @param args (not used in this application).","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        new Duke(DATA_FILE_PATH).run();","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":59,"-":4}},{"path":"src/main/java/Parser/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" * The `DateTime` class provides methods for parsing and formatting date and time strings.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"public class DateTime {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"    private DateTimeFormatter inputFormatter; //The input format of the date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private DateTimeFormatter outputFormatter; //The output format of the date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     * Constructs a `DateTime` object with a date and time formatters.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    public DateTime() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        this.inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        this.outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * Formats a date and time string from the input format to the output format.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * @param dateTimeStr The date and time string to be formatted.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * @return The formatted date and time string in the output format or \"Invalid format\" if parsing fails.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    public String formatDateTime(String dateTimeStr) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeStr, inputFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"            return dateTime.format(outputFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"            return \"Invalid format\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":37}},{"path":"src/main/java/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import command.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import command.AddDeadlineCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import command.AddEventCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import command.AddTodoCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import command.ByeCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import command.EmptyCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import command.ErrorCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import command.MiscCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"import command.FindCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":" * The `Parser` class is responsible for parsing user input commands into executable commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * Parses the user input string and returns the corresponding command object.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * @param str The user input string to be parsed.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * @return A command object representing the parsed command.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    public static Command parse (String str) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        if (str.isEmpty()) { //empty command","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"            return new EmptyCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"todo\")) { //todo command","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"                String[] split \u003d str.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"                if (split.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"                    throw new IllegalArgumentException();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"                    return new AddTodoCommand(str.substring(split[0].length()).trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"                System.out.println(\"Hey! I think you forget to enter the todo description or leave a space after the command!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"                return new ErrorCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"deadline\")) { // deadline command","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"                String[] split \u003d str.split(\"/by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"                if (str.equals(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"                    throw new IllegalArgumentException(\"Hey! Please enter the task description or leave a space after the command!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"                } else if (split.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"                    throw new IllegalArgumentException(\"Hey! Please provide a deadline for your task in this format dd/MM/yyyy HHmm!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"                    DateTime dateTime \u003d new DateTime();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"                    String formattedDate \u003d dateTime.formatDateTime(split[1].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"                    String taskDesc \u003d split[0].trim().substring(8).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"                    if (formattedDate.equals(\"Invalid format\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"                        throw new IllegalArgumentException(\"Hey! Please provide a deadline for your task in this format dd/MM/yyyy HHmm!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"                    return new AddDeadlineCommand(taskDesc, formattedDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"                return new ErrorCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"event\")) { // event command","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"                if (str.equals(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"                    throw new IllegalArgumentException(\"Hey! Please enter the event description or leave a space after the command!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"                String[] split_1 \u003d str.split(\"/from\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"                if (split_1.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"                    throw new IllegalArgumentException(\"Hey! Please provide a time range for your event in this format /from dd/MM/yyyy HHmm /to HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"                String[] split_2 \u003d split_1[1].split(\"/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"                if (split_2.length \u003c 2)  {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"                    throw new IllegalArgumentException(\"Hey! Please provide an end time for your event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"                    DateTime dateTime \u003d new DateTime();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"                    String formattedStartTime \u003d dateTime.formatDateTime(split_2[0].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"                    String formattedEndTime \u003d dateTime.formatDateTime(split_2[1].trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"                    String taskDesc \u003d split_1[0].trim().substring(5).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"                    if (formattedStartTime.equals(\"Invalid format\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"                        throw new IllegalArgumentException(\"Hey! Please provide a time range for your event in this format /from dd/MM/yyyy HHmm /to dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"                    if (formattedEndTime.equals(\"Invalid format\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"                        throw new IllegalArgumentException(\"Hey! Please provide an end time for your event in this format dd/MM/yyyy HHmm!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"                    return new AddEventCommand(taskDesc, formattedStartTime, formattedEndTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"                return new ErrorCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"        } else if (str.equals(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"            return new ListCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"            int index \u003d Integer.parseInt(str.substring(7));","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"            int index \u003d Integer.parseInt(str.substring(5));","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"            int index \u003d Integer.parseInt(str.substring(7));","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"        } else if (str.equals(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"find\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"            String[] split \u003d str.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"            if (split.length \u003c 2)  {","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"                throw new IllegalArgumentException(\"Hey! Please provide a keyword\");","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"            return new FindCommand(split[1].trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"        }else {","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"            return new MiscCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":128}},{"path":"src/main/java/Storage/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"import taskmanager.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"import taskmanager.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"import taskmanager.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"import taskmanager.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":" * The `FileHandler` class handles reading tasks from and writing tasks to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"public class FileHandler {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    private static String filePath; // The file path to the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * Constructs a `FileHandler` with the specified file path.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     * @param filePath The path to the .txt file where tasks will be stored.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    public FileHandler(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     * Reads tasks from the .txt file and returns them as a list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"     * @return An ArrayList containing the tasks read from the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    public static ArrayList\u003cTask\u003e readTasksFromFile() {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e task \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        String folderPath \u003d \"data\";","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"            Files.createDirectories(Paths.get(folderPath));","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"Failed to create the directory: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"                Files.createFile(path);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"                System.out.println(\"Failed to create the file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"            FileReader reader \u003d new FileReader(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"            Scanner scanner \u003d new Scanner(reader);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"            boolean contentCheck \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"                if (!contentCheck) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"                    break;","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"                } else if (line.startsWith(\"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"                    try {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"                        String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"                        if (split.length \u003e 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"                            throw new IndexOutOfBoundsException(\"There is an error in your Todos content format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"                        } if (split.length \u003c 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"                            throw new IndexOutOfBoundsException(\"There is missing info for your Todos content in the file!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"                        ToDo newtodo \u003d new ToDo(split[2], split[1]);","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"                        task.add(newtodo);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"                        contentCheck \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"                } else if (line.startsWith(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"                    try {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"                        String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"                        if (split.length \u003e 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"                            throw new IndexOutOfBoundsException(\"There is an error in your Deadlines content format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"                        } if (split.length \u003c 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"                            throw new IndexOutOfBoundsException(\"There is missing info for your Deadlines content in the file!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"                        Deadline newdeadline \u003d new Deadline(split[1], split[2], split[3]);","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"                        task.add(newdeadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"                        contentCheck \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"                } else if (line.startsWith(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"                    try {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"                        String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"                        if (split.length \u003e 5) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"                            throw new IndexOutOfBoundsException(\"There is an error in your Events content format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"                        } if (split.length \u003c 5) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"                            throw new IndexOutOfBoundsException(\"There is missing info for your Events content in the file!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"                        }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"                        Event newevent \u003d new Event(split[1], split[2], split[3], split[4]);","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"                        task.add(newevent);","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"                reader.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"        return task;","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"     * Writes tasks to the specified file.","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"     * @param tasks The TaskList containing the tasks to be written.","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"    public static void writeTasksToFile(TaskList tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"            for (Task t : tasks.getAllTasks()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"                writer.write(t.toFileString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"File don\u0027t exist!!!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":137}},{"path":"src/main/java/Storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import taskmanager.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" * The `TaskList` class behave like an ArrayList","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * to store a list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private ArrayList\u003cTask\u003e task; //The array list to store all the tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     * Constructs a `TaskList` with the specified list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     * @param task The ArrayList containing tasks to initialize the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    public TaskList(ArrayList\u003cTask\u003e task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        this.task \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * Adds task to task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     * @param t The task to be added to the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        task.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    public int size() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        return this.task.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"     * @return True if the task list is empty; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        return this.task.isEmpty();","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"     * Removes a task at the specified index from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"     * @param i The index of the task to be removed.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"    public void remove(int i) {this.task.remove(i);}","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"     * Returns the ArrayList of tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"     * @return The ArrayList of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"        return this.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"     * @return The task at the index.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"        return this.task.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"     * Compares this `TaskList` to another `TaskList` for equality.","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"     * @param other The `TaskList` to compare to this one.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"     * @return True if the `TaskList` objects are equal; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"    public boolean taskListEqual(TaskList other) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"        if (task.size() !\u003d other.task.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"        for (int i \u003d 0; i \u003c task.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"            if (!task.get(i).equals(other.task.get(i))) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"                return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"    public void display() {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"        for (int i \u003d 0 ; i \u003c task.size(); i ++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"     \" + j + \". \" +  task.get(i).toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"     * Match the taskDesc with keyword for query.","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"     * @param str The keyword for matching.","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"     * @return A tasklist containing all the task that passed the matching.","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"    public TaskList findKeyword(String str) {","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"        TaskList matchedList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"here\");","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"        for (int i \u003d 0; i \u003c task.size(); i ++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"            if (this.task.get(i).isMatch(str)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"                matchedList.add(this.task.get(i));","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"        return matchedList;","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":127}},{"path":"src/main/java/TaskManager/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"    private String taskDesc; //task description","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"    private String dueDateStr; // due date in String","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    private LocalDateTime dueDate; // due date in LocalDateTime","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"                            DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     * Constructs a new Event task with the specified description, completion status, and date-time information.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc  The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * @param dueDateStr The due date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    public Deadline(String taskDesc, String dueDateStr) {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        this.dueDateStr \u003d dueDateStr;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        this.dueDate \u003d LocalDateTime.parse(dueDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * Constructs a new Event task with the specified description, completion status, and date-time information.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     * @param completion The completion status (1 for done, 0 for not done).","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc   The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     * @param dueDateStr    The due date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    public Deadline(String completion, String taskDesc, String dueDateStr) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"            if (completion.equals(\"1\")){","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"                this.taskDesc \u003d taskDesc.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"                this.dueDateStr \u003d dueDateStr.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"                this.dueDate \u003d LocalDateTime.parse(dueDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"                this.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"                this.taskDesc \u003d taskDesc.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"                this.dueDateStr \u003d dueDateStr.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"                this.dueDate \u003d LocalDateTime.parse(dueDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"Hey! There is an invalid todo task in the task list!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"            this.taskDesc \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"     * Checks if the Deadlines task is valid.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"     * @return True if the task is valid (not null); otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        return taskDesc !\u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"     * Returns a string format of the Deadlines task that can be written to the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"     * @return A string format of the Deadlines task to store it into the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"        String x;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"            x \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"            x \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"        String str1 \u003d String.format(\"%s\", x);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"        return \"D | \" + str1 + \" | \" + this.taskDesc + \" | \" + this.dueDateStr;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"     * Generates a string representation of the Deadlines task.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"     * @return A formatted string representation for displaying to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"        String x;","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"            x \u003d \"X\";","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"            x \u003d \" \";","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"        String str1 \u003d String.format(\"[%s] \", x);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"        String str2 \u003d String.format(\" (by: %s)\", this.dueDateStr);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"        return \"[D]\" + str1 + this.taskDesc + str2 ;","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"     * Compares this Deadlines task to another object for equality.","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"     * @param o The object for comparison.","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"     * @return  True if the objects are equal; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"        Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"            return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"        } else if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"        } else if (!taskDesc.equals(deadline.taskDesc)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"            return dueDateStr.equals(deadline.dueDateStr);","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"     * Match the taskDesc with keyword for query.","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"     * @param keyword The keyword for matching.","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"     * @return True if there is matching keyword; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"    public boolean isMatch(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"        String[] split \u003d taskDesc.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"        for(int i \u003d 0; i \u003c split.length; i ++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"            if (keyword.equals(split[i])) {","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"                return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":139}},{"path":"src/main/java/TaskManager/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"    private String taskDesc; //task description","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"    private String fromDateStr; //start date and time in String","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    private String toDateStr; //end date and time in String","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"    private LocalDateTime fromDate; //start date and time in LocalDateTime","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private LocalDateTime toDate; // end date and time in LocalDateTime","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     * Constructs a new Event task with the specified user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * @param fromDateStr      The starting date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * @param toDateStr        The ending date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    public Event(String taskDesc, String fromDateStr, String toDateStr) {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"        this.fromDateStr \u003d fromDateStr;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        this.toDateStr \u003d toDateStr;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        this.fromDate \u003d LocalDateTime.parse(fromDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        this.toDate \u003d LocalDateTime.parse(toDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     * Constructs a new Event task with the specified description, completion status, and date-time information.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     * @param completion The completion status (1 for done, 0 for not done).","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc   The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     * @param fromDateStr       The starting date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     * @param toDateStr         The ending date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    public Event(String completion, String taskDesc, String fromDateStr, String toDateStr) {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            if (completion.equals(\"1\")){","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"                this.taskDesc \u003d taskDesc.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"                this.fromDateStr \u003d fromDateStr.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"                this.toDateStr \u003d toDateStr.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"                this.fromDate \u003d LocalDateTime.parse(fromDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"                this.toDate \u003d LocalDateTime.parse(toDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"                this.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"                this.taskDesc \u003d taskDesc.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"                this.fromDateStr \u003d fromDateStr.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"                this.toDateStr \u003d toDateStr.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"                this.fromDate \u003d LocalDateTime.parse(fromDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"                this.toDate \u003d LocalDateTime.parse(toDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"Hey! There is an invalid todo task in the task list!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"            this.taskDesc \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"     * Checks if the Events task is valid.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"     * @return True if the task is valid (not null); otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"        return taskDesc !\u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"     * Returns a string format of the Events task that can be written to the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"     * @return A string format of the Events task to store it into the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"        String x;","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"            x \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"            x \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"        String str1 \u003d String.format(\"%s\", x);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"        return \"E | \" + str1 + \" | \" + this.taskDesc + \" | \" + this.fromDateStr + \" | \" + this.toDateStr;","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"     * Generates a string representation of the Events task.","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"     * @return A formatted string representation for displaying to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"        String x;","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"            x \u003d \"X\";","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"            x \u003d \" \";","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"        String str1 \u003d String.format(\"[%s] \", x);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"        String str2 \u003d String.format(\" (from: %s to: %s)\", this.fromDateStr, this.toDateStr);","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"        return \"[E]\" + str1 + this.taskDesc + str2;","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"     * Compares this Events task to another object for equality.","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"     * @param o The object for comparison.","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"     * @return  True if the objects are equal; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"            return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"        } else if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"        } else if (!taskDesc.equals(event.taskDesc)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"        } else if (!fromDateStr.equals(event.fromDateStr)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"        } else{","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"            return toDateStr.equals(event.toDateStr);","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"     * Match the taskDesc with keyword for query.","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"     * @param keyword The keyword for matching.","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"     * @return True if there is matching keyword; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"    public boolean isMatch(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"        String[] split \u003d taskDesc.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"        for(int i \u003d 0; i \u003c split.length; i ++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"            if (keyword.equals(split[i])) {","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"Leb14"},"content":"                return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":150}},{"path":"src/main/java/TaskManager/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":" * Abstract class for few types of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"    protected boolean isDone; //completion status of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    private static int count \u003d 0; //keep track of the number of tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"     * Returns a string format of the task that can be written to the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     * @return A string format of the task to store it into the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * Constructs a task with an initial status of not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    public Task() {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"     * Match the keyword to task description for query.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    public abstract boolean isMatch(String keyword);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":45}},{"path":"src/main/java/TaskManager/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":" * The tasks of type \"To-Do.\"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"    private String taskDesc;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"     * Constructs a new To-Do task with the specified user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc The description of the to-do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    public ToDo(String taskDesc) {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * Constructs a new To-Do task with the specified description and completion status.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc  The description of the to-do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param completion The completion status (1 for done, 0 for not done).","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    public ToDo(String taskDesc, String completion) {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"            if (completion.equals(\"1\")){","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"                this.taskDesc \u003d taskDesc.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"                this.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"                this.taskDesc \u003d taskDesc.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"Hey! There is an invalid todo task in the task list!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"            this.taskDesc \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"     * Checks if the To-Do task is valid.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"     * @return True if the task is valid (not null); otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        return taskDesc !\u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"     * Returns a string format of the To-Do task that can be written to the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"     * @return A string format of the To-Do task to store it into the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        String x;","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"            x \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"            x \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        String str1 \u003d String.format(\"%s\", x);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        return \"T | \" + str1 + \" | \" + this.taskDesc;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"     * Generates a string representation of the To-Do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"     * @return A formatted string representation for displaying to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        String x;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"            x \u003d \"X\";","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"            x \u003d \" \";","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"        String str1 \u003d String.format(\"[%s] \", x);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        return \"[T]\" + str1 + this.taskDesc;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"     * Compares this To-Do task to another object for equality.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"     * @param o The object for comparison.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"     * @return True if the objects are equal; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"        ToDo toDo \u003d (ToDo) o;","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"            return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"        } else if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"            return taskDesc.equals(toDo.taskDesc);","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"     * Match the taskDesc with keyword for query.","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"     * @param keyword The keyword for matching.","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"     * @return True if there is matching keyword; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"    public boolean isMatch(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"        String[] split \u003d taskDesc.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"        for(int i \u003d 0; i \u003c split.length; i ++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"            if (keyword.equals(split[i])) {","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"                return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":116}},{"path":"src/main/java/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import taskmanager.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import taskmanager.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import taskmanager.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import taskmanager.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":" * The Ui class handles user interaction and displays messages to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":" * It provides methods for input and output.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    private final String NAME \u003d \"Yours\"; // The name of the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    private TaskList taskList; // The list of task.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    private String word; //The singular or plural form of \"task\".","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * Constructs an Ui instance with a reference to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     * @param taskList The task list used for displaying tasks\u0027 information.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    public Ui (TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        if (taskList.size() \u003c 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"                this.word \u003d \"task\";","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"                this.word \u003d \"tasks\";","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     * Displays a welcome message.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        String logo  \u003d   \"____    ____  ________   ___    ___   __________    _____\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"                        + \"\\\\   \\\\  /   / |  ____  |  |  |   |  |  |  _____  |  / ____|\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"                        + \" \\\\   \\\\/   /  | |    | |  |  |   |  |  |  |___|  |  | (___\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"                        + \"  \\\\      /   | |    | |  |  |   |  |  |   ______|  \\\\ ___ \\\\\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"                        + \"   |    |    | |    | |  |  |   |  |  |  \\\\  \\\\           | |\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"                        + \"   |    |    | |____| |  |  |   |  |  |  | \\\\  \\\\     ____) |\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"                        + \"   |____|    |________|  \\\\_________/  |__|   \\\\__\\\\  |_____/\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        System.out.printf(\"Hello! I\u0027m %s%n\", NAME);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"     * Reads a command entered by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"     * @return The user\u0027s input command as a string.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        return command;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"     * A prompt message when a new to-do task is added to the tasklist.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"     * @param newTodo The newly added ToDos task.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"    public void addedTodo(ToDo newTodo) {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" +  NAME + \": Help you added a new to-do.\\n            \" + newTodo.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"          Now you have \" + taskList.size() + String.format(\" %s in the list.\", word));","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"     * A prompt message when a new Deadlines task is added to the tasklist.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"     * @param newDeadLine The newly added Deadlines task.","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"    public void addedDeadlines(Deadline newDeadLine) {","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Help you added a new deadline.\\n           \" + newDeadLine.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"          Now you have \" + taskList.size() + String.format(\" %s in the list.\", word));","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"     * A prompt message when a new Events task is added to the tasklist.","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"     * @param newEvent The newly added Events task.","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"    public void addedEvent(Event newEvent) {","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Help you added a new deadline.\\n           \" + newEvent.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"          Now you have \" + taskList.size() + String.format(\" %s in the list.\", word));","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"     * Display all the task in the tasklist.","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"    public void list() {","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Here are the tasks in your list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"        taskList.display();","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"     * Display all the task that match the keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"     * @param matchedList The list of task that matched the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"    public void find(TaskList matchedList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"        if (matchedList.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   \" + NAME + \": There is no task matched with the given keyword!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   \" + NAME + \": Here are the tasks that matches your keyword.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"            matchedList.display();","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"     * A prompt message when a task is deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"     * @param deleted The deleted task.","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"    public void delete(Task deleted) {","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Helped you deleted this task\\n           \" + deleted.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"          Now you have \" + taskList.size() + String.format(\" %s in the list.\", word));","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"     * A prompt message when a task is marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"Leb14"},"content":"    public void mark(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Well done! I\u0027ve marked this task as done :\");","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + taskList.get(index - 1).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"Leb14"},"content":"     * A prompt message when a task is marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"Leb14"},"content":"    public void unmark(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Alright, I\u0027ve marked this task as not done yet\");","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + taskList.get(index - 1).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"Leb14"},"content":"     * A goodbye message when the application exits.","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"Leb14"},"content":"    public void bye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"Leb14"},"content":"     * A prompt message when the user enters an empty command.","lastModifiedDate":"2023-09-02"},{"lineNumber":176,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"Leb14"},"content":"    public void empty() {","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Please enter something!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"Leb14"},"content":"     * A prompt message when the user enters invalid command.","lastModifiedDate":"2023-09-02"},{"lineNumber":185,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"Leb14"},"content":"    public void misc() {","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": I don\u0027t really understand what you mean.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":189,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   ____________________________________________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":193,"author":{"gitId":"Leb14"},"content":"     * Displays a message for handling an IndexOutOfBoundsException.","lastModifiedDate":"2023-09-02"},{"lineNumber":194,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"Leb14"},"content":"    public void ioobExceptionMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"Please enter the correct task\u0027s index number.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":198}},{"path":"src/main/java/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import taskmanager.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":" * Command to add a Deadlines task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"public class AddDeadlineCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    private String taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    private String dueDateStr;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     * Constructs an `AddDeadlineCommand` object with the specified user input and due date string.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc  The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * @param dueDateStr The due date and time in string.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    public AddDeadlineCommand(String taskDesc, String dueDateStr) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        this.dueDateStr \u003d dueDateStr;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     * Executes the command to add a Deadlines task to the task list, update the storage, and notify the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     * @param task The task list to which the Deadlines task will be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     * @param ui   The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     * @param f    The file handler for storing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    public void execute(TaskList task, Ui ui, FileHandler f) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadlines \u003d new Deadline(taskDesc, dueDateStr);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        if (newdeadlines.isValid()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"            task.add(newdeadlines);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            ui.addedDeadlines(newdeadlines);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"     * @return `false` because this command does not exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":54}},{"path":"src/main/java/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import taskmanager.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":" * Command to add an Events task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"public class AddEventCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    private String taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    private String to;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    private String from;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * Constructs an `AddEventCommand` object with the specified user input and due date string.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param from      The start date and time in string.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param to        The end date and time in string.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    public AddEventCommand(String taskDesc, String from, String to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     * Executes the command to add an Events task to the task list, update the storage, and notify the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     * @param task The task list to which the Events task will be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     * @param ui   The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     * @param f    The file handler for storing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    public void execute(TaskList task, Ui ui, FileHandler f) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        Event newEvent \u003d new Event(taskDesc, from, to);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        if (newEvent.isValid()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"            task.add(newEvent);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"            ui.addedEvent(newEvent);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"     * @return `false` because this command does not exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":63}},{"path":"src/main/java/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import taskmanager.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":" * Command to add a ToDos task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"public class AddTodoCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    private String taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     * Constructs an `AddTodoCommand` object with the specified user input and due date string.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    public AddTodoCommand(String taskDesc) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     * Executes the command to add a ToDos task to the task list, update the storage, and notify the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     * @param task The task list to which the ToDos task will be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     * @param ui   The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     * @param f    The file handler for storing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    public void execute(TaskList task, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo \u003d new ToDo(taskDesc);","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        if (newtodo.isValid()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"            task.add(newtodo);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"            f.writeTasksToFile(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"            ui.addedTodo(newtodo);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"     * @return `false` because this command does not exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":52}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * A command to exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     * Constructs a `ByeCommand` object.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    public ByeCommand(){","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * Executes the command to exit the application and displays a farewell message.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param task The task list (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param ui   The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     * @param f    The file handler for storing tasks (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    public void execute(TaskList task, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        ui.bye();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     * @return `true` because this command exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":40}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * Abstract class for few types of command that","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" * can be executed in the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     * Executes the command with the provided task list, user interface, and file handler.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler for storing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    public abstract void execute(TaskList t, Ui ui, FileHandler f);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":30}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import taskmanager.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":" * A command to delete a task from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    private int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     * Constructs a `DeleteCommand` object with the provided index.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     * Executes the command to delete a task from the task list and updates the file storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list from which the task will be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler for storing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    public void execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"            Task deleted \u003d t.get(index - 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"            t.remove(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"            ui.delete(deleted);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            ui.ioobExceptionMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"     * @return `false` because this command does not exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":54}},{"path":"src/main/java/command/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * An empty command.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class EmptyCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     * Constructs an `EmptyCommand` object.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    public EmptyCommand(){","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * Executes the empty command and displays a message to ask user for input.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    public void execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        ui.empty();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     * @return `false` because this command does not exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":40}},{"path":"src/main/java/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * An error command.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class ErrorCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     * Constructs an `ErrorCommand` object.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    public ErrorCommand(){","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * Executes the error command","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface. (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    public void execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     * @return `false` because this command does not exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":40}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * A find command to query task with a keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    String keyword;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     * Constructs an `FindCommand` object.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    public FindCommand(String keyword){","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * Executes the find command.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * @param t  The list of the task to match.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    public void execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        ui.find(t.findKeyword(keyword));","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     * @return `false` because this command does not exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Leb14":43}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * A command to list the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     * Constructs a `ListCommand` object.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    public ListCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * Executes the list command, which displays all the tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list to retrieve tasks from.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface to display the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    public void execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        ui.list();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     * @return `false` because this command does not exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":40}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * A command to mark a task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    private int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     * Constructs a `MarkCommand` object with the specified task index.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * Mark the specified task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list containing the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface to display the result.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    public void execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"            t.get(index - 1).markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"            ui.mark(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"            ui.ioobExceptionMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"     * @return `false` because this command does not exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":51}},{"path":"src/main/java/command/MiscCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * Represents a miscellaneous command.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class MiscCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     * Constructs a `MiscCommand` object.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    public MiscCommand(){","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * Executes the miscellaneous command, displaying a message to the user indicating that the command is not understood.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface to display the message.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    public void execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        ui.misc();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     * @return `false` because this command does not exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":40}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * A command to mark a task as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    private int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     * Constructs a `UnmarkCommand` object with the specified task index.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * Mark the specified task as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list containing the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface to display the result.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    public void execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"            t.get(index - 1).markNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"            ui.unmark(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"            ui.ioobExceptionMessage();","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"     * Check whether the command is an exit command.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"     * @return `false` because this command does not exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":51}},{"path":"src/test/java/storage/FileHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import parser.DateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import taskmanager.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import taskmanager.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"import taskmanager.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"import taskmanager.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"class FileHandlerTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    void testReadAndWriteTasks() throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"        // Create a temporary test file with known contents","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        Path tempFile \u003d Files.createTempFile(\"testFile\", \".txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        FileHandler fileHandler \u003d new FileHandler(tempFile.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskToWrite \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        TaskList tasks \u003d new TaskList(taskToWrite);","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        DateTime dateTime \u003d new DateTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d dateTime.formatDateTime(\"23/08/2023 1000\");","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo \u003d new ToDo(\"TestTodo\");","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline \u003d new Deadline(\"TestDeadline\", formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        Event newevent \u003d new Event(\"TestEvent\", formattedDate, formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        tasks.add(newtodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        tasks.add(newdeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"        tasks.add(newevent);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        // Write the tasks to the test file","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        fileHandler.writeTasksToFile(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        // Read tasks from the test file","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e tasksRead \u003d fileHandler.readTasksFromFile();","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        TaskList taskRead \u003d new TaskList(tasksRead);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        // Perform assertions to compare the tasksToWrite and tasksRead","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        // Since you\u0027ve added a new ToDos task to tasksToWrite, make sure it\u0027s the same as tasksRead","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        assertTrue(tasks.taskListEqual(taskRead));","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        // Delete the temporary test file","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        Files.deleteIfExists(tempFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Leb14":58}},{"path":"src/test/java/storage/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import parser.DateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import taskmanager.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import taskmanager.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import taskmanager.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import taskmanager.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    void testTaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskList1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskList2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskList3 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskList4 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskList5 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"        TaskList tasks1 \u003d new TaskList(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        TaskList tasks2 \u003d new TaskList(taskList1);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        TaskList tasks3 \u003d new TaskList(taskList2);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        TaskList tasks4 \u003d new TaskList(taskList3);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        TaskList tasks5 \u003d new TaskList(taskList4);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        TaskList tasks6 \u003d new TaskList(taskList5);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        DateTime dateTime \u003d new DateTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d dateTime.formatDateTime(\"23/08/2023 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        String formattedDate1 \u003d dateTime.formatDateTime(\"23/08/2023 1830\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        String formattedDate2 \u003d dateTime.formatDateTime(\"23/08/2024 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo \u003d new ToDo(\"TestTodo\");","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo1 \u003d new ToDo(\"TestTodo1\");","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline \u003d new Deadline(\"TestDeadline\", formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline1 \u003d new Deadline(\"TestDeadline\", formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        Event newevent \u003d new Event(\"TestEvent\", formattedDate, formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        Event newevent1 \u003d new Event(\"TestEvent\", formattedDate, formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        //add tasks to tasks1","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        tasks1.add(newtodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        tasks1.add(newdeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        tasks1.add(newevent);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        //add tasks to tasks2","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        tasks2.add(newtodo1);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"        tasks2.add(newdeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        tasks2.add(newevent);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        //add tasks to tasks3","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        tasks3.add(newtodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        tasks3.add(newdeadline1);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        tasks3.add(newevent);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        //add tasks to tasks4","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"        tasks4.add(newtodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"        tasks4.add(newdeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"        tasks4.add(newevent1);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"        //add tasks to tasks5","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"        tasks5.add(newtodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"        tasks5.add(newdeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"        tasks5.add(newevent);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        //leave tasks6 empty","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"        assertTrue(tasks1.taskListEqual(tasks1));","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"        assertFalse(tasks1.taskListEqual(tasks2));","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"        assertFalse(tasks1.taskListEqual(tasks3));","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"        assertFalse(tasks1.taskListEqual(tasks4));","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"        assertTrue(tasks1.taskListEqual(tasks5));","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        assertFalse(tasks1.taskListEqual(tasks6));","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Leb14":82}},{"path":"src/test/java/taskmanager/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import parser.DateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"class DeadlineTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"    void testEvents()  {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"        DateTime dateTime \u003d new DateTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d dateTime.formatDateTime(\"23/08/2023 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"        String formattedDate1 \u003d dateTime.formatDateTime(\"23/08/2023 1801\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"        String formattedDate2 \u003d dateTime.formatDateTime(\"23/09/2023 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline \u003d new Deadline(\"TestEvent\", formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline1 \u003d new Deadline(\"TestEvent\", formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline2 \u003d new Deadline(\"TestEvent\", formattedDate2);","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline3 \u003d new Deadline(\"TestEvent3\", formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline4 \u003d new Deadline(\"TestEvent\", formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        assertTrue(newdeadline.equals(newdeadline));","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        assertFalse(newdeadline.equals(newdeadline1));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        assertFalse(newdeadline.equals(newdeadline2));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        assertFalse(newdeadline.equals(newdeadline3));","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        assertTrue(newdeadline.equals(newdeadline4));","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Leb14":37}},{"path":"src/test/java/taskmanager/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import parser.DateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"class EventTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    void testEvents()  {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"        DateTime dateTime \u003d new DateTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d dateTime.formatDateTime(\"23/08/2023 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"        String formattedDate1 \u003d dateTime.formatDateTime(\"23/08/2023 1801\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"        String formattedDate2 \u003d dateTime.formatDateTime(\"23/09/2023 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"        Event newevent \u003d new Event(\"TestEvent\", formattedDate, formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        Event newevent1 \u003d new Event(\"TestEvent1\", formattedDate, formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        Event newevent2 \u003d new Event(\"TestEvent\", formattedDate, formattedDate2);","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"        Event newevent3 \u003d new Event(\"TestEvent\", formattedDate1, formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        Event newevent4 \u003d new Event(\"TestEvent\", formattedDate, formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"        assertTrue(newevent.equals(newevent));","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        assertFalse(newevent.equals(newevent1));","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        assertFalse(newevent.equals(newevent2));","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        assertFalse(newevent.equals(newevent3));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        assertTrue(newevent.equals(newevent4));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Leb14":33}},{"path":"src/test/java/taskmanager/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"class ToDoTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"    void testToDos() throws IllegalArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo \u003d new ToDo(\"TestTodo\");","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo1 \u003d new ToDo(\"TestTodo1\");","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo2 \u003d new ToDo(\"TestTodo2\");","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo3 \u003d new ToDo(\"TestTodo3\");","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo4 \u003d new ToDo(\"TestTodo\");","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo5 \u003d new ToDo(\"TestTodo5\");","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo6 \u003d new ToDo(\"TestTodo\");","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        assertTrue(newtodo.equals(newtodo));","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        assertFalse(newtodo.equals(newtodo1));","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        assertFalse(newtodo.equals(newtodo2));","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        assertFalse(newtodo.equals(newtodo3));","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"        assertTrue(newtodo.equals(newtodo4));","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        assertFalse(newtodo.equals(newtodo5));","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        assertTrue(newtodo.equals(newtodo6));","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Leb14":31}},{"path":"text-ui-test/data/TaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"T | 0 | add","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"blah","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"what","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"todo","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"todo borrow book","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"deadline return book","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"event","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"event project meeting","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"mark 2","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"mark 3","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"unmark 3","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"delete 2","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"bye","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":22}}]
