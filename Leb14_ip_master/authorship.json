[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Leb14":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"java {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"-":41,"Leb14":27}},{"path":"data/TaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"T | 0 | sleep","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"D | 0 | 2103 assignment | 22 Sep 2023 11:59PM","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"E | 0 | tp meeting | 23 Sep 2023 4:00PM | 23 Sep 2023 6:00PM","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"E | 0 | meeting | 23 Sep 2023 6:00PM | 23 Sep 2023 7:00PM","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"D | 0 | assignment | 23 Sep 2023 11:59PM","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"Leb14":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"# \"YOURS\" User Guide","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"Welcome to \"YOURS\"! This guide will help you get started with using our chatbot effectively for various tasks and interactions.","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"## Quick Start","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"1. Ensure you have Java 11 or above installed on your Computer.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"2. Download the latest duke.jar","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"4. Run the jar file.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"6. Refer to the Features below for details of each command.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"Notes about command format :","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"- All commands are lower-case, e.g. `todo` buy groceries, `find` gym","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"  - e.g. `deadline /by DUEDATE`, `DUEDATE` is a parameter which can be used as `deadline /by 23/08/2023 0800`.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"- The format for all Dates and Time (FROMDATE, TODATE \u0026 DUEDATE) is `DD/MM/YYYY HHmm`.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"  - e.g `23/08/2023 1800`","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"### Create a task: `todo`, `event`, `deadline`","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"The feature allows you to add new to-do tasks to your task list. YOURS supports three types of tasks todo, event, and deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"1. `todo`: Manage your everyday tasks and chores.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"   ","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"      - Format: `todo TASKDESC`","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"      - Example: `todo buy groceries`","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        ","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        ![Local Image](./assets/images/todo.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"   ","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"2. `event`: Schedule and organize upcoming events and activities.","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"   ","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"      - Format: `event TASKDESC /from FROMDATE /to TODATE`","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"      - Example: `event meeting /from 23/08/2023 1800 /to 23/08/2023 1900`","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        ","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"        ![Local Image](./assets/images/event.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"   ","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"3. `deadline`: Keep track of important deadlines.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"      - Format: `deadline TASKDESC /by DUEDATE`","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"      - Example: `deadline assignment /by 23/08/2023 2359`","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        ","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        ![Local Image](./assets/images/deadline.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        ","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"### Delete a task: `delete`","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"Removes tasks from your task list when they are no longer relevant or needed.","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"- Format: `delete INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"   - The INDEX must be a positive integer 1,2,3 ...","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"   ","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"- Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"   - `delete 1` Delete the first task of the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"     ","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"     ![Local Image](./assets/images/delete.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"### Listing all tasks - `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"Displays all the tasks in the task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"- Format: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"- Example:","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"    ![Local Image](./assets/images/list.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"- The task display in this format: `[Type][Completeness] Task description`","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"    - **Type**:","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"        - `[T]` \u003d `todo`","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"        - `[E]` \u003d `event`","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        - `[D]` \u003d `deadline`","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"    - **Completeness**:","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"         - `[X]` \u003d `done`","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"         - `[ ]` \u003d `not done`","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"### Edit a task: `edit`","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"Edits a task field to a new input","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"- Format: `edit INDEX FIELD NEWINPUT`","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"   - The INDEX must be a positive integer 1,2,3 ...","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"   - FIELD must be provided in lowercase.","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"   - Here are the respective FIELDs for each type of task:","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"        - `todo`: `taskdesc`","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"        - `event`: `taskdesc`, `fromdate`, `todate`","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"        - `deadline`: `taskdesc`, `duedate`","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"   - The provided NEWINPUT must match the format for the provided FIELD.","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"     e.g If FIELD \u003d `fromdate`, then NEWINPUT \u003d `23/08/2023 1800`","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"     ","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"- Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"  - `edit 1 taskdesc laundries` Edits the task description of the first task to `sleep`.","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"  - `edit 2 fromdate 23/08/2023 1900` Edits the from date for the second task (an Events) to 23/08/2023 1900","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":" ","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"    ![Local Image](./assets/images/edit.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":":bulb: **Tip:** Use the list command to check the list for the task\u0027s index and its type to ease your edit process.","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"### Mark done - `mark`","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"Marks a task as completed.","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"- Format: `mark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"  - The INDEX must be a positive integer 1,2,3 ...","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"   ","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"- Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"   - `mark 1`, Mark the first task of the list as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":" ","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"  ![Local Image](./assets/images/mark.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"### Mark not done -`unmark`","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"Marks a task as not complete.","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"- Format: `unmark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"   - The INDEX must be a positive integer 1,2,3 ...","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"     ","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"- Example:","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"   - `unmark 1` Mark the first task of the list as not done.","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":" ","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"  ![Local Image](./assets/images/unmark.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"### Find a task - `find`","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"Finds tasks that match the given keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"- Format: `find KEYWORD`","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"   ","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"- Example: `find fetch` Find tasks with a description contained fetch.","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"  ![Local Image](./assets/images/find.png)","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"Leb14"},"content":"  ","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"Leb14"},"content":"### Exiting the program - `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"Leb14"},"content":"Exits the program.","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":150,"author":{"gitId":"Leb14"},"content":"- Format: `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":153,"author":{"gitId":"Leb14"},"content":"### Saving the data","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"Leb14"},"content":"All data will be saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":157,"author":{"gitId":"Leb14"},"content":"### Editing the data","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":159,"author":{"gitId":"Leb14"},"content":"All data will be saved on the hard disk automatically as text file `[JAR file location]/data/TaskList.txt`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"Leb14"},"content":"## Command Summary","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"Leb14"},"content":"| Command | Format |  Example |","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"Leb14"},"content":"|----------|----------|----------|","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"Leb14"},"content":"| todo | `todo TASKDESC` | `todo buy groceries` |","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"Leb14"},"content":"| event | `event TASKDESC /from FROMDATE /to TODATE` | `event meeting /from 23/08/2023 1800 /to 23/08/2023 1900` |","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"Leb14"},"content":"| deadline | `deadline TASKDESC /by DUEDATE` | `deadline assignment /by 23/08/2023 2359` |","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"Leb14"},"content":"| delete | `delete INDEX` | `delete 1` |","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"Leb14"},"content":"| edit | `edit INDEX FIELD NEWINPUT` | `edit 1 taskdesc fetch John` \u003cbr\u003e `edit 2 fromdate 23/08/2023 1900`|","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"Leb14"},"content":"| list | `list` | `list` |","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"Leb14"},"content":"| mark| `mark INDEX` | `mark 1` |","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"Leb14"},"content":"| unmark | `unmark INDEX` | `unmark 1` |","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"Leb14"},"content":"| find | `find KEYWORD`| `find fetch` |","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"Leb14"},"content":"| bye | `bye`| `bye` |","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Leb14":163,"-":14}},{"path":"src/main/java/Parser/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" * The `DateTime` class provides methods for parsing and formatting date and time strings.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"public class DateTime {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"    private DateTimeFormatter inputFormatter; //The input format of the date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private DateTimeFormatter outputFormatter; //The output format of the date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     * Constructs a `DateTime` object with a date and time formatters.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    public DateTime() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        this.inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        this.outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * Formats a date and time string from the input format to the output format.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * @param dateTimeStr The date and time string to be formatted.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * @return The formatted date and time string in the output format or \"Invalid format\" if parsing fails.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    public String formatDateTime(String dateTimeStr) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeStr, inputFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"            return dateTime.format(outputFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"            return \"Invalid format\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     * Checks if a date and time string is in the past.","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"     * @param dateTimeStr The date and time string to be checked.","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"     * @return true if the date and time are in the past, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    public boolean isDateInPast(String dateTimeStr) {","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeStr, inputFormatter);","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"            LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"            return dateTime.isBefore(currentDateTime);","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":53}},{"path":"src/main/java/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import command.AddDeadlineCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import command.AddEventCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import command.AddTodoCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import command.ByeCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import command.EditCommand;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import command.EmptyCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import command.ErrorCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"import command.FindCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"import command.ListCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"import command.MiscCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":" * The `Parser` class is responsible for parsing user input commands into executable commands.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * Parses the user input string and returns the corresponding command object.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * @param str The user input string to be parsed.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     * @return A command object representing the parsed command.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    public static Command parse(String str) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        if (str.isEmpty()) {","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"            return new EmptyCommand();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"            return parseTodoCommand(str);","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"            return parseDeadlineCommand(str);","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"event\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"            return parseEventCommand(str);","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"list\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"            return parseDeleteCommand(str);","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"            return parseMarkCommand(str);","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"            return parseUnmarkCommand(str);","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"bye\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"find\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"            return parseFindCommand(str);","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        } else if (str.startsWith(\"edit\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"            return parseEditCommand(str);","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"            return new MiscCommand();","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"     * Parses a user input string as a ToDo command.","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"     * @param str The user input string to be parsed.","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"     * @return A command object representing the parsed ToDo command.","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"    private static Command parseTodoCommand(String str) {","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"            String[] split \u003d str.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"            if (split.length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"                throw new IllegalArgumentException(\"Hey! I think you forget to enter the todo description!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"                return new AddTodoCommand(str.substring(split[0].length()).trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"            return new ErrorCommand(e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"     * Parses a user input string as a Deadline command.","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"     * @param str The user input string to be parsed.","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"     * @return A command object representing the parsed Deadline command.","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"    private static Command parseDeadlineCommand(String str) {","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"            String[] split \u003d str.split(\"/by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"            if (str.equals(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"                throw new IllegalArgumentException(","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"                        \"Hey! Please enter the task description or leave a space after the command!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"            if (split.length \u003c 2) {","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"                throw new IllegalArgumentException(","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"                        \"Hey! Please provide a deadline for your task in this format dd/MM/yyyy HHmm!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"            String formattedDate \u003d parseAndFormatDateTime(split[1].trim());","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"            String taskDesc \u003d split[0].trim().substring(8).trim();","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"            return new AddDeadlineCommand(taskDesc, formattedDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"            return new ErrorCommand(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"     * Parses a user input string as an Event command.","lastModifiedDate":"2023-09-14"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"     * @param str The user input string to be parsed.","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"     * @return A command object representing the parsed Event command.","lastModifiedDate":"2023-09-14"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"    private static Command parseEventCommand(String str) {","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"            if (str.equals(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"                throw new IllegalArgumentException(","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"                        \"Hey! Please enter the event description or leave a space after the command!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"            String[] split1 \u003d str.split(\"/from\");","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"            if (split1.length \u003c 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"                throw new IllegalArgumentException(","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"                        \"Hey! Please provide a time range for your event \"","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"                                + \"in this format /from dd/MM/yyyy HHmm /to HHmm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"            String[] split2 \u003d split1[1].split(\"/to\");","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"            if (split2.length \u003c 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"                throw new IllegalArgumentException(\"Hey! Please provide an end time for your event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"            String formattedStartTime \u003d parseAndFormatDateTime(split2[0].trim());","lastModifiedDate":"2023-09-14"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"            String formattedEndTime \u003d parseAndFormatDateTime(split2[1].trim());","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"            String taskDesc \u003d split1[0].trim().substring(5).trim();","lastModifiedDate":"2023-09-14"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"            return new AddEventCommand(taskDesc, formattedStartTime, formattedEndTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"            return new ErrorCommand(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"Leb14"},"content":"     * Parses a user input string as a Delete command.","lastModifiedDate":"2023-09-14"},{"lineNumber":145,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"Leb14"},"content":"     * @param str The user input string to be parsed.","lastModifiedDate":"2023-09-14"},{"lineNumber":147,"author":{"gitId":"Leb14"},"content":"     * @return A command object representing the parsed Delete command.","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"Leb14"},"content":"    private static Command parseDeleteCommand(String str) {","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"Leb14"},"content":"        String[] split \u003d str.split(\" \");","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"Leb14"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"Leb14"},"content":"            return new ErrorCommand(\"Hey darling! Please provide an index number after a space!\");","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"Leb14"},"content":"        int index \u003d Integer.parseInt(split [1]);","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"Leb14"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":158,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":159,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":160,"author":{"gitId":"Leb14"},"content":"     * Parses a user input string as a Mark command.","lastModifiedDate":"2023-09-14"},{"lineNumber":161,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":162,"author":{"gitId":"Leb14"},"content":"     * @param str The user input string to be parsed.","lastModifiedDate":"2023-09-14"},{"lineNumber":163,"author":{"gitId":"Leb14"},"content":"     * @return A command object representing the parsed Mark command.","lastModifiedDate":"2023-09-14"},{"lineNumber":164,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":165,"author":{"gitId":"Leb14"},"content":"    private static Command parseMarkCommand(String str) {","lastModifiedDate":"2023-09-14"},{"lineNumber":166,"author":{"gitId":"Leb14"},"content":"        String[] split \u003d str.split(\" \");","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"Leb14"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"Leb14"},"content":"            return new ErrorCommand(\"Hey darling! Please provide an index number after a space!\");","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"Leb14"},"content":"        int index \u003d Integer.parseInt(split [1]);","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"Leb14"},"content":"        return new MarkCommand(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":173,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":174,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":175,"author":{"gitId":"Leb14"},"content":"     * Parses a user input string as an Unmark command.","lastModifiedDate":"2023-09-14"},{"lineNumber":176,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":177,"author":{"gitId":"Leb14"},"content":"     * @param str The user input string to be parsed.","lastModifiedDate":"2023-09-14"},{"lineNumber":178,"author":{"gitId":"Leb14"},"content":"     * @return A command object representing the parsed Unmark command.","lastModifiedDate":"2023-09-14"},{"lineNumber":179,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":180,"author":{"gitId":"Leb14"},"content":"    private static Command parseUnmarkCommand(String str) {","lastModifiedDate":"2023-09-14"},{"lineNumber":181,"author":{"gitId":"Leb14"},"content":"        String[] split \u003d str.split(\" \");","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"Leb14"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"Leb14"},"content":"            return new ErrorCommand(\"Hey darling! Please provide an index number after a space!\");","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"Leb14"},"content":"        int index \u003d Integer.parseInt(split [1]);","lastModifiedDate":"2023-09-21"},{"lineNumber":186,"author":{"gitId":"Leb14"},"content":"        return new UnmarkCommand(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":187,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":188,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":189,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":190,"author":{"gitId":"Leb14"},"content":"     * Parses a user input string as a Find command.","lastModifiedDate":"2023-09-14"},{"lineNumber":191,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":192,"author":{"gitId":"Leb14"},"content":"     * @param str The user input string to be parsed.","lastModifiedDate":"2023-09-14"},{"lineNumber":193,"author":{"gitId":"Leb14"},"content":"     * @return A command object representing the parsed Find command.","lastModifiedDate":"2023-09-14"},{"lineNumber":194,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":195,"author":{"gitId":"Leb14"},"content":"    private static Command parseFindCommand(String str) {","lastModifiedDate":"2023-09-14"},{"lineNumber":196,"author":{"gitId":"Leb14"},"content":"        String[] split \u003d str.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"Leb14"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"Leb14"},"content":"            return new ErrorCommand(\"Hey! Please provide a keyword\");","lastModifiedDate":"2023-09-08"},{"lineNumber":199,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"Leb14"},"content":"        return new FindCommand(split[1].trim());","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":203,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":204,"author":{"gitId":"Leb14"},"content":"     * Parses a user input string as a Edit command.","lastModifiedDate":"2023-09-18"},{"lineNumber":205,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":206,"author":{"gitId":"Leb14"},"content":"     * @param str The user input string to be parsed.","lastModifiedDate":"2023-09-18"},{"lineNumber":207,"author":{"gitId":"Leb14"},"content":"     * @return A command object representing the parsed edit command.","lastModifiedDate":"2023-09-18"},{"lineNumber":208,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":209,"author":{"gitId":"Leb14"},"content":"    private static Command parseEditCommand(String str) {","lastModifiedDate":"2023-09-18"},{"lineNumber":210,"author":{"gitId":"Leb14"},"content":"        String[] split \u003d str.split(\" \");","lastModifiedDate":"2023-09-18"},{"lineNumber":211,"author":{"gitId":"Leb14"},"content":"        if (split.length \u003c 4) {","lastModifiedDate":"2023-09-18"},{"lineNumber":212,"author":{"gitId":"Leb14"},"content":"            return new ErrorCommand(\"Hey! Please enter a valid edit command!\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":213,"author":{"gitId":"Leb14"},"content":"                    + \"eg. edit 1 taskdesc sleep\");","lastModifiedDate":"2023-09-18"},{"lineNumber":214,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":215,"author":{"gitId":"Leb14"},"content":"        int index \u003d Integer.parseInt(split [1]);","lastModifiedDate":"2023-09-18"},{"lineNumber":216,"author":{"gitId":"Leb14"},"content":"        String itemType \u003d split[2].trim();","lastModifiedDate":"2023-09-18"},{"lineNumber":217,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":218,"author":{"gitId":"Leb14"},"content":"        if (itemType.equals(\"duedate\") || itemType.equals(\"fromdate\") || itemType.equals(\"todate\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":219,"author":{"gitId":"Leb14"},"content":"            String[] newItemArray \u003d Arrays.copyOfRange(split, 3, split.length);","lastModifiedDate":"2023-09-18"},{"lineNumber":220,"author":{"gitId":"Leb14"},"content":"            String newItem \u003d String.join(\" \", newItemArray);","lastModifiedDate":"2023-09-18"},{"lineNumber":221,"author":{"gitId":"Leb14"},"content":"            String formattedDate \u003d parseAndFormatDateTime(newItem.trim());","lastModifiedDate":"2023-09-18"},{"lineNumber":222,"author":{"gitId":"Leb14"},"content":"            return new EditCommand(index, itemType, formattedDate);","lastModifiedDate":"2023-09-18"},{"lineNumber":223,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":224,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":225,"author":{"gitId":"Leb14"},"content":"        String[] newItemArray \u003d Arrays.copyOfRange(split, 3, split.length);","lastModifiedDate":"2023-09-18"},{"lineNumber":226,"author":{"gitId":"Leb14"},"content":"        String newItem \u003d String.join(\" \", newItemArray);","lastModifiedDate":"2023-09-18"},{"lineNumber":227,"author":{"gitId":"Leb14"},"content":"        return new EditCommand(index, itemType, newItem);","lastModifiedDate":"2023-09-18"},{"lineNumber":228,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":229,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":230,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":231,"author":{"gitId":"Leb14"},"content":"     * Parses and formats a date and time string into a specific format.","lastModifiedDate":"2023-09-14"},{"lineNumber":232,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":233,"author":{"gitId":"Leb14"},"content":"     * @param inputDateTime The date and time string to be parsed and formatted.","lastModifiedDate":"2023-09-14"},{"lineNumber":234,"author":{"gitId":"Leb14"},"content":"     * @return A formatted date and time string.","lastModifiedDate":"2023-09-14"},{"lineNumber":235,"author":{"gitId":"Leb14"},"content":"     * @throws IllegalArgumentException If the input date and time string has an invalid format","lastModifiedDate":"2023-09-21"},{"lineNumber":236,"author":{"gitId":"Leb14"},"content":"     *                                  or if the date is in the past.","lastModifiedDate":"2023-09-21"},{"lineNumber":237,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":238,"author":{"gitId":"Leb14"},"content":"    private static String parseAndFormatDateTime(String inputDateTime) {","lastModifiedDate":"2023-09-14"},{"lineNumber":239,"author":{"gitId":"Leb14"},"content":"        DateTime dateTime \u003d new DateTime();","lastModifiedDate":"2023-09-14"},{"lineNumber":240,"author":{"gitId":"Leb14"},"content":"        String formattedDateTime \u003d dateTime.formatDateTime(inputDateTime);","lastModifiedDate":"2023-09-14"},{"lineNumber":241,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":242,"author":{"gitId":"Leb14"},"content":"        if (formattedDateTime.equals(\"Invalid format\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":243,"author":{"gitId":"Leb14"},"content":"            throw new IllegalArgumentException(\"Invalid date/time format\");","lastModifiedDate":"2023-09-14"},{"lineNumber":244,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":245,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":246,"author":{"gitId":"Leb14"},"content":"        if (dateTime.isDateInPast(inputDateTime)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":247,"author":{"gitId":"Leb14"},"content":"            throw new IllegalArgumentException(\"Date cannot be set to a past date\");","lastModifiedDate":"2023-09-21"},{"lineNumber":248,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":249,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":250,"author":{"gitId":"Leb14"},"content":"        return formattedDateTime;","lastModifiedDate":"2023-09-14"},{"lineNumber":251,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":252,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":252}},{"path":"src/main/java/Storage/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import taskmanager.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import taskmanager.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"import taskmanager.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"import taskmanager.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":" * The `FileHandler` class handles reading tasks from and writing tasks to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"public class FileHandler {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    private static String filePath; // The file path to the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    private static final String FOLDER_PATH \u003d \"data\";","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * Constructs a `FileHandler` with the specified file path.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * @param filePath The path to the .txt file where tasks will be stored.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    public FileHandler(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     * Reads tasks from the .txt file and returns them as a list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     * @return An ArrayList containing the tasks read from the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    public static ArrayList\u003cTask\u003e readTasksFromFile() {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e task \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        createDataDirectoryIfNotExists();","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        createFileIfNotExists(filePath);","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"            FileReader reader \u003d new FileReader(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"            Scanner scanner \u003d new Scanner(reader);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"                    if (line.startsWith(\"T\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"                        parseToDoTask(line, task);","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"                    } else if (line.startsWith(\"D\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"                        parseDeadlineTask(line, task);","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"                    } else if (line.startsWith(\"E\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"                        parseEventTask(line, task);","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"                }","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"                reader.close();","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"        return task;","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"     * Writes tasks to the specified file.","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"     * @param tasks The TaskList containing the tasks to be written.","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"    public static void writeTasksToFile(TaskList tasks) {","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"            for (Task t : tasks.getAllTasks()) {","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"                writer.write(t.toFileString() + \"\\n\");","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"            writer.close();","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"File don\u0027t exist!!!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"    private static void parseToDoTask(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-14"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"            String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"            if (split.length !\u003d 3) {","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"                throw new IndexOutOfBoundsException(\"Invalid Todo task format in the file!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"            ToDo newTodo \u003d new ToDo(split[2], split[1]);","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"            tasks.add(newTodo);","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"    private static void parseDeadlineTask(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"            String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"            if (split.length \u003e 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"                throw new IndexOutOfBoundsException(","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"                        \"There is an error in your Deadlines content format!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"            if (split.length \u003c 4) {","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"                throw new IndexOutOfBoundsException(","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"                        \"There is missing info for your Deadlines content in the file!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"            Deadline newdeadline \u003d new Deadline(split[1], split[2], split[3]);","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"            tasks.add(newdeadline);","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"    private static void parseEventTask(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-14"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"            String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"            if (split.length \u003e 5) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"                throw new IndexOutOfBoundsException(","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"                        \"There is an error in your Events content format!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"            if (split.length \u003c 5) {","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"                throw new IndexOutOfBoundsException(","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"                        \"There is missing info for your Events content in the file!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"            Event newevent \u003d new Event(split[1], split[2], split[3], split[4]);","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"            tasks.add(newevent);","lastModifiedDate":"2023-09-14"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"    private static void createDataDirectoryIfNotExists() {","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-09-14"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"            Files.createDirectories(Paths.get(FOLDER_PATH));","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"            throw new RuntimeException(\"Failed to create data directory: \" + e.getMessage(), e);","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":145,"author":{"gitId":"Leb14"},"content":"    private static void createFileIfNotExists(String filePath) {","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"Leb14"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-09-14"},{"lineNumber":147,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"Leb14"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"Leb14"},"content":"            try {","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"Leb14"},"content":"                Files.createFile(path);","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"Leb14"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-14"},{"lineNumber":152,"author":{"gitId":"Leb14"},"content":"                System.out.println(\"Failed to create the file: \" + e.getMessage());","lastModifiedDate":"2023-09-14"},{"lineNumber":153,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":154,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":155,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":156,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"Leb14":157}},{"path":"src/main/java/Storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import taskmanager.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" * The `TaskList` class behave like an ArrayList","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * to store a list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private ArrayList\u003cTask\u003e task; //The array list to store all the tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     * Constructs a `TaskList` with the specified list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     * @param task The ArrayList containing tasks to initialize the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    public TaskList(ArrayList\u003cTask\u003e task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        this.task \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * Adds task to task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     * @param t The task to be added to the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        task.add(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    public int size() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        return this.task.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"     * @return True if the task list is empty; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        return this.task.isEmpty();","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"     * Removes a task at the specified index from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"     * @param i The index of the task to be removed.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        this.task.remove(i);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"     * Returns the ArrayList of tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"     * @return The ArrayList of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"        return this.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"     * @return The task at the index.","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        return this.task.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"     * Compares this `TaskList` to another `TaskList` for equality.","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"     * @param other The `TaskList` to compare to this one.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"     * @return True if the `TaskList` objects are equal; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"    public boolean taskListEqual(TaskList other) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"        if (task.size() !\u003d other.task.size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"        for (int i \u003d 0; i \u003c task.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"            if (task.get(i).equals(other.task.get(i))) {","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"                continue;","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"     * Displays all the tasks in the list","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"    public void display() {","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"        for (int i \u003d 0; i \u003c task.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"     \" + j + \". \" + task.get(i).toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"     * Displays all the tasks in the list","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"    public String toTaskStr() {","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"            return \"No tasks available!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-08"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"        for (int i \u003d 0; i \u003c task.size(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"            sb.append(i + 1).append(\". \").append(task.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"     * Matches the taskDesc with keyword for query.","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"     * @param str The keyword for matching.","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"     * @return A tasklist containing all the task that passed the matching.","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"    public TaskList findKeyword(String str) {","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"        TaskList matchedList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"        for (int i \u003d 0; i \u003c task.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"            if (this.task.get(i).isMatch(str)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"                matchedList.add(this.task.get(i));","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"Leb14"},"content":"        return matchedList;","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":148}},{"path":"src/main/java/TaskManager/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import taskutility.TaskMatcher;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * A Deadline task type","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    private String taskDesc; //task description","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    private String dueDateStr; // due date in String","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    private LocalDateTime dueDate; // due date in LocalDateTime","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * Constructs a new Event task with the specified description, completion status, and date-time information.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc  The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param dueDateStr The due date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    public Deadline(String taskDesc, String dueDateStr) {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        assert taskDesc !\u003d null : \"taskDesc must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        assert dueDateStr !\u003d null : \"dueDateStr must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        this.dueDateStr \u003d dueDateStr;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        this.dueDate \u003d LocalDateTime.parse(dueDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     * Constructs a new Event task with the specified description, completion status, and date-time information.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     * @param completion The completion status (1 for done, 0 for not done).","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc   The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"     * @param dueDateStr    The due date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    public Deadline(String completion, String taskDesc, String dueDateStr) {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        assert completion !\u003d null : \"completion must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        assert taskDesc !\u003d null : \"taskDesc must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        assert dueDateStr !\u003d null : \"dueDateStr must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"            if (completion.equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"                this.taskDesc \u003d taskDesc.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"                this.dueDateStr \u003d dueDateStr.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"                this.dueDate \u003d LocalDateTime.parse(dueDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"                this.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"                this.taskDesc \u003d taskDesc.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"                this.dueDateStr \u003d dueDateStr.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"                this.dueDate \u003d LocalDateTime.parse(dueDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"Hey! There is an invalid deadline task in the task list!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"            this.taskDesc \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"     * Checks if the Deadlines task is valid.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"     * @return True if the task is valid (not null); otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"        return taskDesc !\u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"     * Returns a string format of the Deadlines task that can be written to the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"     * @return A string format of the Deadlines task to store it into the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        String x;","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"            x \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"            x \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"        String str1 \u003d String.format(\"%s\", x);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"        return \"D | \" + str1 + \" | \" + this.taskDesc + \" | \" + this.dueDateStr;","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"     * Generates a string representation of the Deadlines task.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"     * @return A formatted string representation for displaying to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"        String x;","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"            x \u003d \"X\";","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"            x \u003d \" \";","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"        String str1 \u003d String.format(\"[%s] \", x);","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"        String str2 \u003d String.format(\" (by: %s)\", this.dueDateStr);","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"        return \"[D]\" + str1 + this.taskDesc + str2;","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"     * Compares this Deadlines task to another object for equality.","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"     * @param o The object for comparison.","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"     * @return  True if the objects are equal; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"        Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"            return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"        } else if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"        } else if (!taskDesc.equals(deadline.taskDesc)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"            return dueDateStr.equals(deadline.dueDateStr);","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"     * Matches the taskDesc with keyword for query.","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"     * @param keyword The keyword for matching.","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"     * @return True if there is matching keyword; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"    public boolean isMatch(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"        return TaskMatcher.isMatch(keyword, taskDesc);","lastModifiedDate":"2023-09-14"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"Leb14"},"content":"     * Update the taskDesc","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"Leb14"},"content":"     * @param newTaskDesc The new taskDesc.","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"Leb14"},"content":"    public void editTaskDesc(String newTaskDesc) {","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d newTaskDesc;","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"Leb14"},"content":"     * Update the dueDateStr.","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"Leb14"},"content":"     * @param newDueDateStr The new dueDateStr.","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"Leb14"},"content":"    public void editDueDate(String newDueDateStr) {","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"Leb14"},"content":"        this.dueDateStr \u003d newDueDateStr;","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"Leb14"},"content":"        this.dueDate \u003d LocalDateTime.parse(dueDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":163}},{"path":"src/main/java/TaskManager/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import taskutility.TaskMatcher;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * An Event task type","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    private String taskDesc; //task description","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    private String fromDateStr; //start date and time in String","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    private String toDateStr; //end date and time in String","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    private LocalDateTime fromDate; //start date and time in LocalDateTime","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    private LocalDateTime toDate; // end date and time in LocalDateTime","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * Constructs a new Event task with the specified user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * @param fromDateStr      The starting date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * @param toDateStr        The ending date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    public Event(String taskDesc, String fromDateStr, String toDateStr) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        assert taskDesc !\u003d null : \"taskDesc must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        assert fromDateStr !\u003d null : \"fromDateStr must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        assert toDateStr !\u003d null : \"toDateStr must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        this.fromDateStr \u003d fromDateStr;","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        this.toDateStr \u003d toDateStr;","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        this.fromDate \u003d LocalDateTime.parse(fromDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        this.toDate \u003d LocalDateTime.parse(toDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"     * Constructs a new Event task with the specified description, completion status, and date-time information.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"     * @param completion The completion status (1 for done, 0 for not done).","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc   The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"     * @param fromDateStr       The starting date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"     * @param toDateStr         The ending date and time of the event.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    public Event(String completion, String taskDesc, String fromDateStr, String toDateStr) {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        assert taskDesc !\u003d null : \"taskDesc must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        assert fromDateStr !\u003d null : \"fromDateStr must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        assert toDateStr !\u003d null : \"toDateStr must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"            if (completion.equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"                this.taskDesc \u003d taskDesc.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"                this.fromDateStr \u003d fromDateStr.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"                this.toDateStr \u003d toDateStr.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"                this.fromDate \u003d LocalDateTime.parse(fromDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"                this.toDate \u003d LocalDateTime.parse(toDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"                this.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"                this.taskDesc \u003d taskDesc.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"                this.fromDateStr \u003d fromDateStr.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"                this.toDateStr \u003d toDateStr.trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"                this.fromDate \u003d LocalDateTime.parse(fromDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"                this.toDate \u003d LocalDateTime.parse(toDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"Hey! There is an invalid event task in the task list!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"            this.taskDesc \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"     * Checks if the Events task is valid.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"     * @return True if the task is valid (not null); otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"        return taskDesc !\u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"     * Returns a string format of the Events task that can be written to the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"     * @return A string format of the Events task to store it into the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"        String x;","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"            x \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"            x \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"        String str1 \u003d String.format(\"%s\", x);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"        return \"E | \" + str1 + \" | \" + this.taskDesc + \" | \" + this.fromDateStr + \" | \" + this.toDateStr;","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"     * Generates a string representation of the Events task.","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"     * @return A formatted string representation for displaying to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"        String x;","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"            x \u003d \"X\";","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"            x \u003d \" \";","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"        String str1 \u003d String.format(\"[%s] \", x);","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"        String str2 \u003d String.format(\" (from: %s to: %s)\", this.fromDateStr, this.toDateStr);","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"        return \"[E]\" + str1 + this.taskDesc + str2;","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"     * Compares this Events task to another object for equality.","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"     * @param o The object for comparison.","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"     * @return  True if the objects are equal; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"            return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"        } else if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"        } else if (!taskDesc.equals(event.taskDesc)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"        } else if (!fromDateStr.equals(event.fromDateStr)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"            return toDateStr.equals(event.toDateStr);","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"Leb14"},"content":"     * Matches the taskDesc with keyword for query.","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"Leb14"},"content":"     * @param keyword The keyword for matching.","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"Leb14"},"content":"     * @return True if there is matching keyword; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"Leb14"},"content":"    public boolean isMatch(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"Leb14"},"content":"        return TaskMatcher.isMatch(keyword, taskDesc);","lastModifiedDate":"2023-09-14"},{"lineNumber":155,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"Leb14"},"content":"     * Update the taskDesc","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"Leb14"},"content":"     * @param newTaskDesc The new taskDesc.","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"Leb14"},"content":"    public void editTaskDesc(String newTaskDesc) {","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d newTaskDesc;","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"Leb14"},"content":"     * Update the new fromDateStr","lastModifiedDate":"2023-09-18"},{"lineNumber":168,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"Leb14"},"content":"     * @param newFromDateStr The new fromDateStr.","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"Leb14"},"content":"    public void editFromDate(String newFromDateStr) {","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"Leb14"},"content":"        this.fromDateStr \u003d newFromDateStr;","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"Leb14"},"content":"        this.fromDate \u003d LocalDateTime.parse(fromDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":176,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":177,"author":{"gitId":"Leb14"},"content":"     * Update the new toDateStr","lastModifiedDate":"2023-09-18"},{"lineNumber":178,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":179,"author":{"gitId":"Leb14"},"content":"     * @param newToDateStr The new toDateStr.","lastModifiedDate":"2023-09-18"},{"lineNumber":180,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":181,"author":{"gitId":"Leb14"},"content":"    public void editToDate(String newToDateStr) {","lastModifiedDate":"2023-09-18"},{"lineNumber":182,"author":{"gitId":"Leb14"},"content":"        this.toDateStr \u003d newToDateStr;","lastModifiedDate":"2023-09-18"},{"lineNumber":183,"author":{"gitId":"Leb14"},"content":"        this.toDate \u003d LocalDateTime.parse(toDateStr, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-09-18"},{"lineNumber":184,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":185,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":185}},{"path":"src/main/java/TaskManager/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":" * Abstract class for few types of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"    private static int count \u003d 0; //keep track of the number of tasks","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"    protected boolean isDone; //completion status of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"     * Constructs a task with an initial status of not done.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    public Task() {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * Returns a string format of the task that can be written to the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * @return A string format of the task to store it into the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    public void markNotDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"     * @return the completion status of the task","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"     * Matches the keyword to task description for query.","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"    public abstract boolean isMatch(String keyword);","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":53}},{"path":"src/main/java/TaskManager/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import taskutility.TaskMatcher;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":" * The tasks of type \"To-Do.\"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    private String taskDesc;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"     * Constructs a new To-Do task with the specified user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc The description of the to-do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    public ToDo(String taskDesc) {","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        assert taskDesc !\u003d null : \"taskDesc must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * Constructs a new To-Do task with the specified description and completion status.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc  The description of the to-do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * @param completion The completion status (1 for done, 0 for not done).","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    public ToDo(String taskDesc, String completion) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        assert taskDesc !\u003d null : \"taskDesc must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        assert completion !\u003d null : \"completion must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"            if (completion.equals(\"1\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"                this.taskDesc \u003d taskDesc.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"                this.markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"                this.taskDesc \u003d taskDesc.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"Hey! There is an invalid todo task in the task list!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            this.taskDesc \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"     * Checks if the To-Do task is valid.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"     * @return True if the task is valid (not null); otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        return taskDesc !\u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"     * Returns a string format of the To-Do task that can be written to the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"     * @return A string format of the To-Do task to store it into the .txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        String x;","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"            x \u003d \"1\";","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"            x \u003d \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"        String str1 \u003d String.format(\"%s\", x);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"        return \"T | \" + str1 + \" | \" + this.taskDesc;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"     * Generates a string representation of the To-Do task.","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"     * @return A formatted string representation for displaying to the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"        String x;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"            x \u003d \"X\";","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"            x \u003d \"  \";","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"        String str1 \u003d String.format(\"[%s] \", x);","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"        return \"[T]\" + str1 + this.taskDesc;","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"     * Compares this To-Do task to another object for equality.","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"     * @param o The object for comparison.","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"     * @return True if the objects are equal; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"        ToDo toDo \u003d (ToDo) o;","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"            return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"        } else if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"            return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"            return taskDesc.equals(toDo.taskDesc);","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"     * Matches the taskDesc with keyword for query.","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"     * @param keyword The keyword for matching.","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"     * @return True if there is matching keyword; otherwise, false.","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"    public boolean isMatch(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"        return TaskMatcher.isMatch(keyword, taskDesc);","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"     * Update the taskDesc","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"     * @param newTaskDesc The new taskDesc.","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"    public void editTaskDesc(String newTaskDesc) {","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d newTaskDesc;","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":124}},{"path":"src/main/java/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import taskmanager.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * Command to add a Deadlines task.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private String taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    private String dueDateStr;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     * Constructs an `AddDeadlineCommand` object with the specified user input and due date string.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc  The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * @param dueDateStr The due date and time in string.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * @throws IllegalArgumentException If either the keyword or task description is null.","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    public AddDeadlineCommand(String taskDesc, String dueDateStr) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        assert taskDesc !\u003d null : \"taskDesc must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        assert dueDateStr !\u003d null : \"dueDateStr must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        this.dueDateStr \u003d dueDateStr;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     * Executes the command to add a Deadlines task to the task list, update the storage, and notify the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     * @param task The task list to which the Deadlines task will be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     * @param ui   The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     * @param f    The file handler for storing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     * @return     The string representation of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     * */","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList task, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"        Deadline newDeadline \u003d new Deadline(taskDesc, dueDateStr);","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        task.add(newDeadline);","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"        FileHandler.writeTasksToFile(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        return \"Help you added a new deadline.\\n     \" + newDeadline.toString()","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"                + \"\\nNow you have \" + task.size() + String.format(\" task(s) in the list.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":47}},{"path":"src/main/java/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import taskmanager.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" * Command to add an Events task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    private String taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    private String to;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    private String from;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     * Constructs an `AddEventCommand` object with the specified user input and due date string.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * @param from      The start date and time in string.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param to        The end date and time in string.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @throws IllegalArgumentException If either the task description, from date and to date is null.","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    public AddEventCommand(String taskDesc, String from, String to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        assert taskDesc !\u003d null : \"taskDesc must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        assert from !\u003d null : \"from must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        assert to !\u003d null : \"to must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     * Executes the command to add an Events task to the task list, update the storage, and notify the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     * @param task The task list to which the Events task will be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"     * @param ui   The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"     * @param f    The file handler for storing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"     * @return     The string representation of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList task, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        Event newEvent \u003d new Event(taskDesc, from, to);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        task.add(newEvent);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        FileHandler.writeTasksToFile(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        return \"Help you added a new event.\\n     \" + newEvent.toString()","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"                + \"\\nNow you have \" + task.size() + String.format(\" task(s) in the list.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":52}},{"path":"src/main/java/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import taskmanager.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * Command to add a ToDos task.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private String taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     * Constructs an `AddTodoCommand` object with the specified user input and due date string.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     * @throws IllegalArgumentException If the provided task description is null.","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    public AddTodoCommand(String taskDesc) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        assert taskDesc !\u003d null : \"taskDesc must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     * Executes the command to add a ToDos task to the task list, update the storage, and notify the user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     * @param task The task list to which the ToDos task will be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     * @param ui   The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     * @param f    The file handler for storing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     * @return     The string representation of the task.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList task, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        ToDo newTodo \u003d new ToDo(taskDesc);","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        task.add(newTodo);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        f.writeTasksToFile(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        return \"Help you added a new event.\\n     \" + newTodo.toString()","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"                + \"\\nNow you have \" + task.size() + String.format(\" task(s) in the list.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":43}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" * A command to exit the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"     * Constructs a `ByeCommand` object.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * Executes the command to exit the application and displays a farewell message.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * @param task The task list (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param ui   The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param f    The file handler for storing tasks (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * @return     A string representation of goodbye message.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList task, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        return \"Bye\";","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":31}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" * Abstract class for few types of command that","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * can be executed in the application.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     * Executes the command with the provided task list, user interface, and file handler.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler for storing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * @return   A string representation of message.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    public abstract String execute(TaskList t, Ui ui, FileHandler f);","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":23}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import taskmanager.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" * A command to delete a task from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    private int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     * Constructs a `DeleteCommand` object with the provided index.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * @throws IllegalArgumentException If the provided index is not positive (greater than 0).","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        assert index \u003e 0 : \"index cannot be negative or zero\";","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * Executes the command to delete a task from the task list and updates the file storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list from which the task will be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler for storing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     * @return   A string representation of delete message.","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"            Task deleted \u003d t.get(index - 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"            t.remove(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"            return \"Helped you deleted this task\\n           \" + deleted.toString()","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"                    + \"\\nNow you have \" + t.size() + \" task(s) in the list.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"            return \"Please enter the correct task\u0027s index number.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":48}},{"path":"src/main/java/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import taskmanager.Deadline;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import taskmanager.Event;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import taskmanager.ToDo;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":" * A command to edit a task.","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    private int index;","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    private String newItem;","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    private String itemType;","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * Constructs a `MarkCommand` object with the specified task index.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     * @param itemType The item type to edit.","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * @param newItem The new item to update.","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * @throws IllegalArgumentException If the provided index is not positive (greater than 0)","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     *                                  and if itemType and newItem is null.","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * */","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    public EditCommand(int index, String itemType, String newItem) {","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        assert index \u003e 0 : \"index cannot be negative or zero\";","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        assert itemType !\u003d null : \"Item type for editing cannot be empty\";","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        assert newItem !\u003d null : \"New item for editing cannot be empty\";","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        this.itemType \u003d itemType;","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        this.newItem \u003d newItem;","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"     * Edits the specified task.","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list containing the tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface to display the result.","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"     * @return   A string representation of update message.","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"            if (t.get(index - 1) instanceof ToDo) {","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"                return editTodo((ToDo) t.get(index - 1), t);","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"            if (t.get(index - 1) instanceof Event) {","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"                return editEvent((Event) t.get(index - 1), t);","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"            if (t.get(index - 1) instanceof Deadline) {","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"                return editDeadline((Deadline) t.get(index - 1), t);","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"            return \"Invalid task\";","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"            return \"Please enter the correct task\u0027s index number.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"     * Edits the ToDo type task.","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"     * @param todo  The Todo task to update.","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"     * @param t     The task list to update with the new Todo.","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"     * @return   A string representation of update message.","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"    public String editTodo(ToDo todo, TaskList t) {","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"        if (itemType.equals(\"taskdesc\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"            todo.editTaskDesc(newItem);","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(t);","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"            return \"The event has been updated!\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"                    + todo.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"        return \"Please provide a valid item type for todo (taskdesc)\";","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"     * Edits the Event type task.","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"     * @param event  The Event task to update.","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"     * @param t      The task list to update with the new Event.","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"     * @return   A string representation of update message.","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"    public String editEvent(Event event, TaskList t) {","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"        if (itemType.equals(\"taskdesc\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"            event.editTaskDesc(newItem);","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(t);","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"            return \"The event has been updated!\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"                    + event.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"        if (itemType.equals(\"fromdate\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"            event.editFromDate(newItem);","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(t);","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"            return \"The event has been updated!\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"                    + event.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"        if (itemType.equals(\"todate\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"            event.editToDate(newItem);","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(t);","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"            return \"The event has been updated!\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"                    + event.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"        return \"Please provide a valid item type for event! (taskdesc, fromdate and todate)\";","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"     * Edits the Event type task.","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"     * @param deadline The Event task to update.","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"     * @param t        The task list to update with the new deadline.","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"     * @return   A string representation of update message.","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"    public String editDeadline(Deadline deadline, TaskList t) {","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"        if (itemType.equals(\"taskdesc\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"            deadline.editTaskDesc(newItem);","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(t);","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"            return \"The event has been updated!\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"                    + deadline.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"        if (itemType.equals(\"duedate\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"            deadline.editDueDate(newItem);","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(t);","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"            return \"The event has been updated!\\n\"","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"                    + deadline.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"        return \"Please provide a valid item type for event! (taskdesc and duedate)\";","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"Leb14":137}},{"path":"src/main/java/command/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" * An empty command.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"public class EmptyCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"     * Constructs an `EmptyCommand` object.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    public EmptyCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * Executes the empty command and displays a message to ask user for input.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     * @return   The string representation of the empty message.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        return \"Please enter something!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":31}},{"path":"src/main/java/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" * An error command.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private String errorMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     * Constructs an `ErrorCommand` object.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     * @throws IllegalArgumentException If the provided error message is null.","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    public ErrorCommand(String errorMessage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        assert errorMessage !\u003d null : \"errorMessage must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     * Executes the error command","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface. (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     * @return   The string representation of the error.","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        return errorMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":36}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * A find command to query task with a keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    private String keyword;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     * Constructs an `FindCommand` object.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * @throws IllegalArgumentException If the provided keyword is null.","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        assert keyword !\u003d null : \"keyword must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     * Executes the find command.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     * @param t  The list of the task to match.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     * @return   A string representation of the found task.","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        TaskList taskList \u003d t.findKeyword(keyword);","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"            return \"There is no task matched with the given keyword!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            return \"Here are the tasks that matches your keyword.\\n\" + taskList.toTaskStr();","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"Leb14":44}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" * A command to list the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"     * Constructs a `ListCommand` object.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    public ListCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * Executes the list command, which displays all the tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list to retrieve tasks from.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface to display the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        return t.toTaskStr();","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":29}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" * A command to mark a task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     * Constructs a `MarkCommand` object with the specified task index.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     * @throws IllegalArgumentException If the provided index is not positive (greater than 0).","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        assert index \u003e 0 : \"index cannot be negative or zero\";","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list containing the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface to display the result.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     * @return   A string representation of mark message.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"            if (t.get(index - 1).isDone()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"                return \"The task has been marked as done.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"            t.get(index - 1).markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"            return \"Well done! I\u0027ve marked this task as done :\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"                    + \"    \" + t.get(index - 1).toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"            return \"Please enter the correct task\u0027s index number.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":48}},{"path":"src/main/java/command/MiscCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" * Represents a miscellaneous command.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"public class MiscCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"     * Constructs a `MiscCommand` object.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    public MiscCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     * Executes the miscellaneous command, displaying a message to the user","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * indicating that the command is not understood.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface to display the message.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * @return   A string representation of miscellaneous message.","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        return \"I don\u0027t really understand what you mean.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":32}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" * A command to mark a task as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    private int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     * Constructs a `UnmarkCommand` object with the specified task index.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"     * @throws IllegalArgumentException If the provided index is not positive (greater than 0).","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        assert index \u003e 0 : \"index cannot be negative or zero\";","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"     * Marks the specified task as not done.","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"     * @param t  The task list containing the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     * @param ui The user interface to display the result.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     * @param f  The file handler (not used in this command).","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     * @return   A string representation of ynmark message.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"    public String execute(TaskList t, Ui ui, FileHandler f) {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"            if (!t.get(index - 1).isDone()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"                return \"The task has been unmarked\";","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"            t.get(index - 1).markNotDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            FileHandler.writeTasksToFile(t);","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"            return \"Alright, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"                    + \"    \" + t.get(index - 1).toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"            return \"Please enter the correct task\u0027s index number.\";","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":48}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import command.Command;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.FileHandler;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":" * Duke is a simple chatbot that allows users","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":" * to mark down their tasks.It allows users to add,","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":" * list, and manage tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"    private static final String DATA_FILE_PATH \u003d \"data/TaskList.txt\"; //The file path of the .txt file","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    private FileHandler fileHandler; //FileHandler to read or write file.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    private TaskList task; // The list of task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    private Ui ui; //The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * Constructs a Duke instance with the specified file path.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    public Duke() {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        this.fileHandler \u003d new FileHandler(DATA_FILE_PATH);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"        this.task \u003d new TaskList(FileHandler.readTasksFromFile());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        this.ui \u003d new Ui(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     * Does not perform any action for now.","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"     * Creates a Duke instance to run.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"     * @param args (not used in this application).","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        new Duke().run();","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"     * Processes the user\u0027s input to generate a response.","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"     * @param input The user\u0027s input to be processed.","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"     * @return A response generated based on the user\u0027s input.","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"            return c.execute(task, ui, fileHandler);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":58,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import gui.Main;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":" * Launches the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Leb14":13}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import storage.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import taskmanager.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import taskmanager.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import taskmanager.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import taskmanager.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":" * Handles user interaction and displays messages to the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":" * It provides methods for input and output.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    private static final String NAME \u003d \"Yours\"; // The name of the chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    private TaskList taskList; // The list of task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    private String word; //The singular or plural form of \"task\".","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     * Constructs an Ui instance with a reference to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     * @param taskList The task list used for displaying tasks\u0027 information.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    public Ui(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        if (taskList.size() \u003c 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"            this.word \u003d \"task\";","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"            this.word \u003d \"tasks\";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     * Displays a welcome message.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        String logo \u003d \"____    ____  ________   ___    ___   __________    _____\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"                + \"\\\\   \\\\  /   / |  ____  |  |  |   |  |  |  _____  |  / ____|\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"                + \" \\\\   \\\\/   /  | |    | |  |  |   |  |  |  |___|  |  | (___\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"                + \"  \\\\      /   | |    | |  |  |   |  |  |   ______|  \\\\ ___ \\\\\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"                + \"   |    |    | |    | |  |  |   |  |  |  \\\\  \\\\           | |\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"                + \"   |    |    | |____| |  |  |   |  |  |  | \\\\  \\\\     ____) |\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"                + \"   |____|    |________|  \\\\_________/  |__|   \\\\__\\\\  |_____/\\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        System.out.printf(\"Hello! I\u0027m %s%n\", NAME);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"__________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"     * Reads a command entered by the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"     * @return The user\u0027s input command as a string.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        return command;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"     * Displays a prompt message a new to-do task is added to the tasklist.","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"     * @param newTodo The newly added ToDos task.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"    public void addedTodo(ToDo newTodo) {","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Help you added a new to-do.\\n            \" + newTodo.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"          Now you have \" + taskList.size() + String.format(\" %s in the list.\", word));","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"     * Displays prompt message when a new Deadlines task is added to the tasklist.","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"     * @param newDeadLine The newly added Deadlines task.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"    public void addedDeadlines(Deadline newDeadLine) {","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Help you added a new deadline.\\n           \" + newDeadLine.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"          Now you have \" + taskList.size() + String.format(\" %s in the list.\", word));","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"Leb14"},"content":"     * Displays prompt message when a new Events task is added to the tasklist.","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"Leb14"},"content":"     * @param newEvent The newly added Events task.","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"Leb14"},"content":"    public void addedEvent(Event newEvent) {","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Help you added a new deadline.\\n           \" + newEvent.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"          Now you have \" + taskList.size() + String.format(\" %s in the list.\", word));","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"Leb14"},"content":"     * Displays all the task in the tasklist.","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"Leb14"},"content":"    public void list() {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Here are the tasks in your list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"Leb14"},"content":"        taskList.display();","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"Leb14"},"content":"     * Displays all the task that match the keyword.","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"Leb14"},"content":"     * @param matchedList The list of task that matched the keyword","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"Leb14"},"content":"    public void find(TaskList matchedList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"Leb14"},"content":"        if (matchedList.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   \" + NAME + \": There is no task matched with the given keyword!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   \" + NAME + \": Here are the tasks that matches your keyword.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"Leb14"},"content":"            matchedList.display();","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"Leb14"},"content":"     * Displays a prompt message when a task is deleted.","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"Leb14"},"content":"     * @param deleted The deleted task.","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"Leb14"},"content":"    public void delete(Task deleted) {","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Helped you deleted this task\\n           \" + deleted.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"          Now you have \" + taskList.size() + String.format(\" %s in the list.\", word));","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"Leb14"},"content":"     * Displays a prompt message when a task is marked as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"Leb14"},"content":"    public void mark(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"Leb14"},"content":"        if (taskList.get(index - 1).isDone()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   \" + NAME + \": The task has been marked as done.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   \" + NAME + \": Well done! I\u0027ve marked this task as done :\");","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   \" + taskList.get(index - 1).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"Leb14"},"content":"     * Displays a prompt message when a task is marked as not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":160,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"Leb14"},"content":"     * @param index The index of the task marked as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"Leb14"},"content":"    public void unmark(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"Leb14"},"content":"        if (!taskList.get(index - 1).isDone()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   \" + NAME + \": The task has been unmarked\");","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"Leb14"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   \" + NAME + \": Alright, I\u0027ve marked this task as not done yet\");","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   \" + taskList.get(index - 1).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"Leb14"},"content":"            System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"Leb14"},"content":"     * Displays a goodbye message when the application exits.","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"Leb14"},"content":"    public void bye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":181,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"Leb14"},"content":"     * Displays a prompt message when the user enters an empty command.","lastModifiedDate":"2023-09-21"},{"lineNumber":187,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":188,"author":{"gitId":"Leb14"},"content":"    public void empty() {","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": Please enter something!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":192,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"Leb14"},"content":"     * Displays a prompt message when the user enters invalid command.","lastModifiedDate":"2023-09-21"},{"lineNumber":196,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"Leb14"},"content":"    public void misc() {","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":199,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   \" + NAME + \": I don\u0027t really understand what you mean.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":200,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"   __________________________________________________________________________________\");","lastModifiedDate":"2023-09-07"},{"lineNumber":201,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"Leb14"},"content":"     * Displays a message for handling an IndexOutOfBoundsException.","lastModifiedDate":"2023-09-02"},{"lineNumber":205,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"Leb14"},"content":"    public void ioobExceptionMessage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"Leb14"},"content":"        System.out.println(\"Please enter the correct task\u0027s index number.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":209}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package gui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":" * A custom JavaFX control representing a dialog box.","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":" * This control consists of an ImageView to represent the speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"     * Constructs a new DialogBox with the specified text and image.","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"     * @param text The text content of the dialog.","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"     * @param img  The image to display in the dialog.","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        HBox.setHgrow(this, Priority.ALWAYS);","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"     * Creates and returns a user dialog box with the specified text and image.","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"     * @param text The text content of the user\u0027s message.","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"     * @param img  The user\u0027s profile image.","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"     * @return A user dialog box.","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"        DialogBox dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"        dialogBox.setStyle(\"-fx-background-color: #aedcc0;\");","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"        return dialogBox;","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"     * Creates and returns a Duke dialog box with the specified text and image.","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"     * @param text The text content of Duke\u0027s message.","lastModifiedDate":"2023-09-14"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"     * @param img  Duke\u0027s profile image.","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"     * @return A Duke dialog box.","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        db.setStyle(\"-fx-background-color: #7bd389;\");","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Leb14":85}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package gui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"     * Starts the GUI application by loading the main window and setting up the scene.","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"            scene.getStylesheets().add(\"/view/Style.css\");","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"            stage.setTitle(\"YOURS\");","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"            fxmlLoader.\u003cgui.MainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Leb14":40}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package gui;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/you.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Yours.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"     * Initializes the main window and binds the scroll pane\u0027s vertical value to the height of the dialog container.","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m YOURS. I miss you so much! How can I assist you today?\";","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"     * Sets the Duke instance to be used for processing user input and generating responses.","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"     * @param d The Duke instance to set.","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"     * Duke\u0027s reply and then appends them to the dialog container.","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"        if (response.equals(\"Bye\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"            handleExitCommand();","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"    private void handleExitCommand() {","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"        // Create a timeline that waits for 5 seconds","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"        Timeline timeline \u003d new Timeline(new KeyFrame(Duration.seconds(2), event -\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"            // Close the GUI window","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"            Stage stage \u003d (Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"            stage.close();","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"            // Exit the application","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        }));","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        // Start the timeline","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"        timeline.play();","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Leb14":87}},{"path":"src/main/java/taskutility/TaskMatcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskutility;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"/**","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":" * The `TaskMatcher` class provides a utility method for matching a keyword with a task description.","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":" * It allows checking if a keyword exists within the task description string.","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":" */","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"public class TaskMatcher {","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"     * Checks if the given keyword exists within the task description.","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"     * @param keyword  The keyword to search for within the task description.","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"     * @param taskDesc The task description to search within.","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"     * @return True if the keyword is found in the task description; otherwise, false.","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"     * @throws IllegalArgumentException If either the keyword or task description is null.","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"    public static boolean isMatch(String keyword, String taskDesc) {","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        assert keyword !\u003d null : \"keyword must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        assert taskDesc !\u003d null : \"taskDesc must not be null\";","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"        String[] split \u003d taskDesc.split(\" \");","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        for (int i \u003d 0; i \u003c split.length; i++) {","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"            if (keyword.equals(split[i])) {","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"                return true;","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        return false;","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"Leb14":29}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.Priority?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"  maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"600.0\" styleClass\u003d\"dialog-container\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Leb14":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"650.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e \u003cchildren\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"        \u003cTextField fx:id\u003d\"userInput\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.leftAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"90.0\" onAction\u003d\"#handleUserInput\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"        \u003cButton fx:id\u003d\"sendButton\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"10.0\" onAction\u003d\"#handleUserInput\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" AnchorPane.topAnchor\u003d\"10.0\" AnchorPane.leftAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"10.0\" AnchorPane.bottomAnchor\u003d\"60.0\" styleClass\u003d\"scroll-pane\" \u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"5.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Leb14":19}},{"path":"src/test/java/storage/FileHandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import parser.DateTime;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import taskmanager.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"import taskmanager.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"import taskmanager.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"import taskmanager.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"class FileHandlerTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"    void testReadAndWriteTasks() throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        // Create a temporary test file with known contents","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        Path tempFile \u003d Files.createTempFile(\"testFile\", \".txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        FileHandler fileHandler \u003d new FileHandler(tempFile.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskToWrite \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        TaskList tasks \u003d new TaskList(taskToWrite);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        DateTime dateTime \u003d new DateTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d dateTime.formatDateTime(\"23/08/2023 1000\");","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo \u003d new ToDo(\"TestTodo\");","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline \u003d new Deadline(\"TestDeadline\", formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        Event newevent \u003d new Event(\"TestEvent\", formattedDate, formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"        tasks.add(newtodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"        tasks.add(newdeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        tasks.add(newevent);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        // Write the tasks to the test file","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"        fileHandler.writeTasksToFile(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        // Read tasks from the test file","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e tasksRead \u003d fileHandler.readTasksFromFile();","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"        TaskList taskRead \u003d new TaskList(tasksRead);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        // Perform assertions to compare the tasksToWrite and tasksRead","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        // Since you\u0027ve added a new ToDos task to tasksToWrite, make sure it\u0027s the same as tasksRead","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"        assertTrue(tasks.taskListEqual(taskRead));","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        // Delete the temporary test file","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        Files.deleteIfExists(tempFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Leb14":59}},{"path":"src/test/java/storage/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"import parser.DateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"import taskmanager.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"import taskmanager.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"import taskmanager.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"import taskmanager.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"    void testTaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskList1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskList2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskList3 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskList4 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        ArrayList\u003cTask\u003e taskList5 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        TaskList tasks1 \u003d new TaskList(taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        TaskList tasks2 \u003d new TaskList(taskList1);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        TaskList tasks3 \u003d new TaskList(taskList2);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        TaskList tasks4 \u003d new TaskList(taskList3);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        TaskList tasks5 \u003d new TaskList(taskList4);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"        TaskList tasks6 \u003d new TaskList(taskList5);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"Leb14"},"content":"        DateTime dateTime \u003d new DateTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d dateTime.formatDateTime(\"23/08/2023 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"Leb14"},"content":"        String formattedDate1 \u003d dateTime.formatDateTime(\"23/08/2023 1830\");","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"Leb14"},"content":"        String formattedDate2 \u003d dateTime.formatDateTime(\"23/08/2024 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo \u003d new ToDo(\"TestTodo\");","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo1 \u003d new ToDo(\"TestTodo1\");","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline \u003d new Deadline(\"TestDeadline\", formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline1 \u003d new Deadline(\"TestDeadline\", formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"Leb14"},"content":"        Event newevent \u003d new Event(\"TestEvent\", formattedDate, formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"Leb14"},"content":"        Event newevent1 \u003d new Event(\"TestEvent\", formattedDate, formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"Leb14"},"content":"        //add tasks to tasks1","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"Leb14"},"content":"        tasks1.add(newtodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"Leb14"},"content":"        tasks1.add(newdeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"Leb14"},"content":"        tasks1.add(newevent);","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"Leb14"},"content":"        //add tasks to tasks2","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"Leb14"},"content":"        tasks2.add(newtodo1);","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"Leb14"},"content":"        tasks2.add(newdeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"Leb14"},"content":"        tasks2.add(newevent);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"Leb14"},"content":"        //add tasks to tasks3","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"Leb14"},"content":"        tasks3.add(newtodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"Leb14"},"content":"        tasks3.add(newdeadline1);","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"Leb14"},"content":"        tasks3.add(newevent);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"Leb14"},"content":"        //add tasks to tasks4","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"Leb14"},"content":"        tasks4.add(newtodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"Leb14"},"content":"        tasks4.add(newdeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"Leb14"},"content":"        tasks4.add(newevent1);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"Leb14"},"content":"        //add tasks to tasks5","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"Leb14"},"content":"        tasks5.add(newtodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"Leb14"},"content":"        tasks5.add(newdeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"Leb14"},"content":"        tasks5.add(newevent);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"Leb14"},"content":"        //leave tasks6 empty","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"Leb14"},"content":"        assertTrue(tasks1.taskListEqual(tasks1));","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"Leb14"},"content":"        assertFalse(tasks1.taskListEqual(tasks2));","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"Leb14"},"content":"        assertFalse(tasks1.taskListEqual(tasks3));","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"Leb14"},"content":"        assertFalse(tasks1.taskListEqual(tasks4));","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"Leb14"},"content":"        assertTrue(tasks1.taskListEqual(tasks5));","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"Leb14"},"content":"        assertFalse(tasks1.taskListEqual(tasks6));","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Leb14":85}},{"path":"src/test/java/taskmanager/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import parser.DateTime;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"class DeadlineTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    void testEvents() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"        DateTime dateTime \u003d new DateTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d dateTime.formatDateTime(\"23/08/2023 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"        String formattedDate1 \u003d dateTime.formatDateTime(\"23/08/2023 1801\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        String formattedDate2 \u003d dateTime.formatDateTime(\"23/09/2023 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline \u003d new Deadline(\"TestEvent\", formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline1 \u003d new Deadline(\"TestEvent\", formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline2 \u003d new Deadline(\"TestEvent\", formattedDate2);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline3 \u003d new Deadline(\"TestEvent3\", formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        Deadline newdeadline4 \u003d new Deadline(\"TestEvent\", formattedDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        assertTrue(newdeadline.equals(newdeadline));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        assertFalse(newdeadline.equals(newdeadline1));","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        assertFalse(newdeadline.equals(newdeadline2));","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        assertFalse(newdeadline.equals(newdeadline3));","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"        assertTrue(newdeadline.equals(newdeadline4));","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Leb14":35}},{"path":"src/test/java/taskmanager/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"import parser.DateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"class EventTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"    void testEvents() {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"        DateTime dateTime \u003d new DateTime();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"        String formattedDate \u003d dateTime.formatDateTime(\"23/08/2023 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"        String formattedDate1 \u003d dateTime.formatDateTime(\"23/08/2023 1801\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        String formattedDate2 \u003d dateTime.formatDateTime(\"23/09/2023 1800\");","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"        Event newevent \u003d new Event(\"TestEvent\", formattedDate, formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        Event newevent1 \u003d new Event(\"TestEvent1\", formattedDate, formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        Event newevent2 \u003d new Event(\"TestEvent\", formattedDate, formattedDate2);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        Event newevent3 \u003d new Event(\"TestEvent\", formattedDate1, formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        Event newevent4 \u003d new Event(\"TestEvent\", formattedDate, formattedDate1);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"        assertTrue(newevent.equals(newevent));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"        assertFalse(newevent.equals(newevent1));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"Leb14"},"content":"        assertFalse(newevent.equals(newevent2));","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"Leb14"},"content":"        assertFalse(newevent.equals(newevent3));","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"Leb14"},"content":"        assertTrue(newevent.equals(newevent4));","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Leb14":34}},{"path":"src/test/java/taskmanager/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"package taskmanager;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"class ToDoTest {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"    void testToDos() throws IllegalArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo \u003d new ToDo(\"TestTodo\");","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo1 \u003d new ToDo(\"TestTodo1\");","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo2 \u003d new ToDo(\"TestTodo2\");","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo3 \u003d new ToDo(\"TestTodo3\");","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo4 \u003d new ToDo(\"TestTodo\");","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo5 \u003d new ToDo(\"TestTodo5\");","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"        ToDo newtodo6 \u003d new ToDo(\"TestTodo\");","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"        assertTrue(newtodo.equals(newtodo));","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"        assertFalse(newtodo.equals(newtodo1));","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"Leb14"},"content":"        assertFalse(newtodo.equals(newtodo2));","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"Leb14"},"content":"        assertFalse(newtodo.equals(newtodo3));","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"Leb14"},"content":"        assertTrue(newtodo.equals(newtodo4));","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"Leb14"},"content":"        assertFalse(newtodo.equals(newtodo5));","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"Leb14"},"content":"        assertTrue(newtodo.equals(newtodo6));","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"Leb14"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"Leb14"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"Leb14":29}},{"path":"text-ui-test/data/TaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"T | 0 | add","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Leb14"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"Leb14"},"content":"blah","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"Leb14"},"content":"what","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"Leb14"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"Leb14"},"content":"todo","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"Leb14"},"content":"todo borrow book","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"Leb14"},"content":"deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"Leb14"},"content":"deadline return book","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"Leb14"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"Leb14"},"content":"event","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"Leb14"},"content":"event project meeting","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"Leb14"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"Leb14"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"Leb14"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"Leb14"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"Leb14"},"content":"mark 2","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"Leb14"},"content":"mark 3","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"unmark 3","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"Leb14"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"Leb14"},"content":"delete 2","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"Leb14"},"content":"list","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"Leb14"},"content":"bye","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"Leb14":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Leb14"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"Leb14":1}}]
