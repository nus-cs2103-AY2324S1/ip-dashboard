[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teozhengyang":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teozhengyang":7,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"T | 1 | read book | ","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"D | 0 | return book | 2022-06-06","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"E | 0 | project meeting | Aug 6th 2pm | 4pm","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"D | 0 | return book | 2019-06-06","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"T | 1 | buy lunch | ","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":" * The Duke class represents a simple chatbot application that helps manage tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Duke chatbot with the provided file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     * @param filePath The file path for task data storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"            Ui.showLoadingError(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"     * Runs the Duke chatbot and handles user interactions.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        Ui.greet();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"                Parser.executeCommand(command, tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"                storage.save(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"                Ui.showLoadingError(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"            Ui.printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        Ui.goodbye();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"     * The main method to start the Duke chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"     * @param args Command-line arguments (unused).","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"teozhengyang":55,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * Custom exception class for Duke chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" * This exception is thrown when there is an issue or error encountered during chatbot operations.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     * @param message The detail message explaining the reason for the exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of this DukeException, which includes the error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the exception\u0027s detail message.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        return super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"teozhengyang":27}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":" * The Parser class handles the parsing of user commands and executes corresponding actions.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"     * Executes the \u0027list\u0027 command to display all tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks The TaskList object containing tasks to list.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    public static void executeList(TaskList tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        Ui.listTasks(tasks.getAll());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"     * Executes the \u0027mark\u0027 or \u0027unmark\u0027 command to mark or unmark a task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"     * @param command         The user command to execute (\u0027mark\u0027 or \u0027unmark\u0027).","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks           The TaskList object containing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"     * @param separateCommand An array containing command and task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     * @throws DukeException If there is an issue or error encountered during command execution.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    public static void executeMarkUnmark(String command, TaskList tasks,","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"                                         String[] separateCommand) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"            if (separateCommand.length \u003e 2 || Integer.parseInt(separateCommand[1]) \u003e tasks.getSize()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"                throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"            int taskNumber \u003d Integer.parseInt(separateCommand[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"            if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"                tasks.getTask(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"                Ui.markDoneMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"            } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"                tasks.getTask(taskNumber - 1).markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"                Ui.markUndoneMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"            Ui.showTaskMessage(tasks.getTask(taskNumber - 1));","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"            throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"     * Executes the \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027 command to create a new task.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command to execute (\u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027).","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks   The TaskList object to add the new task to.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"     * @throws DukeException If there is an issue or error encountered during command execution.","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"    public static void executeCreate(String command, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"        if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"                String description \u003d command.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"                if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"                tasks.addTask(new ToDo(description));","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"                String[] parts \u003d command.split(\"/by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"                String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"                if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"                try {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"                    LocalDate by \u003d LocalDate.parse(parts[1].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"                    tasks.addTask(new Deadline(description, by));","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"                    throw new DukeException(\"☹ OOPS!!! Invalid date format.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"                String[] parts \u003d command.split(\"/from\");","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"                String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"                if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"                String[] timeParts \u003d parts[1].split(\"/to\");","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"                String start \u003d timeParts[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"                String end \u003d timeParts[1].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"                tasks.addTask(new Event(description, start, end));","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"        Ui.addTaskMessage(tasks.getTask(tasks.getSize() - 1), tasks.getSize());","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"     * Executes the \u0027delete\u0027 command to remove a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"     * @param command         The user command to execute (\u0027delete\u0027).","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks           The TaskList object containing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"teozhengyang"},"content":"     * @param separateCommand An array containing command and task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"teozhengyang"},"content":"     * @throws DukeException If there is an issue or error encountered during command execution.","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"teozhengyang"},"content":"    public static void executeDelete(String command, TaskList tasks, String[] separateCommand) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"            if (separateCommand.length \u003e 2 || Integer.parseInt(separateCommand[1]) \u003e tasks.getAll().size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"                throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"teozhengyang"},"content":"            int taskNumber \u003d Integer.parseInt(separateCommand[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"teozhengyang"},"content":"            if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"teozhengyang"},"content":"                Ui.removeTaskMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"teozhengyang"},"content":"                Ui.showTaskMessage(tasks.getTask(taskNumber - 1));","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"teozhengyang"},"content":"                tasks.removeTask(taskNumber - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"teozhengyang"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"teozhengyang"},"content":"            throw new DukeException(\"☹ OOPS!!! Invalid number\");","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"teozhengyang"},"content":"     * Executes the \u0027find\u0027 command to search for tasks containing a specific keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command to execute (\u0027find\u0027).","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks   The TaskList object to search for matching tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"teozhengyang"},"content":"    public static void executeFind(String command, TaskList tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"teozhengyang"},"content":"        String keyword \u003d command.substring(5).trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"teozhengyang"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"teozhengyang"},"content":"        Ui.listMatchedTasks(matchingTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"teozhengyang"},"content":"     * Executes the specified command and performs the corresponding action.","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command to be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks   The TaskList object to manage tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"teozhengyang"},"content":"     * @throws DukeException If there is an issue or error encountered during command execution.","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"teozhengyang"},"content":"    public static void executeCommand(String command, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"teozhengyang"},"content":"        String[] separateCommand \u003d command.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"teozhengyang"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":154,"author":{"gitId":"teozhengyang"},"content":"            executeList(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"teozhengyang"},"content":"        } else if (command.startsWith(\"mark\") || command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"teozhengyang"},"content":"            executeMarkUnmark(command, tasks, separateCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"teozhengyang"},"content":"        } else if (command.startsWith(\"todo\") || command.startsWith(\"deadline\") || command.startsWith(\"event\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"teozhengyang"},"content":"            executeCreate(command, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"teozhengyang"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"teozhengyang"},"content":"            executeDelete(command, tasks, separateCommand);","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"teozhengyang"},"content":"        } else if (command.startsWith((\"find\"))) {","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"teozhengyang"},"content":"            executeFind(command, tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":163,"author":{"gitId":"teozhengyang"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":164,"author":{"gitId":"teozhengyang"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":165,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":167}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import java.io.File;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import java.util.List;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":" * The Storage class handles loading and saving tasks to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"     * @param filePath The file path where tasks will be stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"     * Loads tasks from the file specified by the file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"     * @return A list of Task objects loaded from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"     * @throws DukeException If there is an issue or error encountered during loading.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"            String directoryPath \u003d file.getParent();","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"            File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"                System.out.println(\"Directory created: \" + directoryPath);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"                System.out.println(\"File created: \" + filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"            String line;","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"                String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"                boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"                String description \u003d parts[2].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"                    tasks.add(new ToDo(description, isDone));","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"                    LocalDate by \u003d LocalDate.parse(parts[3].trim());","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"                    tasks.add(new Deadline(description, by, isDone));","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"                    String from \u003d parts[3].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"                    String to \u003d parts[4].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"                    tasks.add(new Event(description, from, to, isDone));","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"                } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"                    throw new DukeException(\"☹ OOPS!!! Invalid task type in file\");","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"            return tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"            throw new DukeException(\"☹ OOPS!!! Error loading tasks from the file\");","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"     * Saves the tasks from the TaskList to the file specified by the file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks The TaskList object containing the tasks to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"     * @throws DukeException If there is an issue or error encountered during saving.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"            for (Task task : tasks.getAll()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"                writer.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"            throw new DukeException(\"☹ OOPS!!! Error saving tasks to the file\");","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":100}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":" * The TaskList class represents a collection of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a TaskList object with the specified list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks The list of tasks to initialize the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"     * Constructs an empty TaskList object.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     * Retrieves all tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"     * @return A list of all tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    public List\u003cTask\u003e getAll() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"     * Gets the number of tasks in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"     * Gets a task from the TaskList at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"     * @param task The task to be added to the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"     * Removes a task from the TaskList at the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"     * Finds tasks in the TaskList containing the specified keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"     * @return A list of tasks containing the keyword in their descriptions.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":92}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":" * The Ui class handles user interface interactions and displays messages to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     * Displays a greeting message when the chatbot starts.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    public static void greet() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        System.out.println(\"---------------------------------------------\\n Hello! I\u0027m zy\\n\"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"                + \" What can I do for you?\\n---------------------------------------------\");","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     * Displays a goodbye message when the chatbot exits.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    public static void goodbye() {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        System.out.println(\"---------------------------------------------\\n Bye. Hope to see you again soon!\"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"                + \"\\n---------------------------------------------\");","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"     * Prints a horizontal line as a separator.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    public static void printLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        System.out.println(\"---------------------------------------------\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"     * Lists the tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"    public static void listTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"     * Displays a message when marking a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"    public static void markDoneMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"     * Displays a message when marking a task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"    public static void markUndoneMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"        System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"     * Displays information about a specific task.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    public static void showTaskMessage(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"        System.out.println(\"   \" + task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"     * Displays a message after adding a task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"     * @param task The task that was added to the list.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"     * @param size The current size of the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"    public static void addTaskMessage(Task task, int size) {","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\" + \"\\n\" + \"   \"","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"                + task.toString() + \"\\n\" + \" Now you have \"","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"                + size + \" tasks in the list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"     * Displays a message when removing a task from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"    public static void removeTaskMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"     * Lists and displays the tasks that match a specific keyword in the user\u0027s task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"     * @param matchingTasks A list of tasks that match the user\u0027s search keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"    public static void listMatchedTasks(List\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + matchingTasks.get(i).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"     * Displays an error message when there is an issue loading data.","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"     * @param e The DukeException containing the error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"    public static void showLoadingError(DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"        System.out.println(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":109}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":" * The Deadline class represents a task of type \"Deadline\" inherited from the Task class.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":" * It contains a description and a deadline (by when the task should be completed).","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Deadline task with the provided description and deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     * @param by          The deadline for completing the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Deadline task with the provided description, deadline, and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"     * @param by          The deadline for completing the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"     * Converts the Deadline task to a formatted string suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the Deadline task in a format compatible with file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"        String status \u003d isDone ? \"1\" : \"0\"; // Using isDone directly for readability","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        return \"D | \" + status + \" | \" + description + \" | \" + by;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of the Deadline task, including its completion status, description, and deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"     * @return A formatted string indicating the task type, completion status, and deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"teozhengyang":56}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * The Event class represents a task of type \"Event\" inherited from the Task class.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" * It contains a description and a time interval during which the event occurs.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"    protected String start;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"    protected String end;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Event task with the provided description and time interval.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     * @param start       The start time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     * @param end         The end time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Event task with the provided description, time interval, and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"     * @param start       The start time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"     * @param end         The end time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"    public Event(String description, String start, String end, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"     * Converts the Event task to a formatted string suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the Event task in a format compatible with file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"        String status \u003d isDone ? \"1\" : \"0\"; // Using isDone directly for readability","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        return \"E | \" + status + \" | \" + description + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of the Event task,","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"     * including its completion status, description, and time interval.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"     * @return A formatted string indicating the task type, completion status, and time interval.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"teozhengyang":59}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * The Task class represents a basic task with a description and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Task with the provided description.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Task with the provided description and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representing the completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"     * @return \"X\" if the task is done, \" \" (a space) if the task is not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"     * Converts the task to a formatted string suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"     * @return An empty string for the base Task class (override in subclasses).","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"        return \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"     * @return A formatted string including the task\u0027s completion status icon and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"teozhengyang":72}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * The ToDo class represents a task of type \"ToDo\" inherited from the Task class.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" * It contains a description and inherits methods for marking the task\u0027s completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new ToDo task with the provided description.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new ToDo task with the provided description and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"     * Converts the ToDo task to a formatted string suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the ToDo task in a format compatible with file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        String status \u003d isDone ? \"1\" : \"0\"; // Using isDone directly for readability","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        return \"T | \" + status + \" | \" + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of the ToDo task, including its completion status and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"     * @return A formatted string indicating the task type and its completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"teozhengyang":48}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":" * The TaskListTest class contains unit tests for the TaskList class.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     * Test the addTask method of the TaskList class.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        int orgCount \u003d tasks.getAll().size();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        Task newTask \u003d new Task(\"Test task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(orgCount + 1, tasks.getAll().size());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"     * Test the removeTask method of the TaskList class.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        Task newTask \u003d new Task(\"Test task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"        int orgCount \u003d tasks.getAll().size();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"        tasks.removeTask(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(orgCount - 1, tasks.getAll().size());","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":37}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":" * The ToDoTest class contains unit tests for the ToDo class.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     * Test the toString method of the ToDo class.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        ToDo testTask \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"[T][ ] Test ToDo\", testTask.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     * Test the markAsDone method of the ToDo class.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        ToDo task1 \u003d new ToDo(\"Test ToDo\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        task1.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"[T][X] Test ToDo\", task1.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"todo read book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"todo buy bread","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"deadline return books /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"teozhengyang":10}}]
