[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"# duke.Duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teozhengyang":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"teozhengyang":22,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"T | 0 | buy supper","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"D | 0 | return book | 2023-04-27T17:00","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"# Doraemon","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"A chatbot that lets you relieve your childhood.","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"### GUI","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"In this chatbot, you assume the character Nobita and ask Doraemon for help organising your task.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"## Commands","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"Input any of the following commands and you will get a reply from Doraemon.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"The following commands are supported by Doraemon.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"### `list OR ls`","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"Lists all tasks as a list.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"### `mark/m [index] OR unmark/um [index]`","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"Marks a command as complete/incomplete respectively.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"`mark 3``m 3` or `unmark 5` `um 5`\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"Marks the 3rd task as complete, and marks the 5th task as incomplete.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"### `todo [description] OR t [description]`","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"Adds a todo with a description to the task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"Example of usage:\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"`todo Buy supper` `t Buy supper `\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"Adds a todo with the description `Buy supper`.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"### `deadline [description] /by [end] OR d [description] /by [end] `","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"Adds a deadline with a description and deadline.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"`[end]` argument takes the format `yyyy-mm-ddTtt:tt`.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"Example of usage:\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"`deadline return book /by 2023-09-21T17:00` `d return book /by 2023-09-21T17:00` \u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"Adds a deadline with the description `return book` with the deadline `Sep 21 2023 17:00`.","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"### `event [description] /from [start] /to [end] OR e [description] /from [start] /to [end]`","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"Adds an event with a description, start and end dateTime.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"`[start]` \u0026 `[end]` arguments take the format `yyyy-mm-ddTtt:tt`.","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"Example of usage:\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"`event football match /from 2023-09-21T17:00 /to 2023-09-21T19:00`","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"`e football match /from 2023-09-21T17:00 /to 2023-09-21T19:00`\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"Adds an event with the description `football match` starting at `Sep 21 2023 17:00` to `Sep 21 2023 19:00`.","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"### `delete [index] / del [index]`","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"Deletes a task from the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"Example of usage:\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"`delete 5` `del 5`\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"Deletes the 5th task in the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"### `find [string] / f [string]`","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"Displays all tasks with a description that contains `[string]`","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"Example of usage:\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"`find supper` `f supper`\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"If list of tasks contain above 3 tasks, only the todo task will be displayed as part of search result","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"### `goodbye`","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"Exit the Doraemon help session.","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":56,"-":19}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":" * Represents a dialog box in the Duke application\u0027s user interface.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":" * A dialog box consists of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new DialogBox with the specified text and image.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"     * @param text The text content to display in the dialog box.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     * @param img The image to display in the dialog box.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"     * This is used to distinguish between user and Duke\u0027s messages.","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"     * Creates a DialogBox representing a user\u0027s message.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"     * @param text The text content of the user\u0027s message.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"     * @param img The image to display for the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"     * @return A DialogBox instance representing the user\u0027s message.","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"     * Creates a DialogBox representing Duke\u0027s response.","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"     * @param text The text content of Duke\u0027s response.","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"     * @param img The image to display for Duke.","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"     * @return A DialogBox instance representing Duke\u0027s response.","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"teozhengyang":82}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * The Duke class represents a simple chatbot application that helps manage tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Duke chatbot with the provided file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public Duke() {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"     * Generates a response to user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"     * @return A response generated based on the user\u0027s input.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"            result.append(Parser.executeCommand(input, tasks));","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"            result.append(e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        return result.toString();","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"teozhengyang":36,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * Custom exception class for Duke chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" * This exception is thrown when there is an issue or error encountered during chatbot operations.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     * @param message The detail message explaining the reason for the exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of this DukeException, which includes the error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the exception\u0027s detail message.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        return super.getMessage();","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"teozhengyang":27}},{"path":"src/main/java/duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * Represents an exception when a description is empty in Duke.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new EmptyDescriptionException with the specified detail message.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"     * @param taskType The type of task which description that cannot be empty.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    public EmptyDescriptionException(String taskType) {","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"        super(\"OOPS!!! The \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of this EmptyDescriptionException, which includes the error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the exception\u0027s detail message.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        return super.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":25}},{"path":"src/main/java/duke/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * Exception class for handling invalid date formats in Duke.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new InvalidDateException with a default error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    public InvalidDateException() {","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"        super(\"OOPS!!! Invalid date format.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of this InvalidDateException, including the error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the exception\u0027s detail message.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        return super.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":23}},{"path":"src/main/java/duke/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * Exception class for handling invalid numbers in Duke.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"public class InvalidNumberException extends DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new InvalidNumberException with a default error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    public InvalidNumberException() {","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"        super(\"OOPS!!! Invalid number.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of this InvalidNumberException, including the error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the exception\u0027s detail message.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        return super.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":23}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":" * A launcher class to workaround classpath issues when starting the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"     * Main method to launch the Duke application.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     * @param args Command-line arguments (unused).","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"teozhengyang":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":" * The main class for the Duke application\u0027s GUI using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     * The entry point for launching the Duke GUI application.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"            stage.setTitle(\"Doraemon\");","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"teozhengyang":41}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":" * Controller for the MainWindow. Provides the layout and functionality for the Duke chatbot\u0027s user interface.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"     * Initializes the MainWindow by binding the scroll pane to the dialog container\u0027s height property.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"                DialogBox.getDukeDialog(Ui.greet(), dukeImage)","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        );","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"     * Sets the Duke instance for the MainWindow.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"     * @param d The Duke instance to associate with the MainWindow.","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"     * Handles user input by processing it with Duke and displaying the conversation in dialog boxes.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"teozhengyang":62}},{"path":"src/main/java/duke/NoSearchParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * Exception class for handling cases where there is no search parameter in Duke.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"public class NoSearchParameterException extends DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new NoSearchParameterException with a default error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    public NoSearchParameterException() {","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"        super(\"OOPS!!! No search parameter.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of this NoSearchParameterException, including the error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the exception\u0027s detail message.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        return super.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":23}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":" * The Parser class handles the parsing of user commands and executes corresponding actions.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"     * Executes the \u0027list\u0027 command to display all tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks The TaskList object containing tasks to list.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     * @return A string containing the list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    public static String executeList(TaskList tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        return Ui.getAllTasksMessage(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"     * Executes the \u0027mark\u0027 or \u0027unmark\u0027 command to mark or unmark a task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"     * @param command         The user command to execute (\u0027mark\u0027 or \u0027unmark\u0027).","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks           The TaskList object containing tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     * @param separateCommand An array containing command and task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"     * @return A string containing the result of marking or unmarking a task.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"     * @throws InvalidNumberException If there is an issue with index of task accessed.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    public static String executeMarkUnmark(String command, TaskList tasks,","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"                                           String[] separateCommand) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        assert command !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"            if (separateCommand.length \u003e 2 || Integer.parseInt(separateCommand[1]) \u003e tasks.getSize()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"                throw new InvalidNumberException();","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"            int taskNumber \u003d Integer.parseInt(separateCommand[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"            Task task \u003d tasks.getTask(taskNumber - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"            if (command.startsWith(\"mark\") || command.startsWith(\"m\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"                task.markAsDone();","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"                result \u003d Ui.getMarkMessage(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"            } else if (command.startsWith(\"unmark\") || command.startsWith(\"um\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"                task.markAsUndone();","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"                result \u003d Ui.getUnmarkMessage(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"     * Executes the \u0027create\u0027 command to add a task to the TaskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command to execute (\u0027create\u0027).","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks   The TaskList object containing tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"     * @return A string containing the result of creating a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"     * @throws UnknownCommandMessageException If there is an unknown command.","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"    public static String executeCreate(String command, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"        assert command !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"        Task task;","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"        if (command.startsWith(\"todo\") || command.startsWith(\"t \")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"            task \u003d createTodo(command);","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"        } else if (command.startsWith(\"deadline\") || command.startsWith(\"d \")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"            task \u003d createDeadline(command);","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"        } else if (command.startsWith(\"event\") || command.startsWith(\"e \")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"            task \u003d createEvent(command);","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"        } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"            throw new UnknownCommandMessageException();","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"        return Ui.getAddTaskMessage(tasks, task);","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"     * Creates a new Todo task and adds it to the TaskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command containing the Todo task description.","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"     * @throws EmptyDescriptionException If there is no description during task creation.","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"    public static Task createTodo(String command) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"            String description;","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"            if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"                description \u003d command.substring(5);","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"            } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"                description \u003d command.substring(2);","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"            if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"                throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"            return new ToDo(description);","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"teozhengyang"},"content":"            throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"teozhengyang"},"content":"     * Creates a new Deadline task and adds it to the TaskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command containing the Deadline task description and deadline date.","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"     * @throws EmptyDescriptionException If there is no description during task creation.","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"     * @throws InvalidDateException      If there is an invalid date during task creation.","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"teozhengyang"},"content":"    public static Task createDeadline(String command) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"teozhengyang"},"content":"            String[] parts \u003d command.split(\"/by\");","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"teozhengyang"},"content":"            String description;","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"teozhengyang"},"content":"            if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"teozhengyang"},"content":"                description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"teozhengyang"},"content":"            } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"teozhengyang"},"content":"                description \u003d parts[0].substring(1).trim();","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"teozhengyang"},"content":"            if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"teozhengyang"},"content":"                throw new EmptyDescriptionException(\"deadline\");","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"teozhengyang"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"teozhengyang"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(parts[1].trim());","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"teozhengyang"},"content":"                return new Deadline(description, by);","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"teozhengyang"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":140,"author":{"gitId":"teozhengyang"},"content":"                throw new InvalidDateException();","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"teozhengyang"},"content":"        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"teozhengyang"},"content":"            throw new EmptyDescriptionException(\"deadline\");","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"teozhengyang"},"content":"     * Creates a new Event task and adds it to the TaskList.","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command containing the Event task description, start, and end times.","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"teozhengyang"},"content":"     * @throws EmptyDescriptionException If there is no description during task creation.","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"teozhengyang"},"content":"     * @throws InvalidDateException      If there is an invalid date during task creation.","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"teozhengyang"},"content":"    public static Task createEvent(String command) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"teozhengyang"},"content":"            String[] parts \u003d command.split(\"/from\");","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"teozhengyang"},"content":"            String description;","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":159,"author":{"gitId":"teozhengyang"},"content":"            if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"teozhengyang"},"content":"                description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"teozhengyang"},"content":"            } else {","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"teozhengyang"},"content":"                description \u003d parts[0].substring(2).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"teozhengyang"},"content":"            if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":166,"author":{"gitId":"teozhengyang"},"content":"                throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":168,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"teozhengyang"},"content":"            String[] timeParts \u003d parts[1].split(\"/to\");","lastModifiedDate":"2023-09-01"},{"lineNumber":170,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"teozhengyang"},"content":"            try {","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"teozhengyang"},"content":"                LocalDateTime start \u003d LocalDateTime.parse(timeParts[0].trim());","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"teozhengyang"},"content":"                LocalDateTime end \u003d LocalDateTime.parse(timeParts[1].trim());","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"teozhengyang"},"content":"                return new Event(description, start, end);","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"teozhengyang"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"teozhengyang"},"content":"                throw new InvalidDateException();","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"teozhengyang"},"content":"        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":179,"author":{"gitId":"teozhengyang"},"content":"            throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2023-09-21"},{"lineNumber":180,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":181,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"teozhengyang"},"content":"     * Executes the \u0027delete\u0027 command to remove a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":186,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command to execute (\u0027delete\u0027).","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks   The TaskList object containing tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"teozhengyang"},"content":"     * @return A string containing the result of deleting a task.","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"teozhengyang"},"content":"     * @throws InvalidNumberException If there is an issue with index of task accessed.","lastModifiedDate":"2023-09-21"},{"lineNumber":190,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":191,"author":{"gitId":"teozhengyang"},"content":"    public static String executeDelete(String command, TaskList tasks, String[] separateCommand) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":192,"author":{"gitId":"teozhengyang"},"content":"        assert command !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":193,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":194,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":195,"author":{"gitId":"teozhengyang"},"content":"            if (separateCommand.length \u003e 2 || Integer.parseInt(separateCommand[1]) \u003e tasks.getAll().size()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":196,"author":{"gitId":"teozhengyang"},"content":"                throw new InvalidNumberException();","lastModifiedDate":"2023-09-21"},{"lineNumber":197,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":199,"author":{"gitId":"teozhengyang"},"content":"            int taskNumber \u003d Integer.parseInt(separateCommand[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"teozhengyang"},"content":"            Task oldTask \u003d tasks.getTask(taskNumber - 1);","lastModifiedDate":"2023-09-21"},{"lineNumber":201,"author":{"gitId":"teozhengyang"},"content":"            tasks.removeTask(taskNumber - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":203,"author":{"gitId":"teozhengyang"},"content":"            return Ui.getDeleteMessage(oldTask);","lastModifiedDate":"2023-09-21"},{"lineNumber":204,"author":{"gitId":"teozhengyang"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"teozhengyang"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2023-09-21"},{"lineNumber":206,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"teozhengyang"},"content":"     * Executes the \u0027find\u0027 command to search for tasks containing a specific keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command to execute (\u0027find\u0027).","lastModifiedDate":"2023-09-02"},{"lineNumber":213,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks   The TaskList object to search for matching tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"teozhengyang"},"content":"     * @return A string containing the matching tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":215,"author":{"gitId":"teozhengyang"},"content":"     * @throws UnknownCommandMessageException If there is an unknown command.","lastModifiedDate":"2023-09-21"},{"lineNumber":216,"author":{"gitId":"teozhengyang"},"content":"     * @throws NoSearchParameterException     If there is no search parameter during find operation.","lastModifiedDate":"2023-09-21"},{"lineNumber":217,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"teozhengyang"},"content":"    public static String executeFind(String command, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":219,"author":{"gitId":"teozhengyang"},"content":"        assert command !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":220,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":221,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":222,"author":{"gitId":"teozhengyang"},"content":"            String keyword;","lastModifiedDate":"2023-09-20"},{"lineNumber":223,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":224,"author":{"gitId":"teozhengyang"},"content":"            if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"teozhengyang"},"content":"                keyword \u003d command.substring(5).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"teozhengyang"},"content":"            } else if (command.startsWith(\"f \")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":227,"author":{"gitId":"teozhengyang"},"content":"                keyword \u003d command.substring(2).trim();","lastModifiedDate":"2023-09-20"},{"lineNumber":228,"author":{"gitId":"teozhengyang"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":229,"author":{"gitId":"teozhengyang"},"content":"                throw new UnknownCommandMessageException();","lastModifiedDate":"2023-09-21"},{"lineNumber":230,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":231,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":232,"author":{"gitId":"teozhengyang"},"content":"            if (keyword.equals(\"\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":233,"author":{"gitId":"teozhengyang"},"content":"                throw new NoSearchParameterException();","lastModifiedDate":"2023-09-21"},{"lineNumber":234,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":235,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":236,"author":{"gitId":"teozhengyang"},"content":"            TaskList matchingTasks \u003d new TaskList(tasks.findTasks(keyword));","lastModifiedDate":"2023-09-21"},{"lineNumber":237,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":238,"author":{"gitId":"teozhengyang"},"content":"            return Ui.getFindMessage(matchingTasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":239,"author":{"gitId":"teozhengyang"},"content":"        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":240,"author":{"gitId":"teozhengyang"},"content":"            throw new NoSearchParameterException();","lastModifiedDate":"2023-09-21"},{"lineNumber":241,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":242,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":243,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":244,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":245,"author":{"gitId":"teozhengyang"},"content":"     * Checks if the input command is related to marking or unmarking a task as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":246,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":247,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command to check.","lastModifiedDate":"2023-09-21"},{"lineNumber":248,"author":{"gitId":"teozhengyang"},"content":"     * @return True if the command is a mark or unmark command, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":249,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":250,"author":{"gitId":"teozhengyang"},"content":"    private static boolean isMarkUnmarkCommand(String command) {","lastModifiedDate":"2023-09-21"},{"lineNumber":251,"author":{"gitId":"teozhengyang"},"content":"        return command.startsWith(\"mark\") || command.startsWith(\"unmark\")","lastModifiedDate":"2023-09-21"},{"lineNumber":252,"author":{"gitId":"teozhengyang"},"content":"                || command.startsWith(\"m\") || command.startsWith(\"um\");","lastModifiedDate":"2023-09-21"},{"lineNumber":253,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":254,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":255,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":256,"author":{"gitId":"teozhengyang"},"content":"     * Checks if the input command is related to creating a new task (e.g., todo, deadline, event).","lastModifiedDate":"2023-09-21"},{"lineNumber":257,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":258,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command to check.","lastModifiedDate":"2023-09-21"},{"lineNumber":259,"author":{"gitId":"teozhengyang"},"content":"     * @return True if the command is a create task command, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":260,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":261,"author":{"gitId":"teozhengyang"},"content":"    private static boolean isCreateCommand(String command) {","lastModifiedDate":"2023-09-21"},{"lineNumber":262,"author":{"gitId":"teozhengyang"},"content":"        return command.startsWith(\"todo\") || command.startsWith(\"deadline\") || command.startsWith(\"event\")","lastModifiedDate":"2023-09-21"},{"lineNumber":263,"author":{"gitId":"teozhengyang"},"content":"                || command.startsWith(\"t\") || command.startsWith(\"d\") || command.startsWith(\"e\");","lastModifiedDate":"2023-09-21"},{"lineNumber":264,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":265,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":266,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":267,"author":{"gitId":"teozhengyang"},"content":"     * Checks if the input command is related to deleting a task.","lastModifiedDate":"2023-09-21"},{"lineNumber":268,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":269,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command to check.","lastModifiedDate":"2023-09-21"},{"lineNumber":270,"author":{"gitId":"teozhengyang"},"content":"     * @return True if the command is a delete command, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":271,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":272,"author":{"gitId":"teozhengyang"},"content":"    private static boolean isDeleteCommand(String command) {","lastModifiedDate":"2023-09-21"},{"lineNumber":273,"author":{"gitId":"teozhengyang"},"content":"        return command.startsWith(\"delete\") || command.startsWith(\"del\");","lastModifiedDate":"2023-09-21"},{"lineNumber":274,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":275,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":276,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":277,"author":{"gitId":"teozhengyang"},"content":"     * Checks if the input command is related to searching for tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":278,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":279,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command to check.","lastModifiedDate":"2023-09-21"},{"lineNumber":280,"author":{"gitId":"teozhengyang"},"content":"     * @return True if the command is a find command, false otherwise.","lastModifiedDate":"2023-09-21"},{"lineNumber":281,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":282,"author":{"gitId":"teozhengyang"},"content":"    private static boolean isFindCommand(String command) {","lastModifiedDate":"2023-09-21"},{"lineNumber":283,"author":{"gitId":"teozhengyang"},"content":"        return command.startsWith(\"find\") || command.startsWith(\"f\");","lastModifiedDate":"2023-09-21"},{"lineNumber":284,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":285,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":286,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":287,"author":{"gitId":"teozhengyang"},"content":"     * Executes the specified command and performs the corresponding action.","lastModifiedDate":"2023-09-02"},{"lineNumber":288,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":289,"author":{"gitId":"teozhengyang"},"content":"     * @param command The user command to be executed.","lastModifiedDate":"2023-09-02"},{"lineNumber":290,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks   The TaskList object to manage tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":291,"author":{"gitId":"teozhengyang"},"content":"     * @return A string containing the result of executing the command.","lastModifiedDate":"2023-09-20"},{"lineNumber":292,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":293,"author":{"gitId":"teozhengyang"},"content":"    public static String executeCommand(String command, TaskList tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":294,"author":{"gitId":"teozhengyang"},"content":"        assert command !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":295,"author":{"gitId":"teozhengyang"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-21"},{"lineNumber":296,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":297,"author":{"gitId":"teozhengyang"},"content":"            String[] separateCommand \u003d command.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":298,"author":{"gitId":"teozhengyang"},"content":"            if (command.equals(\"list\") || command.equals(\"ls\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":299,"author":{"gitId":"teozhengyang"},"content":"                result \u003d executeList(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":300,"author":{"gitId":"teozhengyang"},"content":"            } else if (isMarkUnmarkCommand(command)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":301,"author":{"gitId":"teozhengyang"},"content":"                result \u003d executeMarkUnmark(command, tasks, separateCommand);","lastModifiedDate":"2023-09-21"},{"lineNumber":302,"author":{"gitId":"teozhengyang"},"content":"            } else if (isDeleteCommand(command)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":303,"author":{"gitId":"teozhengyang"},"content":"                result \u003d executeDelete(command, tasks, separateCommand);","lastModifiedDate":"2023-09-21"},{"lineNumber":304,"author":{"gitId":"teozhengyang"},"content":"            } else if (isCreateCommand(command)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":305,"author":{"gitId":"teozhengyang"},"content":"                result \u003d executeCreate(command, tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":306,"author":{"gitId":"teozhengyang"},"content":"            } else if (isFindCommand(command)) {","lastModifiedDate":"2023-09-21"},{"lineNumber":307,"author":{"gitId":"teozhengyang"},"content":"                result \u003d executeFind(command, tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":308,"author":{"gitId":"teozhengyang"},"content":"            } else if (command.equals(\"goodbye\")) {","lastModifiedDate":"2023-09-21"},{"lineNumber":309,"author":{"gitId":"teozhengyang"},"content":"                Ui.goodbye();","lastModifiedDate":"2023-09-21"},{"lineNumber":310,"author":{"gitId":"teozhengyang"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-21"},{"lineNumber":311,"author":{"gitId":"teozhengyang"},"content":"            } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":312,"author":{"gitId":"teozhengyang"},"content":"                result \u003d Ui.getUnknownCommandMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":313,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":314,"author":{"gitId":"teozhengyang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":315,"author":{"gitId":"teozhengyang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":316,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":317,"author":{"gitId":"teozhengyang"},"content":"        return result;","lastModifiedDate":"2023-09-21"},{"lineNumber":318,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":319,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":319}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import java.io.*;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"import java.util.List;","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":" * The Storage class handles loading and saving tasks to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"     * @param filePath The file path where tasks will be stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"     * Loads tasks from the file specified by the file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     * @return A list of Task objects loaded from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"     * @throws DukeException If there is an issue or error encountered during loading.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"            String directoryPath \u003d file.getParent();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"            File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"            if (!directory.exists() \u0026\u0026 directory.mkdirs()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"                System.out.println(\"Directory created: \" + directoryPath);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"            if (!file.exists() \u0026\u0026 file.createNewFile()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"                System.out.println(\"File created: \" + filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"            String line;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"                addToTasks(line, tasks);","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"            return tasks;","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"            throw new DukeException(\" OOPS!!! Error loading tasks from the file\");","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"     * Parses a line from the file and adds the corresponding Task object to the tasks list.","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"     * @param line  The line from the file.","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks The list of Task objects.","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"     * @throws DukeException If there is an issue or error encountered during parsing.","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"    public void addToTasks(String line, List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"            tasks.add(new ToDo(description, isDone));","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(parts[3].trim());","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"            tasks.add(new Deadline(description, by, isDone));","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"            LocalDateTime from \u003d LocalDateTime.parse((parts[3].trim()));","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(parts[4].trim());","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"            tasks.add(new Event(description, from, to, isDone));","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"            throw new DukeException(\" OOPS!!! Invalid task type in file\");","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"     * Saves the tasks from the TaskList to the file specified by the file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks The TaskList object containing the tasks to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"     * @throws DukeException If there is an issue or error encountered during saving.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"            for (Task task : tasks.getAll()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"                writer.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"            throw new DukeException(\" OOPS!!! Error saving tasks to the file\");","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":105}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":" * The TaskList class represents a collection of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a TaskList object with the specified list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks The list of tasks to initialize the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"     * Constructs an empty TaskList object.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     * Retrieves all tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"     * @return A list of all tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    public List\u003cTask\u003e getAll() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"     * Gets the number of tasks in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"     * Gets a task from the TaskList at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"     * @param task The task to be added to the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"     * Removes a task from the TaskList at the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"     * Finds tasks in the TaskList containing the specified keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"     * @return A list of tasks containing the keyword in their descriptions.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of the tasks in the TaskList.","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the tasks in the TaskList.","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"            Task task \u003d getTask(i);","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"            result.append(\" \").append(i + 1).append(\".\").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"        return result.toString();","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":107}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":" * The Ui class handles user interface interactions and displays messages to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     * Displays a greeting message when the chatbot starts.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     * @return The greeting message.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    public static String greet() {","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        String message \u003d printLine() + \"\\n Hello! I\u0027m Doraemon\\n\" + \" What can I do for you?\\n\" + printLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        return message;","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     * Displays a goodbye message when the chatbot exits.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"     * @return The goodbye message.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    public static String goodbye() {","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        String message \u003d printLine() + \"\\n Bye. Hope to see you again soon!\\n\" + printLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        return message;","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"     * Prints a horizontal line as a separator.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representing a horizontal line separator.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"    public static String printLine() {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        return \"---------------------------------------------\";","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"     * Generates a message to display all tasks in the provided TaskList.","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks The TaskList containing the tasks to be displayed.","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"     * @return A message containing all tasks in the TaskList.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    public static String getAllTasksMessage(TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        StringBuilder result \u003d new StringBuilder(\" Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        return result.append(tasks.toString()).toString();","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"     * Generates a message for displaying a task.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"     * @param task The task to display.","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"     * @return The task message.","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"    public static String getTaskMessage(Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        return \"   \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"     * Generates a message to confirm that a task has been marked as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"     * @return The confirmation message.","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"    public static String getMarkMessage(Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"        return \" Nice! I\u0027ve marked this task as done:\\n\" + getTaskMessage(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"     * Generates a message to confirm that a task has been marked as not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"     * @return The confirmation message.","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"    public static String getUnmarkMessage(Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"        return \" OK, I\u0027ve marked this task as not done yet:\\n\" + getTaskMessage(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"     * Generates a message to confirm that a task has been added.","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks The TaskList containing the tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"     * @param task  The task that was added.","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"     * @return The confirmation message.","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"    public static String getAddTaskMessage(TaskList tasks, Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"        return \" Got it. I\u0027ve added this task:\\n\" + getTaskMessage(task) + \" Now you have \" + tasks.getSize()","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"     * Generates a message to confirm that a task has been deleted.","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"     * @return The confirmation message.","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"    public static String getDeleteMessage(Task task) {","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"        return \" Noted. I\u0027ve removed this task:\\n\" + getTaskMessage(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"     * Generates a message to display matching tasks when searching for tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"     * @param tasks The TaskList containing matching tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"     * @return The message with matching tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"    public static String getFindMessage(TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"        return \" Here are the matching tasks in your list:\\n\" + tasks.toString();","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"teozhengyang"},"content":"     * Generates a message for unknown commands.","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"teozhengyang"},"content":"     * @return The message for unknown commands.","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"    public static String getUnknownCommandMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"        return \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":120}},{"path":"src/main/java/duke/UnknownCommandMessageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * Exception class for handling unknown commands in Duke.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"public class UnknownCommandMessageException extends DukeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new UnknownCommandMessageException with a default error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    public UnknownCommandMessageException() {","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of this UnknownCommandMessageException, including the error message.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the exception\u0027s detail message.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        return super.getMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":23}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":" * The Deadline class represents a task of type \"Deadline\" inherited from the Task class.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":" * It contains a description and a deadline (by when the task should be completed).","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Deadline task with the provided description and deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     * @param by          The deadline for completing the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Deadline task with the provided description, deadline, and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"     * @param by          The deadline for completing the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"     * Converts the Deadline task to a formatted string suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the Deadline task in a format compatible with file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"        return \"D | \" + status + \" | \" + description + \" | \" + by;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of the Deadline task, including its completion status, description, and deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"     * @return A formatted string indicating the task type, completion status, and deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"teozhengyang":56}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":" * The Event class represents a task of type \"Event\" inherited from the Task class.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":" * It contains a description and a time interval during which the event occurs.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Event task with the provided description and time interval.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"     * @param start       The start time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"     * @param end         The end time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Event task with the provided description, time interval, and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"     * @param start       The start time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     * @param end         The end time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end, boolean isDone) {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"     * Converts the Event task to a formatted string suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the Event task in a format compatible with file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"        String status \u003d isDone ? \"1\" : \"0\"; // Using isDone directly for readability","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"        return \"E | \" + status + \" | \" + description + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of the Event task,","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"     * including its completion status, description, and time interval.","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"     * @return A formatted string indicating the task type, completion status, and time interval.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"))","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"                + \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"teozhengyang":63}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * The Task class represents a basic task with a description and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Task with the provided description.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new Task with the provided description and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representing the completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"     * @return \"X\" if the task is done, \" \" (a space) if the task is not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"     * Converts the task to a formatted string suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"     * @return An empty string for the base Task class (override in subclasses).","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"        return \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"     * @return A formatted string including the task\u0027s completion status icon and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"teozhengyang":72}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":" * The ToDo class represents a task of type \"ToDo\" inherited from the Task class.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":" * It contains a description and inherits methods for marking the task\u0027s completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new ToDo task with the provided description.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"     * Constructs a new ToDo task with the provided description and completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"     * Converts the ToDo task to a formatted string suitable for saving to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"     * @return A string representation of the ToDo task in a format compatible with file storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        String status \u003d isDone ? \"1\" : \"0\"; // Using isDone directly for readability","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"        return \"T | \" + status + \" | \" + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"     * Returns a string representation of the ToDo task, including its completion status and description.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"     * @return A formatted string indicating the task type and its completion status.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"teozhengyang":48}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"10.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"                \u003cFont name\u003d\"Georgia\" size\u003d\"12.0\"/\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"teozhengyang":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"\u003c?import javafx.scene.effect.Glow?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"            minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"            fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"                \u003cFont name\u003d\"Georgia\" size\u003d\"16.0\"/\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#0a1979\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"                \u003cFont name\u003d\"Georgia\" size\u003d\"16.0\"/\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"    \u003ceffect\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        \u003cGlow/\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    \u003c/effect\u003e","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"teozhengyang":37}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"public class DukeTest {","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     * Tests the getResponse() function with an invalid input.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public void testGetResponseWithInvalidInput() {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        String response \u003d duke.getResponse(\"invalidCommand\");","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", response);","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":18}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     * This JUnit test method verifies the correctness of the \u0027executeList\u0027 method in the \u0027Parser\u0027 class.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     * This test ensures that the \u0027executeList\u0027 method correctly lists and formats tasks for display.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    void testExecuteList() {","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"        // Create a TaskList with sample tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        taskList.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        taskList.addTask(new Deadline(\"Task 2\", LocalDateTime.now()));","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"        taskList.addTask(new Event(\"Task 3\", LocalDateTime.now(), LocalDateTime.now().plusHours(1)));","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        // Test executeList method","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        String result \u003d Parser.executeList(taskList);","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        // Assert that the result contains task descriptions","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(result.contains(\"[T][ ] Task 1\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(result.contains(\"[D][ ] Task 2\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(result.contains(\"[E][ ] Task 3\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":33}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":" * The TaskListTest class contains unit tests for the TaskList class.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     * Test the addTask method of the TaskList class.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"        int orgCount \u003d tasks.getAll().size();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        Task newTask \u003d new Task(\"Test task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(orgCount + 1, tasks.getAll().size());","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"     * Test the removeTask method of the TaskList class.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        Task newTask \u003d new Task(\"Test task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"        int orgCount \u003d tasks.getAll().size();","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"        tasks.removeTask(0);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(orgCount - 1, tasks.getAll().size());","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":37}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"public class UiTest {","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     * This JUnit test method verifies the correctness of the \u0027greet\u0027 method in the \u0027Ui\u0027 class.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     * This test ensures that the \u0027greet\u0027 method returns the expected greeting message.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"    public void testGreet() {","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \"---------------------------------------------\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"                + \" Hello! I\u0027m Doraemon\\n\" + \" What can I do for you?\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"                + \"---------------------------------------------\";","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        String actual \u003d Ui.greet();","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"     * This JUnit test method verifies the correctness of the \u0027goodbye\u0027 method in the \u0027Ui\u0027 class.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"     * This test ensures that the \u0027goodbye\u0027 method returns the expected goodbye message.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    public void testGoodbye() {","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \"---------------------------------------------\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"                + \" Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"                + \"---------------------------------------------\";","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"        String actual \u003d Ui.goodbye();","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"     * This JUnit test method verifies the correctness of the \u0027printLine\u0027 method in the \u0027Ui\u0027 class.","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"     * This test ensures that the \u0027printLine\u0027 method returns the expected horizontal line separator.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"    public void testPrintLine() {","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \"---------------------------------------------\";","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"        String actual \u003d Ui.printLine();","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"     * This JUnit test method verifies the correctness of the \u0027getTaskMessage\u0027 method in the \u0027Ui\u0027 class.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"     * This test ensures that the \u0027getTaskMessage\u0027 method returns the expected task message.","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"    public void testGetTaskMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"teozhengyang"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \"   [ ] Sample Task\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"teozhengyang"},"content":"        String actual \u003d Ui.getTaskMessage(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"teozhengyang"},"content":"     * This JUnit test method verifies the correctness of the \u0027getMarkMessage\u0027 method in the \u0027Ui\u0027 class.","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"teozhengyang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"teozhengyang"},"content":"     * This test ensures that the \u0027getMarkMessage\u0027 method returns the expected mark message.","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"teozhengyang"},"content":"    public void testGetMarkMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"teozhengyang"},"content":"        Task task \u003d new Task(\"Sample Task\", true);","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \" Nice! I\u0027ve marked this task as done:\\n   [X] Sample Task\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"teozhengyang"},"content":"        String actual \u003d Ui.getMarkMessage(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"teozhengyang"},"content":"     * This JUnit test method verifies the correctness of the \u0027getUnmarkMessage\u0027 method in the \u0027Ui\u0027 class.","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"teozhengyang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"teozhengyang"},"content":"     * This test ensures that the \u0027getUnmarkMessage\u0027 method returns the expected unmark message.","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"teozhengyang"},"content":"    public void testGetUnmarkMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"teozhengyang"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \" OK, I\u0027ve marked this task as not done yet:\\n   [ ] Sample Task\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"teozhengyang"},"content":"        String actual \u003d Ui.getUnmarkMessage(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"teozhengyang"},"content":"     * This JUnit test method verifies the correctness of the \u0027getAddTaskMessage\u0027 method in the \u0027Ui\u0027 class.","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"teozhengyang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"teozhengyang"},"content":"     * This test ensures that the \u0027getAddTaskMessage\u0027 method returns the expected add task message.","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"teozhengyang"},"content":"    public void testGetAddTaskMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"teozhengyang"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"teozhengyang"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"teozhengyang"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \" Got it. I\u0027ve added this task:\\n   [ ] Sample Task\\n Now you have 1 tasks in the list.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"teozhengyang"},"content":"        String actual \u003d Ui.getAddTaskMessage(tasks, task);","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"teozhengyang"},"content":"     * This JUnit test method verifies the correctness of the \u0027getDeleteMessage\u0027 method in the \u0027Ui\u0027 class.","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"teozhengyang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"teozhengyang"},"content":"     * This test ensures that the \u0027getDeleteMessage\u0027 method returns the expected delete message.","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"teozhengyang"},"content":"    public void testGetDeleteMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"teozhengyang"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \" Noted. I\u0027ve removed this task:\\n   [ ] Sample Task\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"teozhengyang"},"content":"        String actual \u003d Ui.getDeleteMessage(task);","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"teozhengyang"},"content":"     * This JUnit test method verifies the correctness of the \u0027getFindMessage\u0027 method in the \u0027Ui\u0027 class.","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"teozhengyang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"teozhengyang"},"content":"     * This test ensures that the \u0027getFindMessage\u0027 method returns the expected find message.","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"teozhengyang"},"content":"    public void testGetFindMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"teozhengyang"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"teozhengyang"},"content":"        tasks.addTask(new Task(\"Task 1\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"teozhengyang"},"content":"        tasks.addTask(new Task(\"Task 2\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \" Here are the matching tasks in your list:\\n 1.[ ] Task 1\\n 2.[ ] Task 2\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"teozhengyang"},"content":"        String actual \u003d Ui.getFindMessage(tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"teozhengyang"},"content":"     * This JUnit test method verifies the correctness of the \u0027getUnknownCommandMessage\u0027 method in the \u0027Ui\u0027 class.","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"teozhengyang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"teozhengyang"},"content":"     * This test ensures that the \u0027getUnknownCommandMessage\u0027 method returns the expected unknown command message.","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"teozhengyang"},"content":"    public void testGetUnknownCommandMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"teozhengyang"},"content":"        String expected \u003d \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"teozhengyang"},"content":"        String actual \u003d Ui.getUnknownCommandMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":143}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":" * The DeadlineTest class contains JUnit tests for the Deadline class.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"     * Tests the toFileString() function of the Deadline task to ensure it returns the correct formatted string.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    public void testToFileString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2023-09-30T14:00\");","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"        Deadline task \u003d new Deadline(\"Submit report\", dateTime, true);","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"D | 1 | Submit report | 2023-09-30T14:00\", task.toFileString());","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"     * Tests the toString() function of the Deadline task to ensure it returns the correct formatted string.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2023-09-30T14:00\");","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"        Deadline task \u003d new Deadline(\"Submit report\", dateTime);","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"[D][ ] Submit report (by: Sep 30 2023 14:00)\", task.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":33}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"public class EventTest {","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     * Tests the toFileString() function of the Event task to ensure it returns the correct formatted string.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    public void testToFileString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.parse(\"2023-09-30T14:00\");","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.parse(\"2023-09-30T16:00\");","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        Event task \u003d new Event(\"Team meeting\", startDateTime, endDateTime, true);","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"E | 1 | Team meeting | 2023-09-30T14:00 | 2023-09-30T16:00\", task.toFileString());","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     * Tests the toString() function of the Event task to ensure it returns the correct formatted string.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.parse(\"2023-09-30T14:00\");","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.parse(\"2023-09-30T16:00\");","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        Event task \u003d new Event(\"Team meeting\", startDateTime, endDateTime);","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"[E][ ] Team meeting (from: Sep 30 2023 14:00 to: Sep 30 2023 16:00)\", task.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":31}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"     * Tests the markAsDone method to ensure it sets the task as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"        Task task \u003d new Task(\"Buy groceries\");","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     * Tests the markAsUndone method to ensure it sets the task as not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    public void testMarkAsUndone() {","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        Task task \u003d new Task(\"Buy groceries\", true);","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"        assertFalse(task.isDone);","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"teozhengyang"},"content":"     * Tests the getStatusIcon method to ensure it returns \"X\" when the task is done","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"teozhengyang"},"content":"     * and returns \" \" (space) when the task is not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"teozhengyang"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"teozhengyang"},"content":"        Task task \u003d new Task(\"Buy groceries\");","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"teozhengyang"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"teozhengyang"},"content":"     * Tests the toString method to ensure it returns a formatted string including the task\u0027s","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"teozhengyang"},"content":"     * completion status icon and description.","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"teozhengyang"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"teozhengyang"},"content":"        Task task \u003d new Task(\"Buy groceries\");","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"[ ] Buy groceries\", task.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"teozhengyang"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"[X] Buy groceries\", task.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"teozhengyang":56}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":" * The ToDoTest class contains unit tests for the ToDo class.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"teozhengyang"},"content":"     * Tests the toFileString() function of the ToDo task to ensure it returns the correct formatted string.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"teozhengyang"},"content":"    public void testToFileString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"teozhengyang"},"content":"        ToDo task \u003d new ToDo(\"Buy groceries\", true);","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"T | 1 | Buy groceries\", task.toFileString());","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"teozhengyang"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"teozhengyang"},"content":"     * Test the toString method of the ToDo class.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"teozhengyang"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"teozhengyang"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"teozhengyang"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"teozhengyang"},"content":"        ToDo testTask \u003d new ToDo(\"Test Todo\");","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"teozhengyang"},"content":"        assertEquals(\"[T][ ] Test Todo\", testTask.toString());","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"teozhengyang"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"teozhengyang"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"teozhengyang"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"teozhengyang":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"teozhengyang"},"content":"todo read book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"teozhengyang"},"content":"todo buy bread","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"teozhengyang"},"content":"deadline return books /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"teozhengyang"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"teozhengyang"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"teozhengyang"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"teozhengyang"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"teozhengyang"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"teozhengyang"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"teozhengyang"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"teozhengyang":10}}]
