[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"geoffong11":15}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import duke.parser.CommandProcessor;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"    private final CommandProcessor commandProcessor;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"    private final InputReceiver inputReceiver;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"    public Duke() {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"        commandProcessor \u003d new CommandProcessor();","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"        inputReceiver \u003d new InputReceiver();","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"    public void run() {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"        ui.greeting();","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"        while (true) {","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"            // getting the input command","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"            String command \u003d inputReceiver.getInput();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"            //break out of the loop when it is \"bye\"","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"                ui.message(\"Bye!!! Hope to see you again!\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"            // process the command","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"            ui.message(commandProcessor.processCommand(command));","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"        inputReceiver.closeParser();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"        new Duke().run();","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"    public String getResponse(String command) {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"        return commandProcessor.processCommand(command);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"geoffong11":54}},{"path":"src/main/java/duke/InputReceiver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"public class InputReceiver {","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"     * Initialize InputReceiver object that focus on taking in inputs","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"    public InputReceiver() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"     * Returns the user input in a line as a string","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"     * @return string of user input","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"    public String getInput() {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"     * close the scanner object in the InputReceiver","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"    public void closeParser() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"        scanner.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"geoffong11":30}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"    private static final String ANSWER_BORDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"    private static final String BOT_NAME \u003d \"RatSpeak\";","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"     * print greetings in the command line","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"    public void greeting() {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"        System.out.println(\"Hello from \" + BOT_NAME + \"\\nWhat can I do for you?\\n\" + ANSWER_BORDER);","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"     * print goodbye in the command line","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    public void bye() {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"        System.out.println(ANSWER_BORDER);","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"     * Print the message that is created by processing the command given","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"     * @param commandMessage","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"    public void message(String commandMessage) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"        System.out.println(ANSWER_BORDER);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"        System.out.print(commandMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        System.out.println(ANSWER_BORDER);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"geoffong11":33}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke.data;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":" * Represents a task list that stores  a list of tasks","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":" * Performs add, delete, mark, unmark","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"public class TaskList {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    private ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"    private static final Storage STORAGE \u003d new Storage();","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"     * initialize TaskList object","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"     * @param tasks ArrayList of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"        this.tasklist \u003d tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"    private static boolean isInteger(String taskNumber) {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"        for (int i \u003d 0; i \u003c taskNumber.length(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"            if (!Character.isDigit(taskNumber.charAt(i))) {","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"                return false;","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"        return true;","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"     * returns string for output","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"     * adds the input task to the ArrayList of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"     * @param task task to be added to TaskList","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"     * @return string for output","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"    public String addToList(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"        this.tasklist.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"                + task.toString() + \"\\nNow you have \"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"                + tasklist.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"    private int getTaskIndex(String taskNumber) throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"        if (!isInteger(taskNumber)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"Number not found: Please enter a valid task number\");","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"        if (taskIndex \u003e\u003d tasklist.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"Task number out of range: please enter a valid task number\");","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"        return taskIndex;","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"     * returns output string for printing to the user","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"     * mark task as done, then set the task as the","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"     * writes back to the file to update the file of the changes","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"     * @param taskNumber string of the task number","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"     * @return output string for printing","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"     * @throws DukeException if taskNumber is not a number or there is no task with that number","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"    public String mark(String taskNumber) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"        int taskIndex \u003d getTaskIndex(taskNumber);","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"        Task markedTask \u003d this.tasklist.get(taskIndex).done();","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"        tasklist.set(taskIndex, markedTask);","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"        STORAGE.writeAllToFile(tasklist);","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"        return (\"Nice! I\u0027ve marked this task as done:\\n\" + markedTask.toString() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"     * returns output string for printing to the user","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"     * mark task as undone, then set the task as the","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"     * writes back to the file to update the file of the changes","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"     * @param taskNumber string of the task number","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"     * @return output string for printing","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"     * @throws DukeException if taskNumber is not a number or there is no task with that number","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"    public String unMark(String taskNumber) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"        int taskIndex \u003d getTaskIndex(taskNumber);","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"        Task unmarkedTask \u003d this.tasklist.get(taskIndex).undone();","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"        tasklist.set(taskIndex, unmarkedTask);","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"        STORAGE.writeAllToFile(tasklist);","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"        return (\"OK, I\u0027ve marked this task as not done yet:\\n\" + unmarkedTask.toString() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":94,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"geoffong11"},"content":"     * returns output string for printing to the user","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"     * delete the task from the ArrayList of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"     * writes back to the file to update the file of the changes","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"geoffong11"},"content":"     * @param taskNumber string of the task number","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"geoffong11"},"content":"     * @return output string for printing","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"geoffong11"},"content":"     * @throws DukeException if taskNumber is not a number or there is no task with that number","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"geoffong11"},"content":"    public String delete(String taskNumber) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"geoffong11"},"content":"        int taskIndex \u003d getTaskIndex(taskNumber);","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"geoffong11"},"content":"        Task removedTask \u003d tasklist.remove(taskIndex);","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"geoffong11"},"content":"        STORAGE.writeAllToFile(tasklist);","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"geoffong11"},"content":"        return (\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"geoffong11"},"content":"                + removedTask.toString()","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"geoffong11"},"content":"                + \"\\nNow you have \" + tasklist.size()","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"geoffong11"},"content":"                + \" tasks in the list.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"geoffong11"},"content":"     * returns output string for printing to user","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"geoffong11"},"content":"     * @param keyword words or letters to match with tasklist","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"geoffong11"},"content":"     * @return output string for printing","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"geoffong11"},"content":"    public String find(String keyword) {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"geoffong11"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"geoffong11"},"content":"        int matchNum \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"geoffong11"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"geoffong11"},"content":"            if (tasklist.get(i).getTask().contains(keyword)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"geoffong11"},"content":"                output \u003d output + matchNum","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"geoffong11"},"content":"                        + \". \" + tasklist.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"geoffong11"},"content":"                matchNum++;","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"geoffong11"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"geoffong11"},"content":"        return output;","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"geoffong11"},"content":"     * returns string of all the tasks in the ArrayList of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"geoffong11"},"content":"     * @return string of all the task in the ArrayList of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"geoffong11"},"content":"    public String listContent() {","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"geoffong11"},"content":"        String listOfContents \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"geoffong11"},"content":"        if (tasklist.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":140,"author":{"gitId":"geoffong11"},"content":"            return (\"Oops! It seems you do not have anything in your task list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"geoffong11"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":143,"author":{"gitId":"geoffong11"},"content":"            listOfContents \u003d listOfContents + ((i + 1) + \": \" + tasklist.get(i).toString() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":145,"author":{"gitId":"geoffong11"},"content":"        return listOfContents;","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":147,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":148,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"geoffong11":148}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke.exception;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"geoffong11":8}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"    private void flip() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"        db.flip();","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"        return db;","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"geoffong11":63}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"public class Launcher {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"geoffong11":11}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"            stage.show();","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"geoffong11":33}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke.gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import duke.gui.DialogBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"    private Image ratSpeakImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/rat.png\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"    @FXML","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"            // Close the window when \u0027bye\u0027 is entered","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"            Stage stage \u003d (Stage) userInput.getScene().getWindow();","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"            stage.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"                DialogBox.getDukeDialog(response, ratSpeakImage)","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"        );","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"geoffong11":58}},{"path":"src/main/java/duke/parser/CommandProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke.parser;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"public class CommandProcessor {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"    private static final String[] VALIDCOMMANDS \u003d {\"mark\", \"unmark\", \"list\", \"todo\"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"            , \"event\", \"deadline\", \"delete\", \"find\"};","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"    private static final Storage storage \u003d new Storage();","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"     * initialize command processor","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"     * Load list of tasks from storage (if any)","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"    public CommandProcessor() {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"        this.tasks \u003d new TaskList(storage.loadFromFile());","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"    private String[] parseCommand(String command) throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        String [] splitCommand \u003d command.split(\" \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"        String commandType \u003d splitCommand[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"        if (!Arrays.asList(VALIDCOMMANDS).contains(commandType)) {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"        if (splitCommand.length !\u003d 2 \u0026\u0026 !commandType.equals(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + commandType + \" cannot be empty.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"        String commandDescription \u003d splitCommand[0].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"        if (commandDescription.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"OOPS!!! The description of a \" + commandType + \" cannot be empty.\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"        return splitCommand;","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"     * Returns a string that is the output for the command given.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"     * Process mark, unmark, delete, find, event, todo, deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"     * @param command the command given by the user","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"     * @return the string that is the output string for the command given.","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"    public String processCommand(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"            String [] splitCommand \u003d parseCommand(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"            String commandType \u003d splitCommand[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"            // print the list of tasks","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"            if (commandType.equals(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"                return this.tasks.listContent();","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"            String taskName \u003d splitCommand[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"            switch (commandType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"                return tasks.mark(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"                return tasks.unMark(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"                return tasks.delete(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"            case \"find\":","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"                return tasks.find(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"                Task task \u003d new Todo(taskName);","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"                storage.writeToFile(task.storageText());","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"                return tasks.addToList(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"                task \u003d new Deadline(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"                storage.writeToFile(task.storageText());","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"geoffong11"},"content":"                return tasks.addToList(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"geoffong11"},"content":"            case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"                task \u003d new Event(taskName);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"                storage.writeToFile(task.storageText());","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"geoffong11"},"content":"                return tasks.addToList(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"geoffong11"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"geoffong11"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"geoffong11"},"content":"            return (e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":104,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":105,"author":{"gitId":"geoffong11"},"content":"        return (\"OOPS!! This is out of my job scope...\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":109,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"geoffong11":109}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke.storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    private static final String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"    private static final String DATA_FILE_PATH \u003d home + \"/data/duke.txt\";","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    private static final String DIRECTORY_PATH \u003d home + \"/data\";","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"     * writes to hard disk","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"     * textToAdd is the storage text that was created by the tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"     * method creates a text in the next line in the .txt file.","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"     * @param textToAdd text to be added to .txt file.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"     * @throws DukeException if file is corrupted","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"    public void writeToFile(String textToAdd) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"            File theDir \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"            if (!theDir.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"                theDir.mkdirs();","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"                File dataFile \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"            File file \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"            FileWriter fw \u003d new FileWriter(DATA_FILE_PATH, true);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"            if (file.length() !\u003d 0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"     * reads from duke.txt file and store the information as task into an array list of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"     * method uses a scanner to read from duke.txt file, then adds the description into the task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"     * Task object is then added into the array list of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"     * @return Arraylist of tasks that have been stored previously.","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"            File dataFile \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"            if (dataFile.exists()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"                Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"                ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"                while (sc.hasNext()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"                    String taskInfo \u003d sc.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"                    String taskName \u003d taskInfo.substring(7);","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"                    boolean marked \u003d taskInfo.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"                    if (taskInfo.charAt(1) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"                        Task task \u003d new Todo(taskName);","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"                        if (marked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"                            task \u003d task.done();","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"                        tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"                    } else if (taskInfo.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"                        Task task \u003d new Deadline(taskName);","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"                        if (marked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"                            task \u003d task.done();","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"                        tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"                    } else if (taskInfo.charAt(1) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"                        Task task \u003d new Event(taskName);","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"                        if (marked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"                            task \u003d task.done();","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"                        tasks.add(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"                    }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"                sc.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"geoffong11"},"content":"                return tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"geoffong11"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"geoffong11"},"content":"        } catch(Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"geoffong11"},"content":"        return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"geoffong11"},"content":"     * Updates the .txt file using an arraylist of tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"geoffong11"},"content":"     * @param tasklist arraylist of tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"geoffong11"},"content":"     * @throws DukeException if file is corrupted","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"geoffong11"},"content":"    public void writeAllToFile(ArrayList\u003cTask\u003e tasklist) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"geoffong11"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"geoffong11"},"content":"            File file \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"geoffong11"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"geoffong11"},"content":"            writer.write(\"\");","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"geoffong11"},"content":"            writer.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"geoffong11"},"content":"            for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"geoffong11"},"content":"                writeToFile(tasklist.get(i).storageText());","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"geoffong11"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":117,"author":{"gitId":"geoffong11"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":119,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":120,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"geoffong11":122}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":" * Represents a deadline object.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":" * It has an end date and time.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    private final LocalDate deadlineDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    private static String[] parseDeadline(String task) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"        String [] taskSplit \u003d task.split(\"/by\", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"        String taskName \u003d taskSplit[0].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"Please enter task name\");","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"        if (taskSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"Please enter valid deadline (make sure to start /by)\");","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        String dueDate \u003d taskSplit[1].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        if (dueDate.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"Please enter valid deadline: Do not leave it empty\");","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"        return new String[] {taskSplit[0], dueDate};","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"     * Initialize Deadline object that models a deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"     * @param task the deadline task name with a \"/by\" separating the description and the deadline","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"     * @throws DukeException If the description or deadline is empty or there is no \"/by\" or","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"     * the datetime format is wrong (not YYYY-MM-DD)","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"    public Deadline(String task) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"        super(parseDeadline(task)[0]);","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"            this.deadlineDate \u003d LocalDate.parse(parseDeadline(task)[1]);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"wrong date time format: Use YYYY-MM-DD\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"    private Deadline(String task, boolean isDone, LocalDate deadlineDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"        super(task, isDone);","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"     * Returns new Deadline object that is marked","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"     * @return Deadline object that is marked","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"    public Deadline done() {","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"        return new Deadline(super.getTask(), true, this.deadlineDate);","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"     * Returns new Deadline object that is unmarked","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"     * @return Deadline object that is unmarked","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"    public Deadline undone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"        return new Deadline(super.getTask(), false, this.deadlineDate);","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"     * Returns format of string to be stored in hard disk","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"     * @return string","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"    public String storageText() {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"        String end \u003d deadlineDate.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"        return \"[D]\" + super.toString() + \"/by \" + end;","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"                + deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":92,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"geoffong11":92}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":" * Represents an event.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":" * It has a start date and end date.","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    private final LocalDate deadlineDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    private static String[] parseEvent(String task) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"        // index 0: task name, index 1: task time range","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"        String [] taskSplit \u003d task.split(\"/from\", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"        String taskName \u003d taskSplit[0].trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"Please enter task name\");","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"        if (taskSplit.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"Please enter valid Event (make sure to start /from)\");","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"        String taskTimeRange \u003d taskSplit[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"        String [] parseTimeRange \u003d taskTimeRange.split(\"/to\", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"        if (parseTimeRange.length !\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"Please enter valid Event (make sure to have /by to clarify the end date)\");","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"        if (parseTimeRange[1].trim().isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"Please enter valid end date\");","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"        String eventInfoString \u003d taskSplit[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"        return new String[] {eventInfoString, parseTimeRange[0].trim(), parseTimeRange[1].trim()};","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"     * Initialize Event object that models an event","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"     * @param task the deadline task name with a \"/from\" and \"/to\" separating the description and the start and end date","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"     * @throws DukeException If the description, start date or end date is empty or there is no \"/from\" or \"/to\"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"     * the datetime format is wrong (not YYYY-MM-DD)","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"    public Event(String task) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"        super(parseEvent(task)[0]);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"            this.deadlineDate \u003d LocalDate.parse(parseEvent(task)[2]);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"            this.startDate \u003d LocalDate.parse(parseEvent(task)[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"wrong date time format: Use YYYY-MM-DD\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"geoffong11"},"content":"    private Event(String task, boolean isDone, LocalDate deadlineDate, LocalDate startDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"geoffong11"},"content":"        super(task, isDone);","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"geoffong11"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"geoffong11"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"geoffong11"},"content":"     * Returns new Event object that is marked","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"geoffong11"},"content":"     * @return Event object that is marked","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"geoffong11"},"content":"    public Event done() {","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"geoffong11"},"content":"        return new Event(super.getTask(), true, this.deadlineDate, this.startDate);","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"geoffong11"},"content":"     * Returns new Event object that is unmarked","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"geoffong11"},"content":"     * @return Event object that is unmarked","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"geoffong11"},"content":"    public Event undone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"geoffong11"},"content":"        return new Event(super.getTask(), false, this.deadlineDate, this.startDate);","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"geoffong11"},"content":"     * Returns format of string to be stored in hard disk","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"geoffong11"},"content":"     * @return string","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"geoffong11"},"content":"    public String storageText() {","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"geoffong11"},"content":"        String start \u003d startDate.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"geoffong11"},"content":"        String end \u003d deadlineDate.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"geoffong11"},"content":"        return \"[E]\" + super.toString() + \" /from \" + start + \" /to \" + end;","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"geoffong11"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"geoffong11"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"geoffong11"},"content":"                + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"geoffong11"},"content":"                + \" to: \"","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"geoffong11"},"content":"                + deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"geoffong11"},"content":"                + \")\";","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":107,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"geoffong11":107}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"    private final String task;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"    public Task(String task) {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"    public Task(String task, boolean isDone) {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    public abstract Task done();","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"    public abstract Task undone();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"    public abstract String storageText();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"    public String getTask() {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"        return this.task;","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"            return \"[X] \" + this.task.trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"        return \"[ ] \" + this.task.trim();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"geoffong11":36}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke.task;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":" * Represents a todo task.","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"    private static String parseTodo(String task) throws DukeException {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"        String todoTask \u003d task.trim();","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"        if (todoTask.isEmpty()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"            throw new DukeException(\"Please enter valid deadline: Do not leave it empty\");","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"        return todoTask;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"     * Initialize Todo object that models a todo","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"     * @param task todo description","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"     * @throws DukeException if description is empty","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"    public Todo(String task) throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"        super(parseTodo(task));","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"geoffong11"},"content":"    private Todo(String task, boolean isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"geoffong11"},"content":"        super(task, isDone);","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"geoffong11"},"content":"     * Returns new Todo object that is marked","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"geoffong11"},"content":"     * @return Todo object that is marked","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"geoffong11"},"content":"    public Todo done() {","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"geoffong11"},"content":"        return new Todo(super.getTask(), true);","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"geoffong11"},"content":"     * Returns new Todo object that is unmarked","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"geoffong11"},"content":"     * @return Todo object that is unmarked","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"geoffong11"},"content":"    public Todo undone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"geoffong11"},"content":"        return new Todo(super.getTask(), false);","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"geoffong11"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"geoffong11"},"content":"     * Returns format of string to be stored in hard disk","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"geoffong11"},"content":"     * @return string","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"geoffong11"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"geoffong11"},"content":"    public String storageText() {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"geoffong11"},"content":"        return this.toString();","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"geoffong11"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"geoffong11"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"geoffong11"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"geoffong11":63}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"geoffong11":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"geoffong11":19}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"public class EventTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"    public void testStorageText() {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"            assertEquals(\"[E][ ] trying books /from 2015-07-09 /to 2017-01-10\"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"                    , new Event(\"trying books /from 2015-07-09 /to 2017-01-10\").storageText());","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"geoffong11":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"geoffong11"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"geoffong11"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"geoffong11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"geoffong11"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"geoffong11"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"geoffong11"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"geoffong11"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"geoffong11"},"content":"    public void markTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"geoffong11"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"geoffong11"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"geoffong11"},"content":"            tasks.add(new Todo(\"hello\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"geoffong11"},"content":"            assertEquals(\"Nice! I\u0027ve marked this task as done:\\n[T][X] hello\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"geoffong11"},"content":"                    , new TaskList(tasks).mark(\"1\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"geoffong11"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"geoffong11"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"geoffong11"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"geoffong11"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"geoffong11"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"geoffong11"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"geoffong11":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"geoffong11"},"content":"Hello","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"geoffong11"},"content":"todo books","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"geoffong11"},"content":"deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"geoffong11"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"geoffong11":4}}]
