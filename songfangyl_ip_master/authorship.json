[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    archiveBaseName \u003d \"NiHao\"","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"songfangyl":21,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"# User Guide for NiHao","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"### Managing task","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"There is three type of task in this program:","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"1. Todo task: A task with description.","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"2. Deadline task: A task with deadline and description.","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"3. Event task: A task with start date, end date and description.","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"\u003cp\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"User can add and delete these task.\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"User can mark a task as done and unmark a task as not done.\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"### Saving the data","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"Task list data are saved in the hard disk automatically after any command that changes the data.\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"There is __no__ need to save manually.","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"### Searching task","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"User can find a task with certain keyword or list out all the tasks.","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"### Detect duplicate","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"User are not allowed to add the exact same task into task list.\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"i.e","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"### Adds a todo task: `todo`","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"Adds a todo task into task list. \u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"Format: `todo DESCRIPTION` \u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"Example of usage: \u003cbr /\u003e ","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"`todo read book`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"Expected outcome:","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"Got it, I\u0027ve added this task:","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    [T][] read book","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"### Adds a deadline task: `deadline`","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"Adds a deadline task into task list.\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"Format: `deadline DESCRIPTION /by YYYY-MM-DD`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"Examples of usage:\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"`deadline return book /by 2023-09-03`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"Expected outcome:","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"Got it, I\u0027ve added this task:","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"    [D][] return book (by: Sep 3 2023)","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"Now you have 7 tasks in the list.","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"### Adds an event task: `event`","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"Adds a event task into task list.\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"Format: `event DESCRIPTION /from YYYY-MM-DD /to YYYY-MM-DD`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"Example of usage: \u003c/br\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"`event exam /from 2023-09-03 /to 2023-09-13`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"Got it, I\u0027ve added this task:","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"    [E][] exam (from: Sep 3 2023 to: Sep 13 2023)","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"Now you have 8 tasks in the list.","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"### Find a task: `find`","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"Finds task where its description contain any of the given keywords.\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"Format: `find KEYWORD`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"Example of usage: \u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"`find book`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"Expected outcome:","lastModifiedDate":"2023-09-17"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-17"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"1.[T][] read book","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"2.[D][] return book (by: Sep 3 2023)","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"### Lists all the tasks: `list`","lastModifiedDate":"2023-09-17"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"Lists all the tasks that you have add inside the task list.\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"Format: `list`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"Expected outcome:","lastModifiedDate":"2023-09-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-17"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"1.[T][] read book","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"2.[D][] return book (by: Sep 3 2023)","lastModifiedDate":"2023-09-17"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"3.[E][] exam (from: Sep 3 2023 to: Sep 13 2023)","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"### Mark a task: `mark`","lastModifiedDate":"2023-09-17"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"Mark the specified task from task list as done.\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"Format: `mark INDEX`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"Example of usage:\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"`mark 1`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-09-17"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-17"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"    [T][] read book","lastModifiedDate":"2023-09-17"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"### Unmark a task: `unmark`","lastModifiedDate":"2023-09-17"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"Unmark the specified task from task list as not done.\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"Format: `unmark INDEX`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"Example of usage:\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"`unmark 2`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"Expected outcome:","lastModifiedDate":"2023-09-17"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-17"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"    [T][] read book","lastModifiedDate":"2023-09-17"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"### Delete a task: `delete`","lastModifiedDate":"2023-09-17"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"Delete the specified task from task list.\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"Format: `delete INDEX`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"Example of usage:\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"`delete 2`\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":117,"author":{"gitId":"songfangyl"},"content":"Expected outcome:","lastModifiedDate":"2023-09-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":119,"author":{"gitId":"songfangyl"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-17"},{"lineNumber":120,"author":{"gitId":"songfangyl"},"content":"    [T][] read book","lastModifiedDate":"2023-09-17"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"Now you have 7 tasks in the list.","lastModifiedDate":"2023-09-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-17"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2023-09-17"},{"lineNumber":125,"author":{"gitId":"songfangyl"},"content":"Exits the program.\u003cbr /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":126,"author":{"gitId":"songfangyl"},"content":"Format: `exit`","lastModifiedDate":"2023-09-17"},{"lineNumber":127,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"songfangyl":103,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"    private UiManager uiManager;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"    public Duke() {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"        this(\"data/tasks.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"     * Constructs duke.","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"     * @param filePath File path of the save file.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        uiManager \u003d new UiManager();","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"     * Gets the response according to the input.","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"     * @param input String input by user.","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"     * @return Output string according to the input string.","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"            Command c \u003d Parser.parseCommand(input.trim());","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"            return c.execute(tasks, uiManager, storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"songfangyl":44,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"     * Constructs duke exception.","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"     * @param errorMessage The message to be shown.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"songfangyl":12}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"songfangyl":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"            scene.getStylesheets().add(\"style/styles.css\");","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"            stage.setTitle(\"NiHao\");","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"songfangyl":33}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"     * Parses the input string into command which can be executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"     * @param input String read by ui and to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"     * @return The corresponding command.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If the input string has a wrong format.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    public static Command parseCommand(String input) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        String command \u003d inputArr[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        switch (command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"            return parseListCommand(inputArr);","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"            return parseTodoCommand(inputArr);","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"            return parseDeadlineCommand(inputArr);","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        case \"event\":","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"            return parseEventCommand(inputArr);","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-11"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"            return parseMarkCommand(inputArr);","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"            return parseUnmarkCommand(inputArr);","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"            return parseDeleteCommand(inputArr);","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        case \"find\":","lastModifiedDate":"2023-09-11"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"            return parseFindCommand(inputArr);","lastModifiedDate":"2023-09-11"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        case \"exit\":","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        case \"\":","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"            return new DoNothingCommand();","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"        default:","lastModifiedDate":"2023-09-11"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-11"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"     * Parses the input with string array format to the corresponding find command.","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"     * @param inputArr Input string array.","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"     * @return The corresponding find command.","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If the input string has a wrong format.","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"    private static FindCommand parseFindCommand(String[] inputArr) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"OOPS!!! The description of a find cannot be empty.\");","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"        if (inputArr.length \u003e 2) {","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"You only allowed to type ONE keyword!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"        return new FindCommand(inputArr[1]);","lastModifiedDate":"2023-09-11"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"     * Parses the input with string array format to the corresponding delete command.","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"     * @param inputArr Input string array.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"     * @return The corresponding delete command.","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If the input string has a wrong format.","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"    private static DeleteCommand parseDeleteCommand(String[] inputArr) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"OOPS!!! The description of a delete cannot be empty.\");","lastModifiedDate":"2023-09-11"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"        if (inputArr[1].split(\" \").length \u003e 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Invalid delete command ?_? \" +","lastModifiedDate":"2023-09-11"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"                    \"this command should follow by only ONE INTEGER\");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        int index;","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"            index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Please type in INTEGER after this command ^v^\");","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"        return new DeleteCommand(index - 1);","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"     * Parses the input with string array format to the corresponding unmark command.","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"     * @param inputArr Input string array.","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"     * @return The corresponding unmark command.","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If the input string has a wrong format.","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"    private static UnmarkCommand parseUnmarkCommand(String[] inputArr) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"OOPS!!! The description of a unmark cannot be empty.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"        if (inputArr[1].split(\" \").length \u003e 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Invalid unmark command ?_? \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"                    \"this command should follow by only ONE INTEGER\");","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"songfangyl"},"content":"        int index;","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"songfangyl"},"content":"            index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2023-09-11"},{"lineNumber":120,"author":{"gitId":"songfangyl"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Please type in INTEGER after this command ^v^\");","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"        return new UnmarkCommand(index - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":125,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":126,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"songfangyl"},"content":"     * Parses the input with string array format to the corresponding mark command.","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"songfangyl"},"content":"     * @param inputArr Input string array.","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"songfangyl"},"content":"     * @return The corresponding mark command.","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If the input string has a wrong format.","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"songfangyl"},"content":"    private static MarkCommand parseMarkCommand(String[] inputArr) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"songfangyl"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"OOPS!!! The description of a mark cannot be empty.\");","lastModifiedDate":"2023-09-11"},{"lineNumber":137,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"songfangyl"},"content":"        if (inputArr[0].split(\" \").length \u003e 1) {","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Invalid mark command ?_? \" +","lastModifiedDate":"2023-09-11"},{"lineNumber":140,"author":{"gitId":"songfangyl"},"content":"                    \"this command should follow by only ONE INTEGER\");","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"songfangyl"},"content":"        int index;","lastModifiedDate":"2023-09-11"},{"lineNumber":143,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"songfangyl"},"content":"            index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2023-09-11"},{"lineNumber":145,"author":{"gitId":"songfangyl"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Please type in INTEGER after this command ^v^\");","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"songfangyl"},"content":"        return new MarkCommand(index - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":150,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":151,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":152,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"songfangyl"},"content":"     * Parses the input with string array format to the corresponding event command.","lastModifiedDate":"2023-09-12"},{"lineNumber":154,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"songfangyl"},"content":"     * @param inputArr Input string array.","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"songfangyl"},"content":"     * @return The corresponding event command.","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If the input string has a wrong format.","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"songfangyl"},"content":"    private static EventCommand parseEventCommand(String[] inputArr) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":160,"author":{"gitId":"songfangyl"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":161,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-09-11"},{"lineNumber":162,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"songfangyl"},"content":"        String detail \u003d inputArr[1];","lastModifiedDate":"2023-09-11"},{"lineNumber":164,"author":{"gitId":"songfangyl"},"content":"        String[] detailArr \u003d detail.split(\" /from \", 2);","lastModifiedDate":"2023-09-11"},{"lineNumber":165,"author":{"gitId":"songfangyl"},"content":"        if (detailArr.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-11"},{"lineNumber":166,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Ouuuu, I think you miss some information, try again!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":167,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":168,"author":{"gitId":"songfangyl"},"content":"        String description \u003d detailArr[0];","lastModifiedDate":"2023-09-11"},{"lineNumber":169,"author":{"gitId":"songfangyl"},"content":"        String time \u003d detailArr[1];","lastModifiedDate":"2023-09-11"},{"lineNumber":170,"author":{"gitId":"songfangyl"},"content":"        String[] timeArr \u003d time.split(\" /to \", 2);","lastModifiedDate":"2023-09-11"},{"lineNumber":171,"author":{"gitId":"songfangyl"},"content":"        if (timeArr.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-11"},{"lineNumber":172,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Ouuuu, I think you miss some information, try again!\");","lastModifiedDate":"2023-09-11"},{"lineNumber":173,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":174,"author":{"gitId":"songfangyl"},"content":"        String start \u003d timeArr[0];","lastModifiedDate":"2023-09-11"},{"lineNumber":175,"author":{"gitId":"songfangyl"},"content":"        String end \u003d timeArr[1];","lastModifiedDate":"2023-09-11"},{"lineNumber":176,"author":{"gitId":"songfangyl"},"content":"        LocalDate startDate;","lastModifiedDate":"2023-09-11"},{"lineNumber":177,"author":{"gitId":"songfangyl"},"content":"        LocalDate endDate;","lastModifiedDate":"2023-09-11"},{"lineNumber":178,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":179,"author":{"gitId":"songfangyl"},"content":"            startDate \u003d LocalDate.parse(start);","lastModifiedDate":"2023-09-11"},{"lineNumber":180,"author":{"gitId":"songfangyl"},"content":"            endDate \u003d LocalDate.parse(end);","lastModifiedDate":"2023-09-11"},{"lineNumber":181,"author":{"gitId":"songfangyl"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":182,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"There is something wrong with your date! format: yyyy-mm-dd\");","lastModifiedDate":"2023-09-11"},{"lineNumber":183,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":184,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"songfangyl"},"content":"        return new EventCommand(description, startDate, endDate);","lastModifiedDate":"2023-09-11"},{"lineNumber":186,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":187,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":188,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"songfangyl"},"content":"     * Parses the input with string array format to the corresponding deadline command.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"songfangyl"},"content":"     * @param inputArr Input string array.","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"songfangyl"},"content":"     * @return The corresponding deadline command.","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If the input string has a wrong format.","lastModifiedDate":"2023-09-12"},{"lineNumber":194,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"songfangyl"},"content":"    private static DeadlineCommand parseDeadlineCommand(String[] inputArr) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":196,"author":{"gitId":"songfangyl"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-11"},{"lineNumber":197,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-11"},{"lineNumber":198,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":199,"author":{"gitId":"songfangyl"},"content":"        String details \u003d inputArr[1];","lastModifiedDate":"2023-09-11"},{"lineNumber":200,"author":{"gitId":"songfangyl"},"content":"        String[] detailsArr \u003d details.split(\" /by \", 2);","lastModifiedDate":"2023-09-11"},{"lineNumber":201,"author":{"gitId":"songfangyl"},"content":"        if (detailsArr.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-11"},{"lineNumber":202,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Do you forget to add a deadline for the task?\");","lastModifiedDate":"2023-09-11"},{"lineNumber":203,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":204,"author":{"gitId":"songfangyl"},"content":"        String description \u003d detailsArr[0];","lastModifiedDate":"2023-09-11"},{"lineNumber":205,"author":{"gitId":"songfangyl"},"content":"        String by \u003d detailsArr[1];","lastModifiedDate":"2023-09-11"},{"lineNumber":206,"author":{"gitId":"songfangyl"},"content":"        LocalDate byDate;","lastModifiedDate":"2023-09-11"},{"lineNumber":207,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":208,"author":{"gitId":"songfangyl"},"content":"            byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-09-11"},{"lineNumber":209,"author":{"gitId":"songfangyl"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":210,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"There is something wrong with your date! format: yyyy-mm-dd\");","lastModifiedDate":"2023-09-11"},{"lineNumber":211,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":212,"author":{"gitId":"songfangyl"},"content":"        return new DeadlineCommand(description, byDate);","lastModifiedDate":"2023-09-11"},{"lineNumber":213,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":214,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":216,"author":{"gitId":"songfangyl"},"content":"     * Parses the input with string array format to the corresponding todo command.","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"songfangyl"},"content":"     * @param inputArr Input string array.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"songfangyl"},"content":"     * @return The corresponding todo command.","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If the input string has a wrong format.","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"songfangyl"},"content":"    private static TodoCommand parseTodoCommand(String[] inputArr) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":223,"author":{"gitId":"songfangyl"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-11"},{"lineNumber":224,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-11"},{"lineNumber":225,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":226,"author":{"gitId":"songfangyl"},"content":"        String des \u003d inputArr[1];","lastModifiedDate":"2023-09-11"},{"lineNumber":227,"author":{"gitId":"songfangyl"},"content":"        return new TodoCommand(des);","lastModifiedDate":"2023-09-11"},{"lineNumber":228,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":229,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":230,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"songfangyl"},"content":"     * Parses the input with string array format to the corresponding list command.","lastModifiedDate":"2023-09-12"},{"lineNumber":232,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"songfangyl"},"content":"     * @param inputArr Input string array.","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"songfangyl"},"content":"     * @return The corresponding list command.","lastModifiedDate":"2023-09-12"},{"lineNumber":235,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If the input string has a wrong format.","lastModifiedDate":"2023-09-12"},{"lineNumber":236,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":237,"author":{"gitId":"songfangyl"},"content":"    private static ListCommand parseListCommand(String[] inputArr) throws DukeException {","lastModifiedDate":"2023-09-11"},{"lineNumber":238,"author":{"gitId":"songfangyl"},"content":"        if (inputArr.length \u003e 1) {","lastModifiedDate":"2023-09-11"},{"lineNumber":239,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Invalid list command\");","lastModifiedDate":"2023-09-11"},{"lineNumber":240,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":241,"author":{"gitId":"songfangyl"},"content":"        return new ListCommand();","lastModifiedDate":"2023-09-11"},{"lineNumber":242,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":243,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":244,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":245,"author":{"gitId":"songfangyl"},"content":"     * Parses the string with saving format into task.","lastModifiedDate":"2023-09-01"},{"lineNumber":246,"author":{"gitId":"songfangyl"},"content":"     * @param input String with saving format.","lastModifiedDate":"2023-09-01"},{"lineNumber":247,"author":{"gitId":"songfangyl"},"content":"     * @return The corresponding task.","lastModifiedDate":"2023-09-01"},{"lineNumber":248,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":249,"author":{"gitId":"songfangyl"},"content":"    public static Task parseSaveFile(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":250,"author":{"gitId":"songfangyl"},"content":"        String[] inputArr \u003d input.split(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"songfangyl"},"content":"        Task temp;","lastModifiedDate":"2023-08-30"},{"lineNumber":252,"author":{"gitId":"songfangyl"},"content":"        String des \u003d inputArr[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":253,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":254,"author":{"gitId":"songfangyl"},"content":"        if (inputArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":255,"author":{"gitId":"songfangyl"},"content":"            temp \u003d new Todo(des);","lastModifiedDate":"2023-08-30"},{"lineNumber":256,"author":{"gitId":"songfangyl"},"content":"        } else if (inputArr.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":257,"author":{"gitId":"songfangyl"},"content":"            String by \u003d inputArr[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"songfangyl"},"content":"            temp \u003d new Deadline(des, LocalDate.parse(by));","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"songfangyl"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":260,"author":{"gitId":"songfangyl"},"content":"            String from \u003d inputArr[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":261,"author":{"gitId":"songfangyl"},"content":"            String to \u003d inputArr[3];","lastModifiedDate":"2023-08-30"},{"lineNumber":262,"author":{"gitId":"songfangyl"},"content":"            temp \u003d new Event(des, LocalDate.parse(from), LocalDate.parse(to));","lastModifiedDate":"2023-08-30"},{"lineNumber":263,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":264,"author":{"gitId":"songfangyl"},"content":"        if (inputArr[0].equals(\"1\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":265,"author":{"gitId":"songfangyl"},"content":"            temp.mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":267,"author":{"gitId":"songfangyl"},"content":"        return temp;","lastModifiedDate":"2023-08-30"},{"lineNumber":268,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":269,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":269}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"    private String path;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"     * Constructs storage.","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"     * @param path The path to the save file.","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"     * Saves the task list into a file located at the certain path.","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"     * @param taskList Task list that going to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If catch any IOException.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"                fw.write(taskList.getTask(i).saveString() + \u0027\\n\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"            fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Duke! \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"     * Loads the save file from the save file and convert it into array list.","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"     * @return Array list that store the task located in the save file.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If the save file not found.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        Scanner sc;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"            sc \u003d new Scanner(f);","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"            File folder \u003d new File(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"            folder.mkdir();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Hi, you are the first time using this app right\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"            Task temp \u003d Parser.parseSaveFile(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"            taskList.add(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"        sc.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"        return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":69}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"     * Constructs task list.","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"     * Constructs task list in another way.","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"     * @param tasks Array list that already store tasks inside.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"     * Returns the number of the tasks inside array list.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"     * @return The number of the tasks inside array list.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    public int size() {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"     * Returns the task at the index i.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"     * @param i Index of the task list that going to be access.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"     * @return The task at the index i.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If the index i out of the bound.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"    public Task getTask(int i) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        if (i \u003c 0 || i \u003e\u003d size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Index out the bounds, try another index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"     * Adds task into the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"     * @param task Task that going to be added into task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        detectDuplicate(task);","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"     * @param i Index of the task that going to be mark as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If index i out of the bounds.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"    public void markTask(int i) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"        if (i \u003c 0 || i \u003e\u003d size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Index out the bounds, try another index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"        tasks.get(i).mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"     * Unmarks the task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"     * @param i Index of the task that going to be unmark as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If index in out of the bounds.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"    public void unmarkTask(int i) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        if (i \u003c 0 || i \u003e\u003d size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Index out the bounds, try another index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"        tasks.get(i).unmark();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"     * Deletes the task at index i.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"     * @param i Index of the task that going to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If index out the bounds.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"    public void deleteTask(int i) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"        if (i \u003c 0 || i \u003e\u003d size()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"            throw new DukeException(\"Index out the bounds, try another index\");","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"        tasks.remove(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"     * Finds all the tasks which contain the keyword.","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"     * @param keyword The keyword to be found.","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"     * @return The task list contains all the tasks which contains the keywords.","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"            if (task.isContains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"                newTaskList.add(task);","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"        assert newTaskList !\u003d null: \"The new task list should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"        return new TaskList(newTaskList);","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"    public void detectDuplicate(Task newTask) throws DukeException{","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"songfangyl"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"songfangyl"},"content":"            if (t.equals(newTask)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"songfangyl"},"content":"                throw new DukeException(\"This task already inside task list!\");","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":123}},{"path":"src/main/java/duke/UiManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"public class UiManager {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"    static final String LOGO \u003d \"    /\\\\_/\\\\  \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"            \"   ( o.o ) \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"            \"   \u003e ^ \u003c\\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"    static final String GREETING \u003d \"Hello(@.@), I\u0027m NiHao \\nWhat can I do for you?\";","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"    static final String EXIT \u003d \"Bye(T.T), Hope to see you again soon!\";","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    private Scanner sc;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"     * Constructs UI manager.","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    public UiManager() {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"     * Returns welcome message as a string.","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"     * @return Welcome message as a string.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    public static String getWelcomeMessage() {","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        return LOGO + \"\\n\" + GREETING + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"     * Returns goodbye message as a string.","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"     * @return Goodbye message as a strig.","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"    public String getGoodByeMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        return EXIT;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"     * Returns task list as a string format.","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"     * @param taskList The task list going to be returned as a string.","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"     * @return task list as a string format.","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException When the index out of the bounds.","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    public String getListMessage(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        assert taskList !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        String result \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"            result +\u003d (i + 1) + \".\" + taskList.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        return result;","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"     * Returns the message in string format when user mark a task.","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"     * @param task The task going to be marked.","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"     * @return The message in string format when user mark a task.","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"    public String getMarkMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"        assert task !\u003d null: \"Task should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"                \"    \" + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"     * Returns the unmark message in string format when user unmark a task.","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"     * @param task The task going to be unmarked.","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"     * @return The message in string format when user unmark a task","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"    public String getUnmarkMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"        assert task !\u003d null: \"Task should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"                \"    \" + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"     * Returns the message in string format when user add a task into task list.","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"     * @param task The task going to be added.","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"     * @param taskList The task list which stored tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"     * @return The message in string format when user add a task into task list.","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"    public String getAddTaskMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"        assert task !\u003d null: \"Task should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        assert taskList !\u003d null: \"Task list should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"        return \"Got it, I\u0027ve added this task:\\n    \"  +","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"                task.toString() + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"                \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"     * Returns the message in string format when user delete a task.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"     * @param task The task going to be deleted.","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"     * @param taskList The task list which stored tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"     * @return The message in string format when user delete a task.","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"    public String getDeleteMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"        assert task !\u003d null: \"Task should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"                \"    \" + task.toString() + \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"                \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"     * Returns the task list as another string format.","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"     * @param taskList The task list going to be converted to string.","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"songfangyl"},"content":"     * @return The task list as another string format.","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException If there is a index out of bounds.","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"songfangyl"},"content":"    public String getMatchingList(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"        String result \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"songfangyl"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"            result +\u003d (i + 1) + \".\" + taskList.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"songfangyl"},"content":"        return result;","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":128}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import duke.UiManager;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"     * Returns true if this is exit command.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"     * @return True if this is exit command.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"     * Executes this command.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"     * @param taskList Task list that this command need to access.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"     * @param uiManager The way command interact with user.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"     * @param storage Storage can store and load file where command need to execute","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"     * @throws DukeException When there is an exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    public abstract String execute(TaskList taskList, UiManager uiManager, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":27}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import duke.UiManager;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":" * This is a command to create a deadline task.","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    private LocalDate by;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"     * Constructs deadline command.","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"     * @param by Deadline of the deadline task.","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    public DeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    public String execute(TaskList taskList, UiManager uiManager, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        assert taskList !\u003d null: \"Task list should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        assert uiManager !\u003d null: \"UI manager should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        assert storage !\u003d null: \"Storage object should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        Task temp \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"        taskList.addTask(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        return uiManager.getAddTaskMessage(temp, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        if (obj instanceof DeadlineCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"            DeadlineCommand temp \u003d (DeadlineCommand) obj;","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"            if (temp.description.equals(temp.description) \u0026\u0026 this.by.equals(temp.by)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":55}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import duke.UiManager;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":" * This is a command to delete a task.","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    private int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"     * Constructs a delete command.","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"     * @param index The index of the task in the task list that going to be deleted.","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    public String execute(TaskList taskList, UiManager uiManager, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        assert taskList !\u003d null: \"Task list should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        assert uiManager !\u003d null: \"UI manager should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"        assert storage !\u003d null: \"Storage object should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        Task temp \u003d taskList.getTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        return uiManager.getDeleteMessage(temp, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        if (obj instanceof DeleteCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"            DeleteCommand temp \u003d (DeleteCommand) obj;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"            if (temp.index \u003d\u003d this.index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":49}},{"path":"src/main/java/duke/command/DoNothingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import duke.UiManager;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":" * This is a command that do nothing.","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"public class DoNothingCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    public String execute(TaskList taskList, UiManager uiManager, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"        return \"Try to say something!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":17}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import duke.UiManager;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":" * This is a command to create a event task.","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    private LocalDate from;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    private LocalDate to;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"     * Constructs event command.","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"     * @param from The start date of the event task.","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"     * @param to The end date of the event task.","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"    public EventCommand(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    public String execute(TaskList taskList, UiManager uiManager, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        assert taskList !\u003d null: \"Task list should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        assert uiManager !\u003d null: \"UI manager should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        assert storage !\u003d null: \"Storage object should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        Task temp \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        taskList.addTask(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        return uiManager.getAddTaskMessage(temp, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        if (obj instanceof EventCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"           EventCommand temp \u003d (EventCommand) obj;","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"            if (temp.from.equals(this.from) \u0026\u0026 temp.to.equals(this.to) \u0026\u0026 this.description.equals(temp.description)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":60}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import duke.UiManager;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":" * This is a command to exit this application.","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"        return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    public String execute(TaskList taskList, UiManager uiManager, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        assert taskList !\u003d null: \"Task list should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        assert uiManager !\u003d null: \"UI manager should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        assert storage !\u003d null: \"Storage object should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        Platform.exit();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        return null;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":27}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import duke.UiManager;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":" * This is a command to find  task in the task list.","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"    private String keyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"     * Constructs the find command.","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"     * @param keyword The keyword to find.","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"    public String execute(TaskList taskList, UiManager uiManager, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"        assert taskList !\u003d null: \"Task list should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        assert uiManager !\u003d null: \"UI manager should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        assert storage !\u003d null: \"Storage object should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"        return uiManager.getMatchingList(taskList.findTasks(keyword));","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"songfangyl":31}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import duke.UiManager;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":" * This is a command to list all the tasks in the task list.","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    public String execute(TaskList taskList, UiManager uiManager, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"        assert taskList !\u003d null: \"Task list should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"        assert uiManager !\u003d null: \"UI manager should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"        assert storage !\u003d null: \"Storage object should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"        return uiManager.getListMessage(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":21}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import duke.UiManager;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":" * This is a command to mark a task as done.","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    private int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"     * Constructs mark command.","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"     * @param index The index of the task in the task list that going to be marked.","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    public String execute(TaskList taskList, UiManager uiManager, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        assert taskList !\u003d null: \"Task list should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        assert uiManager !\u003d null: \"UI manager should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"        assert storage !\u003d null: \"Storage object should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        Task temp \u003d taskList.getTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        temp.mark();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        return uiManager.getMarkMessage(temp);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        if (obj instanceof MarkCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"            MarkCommand temp \u003d (MarkCommand) obj;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"            if (this.index \u003d\u003d temp.index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":50}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import duke.UiManager;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":" * This is a command to create todo task.","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"     * Constructs todo command.","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    public String execute(TaskList taskList, UiManager uiManager, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        assert taskList !\u003d null: \"Task list should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"        assert uiManager !\u003d null: \"UI manager should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        assert storage !\u003d null: \"Storage object should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        Task temp \u003d new Todo(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        taskList.addTask(temp);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        return uiManager.getAddTaskMessage(temp, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        if (obj instanceof TodoCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"            TodoCommand temp \u003d (TodoCommand)  obj;","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"            if (temp.description.equals(this.description)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":50}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import duke.UiManager;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":" * This is a command to unmark a task as not done.","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    private int index;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"     * Constructs a unmark command.","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"     * @param index The index of the task in the task list that going to be unmarked.","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    public String execute(TaskList taskList, UiManager uiManager, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        assert taskList !\u003d null: \"Task list should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        assert uiManager !\u003d null: \"UI manager should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"        assert storage !\u003d null: \"Storage object should not be null\";","lastModifiedDate":"2023-09-11"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        Task temp \u003d taskList.getTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        temp.unmark();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        return uiManager.getUnmarkMessage(temp);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        if (obj instanceof UnmarkCommand) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"            UnmarkCommand temp \u003d (UnmarkCommand) obj;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"            if (temp.index \u003d\u003d this.index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"songfangyl":49}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"     protected LocalDate byDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"     * Constructs deadline task.","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"     * @param byDate Deadline of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"     public Deadline(String description, LocalDate byDate) {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"         super(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"         this.byDate \u003d byDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"     }","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"     @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"     public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"         return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"                 byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"     }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"         return super.saveString() + \"/\" + byDate.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"            Deadline temp \u003d (Deadline) obj;","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"            if (!temp.byDate.equals(this.byDate)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"                return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"            } else if (!temp.description.equals(this.description)){","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"                return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"            return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"songfangyl":49}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"     * Constructs event task.","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"     * @param startDate The start time of the in a LocalDate format.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"     * @param endDate The end time of the event in a LocalDate format.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    public Event (String description, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"        super(description);","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"                \" (from: \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"                \" to: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        return super.saveString() + \"/\" + startDate.toString() + \"/\" + endDate.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"            Event temp \u003d (Event) obj;","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"            if (!temp.description.equals(this.description)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"                return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"            } else if (!temp.startDate.equals(this.startDate)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"                return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"            } else if (!temp.endDate.equals(this.endDate)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"                return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"            } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"songfangyl":59}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"    protected String description;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"     * Constructs task.","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"     * @return The icon which represent whether this task is done.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        return isDone ? \"X\": \" \";","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"     * Marks this task as done.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    public void mark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"     * Unmarks this task, mark this task as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"     * Returns the string with saving format of this task.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"     * @return String with savin format of this task.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"    public String saveString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        return isDone ? \"1/\" + description : \"0/\" + description;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"     * @return String representation of this object.","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"    public boolean isContains(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        String[] arr \u003d description.split(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"        for (String str: arr) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"            if (str.equals(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"songfangyl":65}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"     * Constructs todo task.","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"     * @param des Description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"    public Todo(String des) {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"        super(des);","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        if (obj instanceof Todo) {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"            Todo temp \u003d (Todo) obj;","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"            if (temp.description.equals(this.description)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"            } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"                return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"songfangyl":34}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    private FlowPane dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    private DialogBox(String text, Image img, Pos textPos) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        dialog.getChildren().add(new Text(text));","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        dialog.setAlignment(textPos);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        return new DialogBox(text, img, Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        var db \u003d new DialogBox(text, img, Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"songfangyl":64}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import duke.UiManager;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User4.jpg\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/NiHao.jpg\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"                DialogBox.getDukeDialog(UiManager.getWelcomeMessage(), dukeImage)","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        );","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"     * Initializes duke.","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"     * @param d The duke to be initialized.","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"songfangyl":63}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.scene.canvas.Canvas?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"        \u003cFlowPane fx:id\u003d\"dialog\" styleClass\u003d\"chat-bubble\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"                \u003cInsets top\u003d\"15.0\" right\u003d\"10.0\" bottom\u003d\"15.0\" left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"        \u003c/FlowPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" \u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"            \u003cclip\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"                \u003cCircle centerX\u003d\"49.5\" centerY\u003d\"49.5\" radius\u003d\"49.5\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"songfangyl":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"508.0\" AnchorPane.bottomAnchor\u003d\"7.0\" AnchorPane.leftAnchor\u003d\"5\" styleClass\u003d\"custom-textfield\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"        \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"7.0\" AnchorPane.rightAnchor\u003d\"5.0\" styleClass\u003d\"custom-button\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"6.0\" layoutY\u003d\"7.0\" prefHeight\u003d\"737.0\" prefWidth\u003d\"580.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"56.0\" AnchorPane.leftAnchor\u003d\"6.0\" AnchorPane.rightAnchor\u003d\"6.0\" AnchorPane.topAnchor\u003d\"7.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"735.0\" prefWidth\u003d\"575.0\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"                    \u003cstyle\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"                        -fx-background-color: #BFC9CA","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"                    \u003c/style\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    \u003cstyle\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        -fx-background-color: #BFC9CA","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    \u003c/style\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"songfangyl":27}},{"path":"src/test/java/duke/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"songfangyl":5}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandListCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"        Command command \u003d Parser.parseCommand(\"list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandTodoCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"        Command command \u003d Parser.parseCommand(\"todo sleeping\");","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"        assertEquals(new TodoCommand(\"sleeping\"), command);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandInvalidTodoCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"            Parser.parseCommand(\"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandDeadlineCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        Command command \u003d Parser.parseCommand(\"deadline Submit CS2103 IP /by 2023-09-01\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        assertEquals(new DeadlineCommand(\"Submit CS2103\", LocalDate.parse(\"2023-09-01\")), command);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandInvalidDeadlineCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"            Parser.parseCommand(\"deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"            assertEquals(\"OOPS!!! The description of a deadline cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandEventCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        Command command \u003d Parser.parseCommand(\"event Party /from 2023-01-01 /to 2023-01-02\");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        assertEquals(new EventCommand(\"Party\", LocalDate.parse(\"2023-01-01\"),","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"                LocalDate.parse(\"2023-01-02\")), command);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandInvalidEventCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"            Parser.parseCommand(\"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"            assertEquals(\"OOPS!!! The description of a event cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandMarkCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        Command command \u003d Parser.parseCommand(\"mark 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"        assertEquals(new MarkCommand(0), command);","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"        command \u003d Parser.parseCommand(\"mark 2\");","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        assertEquals(new MarkCommand(1), command);","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"        command \u003d Parser.parseCommand(\"mark 99\");","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        assertEquals(new MarkCommand(98), command);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandInvalidMarkCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"            Parser.parseCommand(\"mark a\");","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"            assertEquals(\"Please type in INTEGER after this command ^v^\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandUnmarkCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"        Command command \u003d Parser.parseCommand(\"unmark 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        assertEquals(new UnmarkCommand(0), command);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        command \u003d Parser.parseCommand(\"unmark 2\");","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"        assertEquals(new UnmarkCommand(1), command);","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"        command \u003d Parser.parseCommand(\"unmark 6\");","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"        assertEquals(new UnmarkCommand(5), command);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandInvalidUnmarkCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"            Parser.parseCommand(\"unmark a\");","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"            assertEquals(\"Please type in INTEGER after this command ^v^\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandDeleteCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"        Command command \u003d Parser.parseCommand(\"delete 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"        assertEquals(new DeleteCommand(0), command);","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"songfangyl"},"content":"        command \u003d Parser.parseCommand(\"delete 100\");","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"songfangyl"},"content":"        assertEquals(new DeleteCommand(99), command);","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandInvalidDeleteCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"            Parser.parseCommand(\"delete a\");","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"songfangyl"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"songfangyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"songfangyl"},"content":"            assertEquals(\"Please type in INTEGER after this command ^v^\", e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandExitCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"songfangyl"},"content":"        Command command \u003d Parser.parseCommand(\"exit\");","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"songfangyl"},"content":"        assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandDoNothingCommand() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"songfangyl"},"content":"        Command command \u003d Parser.parseCommand(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"songfangyl"},"content":"        assertTrue(command instanceof DoNothingCommand);","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"songfangyl"},"content":"    public void testParseCommandInvalidCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"songfangyl"},"content":"            Parser.parseCommand(\"haha\");","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"songfangyl"},"content":"            fail();","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"songfangyl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"songfangyl"},"content":"            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2023-09-17"},{"lineNumber":151,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"songfangyl":156}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"    public void testSizeEmptyList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    public void testSizeNonEmptyList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"        tasks.add(new Todo(\"Task 1\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        tasks.add(new Todo(\"Task 2\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    public void testGetTaskValidIndex() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"        Task task1 \u003d new Todo(\"Task 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        Task task2 \u003d new Todo(\"Task 2\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        tasks.add(task1);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        tasks.add(task2);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        assertEquals(task1, taskList.getTask(0));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"        assertEquals(task2, taskList.getTask(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"    public void testGetTaskInvalidIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.getTask(-1));","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"    public void testAddTask() throws DukeException{","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        Task task \u003d new Todo(\"Task\");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"    public void testMarkTaskValidIndex() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        Task task \u003d new Todo(\"Task\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        taskList.markTask(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"        assertEquals(task.getStatusIcon(), \"X\");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"    public void testMarkTaskInvalidIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.markTask(0));","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"    public void testUnmarkTaskValidIndex() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"        Task task \u003d new Todo(\"Task\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"        taskList.unmarkTask(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        assertEquals(task.getStatusIcon(), \" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"    public void testUnmarkTaskInvalidIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.unmarkTask(0));","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"    public void testDeleteTaskValidIndex() throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"        Task task1 \u003d new Todo(\"Task 1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        Task task2 \u003d new Todo(\"Task 2\");","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"        tasks.add(task1);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        tasks.add(task2);","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"        assertEquals(task2, taskList.getTask(0));","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"    public void testDeleteTaskInvalidIndex() {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.deleteTask(0));","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"songfangyl":108}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"public class DeadlineTest extends TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"        LocalDate byDate \u003d LocalDate.of(2023, 9, 10);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"        Deadline deadline \u003d new Deadline(\"Finish CS2103\", byDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"        assertEquals(\"[D][ ] Finish CS2103 (by: Sep 10 2023)\", deadline.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    public void testSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"        LocalDate byDate \u003d LocalDate.of(2023, 9, 10);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"        Deadline deadline \u003d new Deadline(\"Finish CS2101\", byDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"        assertEquals(\"0/Finish CS2101/2023-09-10\", deadline.saveString());","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"songfangyl":21}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"public class EventTest extends TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"        LocalDate startDate \u003d LocalDate.of(2023, 2, 14);","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"        LocalDate endDate \u003d LocalDate.of(2023, 2, 15);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"        Event event \u003d new Event(\"Dating with you\", startDate, endDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"        assertEquals(\"[E][ ] Dating with you (from: Feb 14 2023 to: Feb 15 2023)\", event.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    public void testSaveString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"        LocalDate startDate \u003d LocalDate.of(2023, 2, 14);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"        LocalDate endDate \u003d LocalDate.of(2023, 2, 15);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        Event event \u003d new Event(\"Dating with you\", startDate, endDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        assertEquals(\"0/Dating with you/2023-02-14/2023-02-15\", event.saveString());","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"songfangyl":24}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"public abstract class TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"songfangyl":5}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package duke.task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"public class TodoTest extends TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"    public void testToString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"        Task todo \u003d new Todo(\"Sleeping\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"        assertEquals(\"[T][ ] Sleeping\", todo.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"        Task todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"        todo.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"        assertEquals(\"X\", todo.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"songfangyl":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"deadline return book","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"event project meeting","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"event project meeting /from Mon 2pm to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"todo sleeping 10 hours","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"delete","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"delete -1","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"delete 100","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"delete 5","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"delete sleeping 10 hours","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"mark everything","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"mark 1 2 3 4","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"unmark 1 2","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"unmark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"Exit","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"exit","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"songfangyl":32}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"songfangyl":1,"-":20}}]
