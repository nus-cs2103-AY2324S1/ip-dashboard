[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"plugins {","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"checkstyle {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"repositories {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"dependencies {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"test {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"    testLogging {","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"        showExceptions true","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"        showCauses true","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ricketytoc"},"content":"application {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"ricketytoc"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"ricketytoc"},"content":"shadowJar {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ricketytoc"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"ricketytoc"},"content":"    archiveVersion \u003d \"1\"","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"ricketytoc"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"ricketytoc"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"ricketytoc"},"content":"run {","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"ricketytoc"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"ricketytoc"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":63}},{"path":"src/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"T/1/homework","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"T/1/homework 2","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"T/0/homework","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"T/0/homework","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"E/0/project meeting/2002-12-02T04:00/2002-12-02T05:00","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"D/0/project metting/2002-12-02T04:00","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"T/0/home","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"T/0/homew","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"T/0/ho","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"T/0/homework","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"T/0/homework","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"D/0/project meeting/2002-12-02T04:00","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ricketytoc":12}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"ricketytoc":8}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    private Richie richie \u003d new Richie(\"src/data.txt\");","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"            stage.setTitle(\"Richie\");","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setRichie(this.richie);","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"            //dialogContainer.heightProperty().addListener((observable -\u003e scrollPane.setV(1.0)));","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"ricketytoc":36}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"import java.lang.AssertionError;","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":" * Helps to break down the user input and determines what command objects to create","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"    private static LocalDateTime convertInputDateAndTimeIntoLocalDateTime(String input) throws RichieException {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"        // input is in the form of 2/12/2002 0400","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"            // Separates the date from the time","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"            String[] dateTimeArray \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"            String stringDate \u003d dateTimeArray[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"            String stringTime \u003d dateTimeArray[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"            // Separates the date into day, month and year, day being in index 0, month in index 1 and year in index 2","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"            // of the dayMonthYearArray","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"            String[] dayMonthYearArray \u003d stringDate.split(\"/\", 3);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"            int year \u003d Integer.parseInt(dayMonthYearArray[2]);","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"            assert (year \u003e 0):\"Invalid year\";","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"            int month \u003d Integer.parseInt(dayMonthYearArray[1]);","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"            assert (month \u003c\u003d 12 \u0026\u0026 month \u003e\u003d 1):\"Month should be between 1 and 12 inclusive\";","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"            int day \u003d Integer.parseInt(dayMonthYearArray[0]);","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"            assert (day \u003c\u003d 31 \u0026\u0026 day \u003e\u003d 1): \"Day should be between 1 and 31 inclusive\";","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"            LocalDate date \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"            int hours \u003d Integer.parseInt(stringTime.substring(0, 2));","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"            assert (hours \u003c\u003d 24 \u0026\u0026 hours \u003e\u003d 0): \"Hour should be between 0 and 24 inclusive\";","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"            int minutes \u003d Integer.parseInt(stringTime.substring(2, 4));","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"            assert (minutes \u003c\u003d 60 \u0026\u0026 minutes \u003e\u003d 0): \"Minutes should be between 0 and 60 inclusive\";","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"            LocalTime time \u003d LocalTime.of(hours, minutes);","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"            return dateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"ricketytoc"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"Date and Time entered is in the wrong format!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ricketytoc"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"Date and Time entered is in the wrong format!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"ricketytoc"},"content":"    private static Command parseMarkInput(String userInput) throws RichieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"ricketytoc"},"content":"        if (userInput.equals(\"mark\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"mark command should be entered in this format for example : \" +","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"ricketytoc"},"content":"                    \"\u0027mark 1\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"ricketytoc"},"content":"        if (!userInput.substring(0, 5).equals(\"mark \")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"mark command should be at the front of the command followed by a space\");","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"ricketytoc"},"content":"            // split into mark, and task index to mark elements in stringArray","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"ricketytoc"},"content":"            String[] stringArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"ricketytoc"},"content":"            int taskIndex \u003d Integer.parseInt(stringArray[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"ricketytoc"},"content":"            return new MarkCommand(taskIndex);","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"ricketytoc"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"Incomplete input, please specify which task to mark\");","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"ricketytoc"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"Invalid input, please enter a number\");","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"ricketytoc"},"content":"    private static Command parseTodoInput(String userInput) throws RichieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"ricketytoc"},"content":"        if (userInput.equals(\"todo\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"todo command should be entered in this format for example : \" +","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"ricketytoc"},"content":"                    \"\u0027todo homework\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"ricketytoc"},"content":"        if (!userInput.substring(0, 5).equals(\"todo \")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"todo command should be at the front of the command followed by a space\");","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"ricketytoc"},"content":"            String[] stringArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"ricketytoc"},"content":"            if (!stringArray[1].equals(\"\") \u0026\u0026 !stringArray[1].equals(\" \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"ricketytoc"},"content":"                return new TodoCommand(stringArray[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"ricketytoc"},"content":"            } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"ricketytoc"},"content":"                throw new RichieException(\"OOPS!! The todo description is empty!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"ricketytoc"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"ricketytoc"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"OOPS!! The todo description is empty!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"ricketytoc"},"content":"    private static Command parseFindInput(String userInput) throws RichieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"ricketytoc"},"content":"        if (userInput.equals(\"find\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"find command should be entered in this format for example : \" +","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"ricketytoc"},"content":"                    \"\u0027find project\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"ricketytoc"},"content":"        if (!userInput.substring(0, 5).equals(\"find \")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"find command should be at the front of the command followed by a space\");","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"ricketytoc"},"content":"            String[] stringArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"ricketytoc"},"content":"            String keyword \u003d stringArray[1];","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"ricketytoc"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"ricketytoc"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"Incomplete input, please specify what keyword to find\");","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"ricketytoc"},"content":"    private static Command parseEventInput(String userInput) throws RichieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"ricketytoc"},"content":"        if (userInput.equals(\"event\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"event command should be entered in this format for example : \" +","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"ricketytoc"},"content":"                    \"\u0027event homework /from 2/12/2002 1200 /to 2/12/2002 1300\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"ricketytoc"},"content":"        if (!userInput.substring(0, 6).equals(\"event \")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":120,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"todo command should be at the front of the command followed by a space\");","lastModifiedDate":"2023-09-14"},{"lineNumber":121,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":122,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"ricketytoc"},"content":"            String[] stringArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-14"},{"lineNumber":124,"author":{"gitId":"ricketytoc"},"content":"            if (!stringArray[1].contains(\"/from\") \u0026\u0026 !stringArray[1].equals(\"\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"ricketytoc"},"content":"                throw new RichieException(\"OOPS!! please enter \u0027/from\u0027 followed by a date and \"","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"ricketytoc"},"content":"                        + \"time that the task should start from\");","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"ricketytoc"},"content":"            } else if (!stringArray[1].contains(\"/to\") \u0026\u0026 !stringArray[1].equals(\"\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"ricketytoc"},"content":"                throw new RichieException(\"OOPS!! please enter \u0027/to\u0027 followed by a date and \"","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"ricketytoc"},"content":"                        + \"time that the task should end\");","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"ricketytoc"},"content":"            } else if (stringArray[1].split(\"/from\", 2)[0].equals(\"\")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"ricketytoc"},"content":"                throw new RichieException(\"OOPS!! The description of a event or the duration of the event \"","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"ricketytoc"},"content":"                        + \"is incomplete\");","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"ricketytoc"},"content":"            } else if (!stringArray[1].contains(\" /from \") || !stringArray[1].contains(\" /to \")) {","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"ricketytoc"},"content":"                throw new RichieException(\"OOPS!! please ensure that there are spaces before and after \"","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"ricketytoc"},"content":"                        + \"\u0027/from\u0027 and \u0027/to\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"ricketytoc"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"ricketytoc"},"content":"            String[] stringArray2 \u003d stringArray[1].split(\" /from \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"ricketytoc"},"content":"            String[] stringArray3 \u003d stringArray2[1].split(\" /to \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"ricketytoc"},"content":"            String stringFromDateTime \u003d stringArray3[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"ricketytoc"},"content":"            String stringToDateTime \u003d stringArray3[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"ricketytoc"},"content":"            return new EventCommand(stringArray2[0], convertInputDateAndTimeIntoLocalDateTime(stringFromDateTime),","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"ricketytoc"},"content":"                    convertInputDateAndTimeIntoLocalDateTime(stringToDateTime));","lastModifiedDate":"2023-09-02"},{"lineNumber":143,"author":{"gitId":"ricketytoc"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":144,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"OOPS!! The description of a event or the duration of the event is incomplete\");","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"ricketytoc"},"content":"    private static Command parseDeleteInput(String userInput) throws RichieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"ricketytoc"},"content":"        if (userInput.equals(\"delete\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"delete command should be entered in this format for example : \" +","lastModifiedDate":"2023-09-22"},{"lineNumber":151,"author":{"gitId":"ricketytoc"},"content":"                    \"\u0027delete 1\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":153,"author":{"gitId":"ricketytoc"},"content":"        if (!userInput.substring(0, 7).equals(\"delete \")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"delete command should be at the front of the command followed by a space\");","lastModifiedDate":"2023-09-22"},{"lineNumber":155,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":156,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"ricketytoc"},"content":"            // split into delete, and task index to delete elements in stringArray","lastModifiedDate":"2023-09-22"},{"lineNumber":158,"author":{"gitId":"ricketytoc"},"content":"            String[] stringArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-14"},{"lineNumber":159,"author":{"gitId":"ricketytoc"},"content":"            int taskIndex \u003d Integer.parseInt(stringArray[1]);","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"ricketytoc"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"ricketytoc"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"Incomplete input, please specify which task to delete\");","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"ricketytoc"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"Invalid input, please enter a number\");","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"ricketytoc"},"content":"    private static Command parseDeadlineInput(String userInput) throws RichieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"ricketytoc"},"content":"        if (userInput.equals(\"deadline\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":170,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"deadline command should be entered in this format for example : \" +","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"ricketytoc"},"content":"                    \"\u0027deadline do homework /by 2/12/2002 0400\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"ricketytoc"},"content":"        if (!userInput.substring(0, 9).equals(\"deadline \")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":174,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"deadline command should be followed by a space\");","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"ricketytoc"},"content":"            String[] stringArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"ricketytoc"},"content":"            if (!stringArray[1].contains(\"/by\") \u0026\u0026 !stringArray[1].equals(\"\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":179,"author":{"gitId":"ricketytoc"},"content":"                throw new RichieException(\"OOPS!! please enter \u0027/by\u0027 followed by a date and \" +","lastModifiedDate":"2023-09-22"},{"lineNumber":180,"author":{"gitId":"ricketytoc"},"content":"                        \"time that the task should be done by\");","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"ricketytoc"},"content":"            } else if (stringArray[1].split(\"/by\", 2)[0].equals(\"\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":182,"author":{"gitId":"ricketytoc"},"content":"                throw new RichieException(\"OOPS!! Either the description or the deadline is empty!\");","lastModifiedDate":"2023-09-22"},{"lineNumber":183,"author":{"gitId":"ricketytoc"},"content":"            } else if (!stringArray[1].contains(\" /by \")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":184,"author":{"gitId":"ricketytoc"},"content":"                throw new RichieException(\"OOPS!! please ensure that there are spaces before and after \u0027/by\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":185,"author":{"gitId":"ricketytoc"},"content":"            }","lastModifiedDate":"2023-09-22"},{"lineNumber":186,"author":{"gitId":"ricketytoc"},"content":"            String[] stringArray2 \u003d stringArray[1].split(\" /by \", 2);","lastModifiedDate":"2023-09-22"},{"lineNumber":187,"author":{"gitId":"ricketytoc"},"content":"            LocalDateTime dateTime \u003d convertInputDateAndTimeIntoLocalDateTime(stringArray2[1]);","lastModifiedDate":"2023-09-22"},{"lineNumber":188,"author":{"gitId":"ricketytoc"},"content":"            return new DeadlineCommand(stringArray2[0], dateTime);","lastModifiedDate":"2023-09-22"},{"lineNumber":189,"author":{"gitId":"ricketytoc"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":190,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"OOPS!! Either the description or the deadline is empty!\");","lastModifiedDate":"2023-09-22"},{"lineNumber":191,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":192,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":193,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":194,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":196,"author":{"gitId":"ricketytoc"},"content":"     * Helps to decode the user input string and decides what Command object to return based on the user input.","lastModifiedDate":"2023-09-22"},{"lineNumber":197,"author":{"gitId":"ricketytoc"},"content":"     * It will also throw the correct errors depending on the user input","lastModifiedDate":"2023-09-22"},{"lineNumber":198,"author":{"gitId":"ricketytoc"},"content":"     * @param userInput String that the user entered","lastModifiedDate":"2023-09-22"},{"lineNumber":199,"author":{"gitId":"ricketytoc"},"content":"     * @return A Command object depending on what command was called by the user","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"ricketytoc"},"content":"     * @throws RichieException Gives useful exception messages depending on the user input","lastModifiedDate":"2023-09-22"},{"lineNumber":201,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":202,"author":{"gitId":"ricketytoc"},"content":"    public static Command parse(String userInput) throws RichieException {","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"ricketytoc"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"ricketytoc"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":205,"author":{"gitId":"ricketytoc"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":206,"author":{"gitId":"ricketytoc"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-22"},{"lineNumber":207,"author":{"gitId":"ricketytoc"},"content":"        } else if (userInput.length() \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":208,"author":{"gitId":"ricketytoc"},"content":"            return parseMarkInput(userInput);","lastModifiedDate":"2023-09-22"},{"lineNumber":209,"author":{"gitId":"ricketytoc"},"content":"        } else if (userInput.length() \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":210,"author":{"gitId":"ricketytoc"},"content":"            return parseTodoInput(userInput);","lastModifiedDate":"2023-09-22"},{"lineNumber":211,"author":{"gitId":"ricketytoc"},"content":"        } else if (userInput.length() \u003e\u003d 4 \u0026\u0026 userInput.substring (0, 4).equals(\"find\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":212,"author":{"gitId":"ricketytoc"},"content":"            return parseFindInput(userInput);","lastModifiedDate":"2023-09-22"},{"lineNumber":213,"author":{"gitId":"ricketytoc"},"content":"        } else if (userInput.length() \u003e\u003d 5 \u0026\u0026 userInput.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":214,"author":{"gitId":"ricketytoc"},"content":"            return parseEventInput(userInput);","lastModifiedDate":"2023-09-22"},{"lineNumber":215,"author":{"gitId":"ricketytoc"},"content":"        } else if (userInput.length() \u003e\u003d 6 \u0026\u0026 userInput.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":216,"author":{"gitId":"ricketytoc"},"content":"            return parseDeleteInput(userInput);","lastModifiedDate":"2023-09-22"},{"lineNumber":217,"author":{"gitId":"ricketytoc"},"content":"        } else if (userInput.length() \u003e\u003d 8 \u0026\u0026 userInput.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":218,"author":{"gitId":"ricketytoc"},"content":"            return parseDeadlineInput(userInput);","lastModifiedDate":"2023-09-22"},{"lineNumber":219,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":220,"author":{"gitId":"ricketytoc"},"content":"        throw new RichieException(\"No command detected, please enter a valid command\");","lastModifiedDate":"2023-09-22"},{"lineNumber":221,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":222,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":222}},{"path":"src/main/java/duke/Richie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":" * Entry point class for the Richie application","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"public class Richie {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"     * Constructor for a Richie application","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"     * @param filePath String representing the filePath of the data text file","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"    public Richie(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"    public String init() {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"        return ui.getCurrentMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"            Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"            command.execute(this.ui, this.storage, this.tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"            if (command instanceof ExitCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"        return ui.getCurrentMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":51}},{"path":"src/main/java/duke/RichieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":" * Represents an exception that is unique to the Richie application","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"public class RichieException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"     * Constructs a RichieException with a default error message telling the user that it does not understand the user","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"     * input","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"    public RichieException() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"        super(\"OOPS!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"     * Constructs a RichieException with a specified message","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"     * @param message Error message to be shown to the user","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"    public RichieException(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"        super(message);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":23}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"import java.io.File;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":" * Storage class that handles reading and writing to the data text file","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"    private String filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"     * Constructor for a new Storage object","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"     * @param filePath String that represents the file path that the Storage object should read and write to","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"     * Loads the data stored in the data text file and returns the data as an ArrayList of String","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"     * where each element of the ArrayList is each respective line in the text file","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"     * @return ArrayList of string that represents each line of the data in the text file","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"     * @throws RichieException When there is an IOException when reading and writing to the text file","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"    public ArrayList\u003cString\u003e load() throws RichieException {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"        ArrayList\u003cString\u003e resultStringArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"            File textFile \u003d new File(this.filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"            if (textFile.createNewFile()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"                System.out.println(\"File created: \" + textFile.getName());","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"            String taskString;","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"            while ((taskString \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"                resultStringArray.add(taskString);","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"ricketytoc"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ricketytoc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"Error loading the file\");","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ricketytoc"},"content":"        return resultStringArray;","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"ricketytoc"},"content":"     * Saves the tasks that are currently in the TaskList object of the Richie application into the data text file","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"ricketytoc"},"content":"     * by writing to it","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"ricketytoc"},"content":"     * @param taskList ArrayList of Task objects denoting the tasks that are currently on the tasklist","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ricketytoc"},"content":"    public void saveCurrentTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"ricketytoc"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(this.filePath));","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"ricketytoc"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"ricketytoc"},"content":"                bufferedWriter.append(task.toDataString());","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"ricketytoc"},"content":"                bufferedWriter.append(\"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"ricketytoc"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"ricketytoc"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"ricketytoc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"ricketytoc"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":73}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":" * This class represents a list of tasks and is responsible for changing the task lists for example when","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":" * deleting/adding tasks and marking tasks as done/undone","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"     * Constructor for a TaskList object","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"     * @param data ArrayList of String that represents the data read in from the data text file by the Storage object.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"    public TaskList(ArrayList\u003cString\u003e data) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"        for (String taskDataString : data) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"            Task task \u003d deconstructStringIntoTask(taskDataString);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"            this.taskList.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"     * Constructor for a TaskList object where there is no data","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"    private Task deconstructStringIntoTask(String line) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"        // parameter line is in the form E/0/project meeting/2002-12-02T04:00/2002-12-02T05:00","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"        String[] array \u003d line.split(\"/\", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"        if (array[0].equals(\"T\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"            // splits the String T/0/homework into T, 0, and homework elements of arrayT","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"            String[] arrayT \u003d line.split(\"/\", 3);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"            Todo task \u003d new Todo(arrayT[2]);","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"            // 1 means that task is done , 0 means task is undone","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"ricketytoc"},"content":"            if (arrayT[1].equals(\"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ricketytoc"},"content":"                task.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ricketytoc"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ricketytoc"},"content":"            return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ricketytoc"},"content":"        } else if (array[0].equals(\"D\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"ricketytoc"},"content":"            // splits the String D/0/project/2002-12-02T04:00 into","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"ricketytoc"},"content":"            // D, 0, project, 2002-12-02T04:00 elements of arrayD","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"ricketytoc"},"content":"            String[] arrayD \u003d line.split(\"/\", 4);","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"ricketytoc"},"content":"            LocalDateTime byDateTime \u003d LocalDateTime.parse(arrayD[3]);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"ricketytoc"},"content":"            Deadline task \u003d new Deadline(arrayD[2], byDateTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"ricketytoc"},"content":"            if (arrayD[1].equals(\"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"ricketytoc"},"content":"                task.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"ricketytoc"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"ricketytoc"},"content":"            return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"ricketytoc"},"content":"        } else if (array[0].equals(\"E\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"ricketytoc"},"content":"            // splits the String E/0/project meeting/2002-12-02T04:00/2002-12-02T05:00 into","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"ricketytoc"},"content":"            // E, 0, project meeting, 2002-12-02T04:00 and 2002-12-02T05:00 elements of arrayE","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"ricketytoc"},"content":"            String[] arrayE \u003d line.split(\"/\", 5);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"ricketytoc"},"content":"            LocalDateTime fromDateTime \u003d LocalDateTime.parse(arrayE[3]);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"ricketytoc"},"content":"            LocalDateTime toDateTime \u003d LocalDateTime.parse(arrayE[4]);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"ricketytoc"},"content":"            Event task \u003d new Event(arrayE[2], fromDateTime, toDateTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"ricketytoc"},"content":"            if (arrayE[1].equals(\"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"ricketytoc"},"content":"                task.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"ricketytoc"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"ricketytoc"},"content":"            return task;","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"ricketytoc"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"ricketytoc"},"content":"            return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"ricketytoc"},"content":"     * Gets the number of tasks in the task list","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"ricketytoc"},"content":"     * @return int that represents the number of tasks in the task list","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"ricketytoc"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"ricketytoc"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"ricketytoc"},"content":"     * Gets the Task object that matches the index","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"ricketytoc"},"content":"     * @param index int denoting the index of the task in the list","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"ricketytoc"},"content":"     * @return Task object that corresponds with the given index","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"ricketytoc"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"ricketytoc"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"ricketytoc"},"content":"     * Gets a copy of the ArrayList\u003cTask\u003e","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"ricketytoc"},"content":"     * @return A clone of the ArrayList of the tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"ricketytoc"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"ricketytoc"},"content":"    public ArrayList\u003cTask\u003e getTaskArray() {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"ricketytoc"},"content":"        if (this.taskList.clone() instanceof ArrayList) {","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"ricketytoc"},"content":"            return (ArrayList\u003cTask\u003e) this.taskList.clone();","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"ricketytoc"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"ricketytoc"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"ricketytoc"},"content":"     * Removes the Task object at the given index.","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"ricketytoc"},"content":"     * @param index int denoting the position of the task to be removed.","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"ricketytoc"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"ricketytoc"},"content":"        this.taskList.remove(index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"ricketytoc"},"content":"     * Adds the Task object given to the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"ricketytoc"},"content":"     * @param task Task object that should be added to the TaskList object","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"ricketytoc"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"ricketytoc"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"ricketytoc"},"content":"     * Filters the tasks in the tasklist based on the keyword","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"ricketytoc"},"content":"     * @param keyword String representing the keyword to use to filter down the tasks","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"ricketytoc"},"content":"     * @return ArrayList of tasks that have been filtered down by the keyword","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"ricketytoc"},"content":"    public ArrayList\u003cTask\u003e filterTaskByKeyword(String keyword, int limit) {","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"ricketytoc"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"ricketytoc"},"content":"        int keywordLength \u003d keyword.length();","lastModifiedDate":"2023-09-14"},{"lineNumber":133,"author":{"gitId":"ricketytoc"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-14"},{"lineNumber":134,"author":{"gitId":"ricketytoc"},"content":"        HashMap\u003cTask, Boolean\u003e hashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"ricketytoc"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"ricketytoc"},"content":"            hashMap.put(task, false);","lastModifiedDate":"2023-09-14"},{"lineNumber":137,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"ricketytoc"},"content":"        for (int i \u003d keywordLength; i \u003e 0; i--) {","lastModifiedDate":"2023-09-14"},{"lineNumber":139,"author":{"gitId":"ricketytoc"},"content":"            for (Task task : taskList) {                                       // task assigned to false in hashmap","lastModifiedDate":"2023-09-14"},{"lineNumber":140,"author":{"gitId":"ricketytoc"},"content":"                if (task.getDescription().contains(keyword.substring(0, i)) \u0026\u0026 !hashMap.get(task)) {","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"ricketytoc"},"content":"                    result.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"ricketytoc"},"content":"                    hashMap.replace(task, false, true);","lastModifiedDate":"2023-09-14"},{"lineNumber":143,"author":{"gitId":"ricketytoc"},"content":"                    // limit does not count for task descriptions that contain the entire keyword","lastModifiedDate":"2023-09-14"},{"lineNumber":144,"author":{"gitId":"ricketytoc"},"content":"                    if (i !\u003d keywordLength) {","lastModifiedDate":"2023-09-14"},{"lineNumber":145,"author":{"gitId":"ricketytoc"},"content":"                        count++;","lastModifiedDate":"2023-09-14"},{"lineNumber":146,"author":{"gitId":"ricketytoc"},"content":"                    }","lastModifiedDate":"2023-09-14"},{"lineNumber":147,"author":{"gitId":"ricketytoc"},"content":"                    if (count \u003d\u003d limit) {","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"ricketytoc"},"content":"                        return result;","lastModifiedDate":"2023-09-14"},{"lineNumber":149,"author":{"gitId":"ricketytoc"},"content":"                    }","lastModifiedDate":"2023-09-14"},{"lineNumber":150,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":151,"author":{"gitId":"ricketytoc"},"content":"                }","lastModifiedDate":"2023-09-14"},{"lineNumber":152,"author":{"gitId":"ricketytoc"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"ricketytoc"},"content":"        return result;","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":156}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":" * This class handles the texts that are printed for the users to view","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"    private String CHATBOT_NAME \u003d \"Richie\";","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    private String currentMessage \u003d \"\";","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"     * Prints the welcome message","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"        currentMessage \u003d  \"Hello! I\u0027m \" + CHATBOT_NAME + \"\\nWhat can I do for you?\";","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"     * Prints the error message associated with loading data","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"        currentMessage \u003d \"There was an error loading the data!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"     * Uses the Scanner object to scan for the next user input","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"     * @return String that the user inputted","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"    public String scanUserInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"     * Prints the bye message","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"    public void showBye() {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"        currentMessage \u003d \"Bye hope to see you again soon!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"     * Prints a message that is taken in from its argument","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"     * @param message String representing the message to be printed to the ui","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ricketytoc"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ricketytoc"},"content":"        currentMessage \u003d message;","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ricketytoc"},"content":"     * Prints a message that tells the user that a task has been marked","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"ricketytoc"},"content":"     * @param task","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"ricketytoc"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"ricketytoc"},"content":"        currentMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n \" + task;","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"ricketytoc"},"content":"     * Prints the tasks that have been filtered down by the keyword","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"ricketytoc"},"content":"     * @param tasks ArrayList of tasks that have been filtered down by the keyword","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"ricketytoc"},"content":"    public void showFilteredTasksList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"ricketytoc"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"ricketytoc"},"content":"        sb.append(\"Here are the matching tasks in your list: \\n\") ;","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"ricketytoc"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"ricketytoc"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"ricketytoc"},"content":"            sb.append(count).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"ricketytoc"},"content":"            count++;","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"ricketytoc"},"content":"        currentMessage \u003d sb.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"ricketytoc"},"content":"    public String getCurrentMessage() {","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"ricketytoc"},"content":"        return this.currentMessage;","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":79}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.RichieException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":" * The parent class for all the commands in the Richie application","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"    private boolean isExit;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    abstract public void execute(Ui ui, Storage storage, TaskList taskList) throws RichieException;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":15}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.RichieException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    private String description;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"    public DeadlineCommand(String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws RichieException {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"        Deadline deadlineTask \u003d new Deadline(this.description, this.dateTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"        storage.saveCurrentTasks(taskList.getTaskArray());","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n\" + deadlineTask.toString()","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":28}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.RichieException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    private int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws RichieException {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"            Task task \u003d taskList.getTask(index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"            taskList.remove(this.index);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"            storage.saveCurrentTasks(taskList.getTaskArray());","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"            int listSize \u003d taskList.getSize();","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"            ui.showMessage(\"Noted. I\u0027ve removed this task:\\n\" + task + \"\\nNow you have \"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"                    + listSize + \" tasks in the list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"No such task number\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":29}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.RichieException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"    private String description;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"    public EventCommand(String description, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws RichieException {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"        Event eventTask \u003d new Event(this.description, this.fromDateTime, this.toDateTime);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"        storage.saveCurrentTasks(taskList.getTaskArray());","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n\" + eventTask.toString()","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":32}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.RichieException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":" * Class that handles exiting the application","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws RichieException {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"        ui.showBye();","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":18}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.RichieException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"    private String keyword;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    private int LIMIT \u003d 2;","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws RichieException {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"        ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"        tasks \u003d taskList.filterTaskByKeyword(this.keyword, this.LIMIT);","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"        ui.showFilteredTasksList(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.RichieException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws RichieException {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"        int length \u003d taskList.getSize();","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"            result +\u003d (i + 1) + \".\" + taskList.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"        ui.showMessage(result);","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":21}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.RichieException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    private int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws RichieException {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"            Task task \u003d taskList.getTask(index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"            task.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"            storage.saveCurrentTasks(taskList.getTaskArray());","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"            ui.showTaskMarked(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"            throw new RichieException(\"No such task number\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":27}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.RichieException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    private String description;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws RichieException {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"        Todo todoTask \u003d new Todo(this.description);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"        storage.saveCurrentTasks(taskList.getTaskArray());","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n\" + todoTask.toString()","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":24}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":" * Represents a Deadline event in the Richie application","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"     * Constructor for the Deadline task","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"     * @param by The time that the task has to be completed by","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + convertByToString() + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"    public String toDataString() {","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"        String doneNum \u003d this.getIsDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"        return \"D/\" + doneNum + \"/\" + this.getDescription() + \"/\"","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"                + this.getBy().toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"     * Returns the LocalDateTime date and time of when the task should be done by","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"     * @return LocalDateTime of the date and time of deadline of task","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"        return this.by;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"     * Converts the LocalDateTime by into a String","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"     * @return String that represents the by","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"    public String convertByToString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy \u0027at\u0027 hh:mm a\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":50}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":" * Represents a Event task in Richie application","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"     * Constructor for the Event task","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"     * @param from The time that the event begins","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"     * @param to The time that the event ends","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + convertFromToString() + \" to: \" + convertToToString() + \")\";","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"    public String toDataString() {","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"        String doneNum \u003d this.getIsDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"        return \"E/\" + doneNum + \"/\" + this.getDescription() + \"/\"","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"                + this.getFrom().toString() + \"/\"","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"                + this.getTo().toString();","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"     * Returns LocalDateTime date and time of when task starts","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"     * @return LocalDateTime of when the task starts","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"        return this.from;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"     * Returns LocalDateTime date and time of when task is done","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"     * @return LocalDateTime of when the task ends","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ricketytoc"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ricketytoc"},"content":"        return this.to;","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"ricketytoc"},"content":"     * Converts From to a String format","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"ricketytoc"},"content":"     * @return String that represents the From","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"ricketytoc"},"content":"    public String convertFromToString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"ricketytoc"},"content":"        return this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy \u0027at\u0027 hh:mm a\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"ricketytoc"},"content":"     * Converts To to a string format","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"ricketytoc"},"content":"     * @return String that represents the To","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"ricketytoc"},"content":"    public String convertToToString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"ricketytoc"},"content":"        return this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy \u0027at\u0027 hh:mm a\"));","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":69}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":" * Task class for the Richie application","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"abstract public class Task {","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"    private String description;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"     * Constructor for a task which initialises the task description and whether it is already done","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"     * @param description Represents the task name","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"    abstract public String toDataString();","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"     * Gets the status icon for the task, if the task is done the icon is an X if not it is empty","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"     * @return X if task is done, space if task is not done","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"     * Returns a string representation of the task which includes whether the task is already done","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"     * @return A string that includes the task status icon and its description","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"     * Marks a task as done","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"     * Returns the string description of the task","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"     * @return String description of task","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"ricketytoc"},"content":"        return this.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"ricketytoc"},"content":"     * Returns whether the task has been done","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"ricketytoc"},"content":"     * @return boolean representing whether the task has been done","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"ricketytoc"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"ricketytoc"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":61}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":" * Represents a task that is ToDo in the Richie application","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"     * Constructor for a ToDo task","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"     * @param description Name or description of the ToDo task","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"        super(description);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"    public String toDataString() {","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"        String doneNum \u003d this.getIsDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"        return \"T/\" + doneNum + \"/\" + this.getDescription();","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"ricketytoc":27}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"        this.dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"        this.displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"    public static DialogBox getRichieDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"ricketytoc"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"ricketytoc"},"content":"        ObservableList\u003cNode\u003e temp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"ricketytoc"},"content":"        Collections.reverse(temp);","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"ricketytoc"},"content":"        this.getChildren().setAll(temp);","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"ricketytoc"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"ricketytoc":57}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.ui;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import duke.Richie;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"    private Richie richie;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"    private Image richieImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bot.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"    public void setRichie(Richie richie) {","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"        this.richie \u003d richie;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"        dialogContainer.getChildren().add(DialogBox.getRichieDialog(richie.init(), richieImage));","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"        dialogContainer.heightProperty().addListener((observable -\u003e scrollPane.setVvalue(1.0)));","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"        String userInputText \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"        String response \u003d this.richie.getResponse(userInputText);","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(userInputText, this.userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"                DialogBox.getRichieDialog(response, this.richieImage));","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"ricketytoc":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"ricketytoc":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"            minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"            prefHeight\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/19.0.3\"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"            fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"        \u003cVBox alignment\u003d\"BOTTOM_LEFT\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"            \u003cScrollPane fx:id\u003d\"scrollPane\" prefHeight\u003d\"540.0\" hbarPolicy\u003d\"NEVER\" vvalue \u003d \"1.0\" hvalue \u003d \"1.0\"\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"                \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"                    \u003cVBox fx:id\u003d\"dialogContainer\" fillWidth\u003d\"true\" prefWidth\u003d\"550.0\"/\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"                \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"                    \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"            \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"            \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"                \u003cTextField fx:id\u003d\"userInput\" prefHeight\u003d\"60.0\" prefWidth\u003d\"600.0\" HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"                           onAction\u003d\"#handleUserInput\"/\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"                \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"60.0\"","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"                        prefWidth\u003d\"100.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"\u003c!--\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19.0.3\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e--\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"\u003c!--\u003cchildren\u003e--\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"\u003c!--    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e--\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"\u003c!--    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e--\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"\u003c!--    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e--\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"\u003c!--        \u003ccontent\u003e--\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"\u003c!--            \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"700\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e--\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"\u003c!--        \u003c/content\u003e--\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"\u003c!--    \u003c/ScrollPane\u003e--\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"\u003c!--\u003c/children\u003e--\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"\u003c!--\u003c/AnchorPane\u003e--\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ricketytoc":48}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    void bye_byeString_byeCommand() {","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"            assertTrue(c instanceof ExitCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception thrown by bye command\");","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"    void list_listString_listCommand() {","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"            assertTrue(c instanceof ListCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception thrown by list command\");","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"    void mark_onlyCommandWord_exception() {","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"mark\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by mark command with empty index\");","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"mark command should be entered in this format for example : \u0027mark 1\u0027\", e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"    void mark_markCharString_exception() {","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"mark hello\");","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by mark command followed by non-int\");","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Invalid input, please enter a number\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"ricketytoc"},"content":"            Command b \u003d Parser.parse(\"mark %^$%\");","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by mark command followed by non-int\");","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Invalid input, please enter a number\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"ricketytoc"},"content":"    void delete_onlyCommandWord_exception() {","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"delete\");","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by delete command with empty index\");","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"delete command should be entered in this format for example : \u0027delete 1\u0027\", e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"ricketytoc"},"content":"    void delete_deleteCharString_exception() {","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"ricketytoc"},"content":"            Command a \u003d Parser.parse(\"delete -$%^\");","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by delete command followed by non-int\");","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Invalid input, please enter a number\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"delete hello\");","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by delete command followed by non-int\");","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Invalid input, please enter a number\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"ricketytoc"},"content":"    void deadline_missingBy_Exception() {","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"ricketytoc"},"content":"            Command a \u003d Parser.parse(\"deadline homework\");","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command without \u0027/by\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please enter \u0027/by\u0027 followed by a date and \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"ricketytoc"},"content":"                    \"time that the task should be done by\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"ricketytoc"},"content":"            Command b \u003d Parser.parse(\"deadline homework by 2/12/2002 0400\");","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command without \u0027/by\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please enter \u0027/by\u0027 followed by a date and \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"ricketytoc"},"content":"                    \"time that the task should be done by\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"ricketytoc"},"content":"    void deadline_onlyCommandWord_Exception() {","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"deadline\");","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command without any description\");","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"deadline command should be entered in this format for example : \u0027deadline do homework /by 2/12/2002 0400\u0027\", e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"ricketytoc"},"content":"    void deadline_missingDescriptionOrDeadline_Exception() {","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"deadline \");","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command without \u0027/by\u0027\");","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! Either the description or the deadline is empty!\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"ricketytoc"},"content":"            Command d \u003d Parser.parse(\"deadline /by 2/12/2002 0400\");","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command without any description\");","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! Either the description or the deadline is empty!\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"ricketytoc"},"content":"    void deadline_noSpacesAroundBy_Exception() {","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"deadline homework/by2/12/2002 0400\");","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command without spaces around \u0027/by\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please ensure that there are spaces before and after \u0027/by\u0027\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"ricketytoc"},"content":"            Command a \u003d Parser.parse(\"deadline homework/by 2/12/2002 0400\");","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command without spaces around \u0027/by\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please ensure that there are spaces before and after \u0027/by\u0027\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"ricketytoc"},"content":"            Command b \u003d Parser.parse(\"deadline homework /by2/12/2002 0400\");","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command without spaces around \u0027/by\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please ensure that there are spaces before and after \u0027/by\u0027\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"ricketytoc"},"content":"            Command b \u003d Parser.parse(\"deadline homework /by\");","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command without spaces around \u0027by\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please ensure that there are spaces before and after \u0027/by\u0027\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"ricketytoc"},"content":"    void deadline_wrongDateTimeFormat_Exception() {","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"deadline homework /by 2/13/2002 0400\");","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command with invalid Date and Time\");","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Date and Time entered is in the wrong format!\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":177,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":178,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":179,"author":{"gitId":"ricketytoc"},"content":"            Command a \u003d Parser.parse(\"deadline homework /by 32/12/2002 0400\");","lastModifiedDate":"2023-09-03"},{"lineNumber":180,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command with invalid Date and Time\");","lastModifiedDate":"2023-09-03"},{"lineNumber":181,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":182,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Date and Time entered is in the wrong format!\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":183,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":184,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":185,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":186,"author":{"gitId":"ricketytoc"},"content":"            Command b \u003d Parser.parse(\"deadline homework /by 2/12/2002 2500\");","lastModifiedDate":"2023-09-03"},{"lineNumber":187,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command with invalid Date and Time\");","lastModifiedDate":"2023-09-03"},{"lineNumber":188,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":189,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Date and Time entered is in the wrong format!\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":190,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":191,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":192,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":193,"author":{"gitId":"ricketytoc"},"content":"            Command d \u003d Parser.parse(\"deadline homework /by 2/12/2002\");","lastModifiedDate":"2023-09-03"},{"lineNumber":194,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command with invalid Date and Time\");","lastModifiedDate":"2023-09-03"},{"lineNumber":195,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":196,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Date and Time entered is in the wrong format!\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":197,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":198,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":199,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":200,"author":{"gitId":"ricketytoc"},"content":"            Command a \u003d Parser.parse(\"deadline homework /by \");","lastModifiedDate":"2023-09-03"},{"lineNumber":201,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command with invalid Date and Time\");","lastModifiedDate":"2023-09-03"},{"lineNumber":202,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":203,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Date and Time entered is in the wrong format!\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":204,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":205,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":206,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":207,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":208,"author":{"gitId":"ricketytoc"},"content":"    void deadline_validInput_DeadlineCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":209,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":210,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"deadline homework /by 2/12/2002 0900\");","lastModifiedDate":"2023-09-03"},{"lineNumber":211,"author":{"gitId":"ricketytoc"},"content":"            assertTrue(c instanceof DeadlineCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":212,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":213,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should not be thrown by valid deadline command\");","lastModifiedDate":"2023-09-03"},{"lineNumber":214,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":215,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":216,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":217,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":218,"author":{"gitId":"ricketytoc"},"content":"    void deadline_noSpaceAfterCommandWord_Exception() {","lastModifiedDate":"2023-09-03"},{"lineNumber":219,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":220,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"deadlinehomework\");","lastModifiedDate":"2023-09-03"},{"lineNumber":221,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown for no space after deadline command\");","lastModifiedDate":"2023-09-03"},{"lineNumber":222,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":223,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"deadline command should be followed by a space\"","lastModifiedDate":"2023-09-22"},{"lineNumber":224,"author":{"gitId":"ricketytoc"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":225,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":226,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":227,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":228,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":229,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":230,"author":{"gitId":"ricketytoc"},"content":"    void todo_onlyCommandWord_Exception() {","lastModifiedDate":"2023-09-22"},{"lineNumber":231,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":232,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"todo\");","lastModifiedDate":"2023-09-03"},{"lineNumber":233,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by todo command without any description\");","lastModifiedDate":"2023-09-03"},{"lineNumber":234,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":235,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"todo command should be entered in this format for example : \u0027todo homework\u0027\", e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":236,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":237,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":238,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":239,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":240,"author":{"gitId":"ricketytoc"},"content":"    void todo_missingDescription_Exception() {","lastModifiedDate":"2023-09-22"},{"lineNumber":241,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":242,"author":{"gitId":"ricketytoc"},"content":"            Command b \u003d Parser.parse(\"todo \");","lastModifiedDate":"2023-09-03"},{"lineNumber":243,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by todo command without any description\");","lastModifiedDate":"2023-09-03"},{"lineNumber":244,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":245,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! The todo description is empty!\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":246,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":247,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":248,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":249,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":250,"author":{"gitId":"ricketytoc"},"content":"    void todo_validInput_todoCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":251,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":252,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"todo do homework\");","lastModifiedDate":"2023-09-03"},{"lineNumber":253,"author":{"gitId":"ricketytoc"},"content":"            assertTrue(c instanceof TodoCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":254,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":255,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should not be thrown by valid todo command\");","lastModifiedDate":"2023-09-03"},{"lineNumber":256,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":257,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":258,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":259,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":260,"author":{"gitId":"ricketytoc"},"content":"    void event_missingFrom_Exception() {","lastModifiedDate":"2023-09-03"},{"lineNumber":261,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":262,"author":{"gitId":"ricketytoc"},"content":"            Command a \u003d Parser.parse(\"event project meeting 2/12/2002 0400 /to 2/12/2002 0500\");","lastModifiedDate":"2023-09-03"},{"lineNumber":263,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by event command without \u0027/from\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":264,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":265,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please enter \u0027/from\u0027 followed by a date and \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":266,"author":{"gitId":"ricketytoc"},"content":"                    \"time that the task should start from\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":267,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":268,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":269,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":270,"author":{"gitId":"ricketytoc"},"content":"            Command b \u003d Parser.parse(\"event project meeting \");","lastModifiedDate":"2023-09-03"},{"lineNumber":271,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by event command without \u0027/from\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":272,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":273,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please enter \u0027/from\u0027 followed by a date and \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":274,"author":{"gitId":"ricketytoc"},"content":"                    \"time that the task should start from\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":275,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":276,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":277,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":278,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":279,"author":{"gitId":"ricketytoc"},"content":"    void event_missingTo_Exception() {","lastModifiedDate":"2023-09-03"},{"lineNumber":280,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":281,"author":{"gitId":"ricketytoc"},"content":"            Command a \u003d Parser.parse(\"event project meeting /from 2/12/2002 0400 2/12/2002 0500\");","lastModifiedDate":"2023-09-03"},{"lineNumber":282,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by event command without \u0027/to\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":283,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":284,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please enter \u0027/to\u0027 followed by a date and \" +","lastModifiedDate":"2023-09-03"},{"lineNumber":285,"author":{"gitId":"ricketytoc"},"content":"                    \"time that the task should end\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":286,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":287,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":288,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":289,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":290,"author":{"gitId":"ricketytoc"},"content":"    void event_onlyCommandWord_Exception() {","lastModifiedDate":"2023-09-22"},{"lineNumber":291,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":292,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"event\");","lastModifiedDate":"2023-09-03"},{"lineNumber":293,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by event command without any description\");","lastModifiedDate":"2023-09-03"},{"lineNumber":294,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":295,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"event command should be entered in this format for example : \u0027event homework /from 2/12/2002 1200 /to 2/12/2002 1300\u0027\",","lastModifiedDate":"2023-09-22"},{"lineNumber":296,"author":{"gitId":"ricketytoc"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":297,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":298,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":299,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":300,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-22"},{"lineNumber":301,"author":{"gitId":"ricketytoc"},"content":"    void event_missingDescriptionOrDeadline_Exception() {","lastModifiedDate":"2023-09-22"},{"lineNumber":302,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":303,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":304,"author":{"gitId":"ricketytoc"},"content":"            Command a \u003d Parser.parse(\"event /from 2/12/2002 0400 /to 2/12/2002 0500\");","lastModifiedDate":"2023-09-03"},{"lineNumber":305,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by event command without any description\");","lastModifiedDate":"2023-09-03"},{"lineNumber":306,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":307,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! The description of a event or the duration of the event is incomplete\",","lastModifiedDate":"2023-09-03"},{"lineNumber":308,"author":{"gitId":"ricketytoc"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":309,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":310,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":311,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":312,"author":{"gitId":"ricketytoc"},"content":"            Command b \u003d Parser.parse(\"event homework /from /to \");","lastModifiedDate":"2023-09-03"},{"lineNumber":313,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by event command without any description\");","lastModifiedDate":"2023-09-03"},{"lineNumber":314,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":315,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! The description of a event or the duration of the event is incomplete\",","lastModifiedDate":"2023-09-03"},{"lineNumber":316,"author":{"gitId":"ricketytoc"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":317,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":318,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":319,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":320,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":321,"author":{"gitId":"ricketytoc"},"content":"    void event_noSpacesAroundFromOrTo_Exception() {","lastModifiedDate":"2023-09-22"},{"lineNumber":322,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":323,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"event homework /from2/12/2002 0400 /to 2/12/2002 0500\");","lastModifiedDate":"2023-09-03"},{"lineNumber":324,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by event command without spaces around \u0027/from\u0027 and \u0027/to\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":325,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":326,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please ensure that there are spaces before and after \u0027/from\u0027 and \u0027/to\u0027\",","lastModifiedDate":"2023-09-03"},{"lineNumber":327,"author":{"gitId":"ricketytoc"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":328,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":329,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":330,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":331,"author":{"gitId":"ricketytoc"},"content":"            Command a \u003d Parser.parse(\"event homework/from 2/12/2002 0400 /to 2/12/2002 0500\");","lastModifiedDate":"2023-09-03"},{"lineNumber":332,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by event command without spaces around \u0027/from\u0027 and \u0027/to\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":333,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":334,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please ensure that there are spaces before and after \u0027/from\u0027 and \u0027/to\u0027\",","lastModifiedDate":"2023-09-03"},{"lineNumber":335,"author":{"gitId":"ricketytoc"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":336,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":337,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":338,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":339,"author":{"gitId":"ricketytoc"},"content":"            Command b \u003d Parser.parse(\"event homework /from 2/12/2002 0400/to 2/12/2002 0500\");","lastModifiedDate":"2023-09-03"},{"lineNumber":340,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by event command without spaces around \u0027/from\u0027 and \u0027/to\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":341,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":342,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please ensure that there are spaces before and after \u0027/from\u0027 and \u0027/to\u0027\",","lastModifiedDate":"2023-09-03"},{"lineNumber":343,"author":{"gitId":"ricketytoc"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":344,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":345,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":346,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":347,"author":{"gitId":"ricketytoc"},"content":"            Command d \u003d Parser.parse(\"event homework /from 2/12/2002 0400 /to2/12/2002 0500\");","lastModifiedDate":"2023-09-03"},{"lineNumber":348,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by event command without spaces around \u0027/from\u0027 and \u0027/to\u0027\");","lastModifiedDate":"2023-09-03"},{"lineNumber":349,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":350,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"OOPS!! please ensure that there are spaces before and after \u0027/from\u0027 and \u0027/to\u0027\",","lastModifiedDate":"2023-09-03"},{"lineNumber":351,"author":{"gitId":"ricketytoc"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":352,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":353,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":354,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":355,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":356,"author":{"gitId":"ricketytoc"},"content":"    void event_wrongDateTimeFormat_Exception() {","lastModifiedDate":"2023-09-03"},{"lineNumber":357,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":358,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"event homework /from 2/13/2002 0400 /to 2/12/2002 0400\");","lastModifiedDate":"2023-09-03"},{"lineNumber":359,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command with invalid Date and Time\");","lastModifiedDate":"2023-09-03"},{"lineNumber":360,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":361,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Date and Time entered is in the wrong format!\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":362,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":363,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":364,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":365,"author":{"gitId":"ricketytoc"},"content":"            Command a \u003d Parser.parse(\"event homework /from 32/12/2002 0400 /to 2/13/2002 0500\");","lastModifiedDate":"2023-09-03"},{"lineNumber":366,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command with invalid Date and Time\");","lastModifiedDate":"2023-09-03"},{"lineNumber":367,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":368,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Date and Time entered is in the wrong format!\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":369,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":370,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":371,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":372,"author":{"gitId":"ricketytoc"},"content":"            Command b \u003d Parser.parse(\"event homework /from 2/12/200 2400 /to 2/12/2003 0500\");","lastModifiedDate":"2023-09-03"},{"lineNumber":373,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command with invalid Date and Time\");","lastModifiedDate":"2023-09-03"},{"lineNumber":374,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":375,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Date and Time entered is in the wrong format!\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":376,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":377,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":378,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":379,"author":{"gitId":"ricketytoc"},"content":"            Command d \u003d Parser.parse(\"event homework /from 2/12/2005 2700 /to 2/12/2005 2900\");","lastModifiedDate":"2023-09-03"},{"lineNumber":380,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown by deadline command with invalid Date and Time\");","lastModifiedDate":"2023-09-03"},{"lineNumber":381,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":382,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"Date and Time entered is in the wrong format!\", e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":383,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":384,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":385,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":386,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":387,"author":{"gitId":"ricketytoc"},"content":"    void event_validInput_EventCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":388,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":389,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"event homework /from 2/12/2002 0900 /to 2/12/2002 1000\");","lastModifiedDate":"2023-09-03"},{"lineNumber":390,"author":{"gitId":"ricketytoc"},"content":"            assertTrue(c instanceof EventCommand);","lastModifiedDate":"2023-09-03"},{"lineNumber":391,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":392,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should not be thrown by valid event command\");","lastModifiedDate":"2023-09-03"},{"lineNumber":393,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":394,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":395,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":396,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":397,"author":{"gitId":"ricketytoc"},"content":"    void event_noSpaceAfterCommandWord_Exception() {","lastModifiedDate":"2023-09-03"},{"lineNumber":398,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":399,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"eventhomework\");","lastModifiedDate":"2023-09-03"},{"lineNumber":400,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown for no space after event command\");","lastModifiedDate":"2023-09-03"},{"lineNumber":401,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":402,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"todo command should be at the front of the command followed by a space\"","lastModifiedDate":"2023-09-22"},{"lineNumber":403,"author":{"gitId":"ricketytoc"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":404,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":405,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":406,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":407,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":408,"author":{"gitId":"ricketytoc"},"content":"    void parse_noCommandWord_Exception() {","lastModifiedDate":"2023-09-03"},{"lineNumber":409,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":410,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"ajfksjfkdsjf\");","lastModifiedDate":"2023-09-03"},{"lineNumber":411,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown when no command word is detected\");","lastModifiedDate":"2023-09-03"},{"lineNumber":412,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":413,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"No command detected, please enter a valid command\"","lastModifiedDate":"2023-09-22"},{"lineNumber":414,"author":{"gitId":"ricketytoc"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-09-22"},{"lineNumber":415,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":416,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":417,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":418,"author":{"gitId":"ricketytoc"},"content":"            Command c \u003d Parser.parse(\"aa list\");","lastModifiedDate":"2023-09-22"},{"lineNumber":419,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should be thrown when no command word is detected\");","lastModifiedDate":"2023-09-22"},{"lineNumber":420,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":421,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"No command detected, please enter a valid command\"","lastModifiedDate":"2023-09-22"},{"lineNumber":422,"author":{"gitId":"ricketytoc"},"content":"                    , e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":423,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":424,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":425,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":426,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":427,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":428,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":428}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"import duke.task.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"class StorageTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"    void load_testDataTextFile_correctArrayOfStrings() {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"            Storage s \u003d new Storage(\"src/testData1.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"            ArrayList\u003cString\u003e array;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"            array \u003d s.load();","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"T/0/homework\",s.load().get(0));","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"D/1/speech script/2023-09-02T04:00\",array.get(1));","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"            assertEquals(\"E/0/project meeting/2023-12-02T04:00/2023-12-02T06:00\",array.get(2));","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"        } catch (RichieException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should not be thrown by valid inputs from data source\");","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"ricketytoc"},"content":"    void saveCurrentTask_setOfTasks_correctSavedData() {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"ricketytoc"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"ricketytoc"},"content":"            String filePath \u003d \"src/testData2.txt\";","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"ricketytoc"},"content":"            Storage s \u003d new Storage(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"ricketytoc"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(\"2012-02-15T12:30\");","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"ricketytoc"},"content":"            Todo task1 \u003d new Todo(\"Do Homework\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"ricketytoc"},"content":"            Deadline task2 \u003d new Deadline(\"Walk Dog\", dateTime);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"ricketytoc"},"content":"            Event task3 \u003d new Event(\"Project Meeting\", dateTime, dateTime);","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"ricketytoc"},"content":"            ArrayList\u003cTask\u003e testTasksArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"ricketytoc"},"content":"            testTasksArrayList.add(task1);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"ricketytoc"},"content":"            testTasksArrayList.add(task2);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"ricketytoc"},"content":"            testTasksArrayList.add(task3);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"ricketytoc"},"content":"            s.saveCurrentTasks(testTasksArrayList);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"ricketytoc"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"ricketytoc"},"content":"            ArrayList\u003cString\u003e newlySavedData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"ricketytoc"},"content":"            String line;","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"ricketytoc"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"ricketytoc"},"content":"                newlySavedData.add(line);","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"ricketytoc"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"ricketytoc"},"content":"            ArrayList\u003cString\u003e testArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"ricketytoc"},"content":"            testArrayList.add(\"T/0/Do Homework\");","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"ricketytoc"},"content":"            testArrayList.add(\"D/0/Walk Dog/2012-02-15T12:30\");","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"ricketytoc"},"content":"            testArrayList.add(\"E/0/Project Meeting/2012-02-15T12:30/2012-02-15T12:30\");","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"ricketytoc"},"content":"            assertIterableEquals(testArrayList, newlySavedData);","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"ricketytoc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"ricketytoc"},"content":"            fail(\"Exception should not be thrown for saving correct set of tasks, this is the error message : \"","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"ricketytoc"},"content":"                    + e.getMessage());","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"ricketytoc"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":65}},{"path":"src/test/java/duke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"class CommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    void execute() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":12}},{"path":"src/test/java/duke/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"class DeadlineCommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    void execute() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":13}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"class DeleteCommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    void execute() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":12}},{"path":"src/test/java/duke/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"class EventCommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    void execute() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":12}},{"path":"src/test/java/duke/command/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"class ExitCommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    void execute() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":12}},{"path":"src/test/java/duke/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"class ListCommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    void execute() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":12}},{"path":"src/test/java/duke/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"class MarkCommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    void execute() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":12}},{"path":"src/test/java/duke/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"class TodoCommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    void execute() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":12}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"class DeadlineTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    void testToString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"    void getBy() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    void convertByToString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":20}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"class EventTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    void testToString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"    void getFrom() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    void getTo() {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"    void convertFromToString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"    void convertToToString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":28}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"class TaskTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    void getStatusIcon() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"ricketytoc"},"content":"    void testToString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"ricketytoc"},"content":"    void markAsDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"ricketytoc"},"content":"    void getDescription() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"ricketytoc"},"content":"    void getIsDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":28}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"class TodoTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"ricketytoc"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"ricketytoc"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"ricketytoc"},"content":"    void testToString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"ricketytoc"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"ricketytoc"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":12}},{"path":"src/testData1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"T/0/homework","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"D/1/speech script/2023-09-02T04:00","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"E/0/project meeting/2023-12-02T04:00/2023-12-02T06:00","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":3}},{"path":"src/testData2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"T/0/Do Homework","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"D/0/Walk Dog/2012-02-15T12:30","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"E/0/Project Meeting/2012-02-15T12:30/2012-02-15T12:30","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"ricketytoc":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ricketytoc"},"content":"deadline mop the floor /by 5pm","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ricketytoc"},"content":"event project meeting /from 6pm /to 8pm","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ricketytoc"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ricketytoc"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ricketytoc"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ricketytoc"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ricketytoc"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ricketytoc":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ricketytoc"},"content":"java -classpath ../bin Richie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ricketytoc":1,"-":37}}]
