[{"path":"data/paulist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"E | 0 | soc bash  |  friday 6pm  |  10pm","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"T | 0 | sleep ","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"T | 0 | eat breakfast","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"T | 0 | read book","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"T | 0 | return book","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"czhiruo":5}},{"path":"src/main/java/pau/Pau.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import pau.util.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"import pau.util.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"import pau.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"import pau.util.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":" * Represents the Pau chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"public class Pau {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"     * The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"    private TaskList list;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"     * The storage that handles loading and saving of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"     * The ui that handles interaction with users.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"     * Constructs a new Pau chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"     * @param filePath The path to the file containing tasks to be loaded.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"    public Pau(String filePath){","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"     * Runs the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"        this.ui.introduction();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"        this.list \u003d this.storage.loadTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"        list.checkList();","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"        String input \u003d scan.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"        while (!(input.equals(\"bye\"))) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"            Parser.parseCommand(input, list);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"            this.storage.saveTasksToFile(list);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"            input \u003d scan.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"        this.ui.exit();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"        new Pau(\"./data/paulist.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"czhiruo":57,"-":2}},{"path":"src/main/java/pau/exception/DeadlineNoEndException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":" * Exception for an invalid end date when creating a deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"public class DeadlineNoEndException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"     * Constructs a DeadlineNoEndException with an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"     * @param errorMessage Error message that is printed when exception is thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"    public DeadlineNoEndException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"        int cryingEmojiUnicode \u003d 0x1F62D;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"        System.out.println(\"when is this due\" + new String(Character.toChars(cryingEmojiUnicode)));","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"czhiruo":18}},{"path":"src/main/java/pau/exception/NoDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":" * Exception for an invalid description for tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"public class NoDescException extends Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"     * Constructs a NoDescException with an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"     * @param errorMessage Error message that is printed when exception is thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"    public NoDescException(String errorMessage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"        System.out.println(\"oi write something please\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"czhiruo":16}},{"path":"src/main/java/pau/exception/NoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":" * Exception for an invalid index to get task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"public class NoSuchTaskException extends Exception{","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"     * Constructs a NoSuchTaskException with an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"     * @param errorMessage Error message that is printed when exception is thrown.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"    public NoSuchTaskException(String errorMessage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"        System.out.println(\"there is no such task!!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"czhiruo":16}},{"path":"src/main/java/pau/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":" * Represents a Deadline task that has a description of the task and a deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"     * Deadline for the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"    protected String deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"     * Deadline for the deadline task saved as a Date.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"    protected LocalDate deadlineDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"     * Constructs a deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"     * @param deadline Deadline for the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"        if (isValidDateFormat(deadline, \"yyyy-MM-dd\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"            this.deadlineDate \u003d LocalDate.parse(deadline, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"            this.deadline \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"        String delimiter \u003d \" | \";","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"        return \"D\" + delimiter + status + delimiter + this.description + delimiter + this.deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + deadline + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"     * Checks if the given deadline is in the valid format to be parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"     * @param deadline Deadline for the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"     * @param format Format for the date that is parsed.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"     * @return The validity of the deadline to be parsed into a LocalDate.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"    public static boolean isValidDateFormat(String deadline, String format) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"            formatter.parse(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"            return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"            return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"czhiruo":65}},{"path":"src/main/java/pau/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":" * Represents an Event task that has a description of the task, a start and end date.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"     * Start date of an event.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"    protected String start;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"     * End date of an event.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"    protected String end;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"     * Constructs an event.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"     * @param start Start date of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"     * @param end End date of an event.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"        String delimiter \u003d \" | \";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"        return \"E\" + delimiter + status + delimiter + this.description + delimiter + this.start + delimiter + this.end;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"        return \"[E]\" + super.toString() + \"(from:\" + start + \"to:\" + end + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"czhiruo":42}},{"path":"src/main/java/pau/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":" * Represents a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"     * Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"    protected String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"     * Status of task completion.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"     * Constructs a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"     * Writes the contents of the task to the hard disk.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"     * @return The contents of the task that is saved to the hard disk.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"    public abstract String writeToFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"     * Returns the icon to indicate state of completion of task.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"     * @return \"X\" represents a completed task while \" \" represents an uncompleted task.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"     * Marks task as completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"     * Marks task as uncompleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"     * Sets the state of the task when tasks are loaded.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"     * @param status String of an integer that represents state of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"czhiruo"},"content":"    public void setStatus(String status) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"czhiruo"},"content":"        if ((status \u003d\u003d \"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"            this.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"czhiruo"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"            this.markAsUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"czhiruo"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"czhiruo"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"czhiruo":75}},{"path":"src/main/java/pau/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import pau.exception.DeadlineNoEndException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"import pau.exception.NoDescException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"import pau.exception.NoSuchTaskException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":" * Stores the tasks in an ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"     * The list where the tasks are stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"     * Constructs a new ArrayList for the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"     * Retrieves size of the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"     * @return Size of the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"    public int listSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"     * Retrieves the task at a certain index in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"     * @return The task at the index.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"     * Prints out a list of the tasks the user has.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"    public void checkList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"        if (this.listSize() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"            int starEyesEmoji \u003d 0x1F929;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"yay you don\u0027t have anything to do\" + new String(Character.toChars(starEyesEmoji)));","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"sian you still have to complete these:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"            for (int i \u003d 0; i \u003c this.listSize(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"                Task curr \u003d this.taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"                System.out.println((i + 1) + \". \" + curr.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"czhiruo"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"     * @param input The task the user wants to mark as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"    public void markTask(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"czhiruo"},"content":"        int starEyesEmoji \u003d 0x1F929;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"czhiruo"},"content":"        System.out.println(\"good job, you\u0027ve completed a task! You\u0027re so productive!\" + new String(Character.toChars(starEyesEmoji)));","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"czhiruo"},"content":"        String parts[] \u003d input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"czhiruo"},"content":"        int taskNo \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"czhiruo"},"content":"        Task checkedTask \u003d this.taskList.get(taskNo - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"czhiruo"},"content":"        checkedTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"czhiruo"},"content":"        System.out.println(checkedTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"czhiruo"},"content":"     * Unmarks a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"czhiruo"},"content":"     * @param input The task the user wants to unmark.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"czhiruo"},"content":"    public void unMarkTask(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"czhiruo"},"content":"        String parts[] \u003d input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"czhiruo"},"content":"        int taskNo \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"czhiruo"},"content":"        Task checkedTask \u003d this.taskList.get(taskNo - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"czhiruo"},"content":"        checkedTask.markAsUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"czhiruo"},"content":"        System.out.println(\"why are you not going to \" + checkedTask.description + \"? remember to do it later!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"czhiruo"},"content":"        System.out.println(checkedTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"czhiruo"},"content":"     * Deletes a Task from the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"czhiruo"},"content":"     * @param input The task the user wants to delete.","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"czhiruo"},"content":"    public void deleteTask(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"czhiruo"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"czhiruo"},"content":"            String parts[] \u003d input.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"czhiruo"},"content":"            int taskNo \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"czhiruo"},"content":"            if (taskNo \u003e this.listSize()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"czhiruo"},"content":"                throw new NoSuchTaskException(\"you can\u0027t delete this task\");","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"czhiruo"},"content":"            Task checkedTask \u003d this.taskList.get(taskNo - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"czhiruo"},"content":"            this.taskList.remove(checkedTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"czhiruo"},"content":"            if (checkedTask.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"czhiruo"},"content":"                System.out.println(\"good job! you\u0027re officially done with this:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"czhiruo"},"content":"                System.out.println(checkedTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"czhiruo"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"czhiruo"},"content":"                System.out.println(\"not you running away from your responsibilities, i guess you don\u0027t have to do this now:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"czhiruo"},"content":"                System.out.println(checkedTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"czhiruo"},"content":"        } catch (NoSuchTaskException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"czhiruo"},"content":"        if (this.listSize() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"THERES NOTHING LEFT TO DO!!!!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"czhiruo"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"but still sucks to be you, you still have \" + this.listSize() + \" tasks\");","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"czhiruo"},"content":"     * Adds a ToDo to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"czhiruo"},"content":"     * @param input The ToDo the user wants to add.","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"czhiruo"},"content":"    public void addToDo(String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"czhiruo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"czhiruo"},"content":"            ToDo item \u003d new ToDo(input.replace(\"todo \", \"\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"czhiruo"},"content":"            if (item.description.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"czhiruo"},"content":"                throw new NoDescException(\"here\u0027s literally how to create a todo: todo [task name]\");","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"czhiruo"},"content":"            this.taskList.add(item);","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"czhiruo"},"content":"            if (input.contains(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"czhiruo"},"content":"                System.out.println(\"todo added: \" + item.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"czhiruo"},"content":"                System.out.println(\"You have this many stuff to complete: \" + this.listSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"czhiruo"},"content":"        } catch (NoDescException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"czhiruo"},"content":"     * Adds a Deadline to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"czhiruo"},"content":"     * @param input The Deadline the user wants to add.","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"czhiruo"},"content":"    public void addDeadline(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"czhiruo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"czhiruo"},"content":"            String parts[] \u003d input.split(\"/by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"czhiruo"},"content":"            if (input.replace(\"deadline\", \"\").isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"czhiruo"},"content":"                throw new NoDescException(\"how am i suppose to know what is due...\");","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"czhiruo"},"content":"            if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"czhiruo"},"content":"                throw new DeadlineNoEndException(\"here\u0027s literally how to create a deadline: deadline [task name] /by [date]\");","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":162,"author":{"gitId":"czhiruo"},"content":"            Deadline item \u003d new Deadline(parts[0].replace(\"deadline \", \"\"), parts[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"czhiruo"},"content":"            this.taskList.add(item);","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"czhiruo"},"content":"            if (input.contains(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"czhiruo"},"content":"                System.out.println(\"deadline added: \" + item.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"czhiruo"},"content":"                System.out.println(\"You have this many stuff to complete: \" + this.listSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"czhiruo"},"content":"        } catch (NoDescException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"czhiruo"},"content":"        } catch (DeadlineNoEndException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"czhiruo"},"content":"     * Adds an Event to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":175,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"czhiruo"},"content":"     * @param input The Event the user wants to add.","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"czhiruo"},"content":"    public void addEvent(String input) {","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"czhiruo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"czhiruo"},"content":"            String parts[] \u003d input.split(\"/from\");","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"czhiruo"},"content":"            if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"czhiruo"},"content":"                throw new NoDescException(\"how am i suppose to know what is going on...\");","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"czhiruo"},"content":"            String time[] \u003d parts[1].split(\"/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":187,"author":{"gitId":"czhiruo"},"content":"            Event item \u003d new Event(parts[0].replace(\"event \", \"\"), time[0], time[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"czhiruo"},"content":"            this.taskList.add(item);","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"czhiruo"},"content":"            if (input.contains(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"czhiruo"},"content":"                System.out.println(\"event added: \" + item.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"czhiruo"},"content":"                System.out.println(\"You have this many stuff to complete: \" + this.listSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"czhiruo"},"content":"        } catch (NoDescException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":198,"author":{"gitId":"czhiruo"},"content":"     * Finds a task based on the keyword.","lastModifiedDate":"2023-09-01"},{"lineNumber":199,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":200,"author":{"gitId":"czhiruo"},"content":"     * @param input The keyword the user wants to find.","lastModifiedDate":"2023-09-01"},{"lineNumber":201,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":202,"author":{"gitId":"czhiruo"},"content":"    public void findTask (String input) {","lastModifiedDate":"2023-09-01"},{"lineNumber":203,"author":{"gitId":"czhiruo"},"content":"        String parts[] \u003d input.split(\"find \");","lastModifiedDate":"2023-09-01"},{"lineNumber":204,"author":{"gitId":"czhiruo"},"content":"        String keyword \u003d parts[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":206,"author":{"gitId":"czhiruo"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":207,"author":{"gitId":"czhiruo"},"content":"        for (int i \u003d 0; i \u003c listSize(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":208,"author":{"gitId":"czhiruo"},"content":"            Task curr \u003d this.getTask(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":209,"author":{"gitId":"czhiruo"},"content":"            if (curr.description.contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":210,"author":{"gitId":"czhiruo"},"content":"                System.out.println(count + \". \" + curr.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":211,"author":{"gitId":"czhiruo"},"content":"                count++;","lastModifiedDate":"2023-09-01"},{"lineNumber":212,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":213,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":214,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":215,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":216,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":217,"author":{"gitId":"czhiruo"},"content":"     * Creates different tasks based on the input when the tasks are loaded.","lastModifiedDate":"2023-09-01"},{"lineNumber":218,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":219,"author":{"gitId":"czhiruo"},"content":"     * @param taskDetails Input of each task when tasks are loaded.","lastModifiedDate":"2023-09-01"},{"lineNumber":220,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":221,"author":{"gitId":"czhiruo"},"content":"    public void createTask(String taskDetails) {","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"czhiruo"},"content":"        Scanner s \u003d new Scanner(taskDetails).useDelimiter(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"czhiruo"},"content":"        String taskType \u003d s.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"czhiruo"},"content":"        String status \u003d s.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"czhiruo"},"content":"        String description \u003d s.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":227,"author":{"gitId":"czhiruo"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"czhiruo"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"czhiruo"},"content":"            this.addToDo(description);","lastModifiedDate":"2023-09-01"},{"lineNumber":230,"author":{"gitId":"czhiruo"},"content":"            this.taskList.get(listSize() - 1).setStatus(status);","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"czhiruo"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"czhiruo"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"czhiruo"},"content":"            String wholeDeadline \u003d description + \"/by \" + s.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"czhiruo"},"content":"            this.addDeadline(wholeDeadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"czhiruo"},"content":"            this.taskList.get(listSize() - 1).setStatus(status);","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"czhiruo"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"czhiruo"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"czhiruo"},"content":"            String wholeEvent \u003d description + \"/from\" + s.next() + \"/to\" + s.next();","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"czhiruo"},"content":"            this.addEvent(wholeEvent);","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"czhiruo"},"content":"            this.taskList.get(listSize() - 1).setStatus(status);","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"czhiruo"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"czhiruo"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"czhiruo"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + taskType);","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"czhiruo":247}},{"path":"src/main/java/pau/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":" * Represents a ToDo task that only has a description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"     * Constructs a ToDo task with a description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"     * @param description","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"        String delimiter \u003d \" | \";","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"        String status \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"        return \"T\" + delimiter + status + delimiter + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"czhiruo":28}},{"path":"src/main/java/pau/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import pau.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"     * Parses the command that user inputs.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"     * @param input Command that user inputs.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"     * @param list List of the tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"    public static void parseCommand(String input, TaskList list) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"            list.checkList();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"            list.markTask(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"            list.unMarkTask(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"            list.deleteTask(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"            list.addToDo(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"            list.addDeadline(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"            list.addEvent(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"            list.findTask(input);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"can you follow instructions\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"czhiruo":37}},{"path":"src/main/java/pau/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import pau.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"import pau.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"    ","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"     * The path to the file containing tasks to be loaded.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"    private String filepath;","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"     * Constructs a Storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"     * @param filepath The path to the file containing tasks to be loaded.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"    public TaskList loadTasks() {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"            File toLoad \u003d new File(filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"            Scanner scan \u003d new Scanner(toLoad);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"            TaskList list \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"                String input \u003d scan.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"                list.createTask(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"            return list;","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"is this your first time with pau?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"        return new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"     * Saves tasks to file.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"    public void saveTasksToFile(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"            FileWriter writer \u003d new FileWriter(filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"            for(int i \u003d 0; i \u003c tasks.listSize(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"                writer.write(task.writeToFile() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"czhiruo"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"problem saving to file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"czhiruo":69}},{"path":"src/main/java/pau/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"     * Name of the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"    private final String botName \u003d \"\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"            \"██████╗  █████╗ ██╗   ██╗\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"            \"██╔══██╗██╔══██╗██║   ██║\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"            \"██████╔╝███████║██║   ██║\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"            \"██╔═══╝ ██╔══██║██║   ██║\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"            \"██║     ██║  ██║╚██████╔╝\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"            \"╚═╝     ╚═╝  ╚═╝ ╚═════╝ \\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"            \"                         \\n\";","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"     * The introduction the chatbot prints everytime it is run.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"    public void introduction() {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"        System.out.println(\" HI! I\u0027m \" + botName + \"\\n\" + \"ENTERTAIN MEEE\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"     * The goodbye message by the chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"    public void exit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"        System.out.println(\"byebyeee come play with me next time\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"czhiruo":34}},{"path":"src/test/java/pau/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":" * Carries out unit testing for Task List class.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"     * Task list to be tested.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"    private TaskList list;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"    ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"     * Creates a task list before each test and","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"     * parses the printed output into a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"    public void checkPrint() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"        list \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"        list.addToDo(\"todo hang out with friends\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"        list.addDeadline(\"deadline watch lecture /by 2023-09-23\");","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"        list.addEvent(\"event soc bash /from friday 6pm /to 10pm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"     * Tests if all tasks are printed correctly.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"    public void checkList_tasks_printsAllTasks() {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"        String expected \u003d \"sian you still have to complete these:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"                + \"1. [T][ ] hang out with friends\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"                + \"2. [D][ ] watch lecture (by: Sept 23 2023)\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"                + \"3. [E][ ] soc bash (from: friday 6pm to: 10pm)\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"        list.checkList();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"     * Tests if a task is correctly deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"    public void deleteTask_taskExists_taskDeleted() {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"        String expected \u003d \"not you running away from your responsibilities, \"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"                + \"i guess you don\u0027t have to do this now:\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"                + \"[T][ ] hang out with friends\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"                + \"but still sucks to be you, you still have 2 tasks\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"        list.deleteTask(\"delete 1\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"     * Tests if an error is printed when a non-existent task is deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"    public void deleteTask_taskDoesNotExist_errorMessagePrinted() {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"czhiruo"},"content":"        String expected \u003d \"you can\u0027t delete this task\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"                + \"there is no such task!!\\n\"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"czhiruo"},"content":"                + \"but still sucks to be you, you still have 3 tasks\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"czhiruo"},"content":"        list.deleteTask(\"delete 5\");","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"czhiruo"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"czhiruo":72}},{"path":"src/test/java/pau/util/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"package pau.util;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":" * Carries out unit testing for Ui class.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"public class UiTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"    ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"     * Parses the printed output into a string.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"    @BeforeEach","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"    public void checkPrint() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"     * Tests if chatbot prints introduction correctly.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"    public void introduction_introduce_printsIntroduction() {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"        String expected \u003d \" HI! I\u0027m \\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"                \"██████╗  █████╗ ██╗   ██╗\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"                \"██╔══██╗██╔══██╗██║   ██║\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"                \"██████╔╝███████║██║   ██║\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"                \"██╔═══╝ ██╔══██║██║   ██║\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"                \"██║     ██║  ██║╚██████╔╝\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"                \"╚═╝     ╚═╝  ╚═╝ ╚═════╝ \\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"                \"                         \\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"                \"\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"                \"ENTERTAIN MEEE\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"        ui.introduction();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"     * Tests if chatbot prints introduction correctly.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"    public void exit_byeInput_printsGoodbyeMessage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"        String expected \u003d \"byebyeee come play with me next time\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"        ui.exit();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"czhiruo":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"todo fix puzzle","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"todo eat lunch","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"deadline watch lecture /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"event bash /from Friday 6pm /to 10pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"czhiruo":5}}]
