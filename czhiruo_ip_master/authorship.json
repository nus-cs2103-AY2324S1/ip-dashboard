[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"    protected String deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + deadline + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"czhiruo":12}},{"path":"src/main/java/DeadlineNoEndException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"public class DeadlineNoEndException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"    public DeadlineNoEndException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"        int cryingEmojiUnicode \u003d 0x1F62D;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"        System.out.println(\"when is this due\" + new String(Character.toChars(cryingEmojiUnicode)));","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"czhiruo":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"    protected String start;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"    protected String end;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"        return \"[E]\" + super.toString() + \"(from:\" + start + \" to:\" + end + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"czhiruo":14}},{"path":"src/main/java/NoDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"public class NoDescException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"    public NoDescException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"        System.out.println(\"oi write something please\");","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"czhiruo":6}},{"path":"src/main/java/Pau.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"import java.io.*;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"public class Pau {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"    private static String botName \u003d \"\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"            \"██████╗  █████╗ ██╗   ██╗\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"            \"██╔══██╗██╔══██╗██║   ██║\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"            \"██████╔╝███████║██║   ██║\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"            \"██╔═══╝ ██╔══██║██║   ██║\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"            \"██║     ██║  ██║╚██████╔╝\\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"            \"╚═╝     ╚═╝  ╚═╝ ╚═════╝ \\n\" +","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"            \"                         \\n\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"    private static String introduction \u003d \" HI! I\u0027m \" + botName + \"\\n\" + \"ENTERTAIN MEEE\";","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"    private static String exit \u003d \"byebye come play with me next time\";","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"     * Prints out a list of the tasks the user has.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"     * @param list The list containing all the tasks that user has input.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"    public static void checkList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"        if(list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"            int starEyesEmoji \u003d 0x1F929;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"yay you don\u0027t have anything to do\" + new String(Character.toChars(starEyesEmoji)));","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"sian you still have to complete these:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"                Task curr \u003d list.get(i);","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"                System.out.println((i + 1) + \". \" + curr.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"     * @param list The list containing all the tasks that user has input.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"     * @param input The task the user wants to mark as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"    public static void markTask(ArrayList\u003cTask\u003e list, String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"        int starEyesEmoji \u003d 0x1F929;","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"        System.out.println(\"good job, you\u0027ve completed a task! You\u0027re so productive!\" + new String(Character.toChars(starEyesEmoji)));","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"        String parts[] \u003d input.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"        int taskNo \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"        Task checkedTask \u003d list.get(taskNo - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"        checkedTask.markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"        System.out.println(checkedTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"     * Unmarks a task.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"     * @param list The list containing all the tasks that user has input.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"     * @param input The task the user wants to unmark.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"    public static void unMarkTask(ArrayList\u003cTask\u003e list, String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"        String parts[] \u003d input.split(\" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"        int taskNo \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"        Task checkedTask \u003d list.get(taskNo - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"czhiruo"},"content":"        checkedTask.markAsUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"czhiruo"},"content":"        System.out.println(\"why are you not going to \" + checkedTask.description + \"? remember to do it later!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"        System.out.println(checkedTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"czhiruo"},"content":"     * Deletes a Task from the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"czhiruo"},"content":"     * @param list The list containing all the tasks that user has input.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"czhiruo"},"content":"     * @param input The task the user wants to delete.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"czhiruo"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e list, String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"czhiruo"},"content":"        String parts[] \u003d input.split(\" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"czhiruo"},"content":"        int taskNo \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"czhiruo"},"content":"        Task checkedTask \u003d list.get(taskNo - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"czhiruo"},"content":"        list.remove(checkedTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"czhiruo"},"content":"        if(checkedTask.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"good job! you\u0027re officially done with this:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"czhiruo"},"content":"            System.out.println(checkedTask.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"czhiruo"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"not you running away from your responsibilities, i guess you don\u0027t have to do this now:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"czhiruo"},"content":"            System.out.println(checkedTask.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"czhiruo"},"content":"        if(list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"THERES NOTHING LEFT TO DO!!!!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"czhiruo"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"but still sucks to be you, you still have \" + list.size() + \" tasks\");","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"czhiruo"},"content":"     * Adds a ToDo to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"czhiruo"},"content":"      * @param list The list containing all the tasks that user has input.","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"czhiruo"},"content":"     * @param input The ToDo the user wants to add.","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"czhiruo"},"content":"    public static void addsToDo(ArrayList\u003cTask\u003e list, String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"czhiruo"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"czhiruo"},"content":"            ToDo item \u003d Task.createToDo(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"czhiruo"},"content":"            list.add(item);","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"todo added: \" + item.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"You have this many stuff to complete: \" + list.size());","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"czhiruo"},"content":"        } catch (NoDescException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"czhiruo"},"content":"     * Adds a Deadline to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"czhiruo"},"content":"     * @param list The list containing all the tasks that user has input.","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"czhiruo"},"content":"     * @param input The Deadline the user wants to add.","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"czhiruo"},"content":"    public static void addDeadline(ArrayList\u003cTask\u003e list, String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"czhiruo"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"czhiruo"},"content":"            Deadline item \u003d Task.createDeadline(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"czhiruo"},"content":"            list.add(item);","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"deadline added: \" + item.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"You have this many stuff to complete: \" + list.size());","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"czhiruo"},"content":"        } catch (NoDescException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"czhiruo"},"content":"        } catch (DeadlineNoEndException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"czhiruo"},"content":"     * Adds an Event to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"czhiruo"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"czhiruo"},"content":"     * @param list The list containing all the tasks that user has input.","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"czhiruo"},"content":"     * @param input The Event the user wants to add.","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"czhiruo"},"content":"    public static void addEvent(ArrayList\u003cTask\u003e list, String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"czhiruo"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"czhiruo"},"content":"            Event item \u003d Task.createEvent(input);","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"czhiruo"},"content":"            list.add(item);","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"event added: \" + item.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"czhiruo"},"content":"            System.out.println(\"You have this many stuff to complete: \" + list.size());","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"czhiruo"},"content":"        } catch (NoDescException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"czhiruo"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"czhiruo"},"content":"     * Prints out a reminder to user that command is invalid.","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"czhiruo"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"czhiruo"},"content":"    public static void invalidCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"czhiruo"},"content":"        System.out.println(\"can you follow instructions\");","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"czhiruo"},"content":"    public static void main(String[] args) throws IOException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"czhiruo"},"content":"        System.out.println(Pau.introduction);","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"czhiruo"},"content":"        String input;","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"czhiruo"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"czhiruo"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"czhiruo"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":157,"author":{"gitId":"czhiruo"},"content":"            input \u003d scan.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"czhiruo"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"czhiruo"},"content":"                System.out.println(Pau.exit);","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"czhiruo"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":161,"author":{"gitId":"czhiruo"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":162,"author":{"gitId":"czhiruo"},"content":"                Pau.checkList(list);","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"czhiruo"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"czhiruo"},"content":"                Pau.markTask(list, input);","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"czhiruo"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"czhiruo"},"content":"                Pau.unMarkTask(list, input);","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"czhiruo"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"czhiruo"},"content":"                Pau.deleteTask(list, input);","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"czhiruo"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"czhiruo"},"content":"                Pau.addsToDo(list, input);","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"czhiruo"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"czhiruo"},"content":"                Pau.addDeadline(list, input);","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"czhiruo"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"czhiruo"},"content":"                Pau.addEvent(list, input);","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"czhiruo"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"czhiruo"},"content":"                Pau.invalidCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":180,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"czhiruo":178,"-":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"czhiruo"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"czhiruo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"czhiruo"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"czhiruo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"czhiruo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"czhiruo"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"czhiruo"},"content":"    public static ToDo createToDo(String input) throws NoDescException {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"czhiruo"},"content":"            ToDo item \u003d new ToDo(input.replace(\"todo\", \"\"));","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"czhiruo"},"content":"            if (item.description.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"czhiruo"},"content":"                throw new NoDescException(\"here\u0027s literally how to create a todo: todo [task name]\");","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"czhiruo"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"czhiruo"},"content":"            return item;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"czhiruo"},"content":"    public static Deadline createDeadline(String input) throws NoDescException, DeadlineNoEndException {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"czhiruo"},"content":"        String parts[] \u003d input.split(\"/by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"czhiruo"},"content":"        if (input.replace(\"deadline\", \"\").isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"czhiruo"},"content":"            throw new NoDescException(\"how am i suppose to know what is due...\");","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"czhiruo"},"content":"        if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"czhiruo"},"content":"            throw new DeadlineNoEndException(\"here\u0027s literally how to create a deadline: deadline [task name] /by [date]\");","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"czhiruo"},"content":"        Deadline item \u003d new Deadline(parts[0].replace(\"deadline \", \"\"), parts[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"czhiruo"},"content":"        return item;","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"czhiruo"},"content":"    public static Event createEvent(String input) throws NoDescException {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"czhiruo"},"content":"        String parts[] \u003d input.split(\"/from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"czhiruo"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"czhiruo"},"content":"            throw new NoDescException(\"how am i suppose to know what is going on...\");","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"czhiruo"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"czhiruo"},"content":"        String time[] \u003d parts[1].split(\"/to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"czhiruo"},"content":"        Event item \u003d new Event(parts[0].replace(\"event\", \"\"), time[0], time[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"czhiruo"},"content":"        return item;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"czhiruo"},"content":"//    public static Task createTask(String taskDetails) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"czhiruo"},"content":"//        String taskType \u003d taskDetails.substring(1, 2);","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"czhiruo"},"content":"//        char status \u003d taskDetails.charAt(4);","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"czhiruo"},"content":"//        String description \u003d taskDetails.substring(8);","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"czhiruo"},"content":"//","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"czhiruo"},"content":"//        Task task;","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"czhiruo"},"content":"//","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"czhiruo"},"content":"//        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"czhiruo"},"content":"//","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"czhiruo"},"content":"//        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"czhiruo"},"content":"//","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"czhiruo"},"content":"//        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"czhiruo"},"content":"//","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"czhiruo"},"content":"//        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"czhiruo"},"content":"//            throw new IllegalArgumentException(\"Invalid task type.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"czhiruo"},"content":"//        }","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"czhiruo"},"content":"//","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"czhiruo"},"content":"//        if (status \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"czhiruo"},"content":"//            task.markAsDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"czhiruo"},"content":"//        }","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"czhiruo"},"content":"//","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"czhiruo"},"content":"//        return task;","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"czhiruo"},"content":"//    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"czhiruo":74}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"czhiruo"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"czhiruo"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"czhiruo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"czhiruo"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"czhiruo"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"czhiruo":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"czhiruo"},"content":"todo fix puzzle","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"czhiruo"},"content":"todo eat lunch","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"czhiruo"},"content":"deadline watch lecture /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"czhiruo"},"content":"event bash /from Friday 6pm /to 10pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"czhiruo"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"czhiruo":5}}]
