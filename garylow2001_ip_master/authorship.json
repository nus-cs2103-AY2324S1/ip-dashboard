[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"D | 0 | xxx | 2023-03-02","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"E | X | yyy | 2023-04-05T16:30 | 2023-03-04T17:30","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"garylow2001":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"        // TODO: Date.now() when \"today\" is entered","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"        // Split the input string by \"/by\" to separate description and deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"        String[] splitString \u003d description.split(\"/by\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"        // Should throw error if there are multiple \"/by\" or no \"/by\"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"        if (splitString.length \u003e\u003d2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"            this.description \u003d splitString[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"            String deadlineString \u003d splitString[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"            this.deadline \u003d super.parseDate(deadlineString);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"    public Deadline(String description, String deadlineString) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"        // deadline will be in default yyyy-MM-dd format which can be parsed by LocalDate","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"        this.deadline \u003d LocalDate.parse(deadlineString);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"        return \"[D]\" + super.getStatusIcon();","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"        if (deadline \u003d\u003d null) return super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"        return super.toString() + String.format(\" (by: %s)\",deadline.format(formatter));","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"        return \"D | \" + super.toFileString() + (deadline \u003d\u003d null ? \"\" : \" | \" + deadline.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"garylow2001":41}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import java.util.List;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"        String logo \u003d \"I\u0027m Chewy,\\n\" +","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"                \"What can I do for you?\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\"Hello!\\n\" + logo);","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"        // Create a scanner object to read commands entered by the user","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"        // Store tasks entered by the user in tasks","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"        // Load tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"            loadTasksFromFile(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"            System.out.println(\"Error loading file:\" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"        // Start command loop","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"            // Read the next line of input","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"                } else if (userInput.equals(\"help\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"                    HelpMessage.displayHelpMessage();","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"                    listTasks(tasks);","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"                } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"                    markTaskAsDone(userInput, tasks);","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"                    saveTask(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"                } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"                    unmarkTaskAsDone(userInput, tasks);","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"                    saveTask(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"                } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"                    deleteTask(userInput, tasks);","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"                    saveTask(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"                    addTask(userInput, tasks);","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"                    saveTask(tasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"                System.out.println(\":( Chewy can\u0027t understand! \" + e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"                System.out.println(\"Something unexpected happened. try \u0027help\u0027 to see a list of commands\");","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"    private static void saveTask(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\"Saving tasks...\");","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"        try (PrintWriter writer \u003d new PrintWriter(\"./data/duke.txt\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"                writer.println(task.toFileString());","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"garylow2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"            System.out.println(\"Error saving tasks to file\" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\"Task saved successfully\");","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"garylow2001"},"content":"    private static void loadTasksFromFile(List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\"Loading tasks...\");","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"garylow2001"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(\"./data/duke.txt\"))) {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"garylow2001"},"content":"            String line;","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"garylow2001"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"garylow2001"},"content":"                Task task \u003d parseTaskFromFileString(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"garylow2001"},"content":"                tasks.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"garylow2001"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"garylow2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"garylow2001"},"content":"            System.out.println(\"Cant load file!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\"Tasks loaded successfully, see \u0027list\u0027 to view all tasks\");","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"garylow2001"},"content":"    private static Task parseTaskFromFileString(String lineFromFile) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"garylow2001"},"content":"        Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"garylow2001"},"content":"        String[] lineParts \u003d lineFromFile.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"garylow2001"},"content":"        String taskType \u003d lineParts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"garylow2001"},"content":"        boolean isDone \u003d lineParts[1].equals(\"X\");","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"garylow2001"},"content":"        String description \u003d lineParts[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"garylow2001"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"garylow2001"},"content":"            case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"garylow2001"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"garylow2001"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"garylow2001"},"content":"            case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"garylow2001"},"content":"                String by;","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"garylow2001"},"content":"                if (lineParts.length \u003d\u003d 4) {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"garylow2001"},"content":"                    by \u003d lineParts[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"garylow2001"},"content":"                    task \u003d new Deadline(description, by); // add by","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"garylow2001"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"garylow2001"},"content":"                    task \u003d new Deadline(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"garylow2001"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"garylow2001"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"garylow2001"},"content":"            case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"garylow2001"},"content":"                String from;","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"garylow2001"},"content":"                String to;","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"garylow2001"},"content":"                if (lineParts.length \u003d\u003d 5) {","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"garylow2001"},"content":"                    from \u003d lineParts[3];","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"garylow2001"},"content":"                    to \u003d lineParts[4];","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"garylow2001"},"content":"                    task \u003d new Event(description, from, to); // add from and to","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"garylow2001"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"garylow2001"},"content":"                    task \u003d new Event(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"garylow2001"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"garylow2001"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"garylow2001"},"content":"            default:","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"garylow2001"},"content":"                // Line does not start with a task value (T,D,E), file corrupted, throw error","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"garylow2001"},"content":"                throw new IllegalArgumentException(\"Invalid Task Type\");","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"garylow2001"},"content":"        if (isDone) task.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"garylow2001"},"content":"        return task;","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"garylow2001"},"content":"    private static void addTask(String userInput, List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"garylow2001"},"content":"        String[] inputParts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"garylow2001"},"content":"        // Check if a valid addTask command is entered","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"garylow2001"},"content":"        String inputCommand \u003d inputParts[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"garylow2001"},"content":"        if (!(inputCommand.equals(\"todo\") || inputCommand.equals(\"deadline\") || inputCommand.equals(\"event\"))) {","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"garylow2001"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"garylow2001"},"content":"        // Throw InvalidCommandException if there is no description","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"garylow2001"},"content":"        if (inputParts.length \u003d\u003d 1) throw new NoDescriptionException();","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"garylow2001"},"content":"        String taskDesc \u003d inputParts[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"garylow2001"},"content":"        Task task;","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"garylow2001"},"content":"        switch (inputCommand) {","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"garylow2001"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"garylow2001"},"content":"                task \u003d new Todo(taskDesc);","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"garylow2001"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"garylow2001"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"garylow2001"},"content":"                task \u003d new Deadline(taskDesc);","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"garylow2001"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"garylow2001"},"content":"            case \"event\":","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"garylow2001"},"content":"                task \u003d new Event(taskDesc);","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"garylow2001"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"garylow2001"},"content":"            default:","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"garylow2001"},"content":"                // Throw InvalidCommandException as invalid command was entered","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"garylow2001"},"content":"                throw new DukeException(\"Error, see \u0027help\u0027 for a list of commands\");","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"garylow2001"},"content":"        // Add task to task list","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"garylow2001"},"content":"        tasks.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\\t\" + task);","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"garylow2001"},"content":"        System.out.printf(\"Now you have %d tasks in the list%n\", tasks.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"garylow2001"},"content":"    private static void deleteTask(String userInput, List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"garylow2001"},"content":"        String[] inputParts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"garylow2001"},"content":"        if (inputParts.length !\u003d 2) throw new NoTaskFoundException();","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"garylow2001"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"garylow2001"},"content":"            int taskId \u003d Integer.parseInt(inputParts[1].trim());","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"garylow2001"},"content":"            if (taskId \u003c 1 || taskId \u003e tasks.size()) throw new InvalidTaskException();","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"garylow2001"},"content":"            Task deletedTask \u003d tasks.remove(taskId - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"garylow2001"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n\\t\" + deletedTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"garylow2001"},"content":"            System.out.printf(\"Now you have %d tasks in the list%n\", tasks.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"garylow2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":170,"author":{"gitId":"garylow2001"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"garylow2001"},"content":"    private static void unmarkTaskAsDone(String userInput, List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"garylow2001"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":176,"author":{"gitId":"garylow2001"},"content":"            String[] inputParts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":177,"author":{"gitId":"garylow2001"},"content":"            // Throw NoTaskFoundException if there is nothing after \u0027unmark\u0027","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"garylow2001"},"content":"            if (inputParts.length !\u003d 2) throw new NoTaskFoundException();","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"garylow2001"},"content":"            // Get the id of the task (zero-indexed) from the userInput","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"garylow2001"},"content":"            int taskId \u003d Integer.parseInt(inputParts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"garylow2001"},"content":"            // Throw InvalidTaskException if task id is out of bounds of task list or is invalid","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"garylow2001"},"content":"            if (taskId \u003c\u003d 0 || taskId \u003e tasks.size()) throw new InvalidTaskException();","lastModifiedDate":"2023-08-23"},{"lineNumber":183,"author":{"gitId":"garylow2001"},"content":"            // Unmark the selected task as done","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"garylow2001"},"content":"            Task selectedTask \u003d tasks.get(taskId - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":185,"author":{"gitId":"garylow2001"},"content":"            selectedTask.unmarkAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"garylow2001"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"garylow2001"},"content":"                    + selectedTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"garylow2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":189,"author":{"gitId":"garylow2001"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"garylow2001"},"content":"    private static void markTaskAsDone(String userInput, List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"garylow2001"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"garylow2001"},"content":"            String[] inputParts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":196,"author":{"gitId":"garylow2001"},"content":"            // Throw NoTaskFoundException if there is nothing after \u0027mark\u0027","lastModifiedDate":"2023-08-23"},{"lineNumber":197,"author":{"gitId":"garylow2001"},"content":"            if (inputParts.length !\u003d 2) throw new NoTaskFoundException();","lastModifiedDate":"2023-08-23"},{"lineNumber":198,"author":{"gitId":"garylow2001"},"content":"            // Get the id of the task (zero-indexed) from the userInput","lastModifiedDate":"2023-08-23"},{"lineNumber":199,"author":{"gitId":"garylow2001"},"content":"            int taskId \u003d Integer.parseInt(inputParts[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"garylow2001"},"content":"            // Throw InvalidTaskException if task id is out of bounds of task list or is invalid","lastModifiedDate":"2023-08-23"},{"lineNumber":201,"author":{"gitId":"garylow2001"},"content":"            if (taskId \u003c\u003d 0 || taskId \u003e tasks.size()) throw new InvalidTaskException();","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"garylow2001"},"content":"            // Mark the selected task as done","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"garylow2001"},"content":"            Task selectedTask \u003d tasks.get(taskId - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":204,"author":{"gitId":"garylow2001"},"content":"            selectedTask.markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":205,"author":{"gitId":"garylow2001"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-08-23"},{"lineNumber":206,"author":{"gitId":"garylow2001"},"content":"                    + selectedTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":207,"author":{"gitId":"garylow2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":208,"author":{"gitId":"garylow2001"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-08-23"},{"lineNumber":209,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":210,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":211,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":212,"author":{"gitId":"garylow2001"},"content":"    private static void listTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-23"},{"lineNumber":213,"author":{"gitId":"garylow2001"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":214,"author":{"gitId":"garylow2001"},"content":"            System.out.println(\"Chewy detected no task for you!\");","lastModifiedDate":"2023-08-23"},{"lineNumber":215,"author":{"gitId":"garylow2001"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":216,"author":{"gitId":"garylow2001"},"content":"            System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":217,"author":{"gitId":"garylow2001"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":218,"author":{"gitId":"garylow2001"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-08-23"},{"lineNumber":219,"author":{"gitId":"garylow2001"},"content":"                String taskLine \u003d String.format(\"%d.%s\",","lastModifiedDate":"2023-08-23"},{"lineNumber":220,"author":{"gitId":"garylow2001"},"content":"                        i + 1,","lastModifiedDate":"2023-08-23"},{"lineNumber":221,"author":{"gitId":"garylow2001"},"content":"                        task.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":222,"author":{"gitId":"garylow2001"},"content":"                System.out.println(taskLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":223,"author":{"gitId":"garylow2001"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":226,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"garylow2001":222,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"        super(\"Invalid command entered. See \u0027help\u0027 for a list of commands you can enter\");","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"class InvalidTaskException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"        super(\"Invalid Task Id entered, see \u0027list\u0027 for the list of tasks\");","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"class NoDescriptionException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"    public NoDescriptionException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"        super(\"No description found. Please enter a description after your command.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"class NoTaskFoundException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"    public NoTaskFoundException() {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"        super(\"No Task Id found. Please enter a Task Id after your command\");","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"class InvalidDateFormatException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"    public InvalidDateFormatException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"        super(\"Invalid Date format. Here are some example dates:\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"                + \"6/3/2023, 16/12/2024\");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"class InvalidDateTimeFormatException extends DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"    public InvalidDateTimeFormatException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"        super(\"Invalid DateTime format. Here are some example dates:\\n\"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"                + \"6/3/2023 5:30 AM, 16/12/2024 6:30PM\");","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"garylow2001":43}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"        // TODO: Check if /from is before /to","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"        // TODO: Date.now() when \"today\" is entered","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"        String[] fromParts \u003d description.split(\"/from\");","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"        String[] toParts \u003d description.split(\"/to\");","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"        if (fromParts.length \u003e\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"            this.description \u003d fromParts[0].split(\"/to\")[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"            String[] aftFrom \u003d fromParts[1].split(\"/to\");","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"            String startTimeString \u003d aftFrom[0].trim(); // it should be in (d/M/yyyy h:m a) eg (15/3/2023 6:40 PM)","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"            // Format the string and parse it into startTime","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"            this.startTime \u003d super.parseDateTime(startTimeString);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"            if (aftFrom.length \u003e\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"                // \u0027/to\u0027 is after \u0027/from\u0027","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"                String endTimeString \u003d aftFrom[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"                // Format the string and parse it into endTime","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"                this.endTime \u003d super.parseDateTime(endTimeString);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"                // \u0027/to\u0027 is before \u0027/from\u0027","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"                String endTimeString \u003d fromParts[0].split(\"/to\")[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"                // Format the string and parse it into endTime","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"                this.endTime \u003d super.parseDateTime(endTimeString);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"        } else if (toParts.length \u003e\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"            String[] parts \u003d toParts[1].split(\"/from\");","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"            this.description \u003d toParts[0].trim();","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"            String endTimeString \u003d parts[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"            // Format the string and parse it into endTime","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"            this.endTime \u003d super.parseDateTime(endTimeString);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"            if (parts.length \u003e 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"                String startTimeString \u003d parts[1].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"                // Format the string and parse it into endTime","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"                this.startTime \u003d super.parseDateTime(startTimeString);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"    public Event(String description, String startTimeString, String endTimeString) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"        this.startTime \u003d LocalDateTime.parse(startTimeString);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"        this.endTime \u003d LocalDateTime.parse(endTimeString);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"        return \"[E]\" + super.getStatusIcon();","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"garylow2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"garylow2001"},"content":"        if (startTime \u003d\u003d null \u0026\u0026 endTime \u003d\u003d null) return super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"garylow2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy h:m a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"garylow2001"},"content":"        return super.toString() + String.format(","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"garylow2001"},"content":"                \" (from %s to %s)\",","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"garylow2001"},"content":"                startTime.format(formatter),","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"garylow2001"},"content":"                endTime.format(formatter)","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"garylow2001"},"content":"                );","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"garylow2001"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"garylow2001"},"content":"        return \"E | \"","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"garylow2001"},"content":"                + super.toFileString()","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"garylow2001"},"content":"                + (startTime \u003d\u003d null \u0026\u0026 endTime \u003d\u003d null","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"garylow2001"},"content":"                        ? \"\"","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"garylow2001"},"content":"                        : String.format(\" | %s | %s\", startTime, endTime));","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"garylow2001":76}},{"path":"src/main/java/HelpMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"public class HelpMessage {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"    public static void displayHelpMessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\"List of available commands:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\" - todo \u003cdescription\u003e: Add a new todo task\");","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\" - deadline \u003cdescription\u003e /by \u003cdate\u003e: Add a new deadline task\");","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\" - event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e: Add a new event task with start and end time\");","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\" - list: Display the list of tasks\");","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\" - mark \u003ctaskNumber\u003e: Mark a task as done\");","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\" - unmark \u003ctaskNumber\u003e: Unmark a task as done\");","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"        System.out.println(\" - bye: Exit Chewy\");","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"        // Add more commands in the future","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"garylow2001":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"    // TODO: Make this class abstract?","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"garylow2001"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"garylow2001"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"garylow2001"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"garylow2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"garylow2001"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"garylow2001"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"garylow2001"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"garylow2001"},"content":"        return isDone","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"garylow2001"},"content":"                ? \"X | \" + description","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"garylow2001"},"content":"                : \"0 | \" + description;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"garylow2001"},"content":"    public LocalDateTime parseDateTime(String dateTimeString) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"garylow2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy h:m a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"garylow2001"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"garylow2001"},"content":"            return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"garylow2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"garylow2001"},"content":"            throw new InvalidDateTimeFormatException();","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"garylow2001"},"content":"    public LocalDate parseDate(String dateString) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"garylow2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"garylow2001"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"garylow2001"},"content":"            return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"garylow2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"garylow2001"},"content":"            throw new InvalidDateFormatException(); // Rethrow the exception if needed for higher-level error handling","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"garylow2001"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"garylow2001":56}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"        return \"[T]\" + super.getStatusIcon();","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"garylow2001":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"garylow2001"},"content":"fakecommand","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"garylow2001"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"garylow2001"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"garylow2001"},"content":"todo run script","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"garylow2001"},"content":"deadline do something","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"garylow2001"},"content":"deadline do something /by friday morning","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"garylow2001"},"content":"event some lecture /from today 4pm /to 6pm","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"garylow2001"},"content":"event some recitation /to 2pm /from tomorrow 12pm","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"garylow2001"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"garylow2001"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"garylow2001"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"garylow2001"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"garylow2001"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"garylow2001"},"content":"delete","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"garylow2001"},"content":"delete 3","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"garylow2001"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"garylow2001"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"garylow2001":17}}]
