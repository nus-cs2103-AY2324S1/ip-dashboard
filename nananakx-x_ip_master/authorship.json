[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nananakx-x":21,"-":41}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"nananakx-x"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"nananakx-x"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"nananakx-x"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"nananakx-x"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"nananakx-x"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"nananakx-x"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"nananakx-x"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"nananakx-x"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"nananakx-x"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"nananakx-x"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"nananakx-x"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"nananakx-x":65}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":" * Represents Duke, a Personal Assistant Chatbot that helps a person to keep track of","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":" * various things. The name Duke was chosen as a placeholder name, in honor of Duke,","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":" * the Java Mascot. The current name of the Chatbot is Boo.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"public class Duke {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"     * Constructor for a Duke object.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"     * Initialises the ui, storage, and taskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"    public Duke() {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"        storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"        taskList \u003d new TaskList(storage.retrieveData());","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"     * Obtains a response based on the user\u0027s input command.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"     * @param command The user\u0027s input command.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"     * @return A response generated by processing the user\u0027s command.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"     * @throws Exception If an error occurs during processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"    public String getResponse(String command) {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"            return new Parser().processCommand(command, taskList, storage);","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"nananakx-x":40,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"nananakx-x":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"nananakx-x":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Penguin.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"     * Initializes the user interface components.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"        duke \u003d new Duke(); // Instantiate Duke here to initialize it","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"        String startMessage \u003d duke.getResponse(\"start\");","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(startMessage, dukeImage));","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"nananakx-x"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"nananakx-x"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"nananakx-x"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"nananakx-x"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"nananakx-x"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"nananakx-x"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"nananakx-x"},"content":"        // Automatically exits when input command is \"bye\"","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"nananakx-x"},"content":"        if (response.equals(\"Bye for now, hope to see you soon!\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"nananakx-x"},"content":"            // Create a pause transition so user has time to read the response","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"nananakx-x"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1.25));","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"nananakx-x"},"content":"            pause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"nananakx-x"},"content":"            pause.play();","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"nananakx-x"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"nananakx-x"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"nananakx-x"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"nananakx-x"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"nananakx-x"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"nananakx-x":72}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"import duke.exception.InvalidDescriptionException;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"import duke.exception.InvalidNumberException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":" * This class deals with making sense of the user command.","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"    public Parser() {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"     * Processes the user commands and decides the correct output.","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"     * @param command The user command.","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"     * @param taskList The user\u0027s list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"     * @param storage Storage of the user\u0027s task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"     * @return String output depending on the input command.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"    public String processCommand(String command, TaskList taskList, Storage storage) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"        storage.createFile();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"        if (command.equals(\"start\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"            return ui.startMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"            return ui.showList(taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"        } else if (command.startsWith(\"mark \")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"            return printMark(command, taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"        } else if (command.startsWith(\"unmark \")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"nananakx-x"},"content":"            return printUnmark(command, taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"nananakx-x"},"content":"        } else if (command.startsWith(\"todo \")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"nananakx-x"},"content":"            return addToDo(command, taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"nananakx-x"},"content":"        } else if (command.startsWith(\"deadline \")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"nananakx-x"},"content":"            return addDeadline(command, taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"nananakx-x"},"content":"        } else if (command.startsWith(\"event \")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"nananakx-x"},"content":"            return addEvent(command, taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"        } else if (command.startsWith(\"delete \")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"nananakx-x"},"content":"            return deleteTask(command, taskList);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"nananakx-x"},"content":"        } else if (command.startsWith(\"find \")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"nananakx-x"},"content":"            return ui.showMatchingList(findMatchingTaskList(command, taskList));","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"nananakx-x"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"nananakx-x"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"nananakx-x"},"content":"                storage.save(taskList.getAllTasks());","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"nananakx-x"},"content":"                return ui.endMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"nananakx-x"},"content":"            } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"nananakx-x"},"content":"                throw new InvalidDescriptionException(\"todo\");","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"nananakx-x"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"nananakx-x"},"content":"                throw new InvalidDescriptionException(\"deadline\");","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"nananakx-x"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"nananakx-x"},"content":"                throw new InvalidDescriptionException(\"event\");","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"nananakx-x"},"content":"            } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"nananakx-x"},"content":"                throw new InvalidDescriptionException(\"find\");","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"nananakx-x"},"content":"            } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"nananakx-x"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"nananakx-x"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"nananakx-x"},"content":"     * Marks a task as done and displays a message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"nananakx-x"},"content":"     * @param command The user command to mark a task as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"nananakx-x"},"content":"     * @param taskList The list of tasks to update.","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"nananakx-x"},"content":"     * @return String output of a task being marked.","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"nananakx-x"},"content":"     * @throws Exception If an invalid number is given.","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"nananakx-x"},"content":"    public String printMark(String command, TaskList taskList) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"nananakx-x"},"content":"        // Space behind is needed!, number index \u003d 5","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"nananakx-x"},"content":"        // Convert substring to int, -1 for index","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"nananakx-x"},"content":"        int taskPos \u003d Integer.parseInt(command.substring(5)) - 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"nananakx-x"},"content":"        // Only numbers \u003e\u003d 0 and \u003c total number are valid","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"nananakx-x"},"content":"        if (taskPos \u003e\u003d 0 \u0026\u0026 taskPos \u003c taskList.getSize()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"nananakx-x"},"content":"            taskList.getTask(taskPos).markAsDone();","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"nananakx-x"},"content":"            return ui.showTaskMarked(taskList.getTask(taskPos));","lastModifiedDate":"2023-09-06"},{"lineNumber":90,"author":{"gitId":"nananakx-x"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"nananakx-x"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":96,"author":{"gitId":"nananakx-x"},"content":"     * Unmarks a task as done and displays a message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"nananakx-x"},"content":"     * @param command The user command to mark a task as done.","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"nananakx-x"},"content":"     * @param taskList The list of tasks to update.","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"nananakx-x"},"content":"     * @return String output of a task being unmarked.","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"nananakx-x"},"content":"     * @throws InvalidNumberException If an invalid number is given.","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"nananakx-x"},"content":"     * @throws Exception If an error occurs during execution.","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"nananakx-x"},"content":"    public String printUnmark(String command, TaskList taskList) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"nananakx-x"},"content":"        // Number index \u003d 7","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"nananakx-x"},"content":"        // Convert substring to int, -1 for index","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"nananakx-x"},"content":"        int taskPos \u003d Integer.parseInt(command.substring(7)) - 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"nananakx-x"},"content":"        // Only numbers \u003e\u003d 0 and \u003c total number are valid","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"nananakx-x"},"content":"        if (taskPos \u003e\u003d 0 \u0026\u0026 taskPos \u003c taskList.getSize()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"nananakx-x"},"content":"            taskList.getTask(taskPos).unmark();","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"nananakx-x"},"content":"            return ui.showTaskUnmarked(taskList.getTask(taskPos));","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"nananakx-x"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"nananakx-x"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"nananakx-x"},"content":"     * Adds a new ToDo task to the task list and displays a message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"nananakx-x"},"content":"     * @param command The user command.","lastModifiedDate":"2023-09-04"},{"lineNumber":122,"author":{"gitId":"nananakx-x"},"content":"     * @param taskList The list of tasks to which the task will be added.","lastModifiedDate":"2023-09-04"},{"lineNumber":123,"author":{"gitId":"nananakx-x"},"content":"     * @return String output of a ToDo task being added.","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"nananakx-x"},"content":"     * @throws InvalidDescriptionException If the description for the ToDo task is empty.","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"nananakx-x"},"content":"     * @throws Exception If an error occurs during execution.","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"nananakx-x"},"content":"    public String addToDo(String command, TaskList taskList) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"nananakx-x"},"content":"        // Description starting index \u003d 5","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"nananakx-x"},"content":"        String description \u003d command.substring(5);","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"nananakx-x"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"nananakx-x"},"content":"            throw new InvalidDescriptionException(\"todo\");","lastModifiedDate":"2023-09-04"},{"lineNumber":133,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"nananakx-x"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2023-09-04"},{"lineNumber":136,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":137,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"nananakx-x"},"content":"        return ui.showTaskAdded(newTask, taskList.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"nananakx-x"},"content":"     * Adds a new Deadline task to the task list and displays a message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":143,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"nananakx-x"},"content":"     * @param command The user command.","lastModifiedDate":"2023-09-04"},{"lineNumber":145,"author":{"gitId":"nananakx-x"},"content":"     * @param taskList The list of tasks to which the task will be added.","lastModifiedDate":"2023-09-04"},{"lineNumber":146,"author":{"gitId":"nananakx-x"},"content":"     * @return String output of a Deadline task being added.","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"nananakx-x"},"content":"     * @throws InvalidDescriptionException If the description for the Deadline task is empty.","lastModifiedDate":"2023-09-04"},{"lineNumber":148,"author":{"gitId":"nananakx-x"},"content":"     * @throws InvalidDeadlineException If there is an invalid deadline task given. (without by)","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"nananakx-x"},"content":"     * @throws Exception If an error occurs during execution.","lastModifiedDate":"2023-09-04"},{"lineNumber":150,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"nananakx-x"},"content":"    public String addDeadline(String command, TaskList taskList) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"nananakx-x"},"content":"        // indexOf: searches for the substring and returns the index of the first character","lastModifiedDate":"2023-09-04"},{"lineNumber":153,"author":{"gitId":"nananakx-x"},"content":"        if (command.contains(\" /by \")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":154,"author":{"gitId":"nananakx-x"},"content":"            // Description starting index \u003d 9","lastModifiedDate":"2023-09-04"},{"lineNumber":155,"author":{"gitId":"nananakx-x"},"content":"            String description \u003d command.substring(9, command.indexOf(\" /by \"));","lastModifiedDate":"2023-09-04"},{"lineNumber":156,"author":{"gitId":"nananakx-x"},"content":"            // From \" \" to the specified date is 5","lastModifiedDate":"2023-09-04"},{"lineNumber":157,"author":{"gitId":"nananakx-x"},"content":"            String by \u003d command.substring(command.indexOf(\" /by \") + 5);","lastModifiedDate":"2023-09-04"},{"lineNumber":158,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":159,"author":{"gitId":"nananakx-x"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":160,"author":{"gitId":"nananakx-x"},"content":"                throw new InvalidDescriptionException(\"deadline\");","lastModifiedDate":"2023-09-04"},{"lineNumber":161,"author":{"gitId":"nananakx-x"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":162,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":163,"author":{"gitId":"nananakx-x"},"content":"            if (by.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":164,"author":{"gitId":"nananakx-x"},"content":"                throw new InvalidDeadlineException();","lastModifiedDate":"2023-09-04"},{"lineNumber":165,"author":{"gitId":"nananakx-x"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":166,"author":{"gitId":"nananakx-x"},"content":"            Task newTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-09-04"},{"lineNumber":167,"author":{"gitId":"nananakx-x"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":168,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":169,"author":{"gitId":"nananakx-x"},"content":"            return ui.showTaskAdded(newTask, taskList.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":171,"author":{"gitId":"nananakx-x"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":172,"author":{"gitId":"nananakx-x"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2023-09-04"},{"lineNumber":173,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":174,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":175,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":176,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":177,"author":{"gitId":"nananakx-x"},"content":"     * Adds a new Event task to the task list and displays a message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":178,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":179,"author":{"gitId":"nananakx-x"},"content":"     * @param command The user command.","lastModifiedDate":"2023-09-04"},{"lineNumber":180,"author":{"gitId":"nananakx-x"},"content":"     * @param taskList The list of tasks to which the task will be added.","lastModifiedDate":"2023-09-04"},{"lineNumber":181,"author":{"gitId":"nananakx-x"},"content":"     * @return String output of an Event task being added.","lastModifiedDate":"2023-09-06"},{"lineNumber":182,"author":{"gitId":"nananakx-x"},"content":"     * @throws InvalidDescriptionException If the description for the Deadline task is empty.","lastModifiedDate":"2023-09-04"},{"lineNumber":183,"author":{"gitId":"nananakx-x"},"content":"     * @throws InvalidEventException If there is an invalid event task given. (without from/to)","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"nananakx-x"},"content":"     * @throws Exception If an error occurs during execution.","lastModifiedDate":"2023-09-04"},{"lineNumber":185,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":186,"author":{"gitId":"nananakx-x"},"content":"    public String addEvent(String command, TaskList taskList) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":187,"author":{"gitId":"nananakx-x"},"content":"        if (command.contains(\" /from \") \u0026\u0026 command.contains(\" /to \")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":188,"author":{"gitId":"nananakx-x"},"content":"            // Description starting index \u003d 6","lastModifiedDate":"2023-09-04"},{"lineNumber":189,"author":{"gitId":"nananakx-x"},"content":"            String description \u003d command.substring(6, command.indexOf(\" /from \"));","lastModifiedDate":"2023-09-04"},{"lineNumber":190,"author":{"gitId":"nananakx-x"},"content":"            // From \" \" to \u0027from\u0027 date is 7","lastModifiedDate":"2023-09-04"},{"lineNumber":191,"author":{"gitId":"nananakx-x"},"content":"            String from \u003d command.substring(command.indexOf(\" /from \") + 7,","lastModifiedDate":"2023-09-04"},{"lineNumber":192,"author":{"gitId":"nananakx-x"},"content":"                    command.indexOf(\" /to \"));","lastModifiedDate":"2023-09-04"},{"lineNumber":193,"author":{"gitId":"nananakx-x"},"content":"            // From \" \" to \u0027to\u0027 date is 5","lastModifiedDate":"2023-09-04"},{"lineNumber":194,"author":{"gitId":"nananakx-x"},"content":"            String to \u003d command.substring(command.indexOf(\" /to \") + 5);","lastModifiedDate":"2023-09-04"},{"lineNumber":195,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":196,"author":{"gitId":"nananakx-x"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":197,"author":{"gitId":"nananakx-x"},"content":"                throw new InvalidDescriptionException(\"event\");","lastModifiedDate":"2023-09-04"},{"lineNumber":198,"author":{"gitId":"nananakx-x"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":199,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":200,"author":{"gitId":"nananakx-x"},"content":"            if (from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":201,"author":{"gitId":"nananakx-x"},"content":"                throw new InvalidEventException();","lastModifiedDate":"2023-09-04"},{"lineNumber":202,"author":{"gitId":"nananakx-x"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":203,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":204,"author":{"gitId":"nananakx-x"},"content":"            Task newTask \u003d new Event(description, from, to);","lastModifiedDate":"2023-09-04"},{"lineNumber":205,"author":{"gitId":"nananakx-x"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-09-04"},{"lineNumber":206,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":207,"author":{"gitId":"nananakx-x"},"content":"            return ui.showTaskAdded(newTask, taskList.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":208,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":209,"author":{"gitId":"nananakx-x"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":210,"author":{"gitId":"nananakx-x"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2023-09-04"},{"lineNumber":211,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":212,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":213,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":214,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":215,"author":{"gitId":"nananakx-x"},"content":"     * Deletes a task from the task list and displays a message to the user.","lastModifiedDate":"2023-09-04"},{"lineNumber":216,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":217,"author":{"gitId":"nananakx-x"},"content":"     * @param command The user command.","lastModifiedDate":"2023-09-04"},{"lineNumber":218,"author":{"gitId":"nananakx-x"},"content":"     * @param taskList The list of tasks to which the task will be deleted from.","lastModifiedDate":"2023-09-04"},{"lineNumber":219,"author":{"gitId":"nananakx-x"},"content":"     * @return String output of a task being deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":220,"author":{"gitId":"nananakx-x"},"content":"     * @throws InvalidNumberException If there is an invalid number given.","lastModifiedDate":"2023-09-04"},{"lineNumber":221,"author":{"gitId":"nananakx-x"},"content":"     * @throws Exception If an error occurs during execution.","lastModifiedDate":"2023-09-04"},{"lineNumber":222,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":223,"author":{"gitId":"nananakx-x"},"content":"    public String deleteTask(String command, TaskList taskList) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":224,"author":{"gitId":"nananakx-x"},"content":"        // Number index \u003d 7","lastModifiedDate":"2023-09-04"},{"lineNumber":225,"author":{"gitId":"nananakx-x"},"content":"        // Convert substring to int, -1 for index","lastModifiedDate":"2023-09-04"},{"lineNumber":226,"author":{"gitId":"nananakx-x"},"content":"        int taskPos \u003d Integer.parseInt(command.substring(7)) - 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":227,"author":{"gitId":"nananakx-x"},"content":"        if (taskPos \u003e\u003d 0 \u0026\u0026 taskPos \u003c taskList.getSize()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":228,"author":{"gitId":"nananakx-x"},"content":"            Task deleted \u003d taskList.getTask(taskPos);","lastModifiedDate":"2023-09-04"},{"lineNumber":229,"author":{"gitId":"nananakx-x"},"content":"            taskList.removeTask(taskPos);","lastModifiedDate":"2023-09-04"},{"lineNumber":230,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":231,"author":{"gitId":"nananakx-x"},"content":"            return ui.showTaskDeleted(deleted, taskList.getSize());","lastModifiedDate":"2023-09-06"},{"lineNumber":232,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":233,"author":{"gitId":"nananakx-x"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":234,"author":{"gitId":"nananakx-x"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2023-09-04"},{"lineNumber":235,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":236,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":237,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":238,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":239,"author":{"gitId":"nananakx-x"},"content":"     * Returns the list of tasks that matches the keyword indicated.","lastModifiedDate":"2023-09-04"},{"lineNumber":240,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":241,"author":{"gitId":"nananakx-x"},"content":"     * @param command The user command.","lastModifiedDate":"2023-09-04"},{"lineNumber":242,"author":{"gitId":"nananakx-x"},"content":"     * @param taskList The list of tasks to search from.","lastModifiedDate":"2023-09-04"},{"lineNumber":243,"author":{"gitId":"nananakx-x"},"content":"     * @return A TaskList of matching tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":244,"author":{"gitId":"nananakx-x"},"content":"     * @throws InvalidDescriptionException If the keyword is empty.","lastModifiedDate":"2023-09-04"},{"lineNumber":245,"author":{"gitId":"nananakx-x"},"content":"     * @throws Exception If an error occurs during execution.","lastModifiedDate":"2023-09-04"},{"lineNumber":246,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":247,"author":{"gitId":"nananakx-x"},"content":"    public TaskList findMatchingTaskList(String command, TaskList taskList) throws Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":248,"author":{"gitId":"nananakx-x"},"content":"        TaskList matchingTaskList \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":249,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":250,"author":{"gitId":"nananakx-x"},"content":"        // Keyword starting index \u003d 5","lastModifiedDate":"2023-09-04"},{"lineNumber":251,"author":{"gitId":"nananakx-x"},"content":"        String keyword \u003d command.substring(5);","lastModifiedDate":"2023-09-04"},{"lineNumber":252,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":253,"author":{"gitId":"nananakx-x"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":254,"author":{"gitId":"nananakx-x"},"content":"            throw new InvalidDescriptionException(\"find\");","lastModifiedDate":"2023-09-04"},{"lineNumber":255,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":256,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":257,"author":{"gitId":"nananakx-x"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":258,"author":{"gitId":"nananakx-x"},"content":"            Task taskUnderCheck \u003d taskList.getTask(i);","lastModifiedDate":"2023-09-04"},{"lineNumber":259,"author":{"gitId":"nananakx-x"},"content":"            if (taskUnderCheck.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":260,"author":{"gitId":"nananakx-x"},"content":"                matchingTaskList.addTask(taskUnderCheck);","lastModifiedDate":"2023-09-04"},{"lineNumber":261,"author":{"gitId":"nananakx-x"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":262,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":263,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":264,"author":{"gitId":"nananakx-x"},"content":"        return matchingTaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":265,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":266,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":267,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nananakx-x":267}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import java.io.File;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":" * This class deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"public class Storage {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"    private String filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"     * Constructor with the specified file path.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"     * @param filePath The path to the data file.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"     * Creates a data file and its parent directory if they do not exist.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"    public void createFile() {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"            // Create if it does not exist","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"            Files.createDirectories(Paths.get(\"./data/\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"            File dataFile \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"nananakx-x"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"nananakx-x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"nananakx-x"},"content":"            System.out.println(\"Error creating data file.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"     * Retrieves the existing task list from the data file.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"nananakx-x"},"content":"     * @return An ArrayList of Task objects read from the data file.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"nananakx-x"},"content":"    public static ArrayList\u003cTask\u003e retrieveData() {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"nananakx-x"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"nananakx-x"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"nananakx-x"},"content":"            File file \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"nananakx-x"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"nananakx-x"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"nananakx-x"},"content":"                String dataLine \u003d scanner.nextLine();","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"nananakx-x"},"content":"                Task task \u003d dataToTask(dataLine);","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"nananakx-x"},"content":"                taskList.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"nananakx-x"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"nananakx-x"},"content":"            scanner.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"nananakx-x"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"nananakx-x"},"content":"            System.out.println(\"Creating a new file.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"nananakx-x"},"content":"        return taskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"nananakx-x"},"content":"     * Saves the task list to the data file.","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"nananakx-x"},"content":"     * @param taskList The ArrayList of Task objects to be saved.","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"nananakx-x"},"content":"    public static void save(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"nananakx-x"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"nananakx-x"},"content":"            FileWriter writer \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"nananakx-x"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"nananakx-x"},"content":"                // Write each task with specified format","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"nananakx-x"},"content":"                writer.write(taskData(task) + \"\\n\");","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"nananakx-x"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"nananakx-x"},"content":"            writer.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"nananakx-x"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"nananakx-x"},"content":"            System.out.println(\"Error saving data.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":97,"author":{"gitId":"nananakx-x"},"content":"     * Converts a Task object into a data string for storage.","lastModifiedDate":"2023-09-04"},{"lineNumber":98,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":99,"author":{"gitId":"nananakx-x"},"content":"     * @param task Task to convert.","lastModifiedDate":"2023-09-04"},{"lineNumber":100,"author":{"gitId":"nananakx-x"},"content":"     * @return Data string representing the Task.","lastModifiedDate":"2023-09-04"},{"lineNumber":101,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":102,"author":{"gitId":"nananakx-x"},"content":"    public static String taskData(Task task) {","lastModifiedDate":"2023-09-04"},{"lineNumber":103,"author":{"gitId":"nananakx-x"},"content":"        String taskType \u003d task instanceof ToDo ? \"T\" : task instanceof Deadline ? \"D\" : \"E\";","lastModifiedDate":"2023-09-04"},{"lineNumber":104,"author":{"gitId":"nananakx-x"},"content":"        String status \u003d task.getIsDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-09-04"},{"lineNumber":105,"author":{"gitId":"nananakx-x"},"content":"        String description \u003d task.getDescription();","lastModifiedDate":"2023-09-04"},{"lineNumber":106,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":107,"author":{"gitId":"nananakx-x"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2023-09-04"},{"lineNumber":108,"author":{"gitId":"nananakx-x"},"content":"        data.append(taskType).append(\" | \").append(status).append(\" | \").append(description);","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":110,"author":{"gitId":"nananakx-x"},"content":"        // Add additional information for Deadline and Event tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"nananakx-x"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2023-09-04"},{"lineNumber":112,"author":{"gitId":"nananakx-x"},"content":"            LocalDateTime deadlineDateTime \u003d ((Deadline) task).getBy();","lastModifiedDate":"2023-09-04"},{"lineNumber":113,"author":{"gitId":"nananakx-x"},"content":"            String formattedDateTime \u003d deadlineDateTime.format(DateTimeFormatter","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"nananakx-x"},"content":"                    .ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":115,"author":{"gitId":"nananakx-x"},"content":"            data.append(\" | \").append(formattedDateTime);","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"nananakx-x"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-09-04"},{"lineNumber":117,"author":{"gitId":"nananakx-x"},"content":"            data.append(\" | \").append(((Event) task).getFrom()).append(\" | \")","lastModifiedDate":"2023-09-04"},{"lineNumber":118,"author":{"gitId":"nananakx-x"},"content":"                    .append(((Event) task).getTo());","lastModifiedDate":"2023-09-04"},{"lineNumber":119,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":120,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":121,"author":{"gitId":"nananakx-x"},"content":"        return data.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":122,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":123,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":124,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":125,"author":{"gitId":"nananakx-x"},"content":"     * Parses a data string and creates a Task from it.","lastModifiedDate":"2023-09-04"},{"lineNumber":126,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":127,"author":{"gitId":"nananakx-x"},"content":"     * @param data Data string to parse.","lastModifiedDate":"2023-09-04"},{"lineNumber":128,"author":{"gitId":"nananakx-x"},"content":"     * @return A Task object parsed from the data string.","lastModifiedDate":"2023-09-04"},{"lineNumber":129,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":130,"author":{"gitId":"nananakx-x"},"content":"    public static Task dataToTask(String data) {","lastModifiedDate":"2023-09-04"},{"lineNumber":131,"author":{"gitId":"nananakx-x"},"content":"        String[] info \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-09-04"},{"lineNumber":132,"author":{"gitId":"nananakx-x"},"content":"        String taskType \u003d info[0];","lastModifiedDate":"2023-09-04"},{"lineNumber":133,"author":{"gitId":"nananakx-x"},"content":"        String status \u003d info[1];","lastModifiedDate":"2023-09-04"},{"lineNumber":134,"author":{"gitId":"nananakx-x"},"content":"        String description \u003d info[2];","lastModifiedDate":"2023-09-04"},{"lineNumber":135,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":136,"author":{"gitId":"nananakx-x"},"content":"        Task task;","lastModifiedDate":"2023-09-04"},{"lineNumber":137,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":138,"author":{"gitId":"nananakx-x"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":139,"author":{"gitId":"nananakx-x"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2023-09-04"},{"lineNumber":140,"author":{"gitId":"nananakx-x"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":141,"author":{"gitId":"nananakx-x"},"content":"            task \u003d new Deadline(description, info[3]);","lastModifiedDate":"2023-09-04"},{"lineNumber":142,"author":{"gitId":"nananakx-x"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":143,"author":{"gitId":"nananakx-x"},"content":"            task \u003d new Event(description, info[3], info[4]);","lastModifiedDate":"2023-09-04"},{"lineNumber":144,"author":{"gitId":"nananakx-x"},"content":"        } else {","lastModifiedDate":"2023-09-04"},{"lineNumber":145,"author":{"gitId":"nananakx-x"},"content":"            throw new IllegalArgumentException(\"☹ OOPS!!! Invalid task in data\");","lastModifiedDate":"2023-09-04"},{"lineNumber":146,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":147,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":148,"author":{"gitId":"nananakx-x"},"content":"        if (status.equals(\"1\")) {","lastModifiedDate":"2023-09-04"},{"lineNumber":149,"author":{"gitId":"nananakx-x"},"content":"            task.markAsDone();","lastModifiedDate":"2023-09-04"},{"lineNumber":150,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":151,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":152,"author":{"gitId":"nananakx-x"},"content":"        return task;","lastModifiedDate":"2023-09-04"},{"lineNumber":153,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":154,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nananakx-x":155}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":" * This class deals with interactions with the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"public class Ui {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"     * Displays a default start message when the program starts.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"     * @return Start message.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"    public String startMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"        return \"I\u0027m Boo, nice to meet you! \"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"                + \"You can start adding your tasks :-)\";","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"     * Displays the default end message when the user exits the program.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"     * @return End message.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"    public String endMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"        return \"Bye for now, hope to see you soon!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"     * Displays a message when a task is added to the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"     * @param task The task that is added.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"     * @param totalTasks The total number of tasks in the list after adding.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"     * @return String representation of a task being added.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"    public String showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + task.toString()","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"                + \"\\nNow you have \" + totalTasks + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"     * Displays a message when a task is deleted from the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"nananakx-x"},"content":"     * @param task The task that is deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"nananakx-x"},"content":"     * @param totalTasks The total number of tasks in the list after deleting.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"nananakx-x"},"content":"     * @return String representation of a task being deleted.","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"nananakx-x"},"content":"    public String showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"nananakx-x"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + task.toString()","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"nananakx-x"},"content":"                + \"\\nNow you have \" + totalTasks + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"nananakx-x"},"content":"     * Displays a message when a task is marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"nananakx-x"},"content":"     * @param task The task that is marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"nananakx-x"},"content":"     * @return String representation of a task being marked.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"nananakx-x"},"content":"    public String showTaskMarked(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"nananakx-x"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + \"[X] \"","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"nananakx-x"},"content":"                + task.getDescription();","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"nananakx-x"},"content":"     * Displays a message when a task is unmarked.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"nananakx-x"},"content":"     * @param task The task that is unmarked.","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"nananakx-x"},"content":"     * @return String representation of a task being unmarked.","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"nananakx-x"},"content":"    public String showTaskUnmarked(Task task) {","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"nananakx-x"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + \"[ ] \"","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"nananakx-x"},"content":"                + task.getDescription();","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"nananakx-x"},"content":"     * Displays the user\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"nananakx-x"},"content":"     * @param taskList The task list to be displayed.","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"nananakx-x"},"content":"     * @return String representation of the user\u0027s list of task/s.","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"nananakx-x"},"content":"    public String showList(TaskList taskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"nananakx-x"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"nananakx-x"},"content":"        list.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"nananakx-x"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"nananakx-x"},"content":"            // Adding toString() to use the overridden one in duke.task.Task, etc.","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"nananakx-x"},"content":"            list.append(i).append(\". \").append(taskList.getTask(i - 1).toString())","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"nananakx-x"},"content":"                    .append(\"\\n\");;","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"nananakx-x"},"content":"        return list.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"nananakx-x"},"content":"     * Displays the list of matching task from the user\u0027s task list.","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"nananakx-x"},"content":"     * @param matchingTaskList The task list to be displayed.","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"nananakx-x"},"content":"     * @return String representation of the list of matching task from the user\u0027s task list.","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"nananakx-x"},"content":"    public String showMatchingList(TaskList matchingTaskList) {","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"nananakx-x"},"content":"        StringBuilder matchingList \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"nananakx-x"},"content":"        matchingList.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"nananakx-x"},"content":"        for (int i \u003d 1; i \u003c\u003d matchingTaskList.getSize(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"nananakx-x"},"content":"            // Adding toString() to use the overridden one in duke.task.Task, etc.","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"nananakx-x"},"content":"            matchingList.append(i).append(\". \").append(matchingTaskList.getTask(i - 1).toString())","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"nananakx-x"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"nananakx-x"},"content":"        return matchingList.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nananakx-x":113}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":" * This exception is thrown when there is an invalid command.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":" * An invalid command is one that is not recognized by the program.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"     * Constructor with an error message.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"        super(\"Oops! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nananakx-x":14}},{"path":"src/main/java/duke/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":" * This exception is thrown when there is an invalid deadline task given.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":" * An invalid deadline task is one without a due date/time.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"     * Constructor with an error message.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"        super(\"Oops! You forgot to indicate the due date/time.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nananakx-x":14}},{"path":"src/main/java/duke/exception/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":" * This exception is thrown when there is an invalid task description or when the keyword","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":" * is not indicated for \u0027find\u0027.","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":" * An invalid task description is one that is empty.","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"public class InvalidDescriptionException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"     * Constructor with an error message.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"    public InvalidDescriptionException(String task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"        super(\"Oops! \"","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"                + (task.equals(\"find\")","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"                ? \"You didn\u0027t indicate the keyword.\"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"                : \"The description of a \" + task + \" cannot be empty.\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nananakx-x":18}},{"path":"src/main/java/duke/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":" * This exception is thrown when there is an invalid event task given.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":" * An invalid event task is one without a start and/or end date/time.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"public class InvalidEventException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"     * Constructor with an error message.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"    public InvalidEventException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"        super(\"Oops! You forgot to indicate the start and/or end date/time.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nananakx-x":14}},{"path":"src/main/java/duke/exception/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke.exception;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":" * This exception is thrown when there is an invalid number indicated after \u0027mark\u0027 and \u0027unmark\u0027.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":" * An invalid number is one that is not in the numbering of the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"public class InvalidNumberException extends Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"     * Constructor with an error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"    public InvalidNumberException() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"        super(\"Oops! You have indicated an invalid number.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"nananakx-x":14}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":" * Represents a deadline task that has a description and a due date/time.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"     * Constructor with description and due date/time.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"     * @param by The due date/time of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"        this.by \u003d convertDateTime(by);","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"     * Converts the string by to type LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"     * @param dateTimeString String by to be converted.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"     * @return LocalDateTime by.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"    public LocalDateTime convertDateTime(String dateTimeString) {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"            return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"            throw new IllegalArgumentException(\"Oops! This is an invalid date/time format - \"","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"                    + \"Please use dd/MM/yyyy HHmm.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"     * Formats the LocalDateTime by to desired string.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"     * @param by LocalDateTime by to be formatted.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"nananakx-x"},"content":"     * @return Formatted string to show due date/time.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"nananakx-x"},"content":"    public String formatDateTime(LocalDateTime by) {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"nananakx-x"},"content":"        //  \"a\" represents the AM/PM marker","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"nananakx-x"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"nananakx-x"},"content":"     * Returns the due date/time of the deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"nananakx-x"},"content":"     * @return The due date/time.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"nananakx-x"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"nananakx-x"},"content":"        return this.by;","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"nananakx-x"},"content":"     * Returns a string representation of the duke.task.Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"nananakx-x"},"content":"     * @return A string representation of the duke.task.Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"nananakx-x"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"nananakx-x"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"nananakx-x"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDateTime(by) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nananakx-x":69}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":" * Represents an event task that has a description, a start date/time, and an end date/time.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"     * Constructor with description, start date/time, and end date/time.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"     * @param to The end date/time of the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"     * Returns the start date/time of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"     * @return The start date/time.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"    public String getFrom() {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"        return this.from;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"     * Returns the end date/time of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"     * @return The end date/time.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"    public String getTo() {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"        return this.to;","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"     * Returns a string representation of the duke.task.Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"nananakx-x"},"content":"     * @return A string representation of the duke.task.Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"nananakx-x"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"nananakx-x"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"nananakx-x"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nananakx-x":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":" * Represents a basic task that has a description.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"     * Constructor with description. isDone is set as false.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"     * Returns the status icon representing the completion status of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"     * @return The status icon. (\"X\" representing completion)","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"     * Marks the task as done by setting isDone to true.","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"     * Changes the completion status back to not done. (set isDone as false)","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"nananakx-x"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"nananakx-x"},"content":"     * @return The description.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"nananakx-x"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"nananakx-x"},"content":"        return this.description;","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"nananakx-x"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"nananakx-x"},"content":"     * @return The completion status.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"nananakx-x"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"nananakx-x"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"nananakx-x"},"content":"     * Returns a string representation of the duke.task.Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"nananakx-x"},"content":"     * @return A string representation of the duke.task.Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"nananakx-x"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"nananakx-x"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"nananakx-x"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nananakx-x":75}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":" * Represents a list of tasks. It contains the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"public class TaskList {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"     * Constructor with no parameter.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"     * Constructor with tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"     * @param tasks Tasks in the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"     * @return Size of list.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"     * Adds task to the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"     * @param task Task to be added to the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"nananakx-x"},"content":"     * Removes task from the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"nananakx-x"},"content":"     * @param index Index of the task to be removed from the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"nananakx-x"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"nananakx-x"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"nananakx-x"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"nananakx-x"},"content":"            throw new IndexOutOfBoundsException(\"Invalid task index\");","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"nananakx-x"},"content":"     * Returns a task in the list which is at a particular index.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"nananakx-x"},"content":"     * @param index Index of the task to be returned.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"nananakx-x"},"content":"     * @return Task in the list at the index indicated.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"nananakx-x"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"nananakx-x"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"nananakx-x"},"content":"            return tasks.get(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"nananakx-x"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"nananakx-x"},"content":"            throw new IndexOutOfBoundsException(\"Invalid task index\");","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"nananakx-x"},"content":"     * Returns tasks in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"nananakx-x"},"content":"     * @return Tasks present in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"nananakx-x"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"nananakx-x"},"content":"        return tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nananakx-x":81}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":" * Represents a todo task that has a description.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"     * Constructor with description.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"     * Returns a string representation of the duke.task.ToDo object.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"     * @return A string representation of the duke.task.ToDo object.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nananakx-x":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #dceefc; -fx-background-radius: 5;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"                \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"7.0\" right\u003d\"7.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"71.0\" fitWidth\u003d\"71.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"nananakx-x":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.7\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Message Boo\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" minHeight\u003d\"558.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #c2b6d4;\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"nananakx-x":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"import duke.exception.InvalidDescriptionException;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"    public void testAddToDo() {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"            parser.addToDo(\"todo watch videos\", taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"            assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"            fail(\"Exception should not be thrown.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"    public void testAddDeadline() {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"            parser.addDeadline(\"deadline assignment /by 12/03/2040 1345\", taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"            assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"            fail(\"Exception should not be thrown.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"    public void testAddEvent() {","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"            parser.addEvent(\"event meeting /from 6th June /to 9th June\", taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"            assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"nananakx-x"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"nananakx-x"},"content":"            fail(\"Exception should not be thrown.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"nananakx-x"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"nananakx-x"},"content":"            parser.addToDo(\"todo play!\", taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"nananakx-x"},"content":"            parser.deleteTask(\"delete 1\", taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"nananakx-x"},"content":"            assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"nananakx-x"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"nananakx-x"},"content":"            fail(\"Exception should not be thrown.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"nananakx-x"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"nananakx-x"},"content":"    public void testFindMatchingTaskList() throws Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new ToDo(\"return book\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Deadline(\"book review\", \"07/12/2019 1920\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Event(\"meeting\", \"Mon 6pm\", \"10pm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"nananakx-x"},"content":"        TaskList matchingTaskList \u003d parser.findMatchingTaskList(\"find book\", taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(2, matchingTaskList.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(\"[T][ ] return book\", matchingTaskList.getTask(0).toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(\"[D][ ] book review (by: 07 Dec 2019 7:20 PM)\",","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"nananakx-x"},"content":"                matchingTaskList.getTask(1).toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"nananakx-x"},"content":"    public void testFindNoMatchingTaskList() throws Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new ToDo(\"return book\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Deadline(\"book review\", \"07/12/2019 1920\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Event(\"meeting\", \"Mon 6pm\", \"10pm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"nananakx-x"},"content":"        TaskList matchingTaskList \u003d parser.findMatchingTaskList(\"find hello\", taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(0, matchingTaskList.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"nananakx-x"},"content":"    public void testFindMatchingTaskListEmptyKeyword() throws Exception {","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new ToDo(\"return book\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":89,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Deadline(\"book review\", \"07/12/2019 1920\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Event(\"meeting\", \"Mon 6pm\", \"10pm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":91,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"nananakx-x"},"content":"        assertThrows(InvalidDescriptionException.class, () -\u003e {","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"nananakx-x"},"content":"            parser.findMatchingTaskList(\"find \", taskList);","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"nananakx-x"},"content":"        });","lastModifiedDate":"2023-09-04"},{"lineNumber":95,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nananakx-x":97}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"    public void testTaskToStringData() {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"        Task task \u003d new Deadline(\"math homework\", \"12/12/2002 1700\");","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"        String taskString \u003d Storage.taskData(task);","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"        String expected \u003d \"D | 0 | math homework | 12/12/2002 1700\";","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(expected, taskString);","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"    public void testStringDataToEventTask() {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"        String taskString \u003d \"E | 1 | project meeting | Mon 2pm | 6pm\";","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"        Task task \u003d Storage.dataToTask(taskString);","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(Event.class, task.getClass());","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(\"project meeting\", task.getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"        assertTrue(task.getIsDone());","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"        Event event \u003d (Event) task;","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(\"Mon 2pm\", event.getFrom());","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(\"6pm\", event.getTo());","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"    public void testStringToDeadlineTask() {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"        String taskString \u003d \"D | 0 | assignment 0 | 12/12/2002 1700\";","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"        Task task \u003d Storage.dataToTask(taskString);","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(Deadline.class, task.getClass());","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(\"assignment 0\", task.getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"nananakx-x"},"content":"        assertTrue(!task.getIsDone());","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"        Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(LocalDateTime.parse(\"2002-12-12T17:00\"), deadline.getBy());","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nananakx-x":55}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke.task;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"    public void testConvertDateTimeValid() {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"        Deadline deadline \u003d new Deadline(\"homework\", \"12/09/2080 1718\");","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"        LocalDateTime actual \u003d deadline.convertDateTime(\"12/09/2080 1718\");","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2080, 9, 12, 17, 18);","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"    public void testConvertDateTimeInvalid() {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"        Deadline deadline \u003d new Deadline(\"homework\", \"12/09/2080 1718\");","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"            deadline.convertDateTime(\"hello bye!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"        });","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"    public void testFormatDateTime() {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"        Deadline deadline \u003d new Deadline(\"homework\", \"12/09/2080 1718\");","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2080, 9, 12, 17, 18);","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"        String actual \u003d deadline.formatDateTime(dateTime);","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"        String expected \u003d \"12 Sep 2080 5:18 PM\";","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"    public void testDeadlineString() {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"        Task task \u003d new Deadline(\"math homework\", \"12/12/2002 1700\");","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"        String expected \u003d \"[D][ ] math homework (by: 12 Dec 2002 5:00 PM)\";","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(expected, task.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"nananakx-x":43}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new ToDo(\"Test\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Event(\"Test2\", \"Mon 12pm\", \"Tues 6pm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Event(\"Test2\", \"Mon 12pm\", \"Tues 6pm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"        taskList.removeTask(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"    public void testGetTaskValidIndex() {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new ToDo(\"Test\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Event(\"Test2\", \"Mon 12pm\", \"Tues 6pm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Deadline(\"homework\", \"12/09/2080 1718\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(\"Test\", taskList.getTask(0).getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(\"Test2\", taskList.getTask(1).getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(\"homework\", taskList.getTask(2).getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"nananakx-x"},"content":"    public void testGetTaskInvalidIndex() {","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new ToDo(\"Test\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Event(\"Test2\", \"Mon 12pm\", \"Tues 6pm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Deadline(\"homework\", \"12/09/2080 1718\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"nananakx-x"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.getTask(3));","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"nananakx-x"},"content":"    @Test","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"nananakx-x"},"content":"    public void testGetAllTasks() {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new ToDo(\"Test\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Event(\"Test2\", \"Mon 12pm\", \"Tues 6pm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"nananakx-x"},"content":"        taskList.addTask(new Deadline(\"homework\", \"12/09/2080 1718\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"nananakx-x"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d taskList.getAllTasks();","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"nananakx-x"},"content":"        assertNotNull(allTasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(\"Test\", allTasks.get(0).getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(\"Test2\", allTasks.get(1).getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(\"homework\", allTasks.get(2).getDescription());","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"nananakx-x"},"content":"        assertEquals(3, allTasks.size());","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"nananakx-x"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"nananakx-x"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"nananakx-x"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"nananakx-x":63}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nananakx-x"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"nananakx-x"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"nananakx-x"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"nananakx-x"},"content":"event video meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"nananakx-x"},"content":"todo join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"nananakx-x"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"nananakx-x"},"content":"todo read a book","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"nananakx-x"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"nananakx-x"},"content":"deadline return book /by 04/12/2023 1920","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"deadline return book /by 04/12/2023 1989","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"nananakx-x"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"nananakx-x"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"nananakx-x"},"content":"unmark 9","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"nananakx-x"},"content":"unmark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"nananakx-x"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"nananakx-x"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"nananakx-x"},"content":"no work today!","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"nananakx-x"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"nananakx-x"},"content":"hihihi","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"nananakx-x"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"nananakx-x"},"content":"event party","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"nananakx-x"},"content":"event party /from 7 /to","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"nananakx-x"},"content":"deadline math","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"nananakx-x"},"content":"deadline math /by","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"nananakx-x"},"content":"delete 3","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"nananakx-x"},"content":"delete 8","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"nananakx-x"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"nananakx-x"},"content":"delete 6","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"nananakx-x"},"content":"delete 4","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"nananakx-x"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"nananakx-x"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"nananakx-x":31}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nananakx-x"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nananakx-x":1,"-":20}}]
