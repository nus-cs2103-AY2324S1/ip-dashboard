[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"plugins {","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"repositories {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"javafx {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"dependencies {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    String javaFxVersion \u003d \u002719.0.2.1\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"application {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    mainClassName \u003d \u0027uke.Uke\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"run {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"test {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"spatuly":53}},{"path":"data/uke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"[T] //X//2103T tP//","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"[E] //X//Dinner with Uke//Sep 20 2023 18:00//Sep 20 2023 20:00//","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"[D] // //UG//Sep 20 2023 23:59//","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"[T] // //Unfriend Uke //","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"[T] // //Learn to use Uke//","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"[D] // //Add tasks to Uke//Oct 1 2023 23:59//","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"[E] // //Uke\u0027s Party//Sep 21 2023 10:00//Sep 21 2023 12:00//","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"spatuly":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"# Uke User Guide","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"Uke tracks your tasks for you. ","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"_Words in UPPER CASE are the parameters to be supplied by the user._","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"### Adding todo: `todo`","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"Adds a new todo task.","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"Example: ","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"* `todo Learn to use Uke`","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"### Adding task with deadline: `deadline`","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"Adds a new task which has a deadline.","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"Format: `deadline DESCRIPTION /by DEADLINE`","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"* DEADLINE **must** be in the form DD/MM/YYYY HH:MM","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"Example:","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"* `deadline Add tasks to Uke /by 01/10/2023 23:59`","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"### Adding event with start and end time: `event`","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"Adds a new event which has start and end times.","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"Format: `event DESCRIPTION /from START /to END`","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"* START **must** be in the form DD/MM/YYYY HH:MM","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"* END **must** be in the form DD/MM/YYYY HH:MM","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"Example:","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"* `event Uke\u0027s Party /from 21/09/2023 10:00 /to 21/09/2023 12:00`","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"Deletes the task corresponding to the index given.","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"* INDEX refers to the index number shown in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"* INDEX **must** be a positive integer.","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"Example:","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"* `delete 1` deletes the 1st task in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"### Marking a task as completed: `mark`","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"Marks the task corresponding to the index given as completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"* INDEX refers to the index number shown in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"* INDEX **must** be a positive integer.","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"Example:","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"* `mark 3` marks the 3rd task in the task list as completed.","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"### Marking a task as uncompleted: `unmark`","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"Marks the task corresponding to the index given as uncompleted.","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"* INDEX refers to the index number shown in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"* INDEX **must** be a positive integer.","lastModifiedDate":"2023-09-19"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"Example:","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"spatuly"},"content":"* `unmark 5` marks the 5th task in the task list as uncompleted.","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":84,"author":{"gitId":"spatuly"},"content":"Shows a list of all tasks added.","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"spatuly"},"content":"Format: `list`","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"spatuly"},"content":"### Finding all tasks which contains a given keyword: `find`","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"spatuly"},"content":"Shows a list of all tasks which contains the given keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"spatuly"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"spatuly"},"content":"Example:","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"spatuly"},"content":"* `find Uke` returns a list of tasks which contains the word \"Uke\".","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"spatuly"},"content":"### Viewing all tasks on a given day: `view`","lastModifiedDate":"2023-09-19"},{"lineNumber":102,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"spatuly"},"content":"Shows a list of all tasks which starts on or is due by the given day.","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"spatuly"},"content":"Format: `view DAY`","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"spatuly"},"content":"* DAY **must** be in the form DD/MM/YYYY","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"spatuly"},"content":"Example:","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"spatuly"},"content":"* `view 01/10/2023` returns a list of tasks which starts on or is due by 01/10/2023.","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"spatuly"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"spatuly"},"content":"Exits the program.","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"spatuly"},"content":"Format: `bye`","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"spatuly"},"content":"### Saving the data","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"spatuly"},"content":"Data is saved automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"spatuly":105,"-":18}},{"path":"src/main/java/uke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"    private Label userDialog;","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    @FXML","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"    private Label ukeDialog;","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"    private DialogBox(String text, Image img, boolean isUserDialog) {","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"        if (isUserDialog) {","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"            ukeDialog.setText(\"\");","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"            userDialog.setText(text);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"            userDialog.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"#e6f2ff\"),","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"                    new CornerRadii(10.0), new Insets(-10))));","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"            displayPicture.setImage(img);","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"        } else {","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"            userDialog.setText(\"\");","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"            ukeDialog.setText(text);","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"            ukeDialog.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"#f0e6ff\"),","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"                    new CornerRadii(10.0), new Insets(-10))));","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"            displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"        return new DialogBox(text, img, true);","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"        var db \u003d new DialogBox(text, img, false);","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"spatuly"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"spatuly":82}},{"path":"src/main/java/uke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"spatuly":13}},{"path":"src/main/java/uke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":" * A GUI for Uke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"    private static final String FILEPATH \u003d \"./data/uke.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"    private Uke uke \u003d new Uke(FILEPATH);","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(uke);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"spatuly":33}},{"path":"src/main/java/uke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    private Uke uke;","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Uke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"        String greeting \u003d \"Hi! I\u0027m Uke!\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"        Insets inset \u003d new Insets(0, 0, 20, 0);","lastModifiedDate":"2023-09-19"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"        dialogContainer.setPadding(inset);","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"    public void setDuke(Uke u) {","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"        assert u !\u003d null;","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"        uke \u003d u;","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Uke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"        String response \u003d uke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"spatuly":63}},{"path":"src/main/java/uke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import uke.exception.UkeInvalidCommandException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import uke.exception.UkeMissingArgumentException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":" * Deals with making sense of user commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"     * Returns the command inputted.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     * @param input Input entered by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"     * @return Command entered by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"     * @throws UkeMissingArgumentException If command entered is invalid.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"    public static String parseCommand(String input) throws UkeInvalidCommandException {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"        String[] strArr;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"            strArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"            return strArr[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"            throw new UkeInvalidCommandException(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"     * Returns the information other than command inputted.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"     * @param input Input entered by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"     * @return Information other than command entered by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"     * @throws UkeMissingArgumentException If no information is found.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"    public static String parseInfo(String input) throws UkeMissingArgumentException {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"            String[] strArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"            return strArr[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"            throw new UkeMissingArgumentException();","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":43}},{"path":"src/main/java/uke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"import uke.exception.UkeDataFileException;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"import uke.exception.UkeException;","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"import uke.exception.UkeInvalidTaskStringException;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"import uke.task.Deadline;","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"import uke.task.Event;","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"import uke.task.Task;","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"import uke.task.TaskList;","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"import uke.task.Todo;","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":" * Deals with loading tasks from file and saving tasks in file.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"    private String path;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise Storage object.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"     * @param path File path to the text file which stores task information.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"     * Creates a directory and text file if and only if directory and text file do not already exist.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"     * @throws UkeException If error is encountered creating the text file.","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"    public void createDataFile() throws UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"        File dataFile \u003d new File(this.path);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"        File dataDir \u003d new File(dataFile.getParent());","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"        dataDir.mkdir();","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"            throw new UkeDataFileException();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"     * Converts the given task list to a string ready to be saved in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"     * @param stored TaskList with all stored tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"     * @return String representation of the task list to be saved in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"    public String generateTaskListString(TaskList stored) {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"        int len \u003d stored.getLength();","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"        String tL \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"        if (len \u003e 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"            for (int i \u003d 1; i \u003c len + 1; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"                tL \u003d tL + stored.getTask(i - 1).convertToSavedString() + \"\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"        return tL;","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"     * Updates the text file with the newest state of the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"     * @param storedTasks Task list with all stored tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"     * @throws UkeDataFileException If error is encountered accessing the text file.","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"spatuly"},"content":"    public void update(TaskList storedTasks) throws UkeDataFileException {","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"        File dataFile \u003d new File(this.path);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"            FileWriter writer \u003d new FileWriter(dataFile);","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"            String updatedTaskList \u003d generateTaskListString(storedTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"spatuly"},"content":"            writer.write(updatedTaskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"spatuly"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"spatuly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"spatuly"},"content":"            throw new UkeDataFileException();","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"spatuly"},"content":"     * Loads the task list from the text file into an ArrayList.","lastModifiedDate":"2023-09-04"},{"lineNumber":93,"author":{"gitId":"spatuly"},"content":"     * Create a text file if file does not exist yet.","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"spatuly"},"content":"     * @return ArrayList containing the loaded tasks.","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"spatuly"},"content":"     * @throws UkeException If line in text file is incorrectly formatted or error is encountered creating a text file.","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"spatuly"},"content":"    public ArrayList\u003cTask\u003e loadTaskList() throws UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"spatuly"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"spatuly"},"content":"        File dataFile \u003d new File(this.path);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"spatuly"},"content":"            Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"spatuly"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"spatuly"},"content":"                String taskStr \u003d sc.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"spatuly"},"content":"                taskList.add(convertStrToTask(taskStr));","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"spatuly"},"content":"            sc.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"spatuly"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"spatuly"},"content":"            createDataFile();","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"spatuly"},"content":"            return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"spatuly"},"content":"        return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"spatuly"},"content":"     * Converts the string representation of a task saved into the text file into a Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"spatuly"},"content":"     * @param str Stored string representation a task.","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"spatuly"},"content":"     * @return Task object represented by the given string.","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"spatuly"},"content":"     * @throws UkeInvalidTaskStringException If line in text file is not correctly formatted.","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"spatuly"},"content":"    public Task convertStrToTask(String str) throws UkeInvalidTaskStringException {","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"spatuly"},"content":"        String[] strArr \u003d str.split(\"//\");","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"spatuly"},"content":"        Task t;","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"spatuly"},"content":"        boolean isDone \u003d strArr[1].equals(\"X\");","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"spatuly"},"content":"        switch (str.substring(0, 3)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"spatuly"},"content":"        case \"[T]\":","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"spatuly"},"content":"            t \u003d new Todo(strArr[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"spatuly"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"spatuly"},"content":"        case \"[D]\":","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"spatuly"},"content":"            t \u003d new Deadline(strArr[2], LocalDateTime.parse(strArr[3], dateTimeFormatter));","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"spatuly"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":137,"author":{"gitId":"spatuly"},"content":"        case \"[E]\":","lastModifiedDate":"2023-09-01"},{"lineNumber":138,"author":{"gitId":"spatuly"},"content":"            t \u003d new Event(strArr[2], LocalDateTime.parse(strArr[3], dateTimeFormatter),","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"spatuly"},"content":"                    LocalDateTime.parse(strArr[4], dateTimeFormatter));","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"spatuly"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":141,"author":{"gitId":"spatuly"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":142,"author":{"gitId":"spatuly"},"content":"            throw new UkeInvalidTaskStringException();","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":144,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":145,"author":{"gitId":"spatuly"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":146,"author":{"gitId":"spatuly"},"content":"            t.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":147,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":148,"author":{"gitId":"spatuly"},"content":"        return t;","lastModifiedDate":"2023-09-01"},{"lineNumber":149,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"spatuly":150}},{"path":"src/main/java/uke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import uke.task.Task;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"import uke.task.TaskList;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"public class Ui {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"     * Generates Uke\u0027s response to the list or find command.","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"     * @param storedTasks TaskList to be printed.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"     * @param isListCommand Whether the method is called from a list command.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response which includes the TaskList or the empty list response.","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"    public String printList(TaskList storedTasks, boolean isListCommand) {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"        int len \u003d storedTasks.getLength();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        String successfulListMessage \u003d isListCommand","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"                ? \"Okay! Here\u0027s the list of your added tasks:\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"                : \"There you go! Here\u0027s the list of matching tasks I found:\\n\";","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"        String unsuccessfulListMessage \u003d isListCommand","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"                ? \"No tasks found! :(\"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"                : \"No matching tasks found! :(\";","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"            return unsuccessfulListMessage;","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"        for (int i \u003d 1; i \u003c len + 1; i++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"            successfulListMessage +\u003d i + \". \" + storedTasks.getTask(i - 1) + \"\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"        return successfulListMessage;","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"     * Generates Uke\u0027s response to the mark command.","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"     * @param t Task that was marked as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response which includes the task that was marked as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"    public String printMark(Task t) {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"        return \"Okay! I have marked the following task as DONE:\\n\" + t;","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"     * Generates Uke\u0027s response to the unmark command.","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"     * @param t Task that was marked as undone.","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response which includes the task that was marked as undone.","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"    public String printUnmark(Task t) {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"        return \"Okay! I have marked the following task as UNDONE:\\n\" + t;","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"     * Generates Uke\u0027s response to the delete command.","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"     * @param t Task that was deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response which includes the task that was deleted.","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"    public String printDelete(Task t, TaskList tl) {","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"        return String.format(\"Okay! The following task has been deleted:\\n%s\\n%s\", t, printNumberOfTasks(tl));","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"     * Generates a message indicating the number of tasks in the given TaskList.","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"     * @param tl TaskList given.","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"     * @return String representation of a message indicating the number of tasks in the given TaskList.","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"    public String printNumberOfTasks(TaskList tl) {","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"        int len \u003d tl.getLength();","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"        return \"You now have \" + len + \" task(s) in your list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"spatuly"},"content":"     * Generates Uke\u0027s response to the exit command.","lastModifiedDate":"2023-09-19"},{"lineNumber":86,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"spatuly"},"content":"     * @return String representation of the exit message.","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"spatuly"},"content":"    public String printExit() {","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"spatuly"},"content":"        String exit \u003d \"Bye! See you soon! :)\\n\";","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"spatuly"},"content":"        String closingMessage \u003d \"I will close automatically in 5 seconds.\\n\";","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"spatuly"},"content":"        return String.format(\"%s%s\", exit, closingMessage);","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"spatuly"},"content":"     * Generates the string representation of the given error.","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"spatuly"},"content":"     * @param e Exception which error message is to be printed.","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"spatuly"},"content":"     * @return String representation of the error.","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"spatuly"},"content":"    public String printError(Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"spatuly"},"content":"        return e.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"spatuly"},"content":"     * Generates Uke\u0027s response to the commands that add tasks to the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"spatuly"},"content":"     * @param t Task that was added.","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"spatuly"},"content":"     * @param tl TaskList to which the task was added.","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response which includes the task that was added.","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"spatuly"},"content":"    public String printAdd(Task t, TaskList tl) {","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"spatuly"},"content":"        return String.format(\"Okay! The following task has been added:\\n%s\\n%s\", t, printNumberOfTasks(tl));","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"spatuly"},"content":"     * Generates Uke\u0027s response to the view command.","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"spatuly"},"content":"     * @param date Date for which the schedule is generated.","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"spatuly"},"content":"     * @param tasks TaskList containing the tasks that start on or is due by the given date.","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response which includes the TaskList given.","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":123,"author":{"gitId":"spatuly"},"content":"    public String printSchedule(LocalDate date, TaskList tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"spatuly"},"content":"        int len \u003d tasks.getLength();","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"spatuly"},"content":"        String displayedDate \u003d date.format(dateTimeFormatter);","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"spatuly"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"spatuly"},"content":"            return String.format(\"Your schedule for %s is currently empty! Add some tasks? :(\", displayedDate);","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"spatuly"},"content":"        String schedule \u003d String.format(\"Okay! :) Here\u0027s your schedule for %s:\\n\", displayedDate);","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"spatuly"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"spatuly"},"content":"            schedule +\u003d tasks.getTask(i) + \"\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"spatuly"},"content":"        return schedule;","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"spatuly":141}},{"path":"src/main/java/uke/Uke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"import java.util.Timer;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"import uke.exception.UkeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"import uke.exception.UkeInvalidCommandException;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"import uke.exception.UkeInvalidDateException;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"import uke.exception.UkeInvalidDateTimeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"import uke.exception.UkeInvalidTaskNumberException;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"import uke.exception.UkeMissingArgumentException;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"import uke.task.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"import uke.task.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"import uke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"import uke.task.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"import uke.task.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":" * Represents the Uke chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"public class Uke {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"    private Image uke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Uke.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise a Uke object.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"     * @param path File path to the text file which stores task information.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    public Uke(String path) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"        assert path !\u003d null;","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"            tasks \u003d new TaskList(storage.loadTaskList());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"        } catch (UkeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"            ui.printError(e);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"     * Generates Uke\u0027s response to the input entered by the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"     * @param input String representation of the input entered by the user.","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response.","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"            String command \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"            String info \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"            switch (command.toUpperCase()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"            case \"BYE\":","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"                return handleExit();","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"            case \"LIST\":","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"                return handleList();","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"            case \"MARK\":","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"                info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"                return handleMarking(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"            case \"UNMARK\":","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"                info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"                return handleUnmarking(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"            case \"DELETE\":","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"                info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"                return handleDelete(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"            case \"TODO\":","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"spatuly"},"content":"                info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"                return addTodo(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"            case \"EVENT\":","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"                info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"                return addEvent(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"spatuly"},"content":"                info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"spatuly"},"content":"                return addDeadline(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"spatuly"},"content":"            case \"FIND\":","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"spatuly"},"content":"                info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"spatuly"},"content":"                return handleFind(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"spatuly"},"content":"            case \"VIEW\":","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"spatuly"},"content":"                info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"spatuly"},"content":"                return handleView(info);","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"spatuly"},"content":"            default:","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"spatuly"},"content":"                throw new UkeInvalidCommandException(command);","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"spatuly"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"spatuly"},"content":"            return ui.printError(e);","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"spatuly"},"content":"     * Exits the Uke chatbot.","lastModifiedDate":"2023-09-10"},{"lineNumber":102,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response to the exit command.","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"spatuly"},"content":"    public String handleExit() throws UkeException {","lastModifiedDate":"2023-09-10"},{"lineNumber":106,"author":{"gitId":"spatuly"},"content":"        storage.update(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"        new Timer().schedule(new TimerTask() {","lastModifiedDate":"2023-09-19"},{"lineNumber":108,"author":{"gitId":"spatuly"},"content":"            public void run() {","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"spatuly"},"content":"                Platform.exit();","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"spatuly"},"content":"        }, 5000);","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"spatuly"},"content":"        return ui.printExit();","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"spatuly"},"content":"     * Returns Uke\u0027s response to the list command.","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response to the list command.","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"spatuly"},"content":"    public String handleList() {","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"spatuly"},"content":"        return ui.printList(tasks, true);","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"spatuly"},"content":"     * Marks task as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"spatuly"},"content":"     * @param info Task number of the task to be marked as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response to the mark command.","lastModifiedDate":"2023-09-19"},{"lineNumber":129,"author":{"gitId":"spatuly"},"content":"     * @throws UkeException If index is not an integer or if index is an integer that is not a valid task number.","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"spatuly"},"content":"    public String handleMarking(String info) throws UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"spatuly"},"content":"        int index;","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"spatuly"},"content":"            index \u003d Integer.parseInt(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"spatuly"},"content":"            Task t \u003d tasks.getTask(index - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"spatuly"},"content":"            t.markAsDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"spatuly"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"spatuly"},"content":"            return ui.printMark(t);","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"spatuly"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"spatuly"},"content":"            throw new UkeInvalidTaskNumberException(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"spatuly"},"content":"            throw new UkeInvalidTaskNumberException(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"spatuly"},"content":"     * Marks task as undone.","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"spatuly"},"content":"     * @param info Task number of the task to be marked as undone.","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response to the unmark command.","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"spatuly"},"content":"     * @throws UkeException If index is not an integer or if index is an integer that is not a valid task number.","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"spatuly"},"content":"    public String handleUnmarking(String info) throws UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"spatuly"},"content":"        int index;","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"spatuly"},"content":"            index \u003d Integer.parseInt(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"spatuly"},"content":"            Task t \u003d tasks.getTask(index - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"spatuly"},"content":"            t.markAsUndone();","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"spatuly"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"spatuly"},"content":"            return ui.printUnmark(t);","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"spatuly"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"spatuly"},"content":"            throw new UkeInvalidTaskNumberException(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"spatuly"},"content":"            throw new UkeInvalidTaskNumberException(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":171,"author":{"gitId":"spatuly"},"content":"     * Deletes task.","lastModifiedDate":"2023-09-07"},{"lineNumber":172,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":173,"author":{"gitId":"spatuly"},"content":"     * @param info Task number of the task to be deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":174,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response to the delete command.","lastModifiedDate":"2023-09-19"},{"lineNumber":175,"author":{"gitId":"spatuly"},"content":"     * @throws UkeException If index is not an integer or if index is an integer that is not a valid task number.","lastModifiedDate":"2023-09-07"},{"lineNumber":176,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":177,"author":{"gitId":"spatuly"},"content":"    public String handleDelete(String info) throws UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":178,"author":{"gitId":"spatuly"},"content":"        int index;","lastModifiedDate":"2023-09-07"},{"lineNumber":179,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":180,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":181,"author":{"gitId":"spatuly"},"content":"            index \u003d Integer.parseInt(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":182,"author":{"gitId":"spatuly"},"content":"            Task t \u003d tasks.getTask(index - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"spatuly"},"content":"            tasks.deleteTask(index - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"spatuly"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":185,"author":{"gitId":"spatuly"},"content":"            return ui.printDelete(t, tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"spatuly"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"spatuly"},"content":"            throw new UkeInvalidTaskNumberException(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"spatuly"},"content":"            throw new UkeInvalidTaskNumberException(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":191,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":192,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":193,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":194,"author":{"gitId":"spatuly"},"content":"     * Adds todo task to task list.","lastModifiedDate":"2023-09-07"},{"lineNumber":195,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":196,"author":{"gitId":"spatuly"},"content":"     * @param info Description of todo.","lastModifiedDate":"2023-09-07"},{"lineNumber":197,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response to the todo command.","lastModifiedDate":"2023-09-19"},{"lineNumber":198,"author":{"gitId":"spatuly"},"content":"     * @throws UkeException If length of info is less than 1.","lastModifiedDate":"2023-09-07"},{"lineNumber":199,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"spatuly"},"content":"    public String addTodo(String info) throws UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":201,"author":{"gitId":"spatuly"},"content":"        if (info.length() \u003c 1) {","lastModifiedDate":"2023-09-07"},{"lineNumber":202,"author":{"gitId":"spatuly"},"content":"            throw new UkeMissingArgumentException();","lastModifiedDate":"2023-09-07"},{"lineNumber":203,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":204,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":205,"author":{"gitId":"spatuly"},"content":"        Todo todo \u003d new Todo(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":206,"author":{"gitId":"spatuly"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-09-07"},{"lineNumber":207,"author":{"gitId":"spatuly"},"content":"        storage.update(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":208,"author":{"gitId":"spatuly"},"content":"        return ui.printAdd(todo, tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":209,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":210,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":211,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":212,"author":{"gitId":"spatuly"},"content":"     * Adds deadline task to task list.","lastModifiedDate":"2023-09-07"},{"lineNumber":213,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":214,"author":{"gitId":"spatuly"},"content":"     * @param info Description and due date and time of deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":215,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response to the deadline command.","lastModifiedDate":"2023-09-19"},{"lineNumber":216,"author":{"gitId":"spatuly"},"content":"     * @throws UkeException If info is missing arguments or if date and time entered is wrongly formatted.","lastModifiedDate":"2023-09-07"},{"lineNumber":217,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":218,"author":{"gitId":"spatuly"},"content":"    public String addDeadline(String info) throws UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":219,"author":{"gitId":"spatuly"},"content":"        String[] strArr \u003d info.split(\" /by \");","lastModifiedDate":"2023-09-07"},{"lineNumber":220,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":221,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":222,"author":{"gitId":"spatuly"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":223,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":224,"author":{"gitId":"spatuly"},"content":"            String dlName \u003d strArr[0];","lastModifiedDate":"2023-09-07"},{"lineNumber":225,"author":{"gitId":"spatuly"},"content":"            LocalDateTime dlTime \u003d LocalDateTime.parse(strArr[1], dateTimeFormatter);","lastModifiedDate":"2023-09-07"},{"lineNumber":226,"author":{"gitId":"spatuly"},"content":"            Deadline dl \u003d new Deadline(dlName, dlTime);","lastModifiedDate":"2023-09-07"},{"lineNumber":227,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":228,"author":{"gitId":"spatuly"},"content":"            tasks.addTask(dl);","lastModifiedDate":"2023-09-07"},{"lineNumber":229,"author":{"gitId":"spatuly"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":230,"author":{"gitId":"spatuly"},"content":"            return ui.printAdd(dl, tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":231,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":232,"author":{"gitId":"spatuly"},"content":"            throw new UkeMissingArgumentException();","lastModifiedDate":"2023-09-07"},{"lineNumber":233,"author":{"gitId":"spatuly"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":234,"author":{"gitId":"spatuly"},"content":"            throw new UkeInvalidDateTimeException();","lastModifiedDate":"2023-09-07"},{"lineNumber":235,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":236,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":237,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":238,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":239,"author":{"gitId":"spatuly"},"content":"     * Adds event to task list.","lastModifiedDate":"2023-09-07"},{"lineNumber":240,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":241,"author":{"gitId":"spatuly"},"content":"     * @param info Description, start date and time and end date and time of event.","lastModifiedDate":"2023-09-07"},{"lineNumber":242,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response to the event command.","lastModifiedDate":"2023-09-19"},{"lineNumber":243,"author":{"gitId":"spatuly"},"content":"     * @throws UkeException If info is missing arguments or if date and time entered is wrongly formatted.","lastModifiedDate":"2023-09-07"},{"lineNumber":244,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":245,"author":{"gitId":"spatuly"},"content":"    public String addEvent(String info) throws UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":246,"author":{"gitId":"spatuly"},"content":"        String[] strArr \u003d info.split(\" /from \");","lastModifiedDate":"2023-09-07"},{"lineNumber":247,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":248,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":249,"author":{"gitId":"spatuly"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-07"},{"lineNumber":250,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":251,"author":{"gitId":"spatuly"},"content":"            String eName \u003d strArr[0];","lastModifiedDate":"2023-09-07"},{"lineNumber":252,"author":{"gitId":"spatuly"},"content":"            String[] dueDateArr \u003d strArr[1].split(\" /to \");","lastModifiedDate":"2023-09-07"},{"lineNumber":253,"author":{"gitId":"spatuly"},"content":"            LocalDateTime eFrom \u003d LocalDateTime.parse(dueDateArr[0], dateTimeFormatter);","lastModifiedDate":"2023-09-07"},{"lineNumber":254,"author":{"gitId":"spatuly"},"content":"            LocalDateTime eTo \u003d LocalDateTime.parse(dueDateArr[1], dateTimeFormatter);","lastModifiedDate":"2023-09-07"},{"lineNumber":255,"author":{"gitId":"spatuly"},"content":"            Event event \u003d new Event(eName, eFrom, eTo);","lastModifiedDate":"2023-09-07"},{"lineNumber":256,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":257,"author":{"gitId":"spatuly"},"content":"            tasks.addTask(event);","lastModifiedDate":"2023-09-07"},{"lineNumber":258,"author":{"gitId":"spatuly"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":259,"author":{"gitId":"spatuly"},"content":"            return ui.printAdd(event, tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":260,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":261,"author":{"gitId":"spatuly"},"content":"            throw new UkeMissingArgumentException();","lastModifiedDate":"2023-09-07"},{"lineNumber":262,"author":{"gitId":"spatuly"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":263,"author":{"gitId":"spatuly"},"content":"            throw new UkeInvalidDateTimeException();","lastModifiedDate":"2023-09-07"},{"lineNumber":264,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":265,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":266,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":267,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":268,"author":{"gitId":"spatuly"},"content":"     * Finds and returns the list of tasks containing the given keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":269,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":270,"author":{"gitId":"spatuly"},"content":"     * @param info Keyword entered by user.","lastModifiedDate":"2023-09-07"},{"lineNumber":271,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response to the find command.","lastModifiedDate":"2023-09-19"},{"lineNumber":272,"author":{"gitId":"spatuly"},"content":"     * @throws UkeMissingArgumentException If keyword is empty.","lastModifiedDate":"2023-09-07"},{"lineNumber":273,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":274,"author":{"gitId":"spatuly"},"content":"    public String handleFind(String info) throws UkeMissingArgumentException {","lastModifiedDate":"2023-09-07"},{"lineNumber":275,"author":{"gitId":"spatuly"},"content":"        if (info.length() \u003c 1) {","lastModifiedDate":"2023-09-07"},{"lineNumber":276,"author":{"gitId":"spatuly"},"content":"            throw new UkeMissingArgumentException();","lastModifiedDate":"2023-09-07"},{"lineNumber":277,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":278,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":279,"author":{"gitId":"spatuly"},"content":"        TaskList list \u003d tasks.getTaskListWithKeyword(info);","lastModifiedDate":"2023-09-07"},{"lineNumber":280,"author":{"gitId":"spatuly"},"content":"        return ui.printList(list, false);","lastModifiedDate":"2023-09-07"},{"lineNumber":281,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":282,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":284,"author":{"gitId":"spatuly"},"content":"     * Finds and returns the list of tasks that start on or is due by the given date.","lastModifiedDate":"2023-09-19"},{"lineNumber":285,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":286,"author":{"gitId":"spatuly"},"content":"     * @param info Date in DD/MM/YYYY entered by user.","lastModifiedDate":"2023-09-19"},{"lineNumber":287,"author":{"gitId":"spatuly"},"content":"     * @return String representation of Uke\u0027s response to the view command.","lastModifiedDate":"2023-09-19"},{"lineNumber":288,"author":{"gitId":"spatuly"},"content":"     * @throws UkeInvalidDateException If date entered is invalid or in an invalid format.","lastModifiedDate":"2023-09-19"},{"lineNumber":289,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":290,"author":{"gitId":"spatuly"},"content":"    public String handleView(String info) throws UkeInvalidDateException {","lastModifiedDate":"2023-09-19"},{"lineNumber":291,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":292,"author":{"gitId":"spatuly"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-09-12"},{"lineNumber":293,"author":{"gitId":"spatuly"},"content":"            LocalDate viewingDate \u003d LocalDate.parse(info, dateTimeFormatter);","lastModifiedDate":"2023-09-12"},{"lineNumber":294,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":295,"author":{"gitId":"spatuly"},"content":"            TaskList matchingTasks \u003d tasks.getTaskListWithDate(viewingDate);","lastModifiedDate":"2023-09-12"},{"lineNumber":296,"author":{"gitId":"spatuly"},"content":"            matchingTasks.sortByTime();","lastModifiedDate":"2023-09-12"},{"lineNumber":297,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"spatuly"},"content":"            return ui.printSchedule(viewingDate, matchingTasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":299,"author":{"gitId":"spatuly"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"spatuly"},"content":"            throw new UkeInvalidDateException();","lastModifiedDate":"2023-09-19"},{"lineNumber":301,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":303,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":304,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"spatuly":304}},{"path":"src/main/java/uke/exception/UkeDataFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Uke exception when any error occurs related to the data file.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class UkeDataFileException extends UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        return String.format(\"Error: Data file.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"spatuly":16}},{"path":"src/main/java/uke/exception/UkeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Uke exception.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class UkeException extends Exception {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        return \"Error\";","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":16}},{"path":"src/main/java/uke/exception/UkeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Uke exception when an invalid command is entered.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class UkeInvalidCommandException extends UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    private String command;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"     * Constructor for the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"     * @param command Invalid command entered.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    public UkeInvalidCommandException(String command) {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        return String.format(\"Error: %s is an invalid command!\", this.command);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":27}},{"path":"src/main/java/uke/exception/UkeInvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.exception;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Uke exception when a wrongly formatted date is entered.","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class UkeInvalidDateException extends UkeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        return \"Error: Enter valid date in the format DD/MM/YYYY.\";","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"spatuly":15}},{"path":"src/main/java/uke/exception/UkeInvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Uke exception when a wrongly formatted date and time is entered.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class UkeInvalidDateTimeException extends UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        return \"Error: Enter valid date and time in the format DD/MM/YYYY HH:MM.\";","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"spatuly":15}},{"path":"src/main/java/uke/exception/UkeInvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Uke exception when an invalid task number is entered.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class UkeInvalidTaskNumberException extends UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    private String taskNum;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"     * Constructor for the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"     * @param taskNum Invalid task number entered.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    public UkeInvalidTaskNumberException(String taskNum) {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        return String.format(\"Error: There is no task with task number %s!\", this.taskNum);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":26}},{"path":"src/main/java/uke/exception/UkeInvalidTaskStringException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Uke exception when task file contains an unreadable task.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class UkeInvalidTaskStringException extends UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        return \"Error: Unable to read task in text file!\";","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"spatuly":15}},{"path":"src/main/java/uke/exception/UkeMissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.exception;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Uke exception when a command is entered without necessary argument(s).","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class UkeMissingArgumentException extends UkeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        return String.format(\"Error: Command is missing argument(s)!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":16}},{"path":"src/main/java/uke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise a Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"     * @param desc Description of the deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"     * @param dueDate Due date and time of deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    public Deadline(String desc, LocalDateTime dueDate) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"     * Converts the given LocalDateTime into a string of the MMM d yyyy HH:mm format.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"     * @param dateTime The LocalDateTime to be formatted.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"     * @return The formatted string representation of the LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"        return dateTime.format(dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"     * Converts the Deadline object to the specific format to be stored in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"     * @return The specific string representation of the Deadline object to be stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"    public String convertToSavedString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[D] %s//%s//\", super.convertToSavedString(), formatDateTime(this.dueDate));","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"        return this.dueDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"     * Converts the Deadline object to its string representation.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"     * @return The string representation of the Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[D] %s (by %s)\", super.toString(), formatDateTime(this.dueDate));","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":60}},{"path":"src/main/java/uke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":" * Represents an event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise an Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"     * @param desc Description of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"     * @param start Start date and time of event.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"     * @param end End date and time of event.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"    public Event(String desc, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"     * Converts the given LocalDateTime into a string of the MMM d yyyy HH:mm format.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"     * @param dateTime The LocalDateTime to be formatted.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"     * @return The formatted string representation of the LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"        return dateTime.format(dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"     * Converts the Event object to the specific format to be stored in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"     * @return The specific string representation of the Event object to be stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"    public String convertToSavedString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[E] %s//%s//%s//\", super.convertToSavedString(),","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"                formatDateTime(this.start), formatDateTime(this.end));","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"        return this.start;","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"     * Converts the Event object to its string representation.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"     * @return The string representation of the Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[E] %s (from %s to %s)\", super.toString(), formatDateTime(this.start),","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"                formatDateTime(this.end));","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":65}},{"path":"src/main/java/uke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":" * Represents a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise a Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"     * Returns \"X\" if task is marked as done and \" \" otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"     * @return String representation of whether a task is done or undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"     * Returns description of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"     * @return Description of task as a string.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"        return this.description;","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"     * Converts the Task object to the specific format to be stored in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"     * @return The specific string representation of the Task object to be stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"    public String convertToSavedString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"        return String.format(\"//%s//%s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"    public abstract LocalDateTime getDateTime();","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"     * Converts the Task object to its string representation.","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"     * @return The string representation of the Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":75}},{"path":"src/main/java/uke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":" * Represents the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"    private ArrayList\u003cTask\u003e storedTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise an empty TaskList object.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"        this.storedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise a TaskList object with stored tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"     * @param storedTasks Array of Tasks to be stored in the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"    public TaskList(ArrayList\u003cTask\u003e storedTasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"        this.storedTasks \u003d storedTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"     * Returns the task at the given index in the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"     * @param i Index of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"        return this.storedTasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"     * Returns the length of the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"    public int getLength() {","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"        return this.storedTasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"     * Adds a task into the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"     * @param t Task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"        storedTasks.add(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"        storedTasks.remove(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"     * Filters the TaskList for tasks containing the given keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"     * @param keyword Keyword to be searched and filtered for.","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"     * @return A TaskList of all tasks containing the keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"    public TaskList getTaskListWithKeyword(String keyword) {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"        int len \u003d this.getLength();","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"            Task t \u003d this.getTask(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"            String desc \u003d t.getDescription();","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"spatuly"},"content":"            int index \u003d desc.indexOf(keyword);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"            if (index !\u003d -1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"                list.addTask(t);","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"spatuly"},"content":"        return list;","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"spatuly"},"content":"     * Filters the TaskList for tasks starting on or due by the given date.","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"spatuly"},"content":"     * @param date Date to be searched for.","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"spatuly"},"content":"     * @return A TaskList of all tasks starting on or due by the given date.","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"spatuly"},"content":"    public TaskList getTaskListWithDate(LocalDate date) {","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"spatuly"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"spatuly"},"content":"        int len \u003d this.getLength();","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"spatuly"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"spatuly"},"content":"            Task t \u003d this.getTask(i);","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"spatuly"},"content":"            LocalDateTime taskDateTime \u003d t.getDateTime();","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"spatuly"},"content":"            LocalDate taskDate \u003d taskDateTime.toLocalDate();","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"spatuly"},"content":"            if (date.equals(taskDate)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"spatuly"},"content":"                list.addTask(t);","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"spatuly"},"content":"        return list;","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"spatuly"},"content":"     * Sorts the TaskList from earliest to latest.","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"spatuly"},"content":"    public void sortByTime() {","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"spatuly"},"content":"        int len \u003d this.getLength();","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"spatuly"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"spatuly"},"content":"            Task t \u003d this.getTask(i);","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"spatuly"},"content":"            LocalDateTime dateTime \u003d t.getDateTime();","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"spatuly"},"content":"            this.storedTasks.sort(new Comparator\u003cTask\u003e() {","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"spatuly"},"content":"                public int compare(Task t1, Task t2) {","lastModifiedDate":"2023-09-19"},{"lineNumber":125,"author":{"gitId":"spatuly"},"content":"                    return t1.getDateTime().compareTo(t2.getDateTime());","lastModifiedDate":"2023-09-19"},{"lineNumber":126,"author":{"gitId":"spatuly"},"content":"                }","lastModifiedDate":"2023-09-19"},{"lineNumber":127,"author":{"gitId":"spatuly"},"content":"            });","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":130}},{"path":"src/main/java/uke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke.task;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":" * Represents a todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise a Todo object.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"     * @param desc Description of the Todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"     * Converts the Todo object to the specific format to be stored in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"     * @return The specific string representation of the Todo object to be stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    public String convertToSavedString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[T] %s//\", super.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"        return LocalDateTime.MIN;","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"     * Converts the Todo object to its string representation.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"     * @return The string representation of the Todo object.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":43}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"        \u003cLabel fx:id\u003d\"ukeDialog\" text\u003d\"Label\" wrapText\u003d\"true\" translateX\u003d\"20.0\" translateY\u003d\"10.0\" maxWidth\u003d\"225.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"        \u003cLabel fx:id\u003d\"userDialog\" text\u003d\"Label\" wrapText\u003d\"true\" translateX\u003d\"-20.0\" translateY\u003d\"10.0\" maxWidth\u003d\"225.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"spatuly":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"uke.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"spatuly":19}},{"path":"src/test/java/uke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import uke.task.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    public void testFormatDateTime() {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"        LocalDateTime date1 \u003d LocalDateTime.parse(\"01/11/2023 20:00\", dateTimeFormatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"Nov 1 2023 20:00\", Deadline.formatDateTime(date1));","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"        LocalDateTime date2 \u003d LocalDateTime.parse(\"10/01/2023 01:00\", dateTimeFormatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"Jan 10 2023 01:00\", Deadline.formatDateTime(date2));","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    public void testDeadlineStringConversion() {","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(\"10/10/2023 10:10\", dateTimeFormatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"        Deadline test \u003d new Deadline(\"Deadline Test\", dueDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[D] [ ] Deadline Test (by Oct 10 2023 10:10)\", test.toString());","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[D] [X] Deadline Test (by Oct 10 2023 10:10)\", test.toString());","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"        test.markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[D] [ ] Deadline Test (by Oct 10 2023 10:10)\", test.toString());","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"    public void testDeadlineSavedStringConversion() {","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(\"11/11/2023 11:11\", dateTimeFormatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"        Deadline test \u003d new Deadline(\"Deadline Test Saved\", dueDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[D] // //Deadline Test Saved//Nov 11 2023 11:11//\", test.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[D] //X//Deadline Test Saved//Nov 11 2023 11:11//\", test.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"        test.markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[D] // //Deadline Test Saved//Nov 11 2023 11:11//\", test.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":53}},{"path":"src/test/java/uke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package uke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import uke.task.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"    public void testTodoStringConversion() {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"        Todo test \u003d new Todo(\"Todo Test\");","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[T] [ ] Todo Test\", test.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[T] [X] Todo Test\", test.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"        test.markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[T] [ ] Todo Test\", test.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    public void testTodoSavedStringConversion() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"        Todo test \u003d new Todo(\"Todo Test Saved\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[T] // //Todo Test Saved//\", test.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[T] //X//Todo Test Saved//\", test.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"        test.markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[T] // //Todo Test Saved//\", test.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"todo this","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"deadline these /by","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"deadline that /by 2359","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"event those /from ??? /to !!!","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"event /from 1000 /to 1001","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"delete 10","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"mark 100","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"java -classpath ..\\bin Uke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"spatuly":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"java -classpath ../bin Uke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"spatuly":1,"-":37}}]
