[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"plugins {","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"repositories {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"    mavenCentral()","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"dependencies {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"application {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"    mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"run {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"test {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":27}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise a Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"     * @param desc Description of the deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"     * @param dueDate Due date and time of deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    public Deadline(String desc, LocalDateTime dueDate) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"     * Converts the given LocalDateTime into a string of the MMM d yyyy HH:mm format.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"     * @param dateTime The LocalDateTime to be formatted.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"     * @return The formatted string representation of the LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"        return dateTime.format(dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"     * Converts the Deadline object to the specific format to be stored in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"     * @return The specific string representation of the Deadline object to be stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"    public String convertToSavedString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[D] %s//%s//\", super.convertToSavedString(), formatDateTime(this.dueDate));","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"     * Converts the Deadline object to its string representation.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"     * @return The string representation of the Deadline object.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[D] %s (by: %s)\", super.toString(), formatDateTime(this.dueDate));","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":55}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":" * Represents the Duke chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    private static final String FILEPATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"    private static boolean hasNext \u003d true;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise a Duke object.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"     * @param path File path to the text file which stores task information.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    public Duke(String path) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"            tasks \u003d new TaskList(storage.loadTaskList());","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"            ui.printError(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"     * Starts the Duke chatbot to allow for user commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"    public void run() {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"            ui.printGreeting();","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"            storage.createDataFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"            ui.printError(e);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"        while (hasNext) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"                String input \u003d ui.getInput();","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"                String command \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"                String info \u003d \"\";","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"                switch (command.toUpperCase()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"                case \"BYE\":","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"                    handleExit();","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"                    storage.update(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"                case \"LIST\":","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"                    handleList();","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"                case \"MARK\":","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"                    info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"                    handleMarking(info);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"                    storage.update(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"                case \"UNMARK\":","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"                    info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"                    handleUnmarking(info);","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"                    storage.update(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"                case \"DELETE\":","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"                    info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"                    handleDelete(info);","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"                    storage.update(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"                case \"TODO\":","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"                    info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"                    addTodo(info);","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"spatuly"},"content":"                    storage.update(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"                case \"EVENT\":","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"                    info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"                    addEvent(info);","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"                    storage.update(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"spatuly"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"spatuly"},"content":"                case \"DEADLINE\":","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"spatuly"},"content":"                    info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"spatuly"},"content":"                    addDeadline(info);","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"spatuly"},"content":"                    storage.update(tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"spatuly"},"content":"                    break;","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"spatuly"},"content":"                case \"FIND\":","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"spatuly"},"content":"                    info \u003d Parser.parseInfo(input);","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"spatuly"},"content":"                    handleFind(info);","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"spatuly"},"content":"                    break;","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"spatuly"},"content":"                default:","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"spatuly"},"content":"                    throw new DukeInvalidCommandException(command);","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"spatuly"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"spatuly"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"spatuly"},"content":"                ui.printError(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"spatuly"},"content":"     * Stops the Duke chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"spatuly"},"content":"    public void handleExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"        ui.printExit();","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"spatuly"},"content":"        hasNext \u003d false;","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"spatuly"},"content":"     * Generates list of added tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"spatuly"},"content":"    public void handleList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"spatuly"},"content":"        ui.printList(tasks, true);","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"spatuly"},"content":"     * Marks task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"spatuly"},"content":"     * @param info Task number of the task to be marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"spatuly"},"content":"     * @throws DukeException If index is not an integer or if index is an integer that is not a valid task number.","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"spatuly"},"content":"    public void handleMarking(String info) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"spatuly"},"content":"        int index;","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"spatuly"},"content":"            index \u003d Integer.parseInt(info);","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"spatuly"},"content":"            Task t \u003d tasks.getTask(index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"spatuly"},"content":"            t.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"spatuly"},"content":"            ui.printMark(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"spatuly"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"spatuly"},"content":"            throw new DukeInvalidTaskNumberException(info);","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"spatuly"},"content":"            throw new DukeInvalidTaskNumberException(info);","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"spatuly"},"content":"     * Marks task as undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"spatuly"},"content":"     * @param info Task number of the task to be marked as undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"spatuly"},"content":"     * @throws DukeException If index is not an integer or if index is an integer that is not a valid task number.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"spatuly"},"content":"    public void handleUnmarking(String info) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"spatuly"},"content":"        int index;","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"spatuly"},"content":"            index \u003d Integer.parseInt(info);","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"spatuly"},"content":"            Task t \u003d tasks.getTask(index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"spatuly"},"content":"            t.markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"spatuly"},"content":"            ui.printUnmark(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"spatuly"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"spatuly"},"content":"            throw new DukeInvalidTaskNumberException(info);","lastModifiedDate":"2023-09-02"},{"lineNumber":155,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"spatuly"},"content":"            throw new DukeInvalidTaskNumberException(info);","lastModifiedDate":"2023-09-02"},{"lineNumber":157,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":158,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":160,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"spatuly"},"content":"     * Deletes task.","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"spatuly"},"content":"     * @param info Task number of the task to be deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"spatuly"},"content":"     * @throws DukeException If index is not an integer or if index is an integer that is not a valid task number.","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"spatuly"},"content":"    public void handleDelete(String info) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"spatuly"},"content":"        int index;","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"spatuly"},"content":"            index \u003d Integer.parseInt(info);","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"spatuly"},"content":"            Task t \u003d tasks.getTask(index - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"spatuly"},"content":"            tasks.deleteTask(index - 1);","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"spatuly"},"content":"            ui.printDelete(t);","lastModifiedDate":"2023-09-03"},{"lineNumber":174,"author":{"gitId":"spatuly"},"content":"            ui.printNumberOfTasks(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"spatuly"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"spatuly"},"content":"            throw new DukeInvalidTaskNumberException(info);","lastModifiedDate":"2023-09-03"},{"lineNumber":177,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":178,"author":{"gitId":"spatuly"},"content":"            throw new DukeInvalidTaskNumberException(info);","lastModifiedDate":"2023-09-03"},{"lineNumber":179,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":180,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":181,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":182,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":183,"author":{"gitId":"spatuly"},"content":"     * Adds todo task to task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":184,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":185,"author":{"gitId":"spatuly"},"content":"     * @param info Description of todo.","lastModifiedDate":"2023-09-03"},{"lineNumber":186,"author":{"gitId":"spatuly"},"content":"     * @throws DukeException If length of info is less than 1.","lastModifiedDate":"2023-09-03"},{"lineNumber":187,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":188,"author":{"gitId":"spatuly"},"content":"    public void addTodo(String info) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":189,"author":{"gitId":"spatuly"},"content":"        if (info.length() \u003c 1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":190,"author":{"gitId":"spatuly"},"content":"            throw new DukeMissingArgumentException();","lastModifiedDate":"2023-09-03"},{"lineNumber":191,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":192,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":193,"author":{"gitId":"spatuly"},"content":"        Todo todo \u003d new Todo(info);","lastModifiedDate":"2023-09-03"},{"lineNumber":194,"author":{"gitId":"spatuly"},"content":"        ui.printAdd(todo);","lastModifiedDate":"2023-09-03"},{"lineNumber":195,"author":{"gitId":"spatuly"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-09-03"},{"lineNumber":196,"author":{"gitId":"spatuly"},"content":"        ui.printNumberOfTasks(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":197,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":198,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":199,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":200,"author":{"gitId":"spatuly"},"content":"     * Adds deadline task to task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":201,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":202,"author":{"gitId":"spatuly"},"content":"     * @param info Description and due date and time of deadline task.","lastModifiedDate":"2023-09-03"},{"lineNumber":203,"author":{"gitId":"spatuly"},"content":"     * @throws DukeException If info is missing arguments or if date and time entered is wrongly formatted.","lastModifiedDate":"2023-09-03"},{"lineNumber":204,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":205,"author":{"gitId":"spatuly"},"content":"    public void addDeadline(String info) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":206,"author":{"gitId":"spatuly"},"content":"        String[] strArr \u003d info.split(\" /by \");","lastModifiedDate":"2023-09-03"},{"lineNumber":207,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":208,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":209,"author":{"gitId":"spatuly"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":210,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":211,"author":{"gitId":"spatuly"},"content":"            String dlName \u003d strArr[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":212,"author":{"gitId":"spatuly"},"content":"            LocalDateTime dlTime \u003d LocalDateTime.parse(strArr[1], dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":213,"author":{"gitId":"spatuly"},"content":"            Deadline dl \u003d new Deadline(dlName, dlTime);","lastModifiedDate":"2023-09-03"},{"lineNumber":214,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":215,"author":{"gitId":"spatuly"},"content":"            ui.printAdd(dl);","lastModifiedDate":"2023-09-03"},{"lineNumber":216,"author":{"gitId":"spatuly"},"content":"            tasks.addTask(dl);","lastModifiedDate":"2023-09-03"},{"lineNumber":217,"author":{"gitId":"spatuly"},"content":"            ui.printNumberOfTasks(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":218,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":219,"author":{"gitId":"spatuly"},"content":"            throw new DukeMissingArgumentException();","lastModifiedDate":"2023-09-03"},{"lineNumber":220,"author":{"gitId":"spatuly"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":221,"author":{"gitId":"spatuly"},"content":"            throw new DukeInvalidDateTimeException();","lastModifiedDate":"2023-09-03"},{"lineNumber":222,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":223,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":224,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":225,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":226,"author":{"gitId":"spatuly"},"content":"     * Adds event to task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":227,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":228,"author":{"gitId":"spatuly"},"content":"     * @param info Description, start date and time and end date and time of event.","lastModifiedDate":"2023-09-03"},{"lineNumber":229,"author":{"gitId":"spatuly"},"content":"     * @throws DukeException If info is missing arguments or if date and time entered is wrongly formatted.","lastModifiedDate":"2023-09-03"},{"lineNumber":230,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":231,"author":{"gitId":"spatuly"},"content":"    public void addEvent(String info) throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":232,"author":{"gitId":"spatuly"},"content":"        String[] strArr \u003d info.split(\" /from \");","lastModifiedDate":"2023-09-03"},{"lineNumber":233,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":234,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":235,"author":{"gitId":"spatuly"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":236,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":237,"author":{"gitId":"spatuly"},"content":"            String eName \u003d strArr[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":238,"author":{"gitId":"spatuly"},"content":"            String[] dueDateArr \u003d strArr[1].split(\" /to \");","lastModifiedDate":"2023-09-03"},{"lineNumber":239,"author":{"gitId":"spatuly"},"content":"            LocalDateTime eFrom \u003d LocalDateTime.parse(dueDateArr[0], dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":240,"author":{"gitId":"spatuly"},"content":"            LocalDateTime eTo \u003d LocalDateTime.parse(dueDateArr[1], dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":241,"author":{"gitId":"spatuly"},"content":"            Event e \u003d new Event(eName, eFrom, eTo);","lastModifiedDate":"2023-09-03"},{"lineNumber":242,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":243,"author":{"gitId":"spatuly"},"content":"            ui.printAdd(e);","lastModifiedDate":"2023-09-03"},{"lineNumber":244,"author":{"gitId":"spatuly"},"content":"            tasks.addTask(e);","lastModifiedDate":"2023-09-03"},{"lineNumber":245,"author":{"gitId":"spatuly"},"content":"            ui.printNumberOfTasks(tasks);","lastModifiedDate":"2023-09-03"},{"lineNumber":246,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":247,"author":{"gitId":"spatuly"},"content":"            throw new DukeMissingArgumentException();","lastModifiedDate":"2023-09-03"},{"lineNumber":248,"author":{"gitId":"spatuly"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":249,"author":{"gitId":"spatuly"},"content":"            throw new DukeInvalidDateTimeException();","lastModifiedDate":"2023-09-03"},{"lineNumber":250,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":251,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":252,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":253,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":254,"author":{"gitId":"spatuly"},"content":"     * Generates list of tasks containing the given keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":255,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":256,"author":{"gitId":"spatuly"},"content":"     * @param info Keyword entered by user.","lastModifiedDate":"2023-09-03"},{"lineNumber":257,"author":{"gitId":"spatuly"},"content":"     * @throws DukeMissingArgumentException If keyword is empty.","lastModifiedDate":"2023-09-03"},{"lineNumber":258,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":259,"author":{"gitId":"spatuly"},"content":"    public void handleFind(String info) throws DukeMissingArgumentException {","lastModifiedDate":"2023-09-03"},{"lineNumber":260,"author":{"gitId":"spatuly"},"content":"        if (info.length() \u003c 1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":261,"author":{"gitId":"spatuly"},"content":"            throw new DukeMissingArgumentException();","lastModifiedDate":"2023-09-03"},{"lineNumber":262,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":263,"author":{"gitId":"spatuly"},"content":"        ","lastModifiedDate":"2023-09-03"},{"lineNumber":264,"author":{"gitId":"spatuly"},"content":"        TaskList list \u003d tasks.getTaskListWithKeyword(info);","lastModifiedDate":"2023-09-03"},{"lineNumber":265,"author":{"gitId":"spatuly"},"content":"        ui.printList(list, false);","lastModifiedDate":"2023-09-03"},{"lineNumber":266,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":267,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":268,"author":{"gitId":"spatuly"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":269,"author":{"gitId":"spatuly"},"content":"        new Duke(FILEPATH).run();","lastModifiedDate":"2023-09-02"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"spatuly":268,"-":3}},{"path":"src/main/java/duke/DukeDataFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Duke exception when any error occurs related to the data file.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class DukeDataFileException extends DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        return String.format(\"Error: Data file.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"spatuly":16}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Duke exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        return \"Error\";","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":16}},{"path":"src/main/java/duke/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Duke exception when an invalid command is entered.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class DukeInvalidCommandException extends DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    private String command;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"     * Constructor for the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"     * @param command Invalid command entered.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    public DukeInvalidCommandException(String command) {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        return String.format(\"Error: %s is an invalid command!\", this.command);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":27}},{"path":"src/main/java/duke/DukeInvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Duke exception when a wrongly formatted date and time is entered.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class DukeInvalidDateTimeException extends DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        return \"Error: Enter valid date and time in the format DD/MM/YYYY HH:MM.\";","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"spatuly":15}},{"path":"src/main/java/duke/DukeInvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Duke exception when an invalid task number is entered.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class DukeInvalidTaskNumberException extends DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    private String taskNum;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"     * Constructor for the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"     * @param taskNum Invalid task number entered.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    public DukeInvalidTaskNumberException(String taskNum) {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        return String.format(\"Error: There is no task with task number %s!\", this.taskNum);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":26}},{"path":"src/main/java/duke/DukeInvalidTaskStringException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Duke exception when task file contains an unreadable task.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class DukeInvalidTaskStringException extends DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        return \"Error: Unable to read task in text file!\";","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"spatuly":15}},{"path":"src/main/java/duke/DukeMissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a Duke exception when a command is entered without necessary argument(s).","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class DukeMissingArgumentException extends DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Returns the string representation of the exception.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        return String.format(\"Error: Command is missing argument(s)!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":" * Represents an event task.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise an Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"     * @param desc Description of the event.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"     * @param start Start date and time of event.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"     * @param end End date and time of event.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"    public Event(String desc, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"     * Converts the given LocalDateTime into a string of the MMM d yyyy HH:mm format.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"     * @param dt The LocalDateTime to be formatted.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"     * @return The formatted string representation of the LocalDateTime.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"        return dateTime.format(dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"     * Converts the Event object to the specific format to be stored in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"     * @return The specific string representation of the Event object to be stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"    public String convertToSavedString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[E] %s//%s//%s//\", super.convertToSavedString(), ","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"                formatDateTime(this.start), formatDateTime(this.end));","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"     * Converts the Event object to its string representation.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"     * @return The string representation of the Event object.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[E] %s (from: %s to: %s)\", super.toString(), formatDateTime(this.start),","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"                formatDateTime(this.end));","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":60}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Deals with making sense of user commands.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Returns the command inputted.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"     * @param input Input entered by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"     * @return Command entered by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"     * @throws DukeMissingArgumentException If command entered is invalid.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    public static String parseCommand(String input) throws DukeInvalidCommandException {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"        String[] strArr;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"            strArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"            return strArr[0];","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"            throw new DukeInvalidCommandException(input);","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"     * Returns the information other than command inputted.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"     * @param input Input entered by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"     * @return Information other than command entered by the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"     * @throws DukeMissingArgumentException If no information is found.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"    public static String parseInfo(String input) throws DukeMissingArgumentException {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"            String[] strArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"            return strArr[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"            throw new DukeMissingArgumentException();","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":40}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":" * Deals with loading tasks from file and saving tasks in file.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"    private String path;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise Storage object.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"     * @param path File path to the text file which stores task information.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"     * Creates a directory and text file if and only if directory and text file do not already exist.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"     * @throws DukeException If error is encountered creating the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"    public void createDataFile() throws DukeException {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"        File dataFile \u003d new File(this.path);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"        File dataDir \u003d new File(dataFile.getParent());","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"        dataDir.mkdir();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"            throw new DukeDataFileException();","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"     * Converts the given task list to a string ready to be saved in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"     * @param stored Task list with all stored tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"     * @return String representation of the task list to be saved in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"    public String generateTaskListString(TaskList stored) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"        int len \u003d stored.getLength();","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"        String tL \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"        if (len \u003e 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"            for (int i \u003d 1; i \u003c len + 1; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"                tL \u003d tL + stored.getTask(i - 1).convertToSavedString() + \"\\n\";","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"        return tL;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"     * Updates the text file with the newest state of the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"     * @param storedTasks Task list with all stored tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"     * @throws DukeDataFileException If error is encountered accessing the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"    public void update(TaskList storedTasks) throws DukeDataFileException {","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"        File dataFile \u003d new File(this.path);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"            FileWriter writer \u003d new FileWriter(dataFile);","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"            String updatedTaskList \u003d generateTaskListString(storedTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"            writer.write(updatedTaskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"spatuly"},"content":"            throw new DukeDataFileException();","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"     * Loads the task list from the text file into an ArrayList\u003cTask\u003e.","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"spatuly"},"content":"     * @throws DukeInvalidTaskStringException If line in text file is not correctly formatted.","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"spatuly"},"content":"    public ArrayList\u003cTask\u003e loadTaskList() throws DukeInvalidTaskStringException {","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"spatuly"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"spatuly"},"content":"        File dataFile \u003d new File(this.path);","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"spatuly"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"spatuly"},"content":"            Scanner sc \u003d new Scanner(dataFile);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"spatuly"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"spatuly"},"content":"                String taskStr \u003d sc.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"spatuly"},"content":"                taskList.add(convertStrToTask(taskStr));","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"spatuly"},"content":"            sc.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"spatuly"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"spatuly"},"content":"            return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"spatuly"},"content":"        return taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"spatuly"},"content":"     * Converts the string representation of a task saved into the text file into a Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"spatuly"},"content":"     * @throws DukeInvalidTaskStringException If line in text file is not correctly formatted.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"spatuly"},"content":"    public Task convertStrToTask(String str) throws DukeInvalidTaskStringException {","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"spatuly"},"content":"        String[] strArr \u003d str.split(\"//\");","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"spatuly"},"content":"        Task t;","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"spatuly"},"content":"        boolean isDone \u003d strArr[1].equals(\"X\");","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"spatuly"},"content":"        switch (str.substring(0, 3)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"spatuly"},"content":"        case \"[T]\":","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"spatuly"},"content":"            t \u003d new Todo(strArr[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"spatuly"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"spatuly"},"content":"        case \"[D]\":","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"spatuly"},"content":"            t \u003d new Deadline(strArr[2], LocalDateTime.parse(strArr[3], dateTimeFormatter));","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"spatuly"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"spatuly"},"content":"        case \"[E]\":","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"spatuly"},"content":"            t \u003d new Event(strArr[2], LocalDateTime.parse(strArr[3], dateTimeFormatter), ","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"spatuly"},"content":"                    LocalDateTime.parse(strArr[4], dateTimeFormatter));","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"spatuly"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"spatuly"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":128,"author":{"gitId":"spatuly"},"content":"            throw new DukeInvalidTaskStringException();","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":131,"author":{"gitId":"spatuly"},"content":"        if (isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"spatuly"},"content":"            t.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"spatuly"},"content":"        return t;","lastModifiedDate":"2023-09-01"},{"lineNumber":135,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":136,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"spatuly":136}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise a Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"     * Returns \"X\" if task is marked as done and \" \" otherwise.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"     * @return String representation of whether a task is done or undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"     * Returns description of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"     * @return Description of task as a string.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"        return this.description;","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"     * Converts the Task object to the specific format to be stored in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"     * @return The specific string representation of the Task object to be stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"    public String convertToSavedString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"        return String.format(\"//%s//%s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"     * Converts the Task object to its string representation.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"     * @return The string representation of the Task object.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":71}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":" * Represents the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"    private ArrayList\u003cTask\u003e storedTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise an empty TaskList object.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"        this.storedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise a TaskList object with stored tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"     * @param storedTasks Array of Tasks to be stored in the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    public TaskList(ArrayList\u003cTask\u003e storedTasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"        this.storedTasks \u003d storedTasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"     * Returns the task at the given index in the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"     * @param i Index of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"        return this.storedTasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"     * Returns the length of the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"    public int getLength() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"        return this.storedTasks.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"     * Adds a task into the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"     * @param t Task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"        storedTasks.add(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"        storedTasks.remove(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"     * Filters the task list for tasks containing the given keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"    public TaskList getTaskListWithKeyword(String keyword) {","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"        int len \u003d this.getLength();","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"            Task t \u003d this.getTask(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"            String desc \u003d t.getDescription();","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"            int index \u003d desc.indexOf(keyword);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"            if (index !\u003d -1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"                list.addTask(t);","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"        return list;","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":83}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":" * Represents a todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"     * Constructor to initialise a Todo object.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"     * @param desc Description of the Todo task.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"        super(desc);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"     * Converts the Todo object to the specific format to be stored in the text file.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"     * @return The specific string representation of the Todo object to be stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    public String convertToSavedString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[T] %s//\", super.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"     * Converts the Todo object to its string representation.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"     * @return The string representation of the Todo object.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":36}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"    private Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"     * Obtains the user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"     * @return String representation of the user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"    public String getInput() {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"        return input.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"     * Greets the user when the chatbot is started.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"        String greet \u003d \"Hi! I\u0027m Uke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"        System.out.println(greet);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"     * Prints the list of tasks in the TaskList given.","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"     * ","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"     * @param storedTasks TaskList to be printed.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"     * @param isListCommand Whether the method is called from a list command.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"    public void printList(TaskList storedTasks, boolean isListCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"        int len \u003d storedTasks.getLength();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"        if (isListCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"            if (len \u003e 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"                System.out.println(\"Okay! Here\u0027s the full list of your added tasks:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"                for (int i \u003d 1; i \u003c len + 1; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"                    System.out.println(i + \". \" + storedTasks.getTask(i - 1));","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"                System.out.println(\"No tasks found!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"            if (len \u003e 0) {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"                System.out.println(\"Here\u0027s the list of matching tasks I found:\");","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"                for (int i \u003d 1; i \u003c len + 1; i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"                    System.out.println(i + \". \" + storedTasks.getTask(i - 1));","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"            } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"                System.out.println(\"No matching tasks found :(\");","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"     * Prints the task that was marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"     * @param t Task that was marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"    public void printMark(Task t) {","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"        System.out.println(\"The following task has been marked as done!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"        System.out.println(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"     * Prints the task that was marked as undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"     * @param t Task that was marked as undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"    public void printUnmark(Task t) {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"        System.out.println(\"The following task has been marked as undone!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"        System.out.println(t);","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"     * Prints the task that was deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"     * @param t Task that was deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"spatuly"},"content":"    public void printDelete(Task t) {","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"spatuly"},"content":"        System.out.println(\"The following task has been successfully deleted: \" + t);","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"spatuly"},"content":"     * Prints the number of tasks in the given TaskList.","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"spatuly"},"content":"     * @param tl TaskList given.","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"spatuly"},"content":"    public void printNumberOfTasks(TaskList tl) {","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"spatuly"},"content":"        int len \u003d tl.getLength();","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"spatuly"},"content":"        System.out.println(\"You now have \" + len + \" task(s) in your list.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"spatuly"},"content":"     * Prints the exit message.","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"spatuly"},"content":"    public void printExit() {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"spatuly"},"content":"        String exit \u003d \"Bye. See you soon! :)\\n\";","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"spatuly"},"content":"        System.out.println(exit);","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"     * Prints the error message.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"spatuly"},"content":"     * @param e Exception which error message is to be printed.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"spatuly"},"content":"    public void printError(Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"spatuly"},"content":"        System.out.println(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"spatuly"},"content":"     * Prints the task that was added.","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"spatuly"},"content":"     * @param t Task that was added.","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"spatuly"},"content":"    public void printAdd(Task t) {","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"spatuly"},"content":"        System.out.println(\"The following task has been successfully added: \" + t);","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":123}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"    public void testFormatDateTime() {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"        LocalDateTime date1 \u003d LocalDateTime.parse(\"01/11/2023 20:00\", dateTimeFormatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"Nov 1 2023 20:00\", Deadline.formatDateTime(date1));","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"        LocalDateTime date2 \u003d LocalDateTime.parse(\"10/01/2023 01:00\", dateTimeFormatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"Jan 10 2023 01:00\", Deadline.formatDateTime(date2));","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    public void testTodoStringConversion() {","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(\"10/10/2023 10:10\", dateTimeFormatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"        Deadline test \u003d new Deadline(\"Deadline Test\", dueDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[D] [ ] Deadline Test (by: Oct 10 2023 10:10)\", test.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[D] [X] Deadline Test (by: Oct 10 2023 10:10)\", test.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"        test.markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[D] [ ] Deadline Test (by: Oct 10 2023 10:10)\", test.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    public void testTodoSavedStringConversion() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(\"11/11/2023 11:11\", dateTimeFormatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"        Deadline test \u003d new Deadline(\"Deadline Test Saved\", dueDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[D] // //Deadline Test Saved//Nov 11 2023 11:11//\", test.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[D] //X//Deadline Test Saved//Nov 11 2023 11:11//\", test.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"        test.markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[D] // //Deadline Test Saved//Nov 11 2023 11:11//\", test.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":52}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"    public void testTodoStringConversion() {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"        Todo test \u003d new Todo(\"Todo Test\");","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[T] [ ] Todo Test\", test.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[T] [X] Todo Test\", test.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"        test.markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[T] [ ] Todo Test\", test.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"    public void testTodoSavedStringConversion() {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"        Todo test \u003d new Todo(\"Todo Test Saved\");","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[T] // //Todo Test Saved//\", test.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        test.markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[T] //X//Todo Test Saved//\", test.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"        test.markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"[T] // //Todo Test Saved//\", test.convertToSavedString());","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"spatuly":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"todo this","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"deadline these /by","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"deadline that /by 2359","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"event those /from ??? /to !!!","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"event /from 1000 /to 1001","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"delete 10","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"mark 100","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"spatuly":15}}]
