[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"# duke project template","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"glenngnng":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"glenngnng"},"content":"    mainClass.set(\"seedu.gman.Main\")","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"    archiveBaseName \u003d \"gman\"","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"glenngnng":18,"-":40}},{"path":"data/gman.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"T | O |  this","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"D | X |  have fun  | 2019-10-15","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"T | O |  this and that","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"T | O |  this","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"E | O |  this  | now  | then","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"glenngnng":5}},{"path":"src/main/java/gman/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":" * A Deadline Task that contains a description and a deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2023-09-19"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"    protected DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"    protected DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"     * A Deadline task constructor.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"     * @param by The deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"        this.deadline \u003d LocalDate.parse(by, inputFormat);","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"     * Returns A string representation of the Deadline Task, including the symbol, status icon,","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"     * description and deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"     * @return a String to be printed to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"        return \"[D]\" + super.getStatusIcon() + description + \" (by: \" + deadline.format(outputFormat) + \")\";","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"glenngnng"},"content":"     * Reads a line in a .txt file that represents a Deadline task and converts it to a Deadline Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"glenngnng"},"content":"     * @param segments A string array that is split by \" | \", separating the line into useful chunks.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"glenngnng"},"content":"     * @return A deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"glenngnng"},"content":"    public static Deadline readFromFile(String[] segments){","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"glenngnng"},"content":"        String symbol \u003d segments[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"        String description \u003d segments[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"glenngnng"},"content":"        String by \u003d segments[3];","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"glenngnng"},"content":"        Deadline toReturn \u003d  new Deadline(description, by);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"glenngnng"},"content":"        if (symbol.equals(\"X\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"glenngnng"},"content":"            toReturn.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"        return toReturn;","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"glenngnng"},"content":"     * Returns A String to be written into the .txt file.","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"glenngnng"},"content":"     * @return A formatted String for the Deadline task with \" | \" separators.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"glenngnng"},"content":"    public String stringToWrite() {","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"glenngnng"},"content":"        return \"D\" + \" | \" + super.stringToWrite() + \" | \" + by;","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"glenngnng":71}},{"path":"src/main/java/gman/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"glenngnng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"glenngnng"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"glenngnng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"glenngnng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"glenngnng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"glenngnng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"glenngnng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"glenngnng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"glenngnng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"glenngnng"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"glenngnng"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"glenngnng":61}},{"path":"src/main/java/gman/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":" * An Event Task that contains a description, a from indicator and a to indicator.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"     * An Event task constructor.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"     * @param from the indicated starting time.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"     * @param to the indicated ending time.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"     * Returns a String representation of the Event task, including the symbol, status icon, description,","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"     * and from and to indicators.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"     * @return a String to be printed to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"        return (\"[E]\" + super.getStatusIcon() + description + \" (from: \" + from + \"to: \" + to + \")\");","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"     * Reads a line in a .txt file that represents an Event task and converts it to an Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"     * @param segments A string array that is split by \" | \", separating the line into useful chunks.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"     * @return An Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"glenngnng"},"content":"    public static Event readFromFile(String[] segments) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"glenngnng"},"content":"        String symbol \u003d segments[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"glenngnng"},"content":"        String description \u003d segments[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"glenngnng"},"content":"        String from \u003d segments[3];","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"glenngnng"},"content":"        String to \u003d segments[4];","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"glenngnng"},"content":"        Event toReturn \u003d  new Event(description, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"glenngnng"},"content":"        if (symbol.equals(\"X\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"glenngnng"},"content":"            toReturn.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"glenngnng"},"content":"        return toReturn;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"glenngnng"},"content":"     * Returns a String to be written into the .txt file.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"glenngnng"},"content":"     * @return A formatted String for the Deadline task with \" | \" separators.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"glenngnng"},"content":"    public String stringToWrite() {","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"glenngnng"},"content":"        return \"E\" + \" | \" + super.stringToWrite() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"glenngnng":63}},{"path":"src/main/java/gman/Gman.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"public class Gman {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"    private static final String exitWord \u003d \"bye\";","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"        while (!userInput.equals(exitWord)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"            Parser.readInput(userInput, taskList);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"        Parser.readInput(userInput, taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"        return Parser.readInput(input, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"glenngnng":23}},{"path":"src/main/java/gman/GmanException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"public class GmanException extends Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"    public GmanException(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"        super(message);","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"        return super.getMessage();","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"glenngnng":12}},{"path":"src/main/java/gman/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"glenngnng":11}},{"path":"src/main/java/gman/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"//DONE.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"    private Gman gman \u003d new Gman();","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setGman(gman);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"glenngnng":35}},{"path":"src/main/java/gman/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"    private Gman gman;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ButtersStotch.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"    private Image gmanImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/EricCartman.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(Ui.greet(), gmanImage));","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"    public void setGman(Gman g) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"        gman \u003d g;","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"glenngnng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"glenngnng"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"glenngnng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"glenngnng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"glenngnng"},"content":"        String response \u003d gman.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"glenngnng"},"content":"        //gman needs a getResponse method.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"glenngnng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"glenngnng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"                DialogBox.getDukeDialog(response, gmanImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"glenngnng"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"glenngnng"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"glenngnng":57}},{"path":"src/main/java/gman/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"    private static final String exitWord \u003d \"bye\";","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"    private static String lastCommand \u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"    private static Task lastTaskDeleted \u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"    private static int lastIndexChanged;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"    public static String exitCommand(TaskList taskList) {","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"            taskList.write();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"            return Ui.goodbye();","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"            return Ui.showError(new GmanException(\"Sorry... I could not save your tasks :C\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"    public static String listCommand(TaskList taskList) {","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"            lastCommand \u003d \"error\";","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"            return Ui.showError(new GmanException(\"There\u0027s nothing to print in the list bozo...\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"        lastCommand \u003d \"list\";","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"        return Ui.listTasks(taskList); //attention","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"    public static String makeTodoCommand(String userInput, TaskList taskList) {","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"        if (userInput.substring(4).isEmpty()) { //add if there is only space","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"            lastCommand \u003d \"error\";","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"            return Ui.showError(new GmanException(\"OOOOOPs! The description of a todo cannot be empty!\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"            String description \u003d userInput.substring(4); //cut after the space","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"            lastCommand \u003d \"add_task\";","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"            lastIndexChanged \u003d taskList.getSize();","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"            //no need to + 1 since the getSize already + 1 (not zero indexed)","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"            return taskList.addTask(new Todo(description)) + \" \\n\" + Ui.numberOfTasks(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"glenngnng"},"content":"    public static String makeDeadlineCommand(String userInput, TaskList taskList) {","lastModifiedDate":"2023-09-19"},{"lineNumber":43,"author":{"gitId":"glenngnng"},"content":"        if (userInput.substring(8).isEmpty()) { //add if there is only space","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"glenngnng"},"content":"            lastCommand \u003d \"error\";","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"glenngnng"},"content":"            return Ui.showError(new GmanException(\"OOOOOPs! The description of a deadline cannot be empty!\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"glenngnng"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"glenngnng"},"content":"            String[] segments \u003d userInput.substring(8).split(\"/by \");","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"glenngnng"},"content":"            String description \u003d segments[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"glenngnng"},"content":"            String by \u003d segments[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"            lastCommand \u003d \"add_task\";","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"glenngnng"},"content":"            lastIndexChanged \u003d taskList.getSize();","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"glenngnng"},"content":"            return taskList.addTask(new Deadline(description, by)) + \"\\n\" + Ui.numberOfTasks(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"    public static String makeEventCommand(String userInput, TaskList taskList) {","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"glenngnng"},"content":"        if (userInput.substring(5).isEmpty()) { //add if there is only space","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"glenngnng"},"content":"            lastCommand \u003d \"error\";","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"glenngnng"},"content":"            return Ui.showError(new GmanException(\"OOOOOPs! The description of an event cannot be empty!\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"glenngnng"},"content":"        else {","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"glenngnng"},"content":"            String[] segments \u003d userInput.substring(5).split(\"/\");","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"glenngnng"},"content":"            String description \u003d segments[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"glenngnng"},"content":"            String from \u003d segments[1].substring(5); //cut aft space, below too","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"glenngnng"},"content":"            String to \u003d segments[2].substring(3);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"glenngnng"},"content":"            lastCommand \u003d \"add_task\";","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"glenngnng"},"content":"            lastIndexChanged \u003d taskList.getSize();","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"glenngnng"},"content":"            return taskList.addTask(new Event(description, from, to)) + \"\\n\" + Ui.numberOfTasks(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"glenngnng"},"content":"    public static String deleteCommand(String userInput, TaskList taskList) {","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"glenngnng"},"content":"        String[] segments \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"glenngnng"},"content":"        int indexToDelete \u003d Integer.valueOf(segments[1]) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"glenngnng"},"content":"        lastTaskDeleted \u003d taskList.getTask(indexToDelete);","lastModifiedDate":"2023-09-13"},{"lineNumber":76,"author":{"gitId":"glenngnng"},"content":"        lastCommand \u003d \"delete\";","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"glenngnng"},"content":"        return taskList.deleteTask(indexToDelete) + \"\\n\" + Ui.numberOfTasks(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":79,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"glenngnng"},"content":"    public static String undoCommand(TaskList taskList) {","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"glenngnng"},"content":"        if (!isValidUndo()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"glenngnng"},"content":"            return Ui.showError(new GmanException(\"OOPS! Your last command is not undo-able!\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"glenngnng"},"content":"        switch (lastCommand) {","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"glenngnng"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"glenngnng"},"content":"                return undoDeleteTask(taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"glenngnng"},"content":"            case \"add_task\":","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"glenngnng"},"content":"                return undoAddTask(taskList, lastIndexChanged);","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"glenngnng"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"glenngnng"},"content":"                return undoMark(taskList, lastIndexChanged);","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"glenngnng"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"glenngnng"},"content":"                return undoUnmark(taskList, lastIndexChanged);","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"glenngnng"},"content":"            default:","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"glenngnng"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + lastCommand);","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":99,"author":{"gitId":"glenngnng"},"content":"    public static String undoDeleteTask(TaskList taskList) {","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"glenngnng"},"content":"        //need to add ui","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"glenngnng"},"content":"        return \"Undo successful! \\n\" + taskList.addTask(lastTaskDeleted) + \"\\n\" + Ui.numberOfTasks(taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"glenngnng"},"content":"    public static String undoAddTask(TaskList taskList, int indexToDelete) {","lastModifiedDate":"2023-09-13"},{"lineNumber":105,"author":{"gitId":"glenngnng"},"content":"        return \"Undo successful! \\n\" + taskList.deleteTask(indexToDelete) + \"\\n\" + Ui.numberOfTasks(taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":106,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"glenngnng"},"content":"    public static String undoMark(TaskList taskList, int indexToChange) {","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"glenngnng"},"content":"        return \"Undo successful! \\n\" + taskList.unmark(indexToChange);","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"glenngnng"},"content":"    public static String undoUnmark(TaskList taskList, int indexToChange) {","lastModifiedDate":"2023-09-13"},{"lineNumber":113,"author":{"gitId":"glenngnng"},"content":"        return \"Undo successful! \\n\" + taskList.mark(indexToChange);","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"glenngnng"},"content":"    public static boolean isValidUndo() {","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"glenngnng"},"content":"        if (lastCommand.equals(\"error\") || lastCommand.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"glenngnng"},"content":"            return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"glenngnng"},"content":"        if (lastCommand.equals(\"delete\") || lastCommand.equals(\"add_task\") || lastCommand.equals(\"mark\")","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"glenngnng"},"content":"                || lastCommand.equals(\"unmark\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"glenngnng"},"content":"            return true;","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"glenngnng"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"glenngnng"},"content":"            return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"glenngnng"},"content":"    public static String unmarkCommand(TaskList taskList, int index) {","lastModifiedDate":"2023-09-19"},{"lineNumber":130,"author":{"gitId":"glenngnng"},"content":"        lastCommand \u003d \"unmark\";","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"glenngnng"},"content":"        lastIndexChanged \u003d index;","lastModifiedDate":"2023-09-19"},{"lineNumber":132,"author":{"gitId":"glenngnng"},"content":"        return taskList.unmark(index);","lastModifiedDate":"2023-09-19"},{"lineNumber":133,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":134,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"glenngnng"},"content":"    public static String markCommand(TaskList taskList, int index) {","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"glenngnng"},"content":"        lastCommand \u003d \"mark\";","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"glenngnng"},"content":"        lastIndexChanged \u003d index;","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"glenngnng"},"content":"        return taskList.mark(index);","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"glenngnng"},"content":"    //instead of just printing it out, return a string to the GUI.","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"glenngnng"},"content":"    public static String readInput(String userInput, TaskList taskList) {","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"glenngnng"},"content":"        if (userInput.equals(exitWord)) {","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"glenngnng"},"content":"            return exitCommand(taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"glenngnng"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"glenngnng"},"content":"            return listCommand(taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":148,"author":{"gitId":"glenngnng"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"glenngnng"},"content":"        String prefix \u003d words[0];","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"glenngnng"},"content":"        if (prefix.equals(\"unmark\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"glenngnng"},"content":"            int index \u003d Integer.valueOf(words[1]) - 1; //minus 1 here to get the index","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"glenngnng"},"content":"            return unmarkCommand(taskList, index);","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"glenngnng"},"content":"        } else if (prefix.equals(\"mark\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":155,"author":{"gitId":"glenngnng"},"content":"            int index \u003d Integer.valueOf(words[1]) - 1; //minus 1 here to get the index","lastModifiedDate":"2023-09-19"},{"lineNumber":156,"author":{"gitId":"glenngnng"},"content":"            return markCommand(taskList, index);","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"glenngnng"},"content":"        } else if (prefix.equals(\"todo\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":158,"author":{"gitId":"glenngnng"},"content":"            return makeTodoCommand(userInput, taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":159,"author":{"gitId":"glenngnng"},"content":"        } else if (prefix.equals(\"deadline\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":160,"author":{"gitId":"glenngnng"},"content":"            return makeDeadlineCommand(userInput, taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":161,"author":{"gitId":"glenngnng"},"content":"        } else if (prefix.equals(\"event\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":162,"author":{"gitId":"glenngnng"},"content":"            return makeEventCommand(userInput, taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"glenngnng"},"content":"        } else if (prefix.equals(\"delete\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":164,"author":{"gitId":"glenngnng"},"content":"            return deleteCommand(userInput, taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":165,"author":{"gitId":"glenngnng"},"content":"        } else if (prefix.equals(\"find\")) { //add exception if more than one searched word, i.e. space, e.g hi hi","lastModifiedDate":"2023-09-19"},{"lineNumber":166,"author":{"gitId":"glenngnng"},"content":"            String keyword \u003d words[1];","lastModifiedDate":"2023-09-19"},{"lineNumber":167,"author":{"gitId":"glenngnng"},"content":"            return taskList.findTasks(keyword);","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"glenngnng"},"content":"        } else if (prefix.equals(\"undo\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":169,"author":{"gitId":"glenngnng"},"content":"            return undoCommand(taskList);","lastModifiedDate":"2023-09-19"},{"lineNumber":170,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":171,"author":{"gitId":"glenngnng"},"content":"        return Ui.showError(new GmanException(\"OOPS! I\u0027m sorry, I don\u0027t know what that means! Please start \" +","lastModifiedDate":"2023-09-19"},{"lineNumber":172,"author":{"gitId":"glenngnng"},"content":"                \"with keywords: todo, deadline, or event!\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":173,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":174,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":175,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"glenngnng":175}},{"path":"src/main/java/gman/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":" * Storage class that stores and retrieves information to and from the .txt file specified in the file path.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"    private static final String FILE_PATH \u003d \"./data/gman.txt\";","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"    //hardcoded","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"    private static final String DIR_PATH \u003d \"./data\";","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"    //hardcoded","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"     * Reads the .txt file from the specified FILE_PATH.","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"     * @return Returns an ArrayList of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"     * @throws FileNotFoundException If file is not found at FILE_PATH.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"    public static ArrayList\u003cTask\u003e readTasks() throws FileNotFoundException {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"            ArrayList\u003cTask\u003e tasksFromFile \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"                Task taskRead \u003d Task.readFromFile(fileScanner.nextLine());","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"                tasksFromFile.add(taskRead);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"            return tasksFromFile;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"            System.out.println(\"Looks like you do not have any previous tasks saved!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"glenngnng"},"content":"     * Writes the current taskList into the .txt file provided at FILE_PATH.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"glenngnng"},"content":"     * @param tasks The ArrayList of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"glenngnng"},"content":"    public static void writeTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"glenngnng"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"glenngnng"},"content":"            File dir \u003d new File(DIR_PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"glenngnng"},"content":"                dir.mkdir();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"glenngnng"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"glenngnng"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"glenngnng"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"glenngnng"},"content":"                writer.write(task.stringToWrite() + \"\\n\");","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"glenngnng"},"content":"            writer.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"glenngnng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"glenngnng"},"content":"            System.out.println(\"Ohno. There was an error saving your files!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"glenngnng":63}},{"path":"src/main/java/gman/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":" * Task class that Todo, Event and Deadline inherit from.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"     * Returns a String representation of the Task, including the status icon and description only.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"     * @return a String to be printed to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"        return this.getStatusIcon() + this.description; //checking if this is even used. its alw overridden.","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"        //return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"     * Returns a symbol depending on whether the Task is done.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"     * @return a String of a symbol.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"    public String getStatusIcon() { //for tasks","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"     * Marks an undone Task as done.","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"glenngnng"},"content":"    public void mark(){","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"glenngnng"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"glenngnng"},"content":"            if (isDone) {","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"glenngnng"},"content":"                throw new GmanException(\"Haha nice going... This task is already done, bozo!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"glenngnng"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"glenngnng"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"glenngnng"},"content":"            assert this.getStatusIcon().equals(\"[X]\") : \"The status icon is wrong!\";","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"glenngnng"},"content":"        } catch (GmanException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"glenngnng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"glenngnng"},"content":"     * Marks a done Task as undone.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"glenngnng"},"content":"    public void unmark() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"glenngnng"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"glenngnng"},"content":"            if (!isDone) {","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"glenngnng"},"content":"                throw new GmanException(\"Hey... this task was never done in the first place!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"glenngnng"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"glenngnng"},"content":"            isDone \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"glenngnng"},"content":"            assert this.getStatusIcon().equals(\"[]\") : \"The status icon is wrong!\";","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"glenngnng"},"content":"        } catch (GmanException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"glenngnng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"glenngnng"},"content":"     * Reads a line in a .txt file that represents an Event task and converts it into either a Todo,","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"glenngnng"},"content":"     * Deadline, or Event.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"glenngnng"},"content":"     * @param line each line from the .txt file.","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"glenngnng"},"content":"     * @return A Todo, Deadline or Event Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"glenngnng"},"content":"    public static Task readFromFile(String line) {","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"glenngnng"},"content":"        String[] segments \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"glenngnng"},"content":"        switch (segments[0]) {","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"glenngnng"},"content":"            case \"T\":","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"glenngnng"},"content":"                return Todo.readFromFile(segments);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"glenngnng"},"content":"            case \"D\":","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"glenngnng"},"content":"                return Deadline.readFromFile(segments);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"glenngnng"},"content":"            case \"E\":","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"glenngnng"},"content":"                return Event.readFromFile(segments);","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"glenngnng"},"content":"            default:","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"glenngnng"},"content":"                return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"glenngnng"},"content":"     * Returns a String to be written into the .txt file. Overridden by all child classes.","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"glenngnng"},"content":"     * @return A formatted String for the Task with a \" | \" separator.","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"glenngnng"},"content":"    public String stringToWrite() {","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"glenngnng"},"content":"        String symbol \u003d \"O\";","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"glenngnng"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"glenngnng"},"content":"            symbol \u003d \"X\";","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"glenngnng"},"content":"        return (symbol + \" | \" + this.description);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"glenngnng"},"content":"     * Returns the description of the target Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"glenngnng"},"content":"     * @return String description to be printed to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"glenngnng"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"glenngnng"},"content":"        return this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"glenngnng":114}},{"path":"src/main/java/gman/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":" * A class containing the tasks created and saved. Also contains all operations to said tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"    private Storage storage \u003d new Storage(); //take tasks from Duke.Storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"     * Constructor that tries to retrieve any previously stored tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"     * Returns empty ArrayList when there is nothing in file.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"            this.tasks \u003d Storage.readTasks(); //will return empty ArrayList when nothing in file.","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"            System.out.println(\"Looks like you do not have any previous tasks saved!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"     * Adds a Task into the ArrayList of Tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"     * @param task specific Task to be added into the ArrayList.","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"     * @return a message showing the task has been added.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"        return Ui.addedTask(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"     * Deletes specified Task from the ArrayList of Tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"glenngnng"},"content":"     * @param index specified index of Task to delete in the ArrayList.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"glenngnng"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"glenngnng"},"content":"        if (index \u003e this.getSize() || this.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"glenngnng"},"content":"            return Ui.showError(new GmanException(\"HEYHEYHEY! There\u0027s nothing to delete here!\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"glenngnng"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"glenngnng"},"content":"            String removedTask \u003d Ui.removedTask(tasks.get(index));","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"glenngnng"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"            return removedTask;","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"glenngnng"},"content":"     * Unmarks Task in specified index of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"glenngnng"},"content":"     * @param index specified index of Task in tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"glenngnng"},"content":"     * @return a string stating the task has been unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"glenngnng"},"content":"    public String unmark(int index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"glenngnng"},"content":"        //needed to let tasks remain private","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"glenngnng"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"glenngnng"},"content":"        task.unmark();","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"glenngnng"},"content":"        return Ui.unmark(task.toString()); //i dont like how this is here and not in parser.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"glenngnng"},"content":"     * Marks Task in specified index of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"glenngnng"},"content":"     * @param index specified index of Task in tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"glenngnng"},"content":"     * @return a string stating the task has been marked.","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"glenngnng"},"content":"    public String mark(int index) {","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"glenngnng"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"glenngnng"},"content":"        task.mark();","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"glenngnng"},"content":"        return Ui.mark(task.toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"glenngnng"},"content":"     * Returns the number of elements in the tasks ArrayList.","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"glenngnng"},"content":"     * @return int number of Elements in dynamic ArrayList.","lastModifiedDate":"2023-09-06"},{"lineNumber":85,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"glenngnng"},"content":"    public int getSize() {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"glenngnng"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"glenngnng"},"content":"     * Returns the Task from tasks given its index.","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"glenngnng"},"content":"     * @param index Index of specified Task to retrieve.","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"glenngnng"},"content":"     * @return Task at index in ArrayList tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"glenngnng"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"glenngnng"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"glenngnng"},"content":"     * Writes the toString format of tasks to the specified .txt file.","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"glenngnng"},"content":"     * @throws IOException IOException","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"glenngnng"},"content":"    public void write() throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"glenngnng"},"content":"        Storage.writeTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"glenngnng"},"content":"     * Finds all tasks in taskList with given keyword and puts these tasks in a new ArrayList.","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"glenngnng"},"content":"     * @param keyword The keyword to check if present in the task description.","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"glenngnng"},"content":"     * @return a string of all tasks found with the specific keyword given.","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"glenngnng"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"glenngnng"},"content":"        ArrayList\u003cTask\u003e tasksWithKeyword \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"glenngnng"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"glenngnng"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"glenngnng"},"content":"                tasksWithKeyword.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"glenngnng"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"glenngnng"},"content":"        return Ui.listTasksFound(tasksWithKeyword);","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"glenngnng":126}},{"path":"src/main/java/gman/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":" * A Todo Task that contains a description.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"     * A Todo task constructor.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"     * Returns a string representation of the Todo Task containing the symbol, status icon and description.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"     * @return A string to be printed to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"        return \"[T]\" + super.getStatusIcon() + description;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"     * Reads a line in a .txt file that represents a Todo task and converts it to a Todo Task.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"     * @param segments A string array that is split by \" | \", separating the line into useful chunks.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"     * @return A deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"    public static Todo readFromFile(String[] segments) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"        String symbol \u003d segments[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"        String description \u003d segments[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"        Todo toReturn \u003d  new Todo(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"        if (symbol.equals(\"X\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"            toReturn.mark();","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"glenngnng"},"content":"        return toReturn;","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"glenngnng"},"content":"     * Returns A String to be written into the .txt file.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"glenngnng"},"content":"     * @return A formatted String for the Todo task and \" | \" separators.","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"glenngnng"},"content":"    public String stringToWrite() {","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"glenngnng"},"content":"        return \"T\" + \" | \" + super.stringToWrite();","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"glenngnng":56}},{"path":"src/main/java/gman/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package gman;","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":" * UI class that contains strings to be printed to the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"     * Returns a greeting.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"     * @return a greeting.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"    public static String greet() {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"        return (\"Hello! I\u0027m Gman! \\nWhat can I do for you?\");","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"     * Returns a goodbye message.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"     * @return a goodbye message.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"    public static String goodbye() {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"     * Returns a list of all tasks in a String.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"     * @param taskList the Task List containing all tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"     * @return a list of all tasks in a String.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"    public static String listTasks(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"            showError(new GmanException(\"There\u0027s nothing to print in the list\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"        String listOfTasks \u003d (\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"            listOfTasks +\u003d ((i + 1) + \". \"  + taskList.getTask(i).toString() + \"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"glenngnng"},"content":"        return listOfTasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"glenngnng"},"content":"     * Returns a String stating how many tasks there are in the current tasklist.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"glenngnng"},"content":"     * @param taskList the Task List containing all tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"glenngnng"},"content":"     * @return a String stating how many tasks there are in the current tasklist.","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"    public static String numberOfTasks(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"glenngnng"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"glenngnng"},"content":"            return (\"There are no tasks in the list!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"glenngnng"},"content":"        } else if (taskList.getSize() \u003d\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"glenngnng"},"content":"            return (\"Now you have 1 task in the list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"glenngnng"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"            return (\"Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"glenngnng"},"content":"     * Returns a message stating the task has been added and the task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"glenngnng"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"glenngnng"},"content":"     * @return a message stating the task has been added and the task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"glenngnng"},"content":"    public static String addedTask(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"glenngnng"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task.toString();","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"glenngnng"},"content":"     * Returns a message stating the task has been removed and the task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"glenngnng"},"content":"     * @param task The task to be removed","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"glenngnng"},"content":"     * @return a message stating the task has been removed and the task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"glenngnng"},"content":"    public static String removedTask(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"glenngnng"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task.toString();","lastModifiedDate":"2023-09-19"},{"lineNumber":78,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"glenngnng"},"content":"     * Returns a message stating the task has been marked and the task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"glenngnng"},"content":"     * @param taskToString The task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"glenngnng"},"content":"     * @return a message stating the task has been marked and the task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":86,"author":{"gitId":"glenngnng"},"content":"    public static String mark(String taskToString) {","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"glenngnng"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + taskToString;","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"glenngnng"},"content":"     * Returns a message stating the task has been unmarked and the task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"glenngnng"},"content":"     * @param taskToString The task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"glenngnng"},"content":"     * @return a message stating the task has been unmarked and the task description.","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"glenngnng"},"content":"    public static String unmark(String taskToString) {","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"glenngnng"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + taskToString;","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":101,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"glenngnng"},"content":"     * Prints to the user which tasks have been found using the keyword provided by the user.","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"glenngnng"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"glenngnng"},"content":"     * @param tasks taskList to find tasks from.","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"glenngnng"},"content":"    public static String listTasksFound(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"glenngnng"},"content":"        String message  \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"glenngnng"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"glenngnng"},"content":"            message +\u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"glenngnng"},"content":"        return message;","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"glenngnng"},"content":"    public static String showError(GmanException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"glenngnng"},"content":"        return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"glenngnng":117}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"227.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"glenngnng":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"747.0\"","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"            prefWidth\u003d\"551.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"            fx:controller\u003d\"gman.MainWindow\"\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"474.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"473.0\" layoutY\u003d\"705.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"78.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"706.0\" prefWidth\u003d\"549.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"698.0\" prefWidth\u003d\"549.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"         \u003c/content\u003e\u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"glenngnng":20}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import gman.Deadline;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"        Deadline deadline  \u003d new Deadline(\" have more fun\", \"2019-10-19\");","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"        assert deadline.toString().equals(\"[D][ ] have more fun (by: Oct 19 2019)\");","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"glenngnng":12}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import gman.Todo;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"        Todo todo \u003d new Todo(\" have fun\");","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"        assert todo.toString().equals(\"[T][ ] have fun\");","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"glenngnng":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"hi","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"todo have fun!","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"deadline do assignment /by thursday 2350","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"event fundraising for charity /from thursday 2350 /to friday 1200","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"glenngnng":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"glenngnng":1,"-":20}}]
