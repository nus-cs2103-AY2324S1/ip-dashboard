[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"# Pooh project template","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the bear _Pooh_. Given below are instructions on how to use it.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Pooh.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"    .----------------.  .----------------.  .----------------.  .----------------. ","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"   | .--------------. || .--------------. || .--------------. || .--------------. |","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"   | |   ______     | || |     ____     | || |     ____     | || |  ____  ____  | |","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"   | |  |_   __ \\   | || |   .\u0027    `.   | || |   .\u0027    `.   | || | |_   ||   _| | |","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"   | |    | |__) |  | || |  /  .--.  \\  | || |  /  .--.  \\  | || |   | |__| |   | |","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"   | |    |  ___/   | || |  | |    | |  | || |  | |    | |  | || |   |  __  |   | |","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"   | |   _| |_      | || |  \\  `--\u0027  /  | || |  \\  `--\u0027  /  | || |  _| |  | |_  | |","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"   | |  |_____|     | || |   `.____.\u0027   | || |   `.____.\u0027   | || | |____||____| | |","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"   | |              | || |              | || |              | || |              | |","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"   | \u0027--------------\u0027 || \u0027--------------\u0027 || \u0027--------------\u0027 || \u0027--------------\u0027 |","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"   \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zjinnnn":14,"-":15}},{"path":"src/main/java/pooh/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"    private final String deadlineString;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"    private final LocalDate deadlineDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"    public Deadline(String description, String deadlineString) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"        this.deadlineString \u003d deadlineString;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"        this.deadlineDateTime \u003d parseDateTime(deadlineString);","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"    public String writeTaskToFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"        return String.format(\"%s | %s | %s | %s\", \"D\",","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"                this.getIsDone() ? 1 : 0,","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"                this.getDescription(),","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"                this.deadlineString);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"    public static Deadline readTaskFromFile(String[] args) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"        Deadline newDeadlineTask \u003d new Deadline(args[2], args[3]);","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"        if (args[1].equals(\"1\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"            newDeadlineTask.markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"        return newDeadlineTask;","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"    private LocalDate parseDateTime(String deadlineString) {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"            return LocalDate.parse(deadlineString);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"            return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"        String deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"        if (deadlineDateTime !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Zjinnnn"},"content":"            deadline \u003d deadlineDateTime.format(formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Zjinnnn"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"            deadline \u003d deadlineString;","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Zjinnnn"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), deadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":52}},{"path":"src/main/java/pooh/EmptyTaskDescriptorsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"public class EmptyTaskDescriptorsException extends PoohException {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"        return \"      ☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":8}},{"path":"src/main/java/pooh/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"    private final String eventStartTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    private final String eventEndTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"    public Event(String description, String eventStartTime, String eventEndTime) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"        this.eventStartTime \u003d eventStartTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"        this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"    public String writeTaskToFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"        return String.format(\"%s | %s | %s | %s-%s\", \"E\",","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"                this.getIsDone() ? 1 : 0,","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"                this.getDescription(),","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"                this.eventStartTime,","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"                this.eventEndTime);","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"    public static Event readTaskFromFile(String[] args) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"        String[] eventTime \u003d args[3].split(\"-\");","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"        Event newEventTask \u003d new Event(args[2], eventTime[0], eventTime[1]);","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"        if (args[1].equals(\"1\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"            newEventTask.markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"        return newEventTask;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.eventStartTime, this.eventEndTime);","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":34}},{"path":"src/main/java/pooh/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"public class InvalidTaskException extends PoohException {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"        return \"      ☹ OOPS!!! No such task! Please reselect carefully!\";","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":8}},{"path":"src/main/java/pooh/LoadTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"public class LoadTasksException extends PoohException {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"        return \"      An error has occurred whilst loading tasks from file. :-(\";","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Zjinnnn":8}},{"path":"src/main/java/pooh/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    public void parseInput(Storage taskStorage, TaskList taskList, String userInput) throws","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"            UnrecognizedCommandException, InvalidTaskException, WriteTasksException {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"        String userAction \u003d userInput.split(\" \")[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"        if (userAction.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"            Ui.printTasksMsg(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"            switch (userAction) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"            case \"list\":","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"                Ui.printTasksMsg(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"                Ui.exitMsg();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"                System.exit(1);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"                int markIndex \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"                Task markTask \u003d taskList.getTask(markIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"                markTask.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"                Ui.taskDoneMsg(markTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"                int unmarkIndex \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"                Task unmarkTask \u003d taskList.getTask(unmarkIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"                unmarkTask.markAsUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"                Ui.taskUndoneMsg(unmarkTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"            case \"event\":","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"                    TaskList.addTask(taskList, userAction, userInput);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"                } catch (EmptyTaskDescriptorsException ex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"                    Ui.generalRespond(ex.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"                int delIndex \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"                TaskList.deleteTask(taskList, delIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"            default:","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"                throw new UnrecognizedCommandException();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"            taskStorage.writeTask(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Zjinnnn":49}},{"path":"src/main/java/pooh/Pooh.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"import java.util.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"public class Pooh {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"    private final Storage taskStorage;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"    private final Parser cmdParser;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"    public Pooh(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"        cmdParser \u003d new Parser();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"        taskStorage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"            taskList \u003d new TaskList(taskStorage.loadTasks());","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"        } catch (LoadTasksException ex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"            Ui.generalRespond(ex.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"            List\u003cTask\u003e listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"            taskList \u003d new TaskList(listOfTasks);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"    public void run() {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"        Ui.welcomeMsg();","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"        while (userInput.hasNextLine()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"                String userCmd \u003d userInput.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"                cmdParser.parseInput(taskStorage, taskList, userCmd);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"            } catch (UnrecognizedCommandException ex) {","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"                Ui.generalRespond(ex.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"            } catch (WriteTasksException ex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"                Ui.generalRespond(ex.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"            } catch (InvalidTaskException ex) {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"                Ui.generalRespond(ex.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"        new Pooh(\"pooh.txt\").run();","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":46}},{"path":"src/main/java/pooh/PoohException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"public class PoohException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":4}},{"path":"src/main/java/pooh/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import java.io.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"    private final String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"    public List\u003cTask\u003e loadTasks() throws LoadTasksException {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"                BufferedReader fileReader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"                String line \u003d fileReader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"                while (line !\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"                    Task task \u003d Task.readTaskFromFile(line);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"                    taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"                    line \u003d fileReader.readLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"                fileReader.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"                Ui.generalRespond(","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"                        \"      Looks like this is the first time here! Say hi to POOH!\\n      No worries, Pooh will \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"                                \"save your tasks to pooh.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"                boolean fileCreated \u003d file.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"            throw new LoadTasksException();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"        return taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"    public void writeTask(TaskList taskList) throws WriteTasksException {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(\"pooh.txt\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"                fileWriter.write(task.writeTaskToFile() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Zjinnnn"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Zjinnnn"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"            throw new WriteTasksException();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Zjinnnn"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Zjinnnn":54}},{"path":"src/main/java/pooh/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"    private final String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"        return this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"        return (isDone ? \"X\" : \" \");    // mark done task with X","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"    public abstract String writeTaskToFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"    public static Task readTaskFromFile(String input) {","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"        String[] args \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"        Task task;","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"        switch (args[0]) {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"        case \"T\":","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"            task \u003d Todo.readTaskFromFile(args);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"        case \"D\":","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"            task \u003d Deadline.readTaskFromFile(args);","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"        case \"E\":","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"            task \u003d Event.readTaskFromFile(args);","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"Zjinnnn"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"Zjinnnn"},"content":"        default:","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"            task \u003d null;","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"            break;","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"        return task;","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"Zjinnnn"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":58}},{"path":"src/main/java/pooh/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"    public void remove(int task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"        this.taskList.remove(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"    public Task getTask(int index) throws InvalidTaskException {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"            return this.taskList.get(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"    public static void addTask(TaskList taskList, String userAction, String cmd) throws","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"            EmptyTaskDescriptorsException {","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"        if (cmd.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"            throw new EmptyTaskDescriptorsException();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"        String userArgs \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"        Task task;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"        if (userAction.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"            task \u003d new Todo(userArgs);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"        } else if (userAction.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"            String[] specificArgs \u003d userArgs.split(\" /by \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"            String description \u003d specificArgs[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"            String deadlineTime \u003d specificArgs[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"            task \u003d new Deadline(description, deadlineTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Zjinnnn"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Zjinnnn"},"content":"            String[] specificArgs \u003d userArgs.split(\" /from \", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"            String description \u003d specificArgs[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"            String[] eventTimes \u003d specificArgs[1].split(\" /to \");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Zjinnnn"},"content":"            String eventStartTime \u003d eventTimes[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"            String eventEndTime \u003d eventTimes[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Zjinnnn"},"content":"            task \u003d new Event(description, eventStartTime, eventEndTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Zjinnnn"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Zjinnnn"},"content":"        String addTaskMessage \u003d String.format(\"      Got it. I\u0027ve added this task:\\n          %s\\n      Now you have \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Zjinnnn"},"content":"                \"%d tasks in the list\", task, taskList.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"        Ui.generalRespond(addTaskMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Zjinnnn"},"content":"    public static void deleteTask(TaskList taskList, int index) throws InvalidTaskException {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Zjinnnn"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Zjinnnn"},"content":"        taskList.remove(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Zjinnnn"},"content":"        String delTaskMessage \u003d String.format(\"      Noted. I\u0027ve removed this task:\\n          %s\\n      Now you have\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Zjinnnn"},"content":"                \" %d tasks in the list\", task, taskList.getSize());","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Zjinnnn"},"content":"        Ui.generalRespond(delTaskMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Zjinnnn":67}},{"path":"src/main/java/pooh/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"    public String writeTaskToFile() {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"        return String.format(\"%s | %s | %s\", \"T\",","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"                this.getIsDone() ? 1 : 0,","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"                this.getDescription());","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"    public static Todo readTaskFromFile(String[] args) {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"        Todo newTodoTask \u003d new Todo(args[2]);","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"        if (args[1].equals(\"1\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"            newTodoTask.markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"        return newTodoTask;","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":26}},{"path":"src/main/java/pooh/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"    private static final String HORIZONTAL_LINE \u003d \"      \" +","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"            \"_______________________________________________________________________________\";","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"    public static void welcomeMsg() {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"        String logo \u003d \"      .----------------.  .----------------.  .----------------.  .----------------.\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"                \"      | .--------------. || .--------------. || .--------------. || .--------------. |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |   ______     | || |     ____     | || |     ____     | || |  ____  ____  | |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |  |_   __ \\\\   | || |   .\u0027    `.   | || |   .\u0027    `.   | || | |_   ||   _| | |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |    | |__) |  | || |  /  .--.  \\\\  | || |  /  .--.  \\\\  | || |   | |__| |   | |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |    |  ___/   | || |  | |    | |  | || |  | |    | |  | || |   |  __  |   | |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |   _| |_      | || |  \\\\  `--\u0027  /  | || |  \\\\  `--\u0027  /  | || |  _| |  | |_  | |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |  |_____|     | || |   `.____.\u0027   | || |   `.____.\u0027   | || | |____||____| | |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |              | || |              | || |              | || |              | |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"                \"      | \u0027--------------\u0027 || \u0027--------------\u0027 || \u0027--------------\u0027 || \u0027--------------\u0027 |\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"                \"       \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"        String greetings \u003d \"      Hi there! Good to see you! I\u0027m Pooh!\\n      What can I do for you?\";","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(greetings);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"    public static void exitMsg() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"        String byeMessage \u003d \"      How lucky I am to have something that makes saying goodbye so hard. Bye!\";","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(byeMessage);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"    public static void generalRespond(String message) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"    public static void printTasksMsg(TaskList taskList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"        StringBuilder todoListString \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"            String task;","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"                task \u003d String.format(\"      %d. \", i + 1) + taskList.getTask(i) + \"\\n\";","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"Zjinnnn"},"content":"            } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"Zjinnnn"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"            todoListString.append(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(\"      Here are the tasks in your list:\");","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(todoListString.toString().stripTrailing());","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"    public static void taskDoneMsg(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(\"      Nice! I\u0027ve marked this task as done:\\n      \" + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"Zjinnnn"},"content":"    public static void taskUndoneMsg(Task task) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(\"      OK, I\u0027ve marked this task as not done yet:\\n      \" + task);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Zjinnnn":69}},{"path":"src/main/java/pooh/UnrecognizedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"public class UnrecognizedCommandException extends PoohException {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"        return \"      ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":8}},{"path":"src/main/java/pooh/WriteTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"public class WriteTasksException extends PoohException {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"        return \"      An error has occurred whilst writing to file. :-(\";","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Zjinnnn":8}},{"path":"src/test/java/pooh/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import java.util.List;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"    public void addTask_emptyDescription_exceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"            List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"            TaskList taskListTester \u003d new TaskList(taskList);","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"            TaskList.addTask(taskListTester, \"deadline\", \"\");","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"            fail(\"Expected exception was not thrown.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"        } catch (EmptyTaskDescriptorsException ex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"            assertEquals(\"      ☹ OOPS!!! The description of a todo cannot be empty.\", ex.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Zjinnnn":23}},{"path":"src/test/java/pooh/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package pooh;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"    public void todo_correctInitialisation_toStringCorrect() {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"        Todo todo \u003d new Todo(\"buy more honey\");","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"        assertEquals(\"[T][ ] buy more honey\", todo.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"Zjinnnn":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"unmark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"mark3","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"java -classpath ../bin Pooh \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zjinnnn":1,"-":37}}]
