[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"# Pooh project template","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the bear _Pooh_. Given below are instructions on how to use it.","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Pooh.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"    .----------------.  .----------------.  .----------------.  .----------------. ","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"   | .--------------. || .--------------. || .--------------. || .--------------. |","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"   | |   ______     | || |     ____     | || |     ____     | || |  ____  ____  | |","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"   | |  |_   __ \\   | || |   .\u0027    `.   | || |   .\u0027    `.   | || | |_   ||   _| | |","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"   | |    | |__) |  | || |  /  .--.  \\  | || |  /  .--.  \\  | || |   | |__| |   | |","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"   | |    |  ___/   | || |  | |    | |  | || |  | |    | |  | || |   |  __  |   | |","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"   | |   _| |_      | || |  \\  `--\u0027  /  | || |  \\  `--\u0027  /  | || |  _| |  | |_  | |","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"   | |  |_____|     | || |   `.____.\u0027   | || |   `.____.\u0027   | || | |____||____| | |","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"   | |              | || |              | || |              | || |              | |","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"   | \u0027--------------\u0027 || \u0027--------------\u0027 || \u0027--------------\u0027 || \u0027--------------\u0027 |","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"   \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zjinnnn":14,"-":15}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"    private final String deadlineTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"    public Deadline(String description, String deadlineTime) {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.deadlineTime);","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":13}},{"path":"src/main/java/EmptyTaskDescriptorsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"public class EmptyTaskDescriptorsException extends PoohException {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"        return \"      ☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"    private final String eventStartTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"    private final String eventEndTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    public Event(String description, String eventStartTime, String eventEndTime) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"        this.eventStartTime \u003d eventStartTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"        this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.eventStartTime, this.eventEndTime);","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":15}},{"path":"src/main/java/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"public class InvalidTaskException extends PoohException {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"        return \"      ☹ OOPS!!! No such task! Please reselect carefully!\";","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":6}},{"path":"src/main/java/Pooh.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"import java.util.List;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"public class Pooh {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"    protected static final String horizontalLine \u003d \"      _______________________________________________________________________________\";","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"    public static void welcomeMsg() {","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"        String logo \u003d \"      .----------------.  .----------------.  .----------------.  .----------------.\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"                \"      | .--------------. || .--------------. || .--------------. || .--------------. |\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |   ______     | || |     ____     | || |     ____     | || |  ____  ____  | |\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |  |_   __ \\\\   | || |   .\u0027    `.   | || |   .\u0027    `.   | || | |_   ||   _| | |\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |    | |__) |  | || |  /  .--.  \\\\  | || |  /  .--.  \\\\  | || |   | |__| |   | |\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |    |  ___/   | || |  | |    | |  | || |  | |    | |  | || |   |  __  |   | |\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |   _| |_      | || |  \\\\  `--\u0027  /  | || |  \\\\  `--\u0027  /  | || |  _| |  | |_  | |\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |  |_____|     | || |   `.____.\u0027   | || |   `.____.\u0027   | || | |____||____| | |\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"                \"      | |              | || |              | || |              | || |              | |\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"                \"      | \u0027--------------\u0027 || \u0027--------------\u0027 || \u0027--------------\u0027 || \u0027--------------\u0027 |\\n\" +","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"                \"       \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027\";","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"        String greetings \u003d \"      Hi there! Good to see you! I\u0027m Pooh!\\n      What can I do for you?\";","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(greetings);","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"    public static void exitMsg() {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"        String byeMessage \u003d \"      How lucky I am to have something that makes saying goodbye so hard. Bye!\";","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(byeMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"    public static void generalRespond(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"    public static void printTasksMsg(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"        StringBuilder todoListString \u003d new StringBuilder();","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"            String task \u003d String.format(\"      %d. \", i + 1) + taskList.get(i) + \"\\n\";","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"            todoListString.append(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(\"      Here are the tasks in your list:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(todoListString.toString().stripTrailing());","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"    public static void taskDoneMsg(Task task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(\"      Nice! I\u0027ve marked this task as done:\\n      \" + task);","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"    public static void taskUndoneMsg(Task task) {","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(\"      OK, I\u0027ve marked this task as not done yet:\\n      \" + task);","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"Zjinnnn"},"content":"    public static void addTask(List\u003cTask\u003e taskList, String userAction, String cmd) throws EmptyTaskDescriptorsException {","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"Zjinnnn"},"content":"        if (cmd.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"Zjinnnn"},"content":"            throw new EmptyTaskDescriptorsException();","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"Zjinnnn"},"content":"        String userArgs \u003d cmd.split(\" \", 2)[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"Zjinnnn"},"content":"        Task task;","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"Zjinnnn"},"content":"        if (userAction.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"Zjinnnn"},"content":"            task \u003d new Todo(userArgs);","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"Zjinnnn"},"content":"        } else if (userAction.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"Zjinnnn"},"content":"            String[] specificArgs \u003d userArgs.split(\" /by \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"Zjinnnn"},"content":"            String description \u003d specificArgs[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"Zjinnnn"},"content":"            String deadlineTime \u003d specificArgs[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"Zjinnnn"},"content":"            task \u003d new Deadline(description, deadlineTime);","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"Zjinnnn"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"Zjinnnn"},"content":"            String[] specificArgs \u003d userArgs.split(\" /from \", 2);","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"Zjinnnn"},"content":"            String description \u003d specificArgs[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"Zjinnnn"},"content":"            String[] eventTimes \u003d specificArgs[1].split(\" /to \");","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"Zjinnnn"},"content":"            String eventStartTime \u003d eventTimes[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"Zjinnnn"},"content":"            String eventEndTime \u003d eventTimes[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"Zjinnnn"},"content":"            task \u003d new Event(description, eventStartTime, eventEndTime);","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"Zjinnnn"},"content":"        taskList.add(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"Zjinnnn"},"content":"        String addTaskMessage \u003d String.format(\"      Got it. I\u0027ve added this task:\\n          %s\\n      Now you have %d tasks in the list\", task, taskList.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"Zjinnnn"},"content":"        generalRespond(addTaskMessage);","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"Zjinnnn"},"content":"    public static void deleteTask(List\u003cTask\u003e taskList, int index) {","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"Zjinnnn"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"Zjinnnn"},"content":"        taskList.remove(index);","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"Zjinnnn"},"content":"        String delTaskMessage \u003d String.format(\"      Noted. I\u0027ve removed this task:\\n          %s\\n      Now you have %d tasks in the list\", task, taskList.size());","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"Zjinnnn"},"content":"        generalRespond(delTaskMessage);","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"Zjinnnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"Zjinnnn"},"content":"        welcomeMsg();","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"Zjinnnn"},"content":"        List\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":101,"author":{"gitId":"Zjinnnn"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"Zjinnnn"},"content":"        while (userInput.hasNextLine()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":103,"author":{"gitId":"Zjinnnn"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"Zjinnnn"},"content":"                String userCmd \u003d userInput.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":105,"author":{"gitId":"Zjinnnn"},"content":"                String userAction \u003d userCmd.split(\" \")[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"Zjinnnn"},"content":"                if (userAction.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"Zjinnnn"},"content":"                    exitMsg();","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"Zjinnnn"},"content":"                    userInput.close();","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"Zjinnnn"},"content":"                    System.exit(0);","lastModifiedDate":"2023-08-22"},{"lineNumber":110,"author":{"gitId":"Zjinnnn"},"content":"                } else if (userAction.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":111,"author":{"gitId":"Zjinnnn"},"content":"                    printTasksMsg(todoList);","lastModifiedDate":"2023-08-22"},{"lineNumber":112,"author":{"gitId":"Zjinnnn"},"content":"                } else if (userAction.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":113,"author":{"gitId":"Zjinnnn"},"content":"                    int index \u003d Integer.parseInt(userCmd.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"Zjinnnn"},"content":"                    if (index \u003c 0 || index \u003e\u003d todoList.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"Zjinnnn"},"content":"                        throw new InvalidTaskException();","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"Zjinnnn"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"Zjinnnn"},"content":"                    Task task \u003d todoList.get(index);","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"Zjinnnn"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"Zjinnnn"},"content":"                    taskDoneMsg(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"Zjinnnn"},"content":"                } else if (userAction.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":121,"author":{"gitId":"Zjinnnn"},"content":"                    int index \u003d Integer.parseInt(userCmd.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-22"},{"lineNumber":122,"author":{"gitId":"Zjinnnn"},"content":"                    if (index \u003c 0 || index \u003e\u003d todoList.size()) {","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"Zjinnnn"},"content":"                        throw new InvalidTaskException();","lastModifiedDate":"2023-08-22"},{"lineNumber":124,"author":{"gitId":"Zjinnnn"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":125,"author":{"gitId":"Zjinnnn"},"content":"                    Task task \u003d todoList.get(index);","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"Zjinnnn"},"content":"                    task.markAsUndone();","lastModifiedDate":"2023-08-22"},{"lineNumber":127,"author":{"gitId":"Zjinnnn"},"content":"                    taskUndoneMsg(task);","lastModifiedDate":"2023-08-22"},{"lineNumber":128,"author":{"gitId":"Zjinnnn"},"content":"                } else if (userAction.equalsIgnoreCase(\"todo\") || userAction.equalsIgnoreCase(\"event\") || userAction.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"Zjinnnn"},"content":"                    try {","lastModifiedDate":"2023-08-22"},{"lineNumber":130,"author":{"gitId":"Zjinnnn"},"content":"                        addTask(todoList, userAction, userCmd);","lastModifiedDate":"2023-08-22"},{"lineNumber":131,"author":{"gitId":"Zjinnnn"},"content":"                    } catch (EmptyTaskDescriptorsException ex) {","lastModifiedDate":"2023-08-22"},{"lineNumber":132,"author":{"gitId":"Zjinnnn"},"content":"                        generalRespond(ex.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"Zjinnnn"},"content":"                    }","lastModifiedDate":"2023-08-22"},{"lineNumber":134,"author":{"gitId":"Zjinnnn"},"content":"                } else if (userAction.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"Zjinnnn"},"content":"                    int index \u003d Integer.parseInt(userCmd.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"Zjinnnn"},"content":"                    if (index \u003c 0 || index \u003e\u003d todoList.size()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"Zjinnnn"},"content":"                        throw new InvalidTaskException();","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"Zjinnnn"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"Zjinnnn"},"content":"                    deleteTask(todoList, index);","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"Zjinnnn"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":141,"author":{"gitId":"Zjinnnn"},"content":"                    throw new UnrecognizedCommandException();","lastModifiedDate":"2023-08-22"},{"lineNumber":142,"author":{"gitId":"Zjinnnn"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":143,"author":{"gitId":"Zjinnnn"},"content":"            } catch (UnrecognizedCommandException ex) {","lastModifiedDate":"2023-08-22"},{"lineNumber":144,"author":{"gitId":"Zjinnnn"},"content":"                generalRespond(ex.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":145,"author":{"gitId":"Zjinnnn"},"content":"            } catch (InvalidTaskException ex) {","lastModifiedDate":"2023-08-22"},{"lineNumber":146,"author":{"gitId":"Zjinnnn"},"content":"                generalRespond(ex.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":147,"author":{"gitId":"Zjinnnn"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":148,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":149,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":150,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":150}},{"path":"src/main/java/PoohException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"public class PoohException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"    private final String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"        return (isDone ? \"X\" : \" \");    // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":10}},{"path":"src/main/java/UnrecognizedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"public class UnrecognizedCommandException extends PoohException {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"        return \"      ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"todo borrow book","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"unmark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"mark 3","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"mark3","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"Zjinnnn":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"java -classpath ../bin Pooh \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zjinnnn":1,"-":37}}]
