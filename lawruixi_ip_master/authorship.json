[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"# Duchess","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"Duchess is a CLI or GUI app that allows you to keep track of your To-Dos, Deadlines, and Events. You know, like that project documentation you were supposed to finish yesterday, but you got distracted watching cat videos, and promptly forgot. Or, to remind you about the fact that you have an important meeting tomorrow, but you can\u0027t quite remember when it begins or ends, so you don\u0027t know if you need to reschedule lunch. Is this anything like you? If so, Duchess has got you covered!","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"tl;dr Feature List:","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"- Keep track of ToDos!","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"  - These are Tasks with a name attached.","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"- Keep track of Deadlines!","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"  - These are also Tasks with a name and some kind of due-by date attached.","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"- Keep track of Events!","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"  - These are also Tasks with a name, but with some start time and end time.","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"- Mark tasks as completed!","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"- Tag tasks!","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"- Search for tasks!","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"- GUI Application included!","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"  - This is basically the CLI app, but you can see Duchess\u0027 cute face!","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"  - The commands and output are still in CLI format!","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"## Relevant Lore and Character Motivations","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"\u003csummary\u003eLore\u003c/summary\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"(Note: the authenticity and details of this section is up for your own interpretation.)","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"Once upon a time, there existed a developer. This developer was doing what all developers do, which is hole herself up in her room and watch YouTube videos, instead of doing more important stuff like doing work. But then, she realized something that shook her *to the core*.","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"\"Wait,\" she muttered to herself. \"I did submit that assignment due yesterday, right?\"","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"Filled with a growing anxiety in her heart, she pulled up her laptop and accessed her most-frequently-accessed-but-somehow-not-her-favourite-(far-from-it-actually) website, Pandas. It was the learning management system used by her school to keep track of her own homework.","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"Because she didn\u0027t have any other app to do that for her, of course.","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"\"Dang it,\" she cursed, while still somehow managing to maintain being PG-13. \"I didn\u0027t.\"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"The glowing red text \"LATE\" hovered over the homework assignment submission page.","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"Now, dear reader. What do you think this developer did? Did she:","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"- Admonish herself, and then remember to put a reminder for all homework assignments in the future, so she doesn\u0027t miss yet another deadline?","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"- Hurriedly type out an email to the professor, explaining the reasons for her late submission in the hopes that he\u0027d take sympathy on her?","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"- Do... nothing?","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"Whichever you chose, dear reader, it wasn\u0027t looking good for our protagonist.","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"Sighing, she took a look at her assignments for the next week and... oh? What\u0027s this?","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"\"I have to... add features to this incomplete project for a task managing application?\" she asked, stifling a yawn. \"You know what, maybe I *could* use this.\"","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"And, thus, Duchess was born.","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"## Features ","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"The following are a list of features that our beautiful Duchess has to offer:","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"### To-Dos!","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"Duchess allows keeping track of ToDos. To add a ToDo to keep track of, use the following command.","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"$\u003e todo [name]","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"This will add a ToDo with that specified name into Duchess. Note that names only allow for alphanumeric characters and underscores and spaces.","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"### Deadlines!","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"Deadlines are Tasks, or ToDos, but with a specified deadline. This deadline has to be a legal date. To add a Deadline to Duchess, use the following command.","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"$\u003e deadline [name] /by [deadline]","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"lawruixi"},"content":"Note that `deadline` has to be a String in some format that Duchess accepts. (Currently, only one format is accepted, `ISO_LOCAL_DATE`. This the format of `yyyy-MM-dd`. For instance, \"2023-12-30\").","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"lawruixi"},"content":"### Events!","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"lawruixi"},"content":"Events are Tasks, or ToDos, but with a start time and an end time. To add an Event to Duchess, use the following command.","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"lawruixi"},"content":"$\u003e event [name] /from [startTime] /to [endTime]","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"lawruixi"},"content":"For now, Duchess does **no validation** for `startTime` or `endTime`, unlike date validation for Deadlines. Internally, they are ","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"lawruixi"},"content":"represented as a `String`. This means you can type in whatever you want, as long as it only has alphanumeric characters, underscores or spaces.","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"lawruixi"},"content":"### List Tasks!","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"lawruixi"},"content":"To list all currently stored tasks, use the following command:","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"lawruixi"},"content":"$\u003e list","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"lawruixi"},"content":"For Linux users, you may alternatively use the alias `ls`, which does the same thing.","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"lawruixi"},"content":"### Remove Tasks!","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"lawruixi"},"content":"To remove a specific task from the list of tasks, use the following command:","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"lawruixi"},"content":"$\u003e delete [index of task]","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"lawruixi"},"content":"The index of the task is displayed next to the task when `list` is called. ","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"lawruixi"},"content":"Another alias for this command is `rm`, which does the same thing.","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"lawruixi"},"content":"### Search for Tasks!","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"lawruixi"},"content":"Want to find a particular task in your endless list of tasks? Fret no further, for we have the glorious search command:","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"lawruixi"},"content":"$\u003e find [name]","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"lawruixi"},"content":"This finds any tasks whose name contains the search string. For instance, finding \"hello\" will match both \"hello world\" and \"othello with friends\". Spaces are considered as characters.","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"lawruixi"},"content":"### Mark Tasks\u0027 Completion Status!","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"lawruixi"},"content":"Tasks (a ToDo, Deadline or Event) are either *complete* or *incomplete*. By default, when you add a Task, it is automatically *incomplete*. To mark a task as *complete*, use:","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"lawruixi"},"content":"$\u003e mark [index]","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":121,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"lawruixi"},"content":"Once again, the index of the task is displayed next to the task when `list` is called.","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"lawruixi"},"content":"To unmark a task (set it back to *incomplete*), use:","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"lawruixi"},"content":"$\u003e unmark [index]","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":129,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"lawruixi"},"content":"### Add Tags to a Task!","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"lawruixi"},"content":"You can add tags to tasks! This will add a small little #tag next to the task in question.","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"lawruixi"},"content":"$\u003e tag add [index] [tag name] [tag name 2] [tag name 3]","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"lawruixi"},"content":"You can add as many tags as you want in one command by separating them with spaces. This also means that a tag cannot contain a space. If you need multiple word tags, the dash (`-`) character is supported for tag names. All other constraints (alphanumeric or underscores) that apply to Task names also apply for tag names. Placing a hash (`#`) character before the tag name is optional, and does not affect anything.","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"lawruixi"},"content":"An alias for adding a tag is `tag a`, which does the same thing.","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"lawruixi"},"content":"If you need to remove a tag, you can instead use the corresponding command:","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"lawruixi"},"content":"$\u003e tag delete [index] [tag name] [tag name 2] [tag name 3]","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"lawruixi"},"content":"As with adding tags, you can delete as many tags as you want in a single command, separated with spaces. Note that deleting tag names is case-sensitive and must match the corresponding tag exactly. If multiple of the same tag is already attached to one task, all instances of that tag are deleted. As with adding tags, placing a hash (`#`) character before the tag name is purely optional.","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"lawruixi"},"content":"### Exiting","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"lawruixi"},"content":"Just like VIM, Duchess can be a mystery to exit. Thankfully, it\u0027s very easy! All you need to do is wave goodbye to Duchess.","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"lawruixi"},"content":"$\u003e bye","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"lawruixi"},"content":"Alternatively, you could also just tell her `exit`, which is an alias that does the same thing. But that\u0027s kind of rude. So `bye` is the preferred method.","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"lawruixi"},"content":"## Setup","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"lawruixi"},"content":"First, clone this repo;","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"lawruixi"},"content":"$\u003e git clone git@github.com:lawruixi/ip.git","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"lawruixi"},"content":"$\u003e cd ip","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"lawruixi"},"content":"To run the CLI Duchess, I\u0027ve conveniently written a script called `run.sh` that will compile and run Duchess instantly;","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"lawruixi"},"content":"$\u003e ./run.sh","lastModifiedDate":"2023-09-18"},{"lineNumber":168,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"lawruixi"},"content":"If you would like to instead run the GUI Duchess, you can use the provided `build.gradle` build and run it;","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"lawruixi"},"content":"$\u003e ./gradlew clean run","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"lawruixi"},"content":"## Sample Usage","lastModifiedDate":"2023-09-18"},{"lineNumber":176,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":177,"author":{"gitId":"lawruixi"},"content":"### Creating some Tasks, and running operations on them","lastModifiedDate":"2023-09-18"},{"lineNumber":178,"author":{"gitId":"lawruixi"},"content":"After running Duchess via one of the above methods, let\u0027s see Duchess in action. Currently, there should be no tasks yet added. Let\u0027s add a few;","lastModifiedDate":"2023-09-18"},{"lineNumber":179,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":180,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":181,"author":{"gitId":"lawruixi"},"content":"$\u003e deadline Submit Project Proposal for Review /by 2024-01-30","lastModifiedDate":"2023-09-18"},{"lineNumber":182,"author":{"gitId":"lawruixi"},"content":"[D]: ... (Duchess output omitted)","lastModifiedDate":"2023-09-18"},{"lineNumber":183,"author":{"gitId":"lawruixi"},"content":"$\u003e deadline Upgrade Website to new Technology /by 2024-01-30","lastModifiedDate":"2023-09-18"},{"lineNumber":184,"author":{"gitId":"lawruixi"},"content":"[D]: ...","lastModifiedDate":"2023-09-18"},{"lineNumber":185,"author":{"gitId":"lawruixi"},"content":"$\u003e deadline Feed the Dog /by 2024-01-30","lastModifiedDate":"2023-09-18"},{"lineNumber":186,"author":{"gitId":"lawruixi"},"content":"[D]: ...","lastModifiedDate":"2023-09-18"},{"lineNumber":187,"author":{"gitId":"lawruixi"},"content":"$\u003e ls","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":190,"author":{"gitId":"lawruixi"},"content":"This should display a list of all the deadlines we have added so far. ","lastModifiedDate":"2023-09-18"},{"lineNumber":191,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":192,"author":{"gitId":"lawruixi"},"content":"Let\u0027s mark a few tasks as completed. (Productive today, aren\u0027t we?)","lastModifiedDate":"2023-09-18"},{"lineNumber":193,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":194,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":195,"author":{"gitId":"lawruixi"},"content":"$\u003e mark 1","lastModifiedDate":"2023-09-18"},{"lineNumber":196,"author":{"gitId":"lawruixi"},"content":"[D]: ...","lastModifiedDate":"2023-09-18"},{"lineNumber":197,"author":{"gitId":"lawruixi"},"content":"$\u003e mark 3","lastModifiedDate":"2023-09-18"},{"lineNumber":198,"author":{"gitId":"lawruixi"},"content":"[D]: ...","lastModifiedDate":"2023-09-18"},{"lineNumber":199,"author":{"gitId":"lawruixi"},"content":"$\u003e ls","lastModifiedDate":"2023-09-18"},{"lineNumber":200,"author":{"gitId":"lawruixi"},"content":"[D]: ...","lastModifiedDate":"2023-09-18"},{"lineNumber":201,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":202,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":203,"author":{"gitId":"lawruixi"},"content":"We should be able to see that Duchess has put a cute little indicator next to the task to show that it has been completed.","lastModifiedDate":"2023-09-18"},{"lineNumber":204,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":205,"author":{"gitId":"lawruixi"},"content":"Let\u0027s get rid of our backlog now.","lastModifiedDate":"2023-09-18"},{"lineNumber":206,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":207,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":208,"author":{"gitId":"lawruixi"},"content":"$\u003e rm 3 ","lastModifiedDate":"2023-09-18"},{"lineNumber":209,"author":{"gitId":"lawruixi"},"content":"$\u003e rm 2","lastModifiedDate":"2023-09-18"},{"lineNumber":210,"author":{"gitId":"lawruixi"},"content":"$\u003e rm 1","lastModifiedDate":"2023-09-18"},{"lineNumber":211,"author":{"gitId":"lawruixi"},"content":"$\u003e ls","lastModifiedDate":"2023-09-18"},{"lineNumber":212,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":213,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":214,"author":{"gitId":"lawruixi"},"content":"We should see that after clearing our list of tasks, there are indeed no more tasks left on the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":215,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":216,"author":{"gitId":"lawruixi"},"content":"Let\u0027s leave Duchess.","lastModifiedDate":"2023-09-18"},{"lineNumber":217,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":218,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":219,"author":{"gitId":"lawruixi"},"content":"$\u003e bye","lastModifiedDate":"2023-09-18"},{"lineNumber":220,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":221,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":222,"author":{"gitId":"lawruixi"},"content":"Duchess tearfully waves goodbye to us as she exits execution.","lastModifiedDate":"2023-09-18"},{"lineNumber":223,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":224,"author":{"gitId":"lawruixi"},"content":"## Duchess Save Data","lastModifiedDate":"2023-09-18"},{"lineNumber":225,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":226,"author":{"gitId":"lawruixi"},"content":"Duchess data is saved in a file named `data.duchess`. Edit this file at your own risk. This file must be placed in the same directory where the program is run; most of the time, this will be in the root directory.","lastModifiedDate":"2023-09-18"},{"lineNumber":227,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":228,"author":{"gitId":"lawruixi"},"content":"## TODO:","lastModifiedDate":"2023-09-18"},{"lineNumber":229,"author":{"gitId":"lawruixi"},"content":"In the future:","lastModifiedDate":"2023-09-18"},{"lineNumber":230,"author":{"gitId":"lawruixi"},"content":"- Duchess config file (options like aliases)","lastModifiedDate":"2023-09-18"},{"lineNumber":231,"author":{"gitId":"lawruixi"},"content":"- Syntax highlighting","lastModifiedDate":"2023-09-18"},{"lineNumber":232,"author":{"gitId":"lawruixi"},"content":"- Command suggestions","lastModifiedDate":"2023-09-18"},{"lineNumber":233,"author":{"gitId":"lawruixi"},"content":"- Prettier GUI","lastModifiedDate":"2023-09-18"},{"lineNumber":234,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":235,"author":{"gitId":"lawruixi"},"content":"## Acknowledgements","lastModifiedDate":"2023-09-18"},{"lineNumber":236,"author":{"gitId":"lawruixi"},"content":"This developer would like to thank and acknowledge the NUS CS2103T team for giving me the opportunity to do this project in the first place.","lastModifiedDate":"2023-09-18"},{"lineNumber":237,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":238,"author":{"gitId":"lawruixi"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":239,"author":{"gitId":"lawruixi"},"content":"\u003csummary\u003e Detailed Acknowledgements \u003c/summary\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":240,"author":{"gitId":"lawruixi"},"content":"  ","lastModifiedDate":"2023-09-18"},{"lineNumber":241,"author":{"gitId":"lawruixi"},"content":"In no particular order:","lastModifiedDate":"2023-09-18"},{"lineNumber":242,"author":{"gitId":"lawruixi"},"content":"---","lastModifiedDate":"2023-09-18"},{"lineNumber":243,"author":{"gitId":"lawruixi"},"content":"- NUS CS2103T teaching team","lastModifiedDate":"2023-09-18"},{"lineNumber":244,"author":{"gitId":"lawruixi"},"content":"- SE-EDU for providing tips and code for JavaFX, even if I knew them already; it was a great refresher.","lastModifiedDate":"2023-09-18"},{"lineNumber":245,"author":{"gitId":"lawruixi"},"content":"- GitHub for serving as the remote git repository for this project.","lastModifiedDate":"2023-09-18"},{"lineNumber":246,"author":{"gitId":"lawruixi"},"content":"---","lastModifiedDate":"2023-09-18"},{"lineNumber":247,"author":{"gitId":"lawruixi"},"content":"- **No IDEs were used in the making of this project, from start to finish.**","lastModifiedDate":"2023-09-18"},{"lineNumber":248,"author":{"gitId":"lawruixi"},"content":"- Vim, for being my trusty text editor and allowing me to work 100x faster than I would via an IDE.","lastModifiedDate":"2023-09-18"},{"lineNumber":249,"author":{"gitId":"lawruixi"},"content":"- Git, the awesome version control software.","lastModifiedDate":"2023-09-18"},{"lineNumber":250,"author":{"gitId":"lawruixi"},"content":"- Gradle, for helping automate some minor things.","lastModifiedDate":"2023-09-18"},{"lineNumber":251,"author":{"gitId":"lawruixi"},"content":"- Bash, for the script that automated other things, and for being easier to use than Gradle.","lastModifiedDate":"2023-09-18"},{"lineNumber":252,"author":{"gitId":"lawruixi"},"content":"- SceneBuilder, for helping me visualize the end product of the GUI, even if it was janky to use.","lastModifiedDate":"2023-09-18"},{"lineNumber":253,"author":{"gitId":"lawruixi"},"content":"- Regex, for being my String analyser of choice.","lastModifiedDate":"2023-09-18"},{"lineNumber":254,"author":{"gitId":"lawruixi"},"content":"- Regex101, for being my Regex analyser of choice.","lastModifiedDate":"2023-09-18"},{"lineNumber":255,"author":{"gitId":"lawruixi"},"content":"- The Java language that this was built on, including the JDK, JRE and JavaFX packages.","lastModifiedDate":"2023-09-18"},{"lineNumber":256,"author":{"gitId":"lawruixi"},"content":"- paint.net, where I drew the user\u0027s and Duchess\u0027s beautiful face.","lastModifiedDate":"2023-09-18"},{"lineNumber":257,"author":{"gitId":"lawruixi"},"content":"---","lastModifiedDate":"2023-09-18"},{"lineNumber":258,"author":{"gitId":"lawruixi"},"content":"- You, for reading this, and for trying out my small little project.","lastModifiedDate":"2023-09-18"},{"lineNumber":259,"author":{"gitId":"lawruixi"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":260,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":261,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":262,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":263,"author":{"gitId":"lawruixi"},"content":"That\u0027s all from me for now. What\u0027s that? I should plug myself shamelessly here? Don\u0027t mind if I--","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":257,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"    mainClass.set(\"duchess.Launcher\")","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"    archiveBaseName \u003d \"duchess\"","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lawruixi":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"# Duchess","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"Duchess is a CLI or GUI app that allows you to keep track of your To-Dos, Deadlines, and Events. You know, like that project documentation you were supposed to finish yesterday, but you got distracted watching cat videos, and promptly forgot. Or, to remind you about the fact that you have an important meeting tomorrow, but you can\u0027t quite remember when it begins or ends, so you don\u0027t know if you need to reschedule lunch. Is this anything like you? If so, Duchess has got you covered!","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"tl;dr Feature List:","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"- Keep track of ToDos!","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"  - These are Tasks with a name attached.","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"- Keep track of Deadlines!","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"  - These are also Tasks with a name and some kind of due-by date attached.","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"- Keep track of Events!","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"  - These are also Tasks with a name, but with some start time and end time.","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"- Mark tasks as completed!","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"- Tag tasks!","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"- Search for tasks!","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"- GUI Application included!","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"  - This is basically the CLI app, but you can see Duchess\u0027 cute face!","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"  - The commands and output are still in CLI format!","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"## Relevant Lore and Character Motivations","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"\u003csummary\u003eLore\u003c/summary\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"(Note: the authenticity and details of this section is up for your own interpretation.)","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"Once upon a time, there existed a developer. This developer was doing what all developers do, which is hole herself up in her room and watch YouTube videos, instead of doing more important stuff like doing work. But then, she realized something that shook her *to the core*.","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"\"Wait,\" she muttered to herself. \"I did submit that assignment due yesterday, right?\"","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"Filled with a growing anxiety in her heart, she pulled up her laptop and accessed her most-frequently-accessed-but-somehow-not-her-favourite-(far-from-it-actually) website, Pandas. It was the learning management system used by her school to keep track of her own homework.","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"Because she didn\u0027t have any other app to do that for her, of course.","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"\"Dang it,\" she cursed, while still somehow managing to maintain being PG-13. \"I didn\u0027t.\"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"The glowing red text \"LATE\" hovered over the homework assignment submission page.","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"Now, dear reader. What do you think this developer did? Did she:","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"- Admonish herself, and then remember to put a reminder for all homework assignments in the future, so she doesn\u0027t miss yet another deadline?","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"- Hurriedly type out an email to the professor, explaining the reasons for her late submission in the hopes that he\u0027d take sympathy on her?","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"- Do... nothing?","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"Whichever you chose, dear reader, it wasn\u0027t looking good for our protagonist.","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"Sighing, she took a look at her assignments for the next week and... oh? What\u0027s this?","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"\"I have to... add features to this incomplete project for a task managing application?\" she asked, stifling a yawn. \"You know what, maybe I *could* use this.\"","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"And, thus, Duchess was born.","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"The following are a list of features that our beautiful Duchess has to offer:","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"### To-Dos!","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"Duchess allows keeping track of ToDos. To add a ToDo to keep track of, use the following command.","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"$\u003e todo [name]","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"This will add a ToDo with that specified name into Duchess. Note that names only allow for alphanumeric characters and underscores and spaces.","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"### Deadlines!","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"Deadlines are Tasks, or ToDos, but with a specified deadline. This deadline has to be a legal date. To add a Deadline to Duchess, use the following command.","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"$\u003e deadline [name] /by [deadline]","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"lawruixi"},"content":"Note that `deadline` has to be a String in some format that Duchess accepts. (Currently, only one format is accepted, `ISO_LOCAL_DATE`. This the format of `yyyy-MM-dd`. For instance, \"2023-12-30\").","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"lawruixi"},"content":"### Events!","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"lawruixi"},"content":"Events are Tasks, or ToDos, but with a start time and an end time. To add an Event to Duchess, use the following command.","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"lawruixi"},"content":"$\u003e event [name] /from [startTime] /to [endTime]","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"lawruixi"},"content":"For now, Duchess does **no validation** for `startTime` or `endTime`, unlike date validation for Deadlines. Internally, they are ","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"lawruixi"},"content":"represented as a `String`. This means you can type in whatever you want, as long as it only has alphanumeric characters, underscores or spaces.","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":85,"author":{"gitId":"lawruixi"},"content":"### List Tasks!","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"lawruixi"},"content":"To list all currently stored tasks, use the following command:","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"lawruixi"},"content":"$\u003e list","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"lawruixi"},"content":"For Linux users, you may alternatively use the alias `ls`, which does the same thing.","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"lawruixi"},"content":"### Remove Tasks!","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"lawruixi"},"content":"To remove a specific task from the list of tasks, use the following command:","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"lawruixi"},"content":"$\u003e delete [index of task]","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"lawruixi"},"content":"The index of the task is displayed next to the task when `list` is called. ","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"lawruixi"},"content":"Another alias for this command is `rm`, which does the same thing.","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"lawruixi"},"content":"### Search for Tasks!","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"lawruixi"},"content":"Want to find a particular task in your endless list of tasks? Fret no further, for we have the glorious search command:","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"lawruixi"},"content":"$\u003e find [name]","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"lawruixi"},"content":"This finds any tasks whose name contains the search string. For instance, finding \"hello\" will match both \"hello world\" and \"othello with friends\". Spaces are considered as characters.","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"lawruixi"},"content":"### Mark Tasks\u0027 Completion Status!","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"lawruixi"},"content":"Tasks (a ToDo, Deadline or Event) are either *complete* or *incomplete*. By default, when you add a Task, it is automatically *incomplete*. To mark a task as *complete*, use:","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"lawruixi"},"content":"$\u003e mark [index]","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"lawruixi"},"content":"Once again, the index of the task is displayed next to the task when `list` is called.","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"lawruixi"},"content":"To unmark a task (set it back to *incomplete*), use:","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"lawruixi"},"content":"$\u003e unmark [index]","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":129,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"lawruixi"},"content":"### Add Tags to a Task!","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"lawruixi"},"content":"You can add tags to tasks! This will add a small little #tag next to the task in question.","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"lawruixi"},"content":"$\u003e tag add [index] [tag name] [tag name 2] [tag name 3]","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"lawruixi"},"content":"You can add as many tags as you want in one command by separating them with spaces. This also means that a tag cannot contain a space. If you need multiple word tags, the dash (`-`) character is supported for tag names. All other constraints (alphanumeric or underscores) that apply to Task names also apply for tag names. Placing a hash (`#`) character before the tag name is optional, and does not affect anything.","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"lawruixi"},"content":"An alias for adding a tag is `tag a`, which does the same thing.","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"lawruixi"},"content":"If you need to remove a tag, you can instead use the corresponding command:","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"lawruixi"},"content":"$\u003e tag delete [index] [tag name] [tag name 2] [tag name 3]","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"lawruixi"},"content":"As with adding tags, you can delete as many tags as you want in a single command, separated with spaces. Note that deleting tag names is case-sensitive and must match the corresponding tag exactly. If multiple of the same tag is already attached to one task, all instances of that tag are deleted. As with adding tags, placing a hash (`#`) character before the tag name is purely optional.","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"lawruixi"},"content":"### Exiting","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"lawruixi"},"content":"Just like VIM, Duchess can be a mystery to exit. Thankfully, it\u0027s very easy! All you need to do is wave goodbye to Duchess.","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"lawruixi"},"content":"$\u003e bye","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"lawruixi"},"content":"Alternatively, you could also just tell her `exit`, which is an alias that does the same thing. But that\u0027s kind of rude. So `bye` is the preferred method.","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"lawruixi"},"content":"## Setup","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"lawruixi"},"content":"First, clone this repo;","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"lawruixi"},"content":"$\u003e git clone git@github.com:lawruixi/ip.git","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"lawruixi"},"content":"$\u003e cd ip","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"lawruixi"},"content":"To run the CLI Duchess, I\u0027ve conveniently written a script called `run.sh` that will compile and run Duchess instantly;","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"lawruixi"},"content":"$\u003e ./run.sh","lastModifiedDate":"2023-09-18"},{"lineNumber":168,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"lawruixi"},"content":"If you would like to instead run the GUI Duchess, you can use the provided `build.gradle` build and run it;","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"lawruixi"},"content":"$\u003e ./gradlew clean run","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"lawruixi"},"content":"## Sample Usage","lastModifiedDate":"2023-09-18"},{"lineNumber":176,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":177,"author":{"gitId":"lawruixi"},"content":"### Creating some Tasks, and running operations on them","lastModifiedDate":"2023-09-18"},{"lineNumber":178,"author":{"gitId":"lawruixi"},"content":"After running Duchess via one of the above methods, let\u0027s see Duchess in action. Currently, there should be no tasks yet added. Let\u0027s add a few;","lastModifiedDate":"2023-09-18"},{"lineNumber":179,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":180,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":181,"author":{"gitId":"lawruixi"},"content":"$\u003e deadline Submit Project Proposal for Review /by 2024-01-30","lastModifiedDate":"2023-09-18"},{"lineNumber":182,"author":{"gitId":"lawruixi"},"content":"[D]: ... (Duchess output omitted)","lastModifiedDate":"2023-09-18"},{"lineNumber":183,"author":{"gitId":"lawruixi"},"content":"$\u003e deadline Upgrade Website to new Technology /by 2024-01-30","lastModifiedDate":"2023-09-18"},{"lineNumber":184,"author":{"gitId":"lawruixi"},"content":"[D]: ...","lastModifiedDate":"2023-09-18"},{"lineNumber":185,"author":{"gitId":"lawruixi"},"content":"$\u003e deadline Feed the Dog /by 2024-01-30","lastModifiedDate":"2023-09-18"},{"lineNumber":186,"author":{"gitId":"lawruixi"},"content":"[D]: ...","lastModifiedDate":"2023-09-18"},{"lineNumber":187,"author":{"gitId":"lawruixi"},"content":"$\u003e ls","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":190,"author":{"gitId":"lawruixi"},"content":"This should display a list of all the deadlines we have added so far. ","lastModifiedDate":"2023-09-18"},{"lineNumber":191,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":192,"author":{"gitId":"lawruixi"},"content":"Let\u0027s mark a few tasks as completed. (Productive today, aren\u0027t we?)","lastModifiedDate":"2023-09-18"},{"lineNumber":193,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":194,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":195,"author":{"gitId":"lawruixi"},"content":"$\u003e mark 1","lastModifiedDate":"2023-09-18"},{"lineNumber":196,"author":{"gitId":"lawruixi"},"content":"[D]: ...","lastModifiedDate":"2023-09-18"},{"lineNumber":197,"author":{"gitId":"lawruixi"},"content":"$\u003e mark 3","lastModifiedDate":"2023-09-18"},{"lineNumber":198,"author":{"gitId":"lawruixi"},"content":"[D]: ...","lastModifiedDate":"2023-09-18"},{"lineNumber":199,"author":{"gitId":"lawruixi"},"content":"$\u003e ls","lastModifiedDate":"2023-09-18"},{"lineNumber":200,"author":{"gitId":"lawruixi"},"content":"[D]: ...","lastModifiedDate":"2023-09-18"},{"lineNumber":201,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":202,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":203,"author":{"gitId":"lawruixi"},"content":"We should be able to see that Duchess has put a cute little indicator next to the task to show that it has been completed.","lastModifiedDate":"2023-09-18"},{"lineNumber":204,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":205,"author":{"gitId":"lawruixi"},"content":"Let\u0027s get rid of our backlog now.","lastModifiedDate":"2023-09-18"},{"lineNumber":206,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":207,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":208,"author":{"gitId":"lawruixi"},"content":"$\u003e rm 3 ","lastModifiedDate":"2023-09-18"},{"lineNumber":209,"author":{"gitId":"lawruixi"},"content":"$\u003e rm 2","lastModifiedDate":"2023-09-18"},{"lineNumber":210,"author":{"gitId":"lawruixi"},"content":"$\u003e rm 1","lastModifiedDate":"2023-09-18"},{"lineNumber":211,"author":{"gitId":"lawruixi"},"content":"$\u003e ls","lastModifiedDate":"2023-09-18"},{"lineNumber":212,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":213,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":214,"author":{"gitId":"lawruixi"},"content":"We should see that after clearing our list of tasks, there are indeed no more tasks left on the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":215,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":216,"author":{"gitId":"lawruixi"},"content":"Let\u0027s leave Duchess.","lastModifiedDate":"2023-09-18"},{"lineNumber":217,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":218,"author":{"gitId":"lawruixi"},"content":"```bash","lastModifiedDate":"2023-09-18"},{"lineNumber":219,"author":{"gitId":"lawruixi"},"content":"$\u003e bye","lastModifiedDate":"2023-09-18"},{"lineNumber":220,"author":{"gitId":"lawruixi"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":221,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":222,"author":{"gitId":"lawruixi"},"content":"Duchess tearfully waves goodbye to us as she exits execution.","lastModifiedDate":"2023-09-18"},{"lineNumber":223,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":224,"author":{"gitId":"lawruixi"},"content":"## Duchess Save Data","lastModifiedDate":"2023-09-18"},{"lineNumber":225,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":226,"author":{"gitId":"lawruixi"},"content":"Duchess data is saved in a file named `data.duchess`. Edit this file at your own risk. This file must be placed in the same directory where the program is run; most of the time, this will be in the root directory.","lastModifiedDate":"2023-09-18"},{"lineNumber":227,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":228,"author":{"gitId":"lawruixi"},"content":"## TODO:","lastModifiedDate":"2023-09-18"},{"lineNumber":229,"author":{"gitId":"lawruixi"},"content":"In the future:","lastModifiedDate":"2023-09-18"},{"lineNumber":230,"author":{"gitId":"lawruixi"},"content":"- Duchess config file (options like aliases)","lastModifiedDate":"2023-09-18"},{"lineNumber":231,"author":{"gitId":"lawruixi"},"content":"- Syntax highlighting","lastModifiedDate":"2023-09-18"},{"lineNumber":232,"author":{"gitId":"lawruixi"},"content":"- Command suggestions","lastModifiedDate":"2023-09-18"},{"lineNumber":233,"author":{"gitId":"lawruixi"},"content":"- Prettier GUI","lastModifiedDate":"2023-09-18"},{"lineNumber":234,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":235,"author":{"gitId":"lawruixi"},"content":"## Acknowledgements","lastModifiedDate":"2023-09-18"},{"lineNumber":236,"author":{"gitId":"lawruixi"},"content":"This developer would like to thank and acknowledge the NUS CS2103T team for giving me the opportunity to do this project in the first place.","lastModifiedDate":"2023-09-18"},{"lineNumber":237,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":238,"author":{"gitId":"lawruixi"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":239,"author":{"gitId":"lawruixi"},"content":"\u003csummary\u003e Detailed Acknowledgements \u003c/summary\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":240,"author":{"gitId":"lawruixi"},"content":"In no particular order:","lastModifiedDate":"2023-09-18"},{"lineNumber":241,"author":{"gitId":"lawruixi"},"content":"---","lastModifiedDate":"2023-09-18"},{"lineNumber":242,"author":{"gitId":"lawruixi"},"content":"- NUS CS2103T teaching team","lastModifiedDate":"2023-09-18"},{"lineNumber":243,"author":{"gitId":"lawruixi"},"content":"- SE-EDU for providing tips and code for JavaFX, even if I knew them already; it was a great refresher.","lastModifiedDate":"2023-09-18"},{"lineNumber":244,"author":{"gitId":"lawruixi"},"content":"- GitHub for serving as the remote git repository for this project.","lastModifiedDate":"2023-09-18"},{"lineNumber":245,"author":{"gitId":"lawruixi"},"content":"---","lastModifiedDate":"2023-09-18"},{"lineNumber":246,"author":{"gitId":"lawruixi"},"content":"- **No IDEs were used in the making of this project, from start to finish.**","lastModifiedDate":"2023-09-18"},{"lineNumber":247,"author":{"gitId":"lawruixi"},"content":"- Vim, for being my trusty text editor and allowing me to work 100x faster than I would via an IDE.","lastModifiedDate":"2023-09-18"},{"lineNumber":248,"author":{"gitId":"lawruixi"},"content":"- Git, the awesome version control software.","lastModifiedDate":"2023-09-18"},{"lineNumber":249,"author":{"gitId":"lawruixi"},"content":"- Gradle, for helping automate some minor things.","lastModifiedDate":"2023-09-18"},{"lineNumber":250,"author":{"gitId":"lawruixi"},"content":"- Bash, for the script that automated other things, and for being easier to use than Gradle.","lastModifiedDate":"2023-09-18"},{"lineNumber":251,"author":{"gitId":"lawruixi"},"content":"- SceneBuilder, for helping me visualize the end product of the GUI, even if it was janky to use.","lastModifiedDate":"2023-09-18"},{"lineNumber":252,"author":{"gitId":"lawruixi"},"content":"- Regex, for being my String analyser of choice.","lastModifiedDate":"2023-09-18"},{"lineNumber":253,"author":{"gitId":"lawruixi"},"content":"- Regex101, for being my Regex analyser of choice.","lastModifiedDate":"2023-09-18"},{"lineNumber":254,"author":{"gitId":"lawruixi"},"content":"- The Java language that this was built on, including the JDK, JRE and JavaFX packages.","lastModifiedDate":"2023-09-18"},{"lineNumber":255,"author":{"gitId":"lawruixi"},"content":"- paint.net, where I drew the user\u0027s and Duchess\u0027s beautiful face.","lastModifiedDate":"2023-09-18"},{"lineNumber":256,"author":{"gitId":"lawruixi"},"content":"---","lastModifiedDate":"2023-09-18"},{"lineNumber":257,"author":{"gitId":"lawruixi"},"content":"- You, for reading this, and for trying out my small little project.","lastModifiedDate":"2023-09-18"},{"lineNumber":258,"author":{"gitId":"lawruixi"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":259,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":260,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":261,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":262,"author":{"gitId":"lawruixi"},"content":"That\u0027s all from me for now. What\u0027s that? I should plug myself shamelessly here? Don\u0027t mind if I--","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":244,"-":18}},{"path":"run.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"cd src/main/java/duchess/","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"javac command/*.java Deadline.java Duchess.java DuchessException.java Event.java Parser.java Storage.java Task.java TaskList.java TaskStatus.java ToDo.java Ui.java Utility.java","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"cd ../../../..","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"java -cp src/main/java/ duchess/Duchess","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"rm src/main/java/duchess/command/*.class","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"rm src/main/java/duchess/*.class","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":6}},{"path":"src/main/java/duchess/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":" * A deadline is a Task but with a deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"     * Creates a new Deadline instance with the provided name, deadline and status.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"     * @param name              - the name of the Deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     * @param deadline          - the deadline in String format.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     * @param status            - the current task status of the Deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if the deadlineString is not in a recongnized Date format.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"    public Deadline(String name, String deadlineString, TaskStatus status) throws DuchessException {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"        super(name, status);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"        this.deadline \u003d Utility.parseDateString(deadlineString);","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"     * Creates a new Deadline instance with the provided name and deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"     * The status will be the default status in Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"     * @param name              - the name of the Deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"     * @param deadline          - the deadline in String format.","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if the deadlineString is not in a recongnized Date format.","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"    public Deadline(String name, String deadlineString) throws DuchessException {","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"        this.deadline \u003d Utility.parseDateString(deadlineString);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"     * Returns the String representation of this Deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"     * @return the String representation of this Deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"    public String mainString() {","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"        return String.format(\"[D] %s (by: %s)\", super.mainString(), this.deadline);","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"     * Returns the String representation of this Deadline, for the purposes of saving.","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"     * @return the String representation of this Deadline.","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"        String saveString \u003d String.format(\"D|%s|by:%s|\", super.toSaveString(), this.deadline);","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"        ","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"        for (String tag : this.tags) {","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"            saveString +\u003d String.format(\"#%s|\", tag);","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"        saveString \u003d saveString.substring(0, saveString.length() - 1);","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"        return saveString;","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"     * Returns a new Deadline from a Save String.","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"lawruixi"},"content":"     * @return the Deadline that this String is represented by, or null if the Deadline string is ill-formatted.","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"lawruixi"},"content":"    public static Deadline fromSaveString(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"lawruixi"},"content":"        String[] splitString \u003d s.split(Task.SAVE_STRING_DELIMITER);","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"lawruixi"},"content":"        TaskStatus taskStatus \u003d TaskStatus.UNMARKED;","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"lawruixi"},"content":"        String name \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"lawruixi"},"content":"        String deadlineString \u003d \"\";","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"lawruixi"},"content":"        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"lawruixi"},"content":"        if (Integer.parseInt(splitString[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"lawruixi"},"content":"            taskStatus \u003d TaskStatus.MARKED;","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"lawruixi"},"content":"        name \u003d splitString[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"lawruixi"},"content":"        if (splitString[3].startsWith(\"by:\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"lawruixi"},"content":"            deadlineString \u003d splitString[3].substring(3);","lastModifiedDate":"2023-09-16"},{"lineNumber":90,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":92,"author":{"gitId":"lawruixi"},"content":"        for (int i \u003d 4; i \u003c splitString.length; i++) {","lastModifiedDate":"2023-09-16"},{"lineNumber":93,"author":{"gitId":"lawruixi"},"content":"            String dataString \u003d splitString[i];","lastModifiedDate":"2023-09-16"},{"lineNumber":94,"author":{"gitId":"lawruixi"},"content":"            ","lastModifiedDate":"2023-09-16"},{"lineNumber":95,"author":{"gitId":"lawruixi"},"content":"            if (dataString.startsWith(\"#\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":96,"author":{"gitId":"lawruixi"},"content":"                tags.add(dataString.substring(1));","lastModifiedDate":"2023-09-16"},{"lineNumber":97,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":98,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":99,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"lawruixi"},"content":"            Deadline deadline \u003d new Deadline(name, deadlineString, taskStatus);","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"lawruixi"},"content":"            ","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"lawruixi"},"content":"            for (String tag : tags) {","lastModifiedDate":"2023-09-16"},{"lineNumber":104,"author":{"gitId":"lawruixi"},"content":"                deadline.addTag(tag);","lastModifiedDate":"2023-09-16"},{"lineNumber":105,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":106,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":107,"author":{"gitId":"lawruixi"},"content":"            return deadline;","lastModifiedDate":"2023-09-16"},{"lineNumber":108,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":109,"author":{"gitId":"lawruixi"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"lawruixi"},"content":"            return null;","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lawruixi":113}},{"path":"src/main/java/duchess/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindowController.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"    private void flip() {","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"        setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"    public static DialogBox getDuchessDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"        db.flip();","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"        return db;","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lawruixi":61}},{"path":"src/main/java/duchess/Duchess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.command.Command;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.command.CommandType;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":" * The main class used to execute Duchess actions.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"public class Duchess {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"     * Name for the Duchess AI.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"    public final String NAME \u003d \"Duchess\";","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * An ArrayList to store text in.","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"    private TaskList storedTasks \u003d new TaskList();","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"     * Callback handler, executed after any command is executed.","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"     * Accepts a string, the String that Duchess prints out.","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"    private Consumer\u003cString\u003e callbackHandler \u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"    public void setCallbackHandler(Consumer\u003cString\u003e callback) {","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"        this.callbackHandler \u003d callback;","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"     * Executes the callback handler assigned to this Duchess if it is not null.","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"     * @param s - the String to pass to the callback handler.","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"    private void executeCallbackHandler(String s) {","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"        if (this.callbackHandler !\u003d null) {","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"            this.callbackHandler.accept(s);","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"     * Attempts to parse and execute the user input as a Duchess command.","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the user\u0027s input.","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"    public void parseUserInput(String userInput) {","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"        Command command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"        String output \u003d command.execute(userInput, this.storedTasks);","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"        this.executeCallbackHandler(output);","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"    public void run() {","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"        this.executeCallbackHandler(Ui.printGreeting());","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"        this.loadTasks();","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"        while (!Parser.isExitCommand(userInput)) {","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"lawruixi"},"content":"            System.out.println();","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"            System.out.print(\"$\u003e  \");","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"lawruixi"},"content":"            userInput \u003d sc.nextLine().trim();","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"            System.out.println();","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"            // Check if this command is an exit.","lastModifiedDate":"2023-09-16"},{"lineNumber":71,"author":{"gitId":"lawruixi"},"content":"            if (Parser.isExitCommand(userInput)) {","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"lawruixi"},"content":"                break;","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-14"},{"lineNumber":74,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":75,"author":{"gitId":"lawruixi"},"content":"            parseUserInput(userInput);","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"lawruixi"},"content":"        sc.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"lawruixi"},"content":"        // Save the tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"lawruixi"},"content":"        this.saveTasks();","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"lawruixi"},"content":"        this.executeCallbackHandler(Ui.printFarewell());","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"lawruixi"},"content":"    public void saveTasks() {","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"lawruixi"},"content":"        Storage.saveTasksToFile(this.storedTasks);","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":90,"author":{"gitId":"lawruixi"},"content":"    public void loadTasks() {","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"lawruixi"},"content":"        // Create the save file, if it does not exist.","lastModifiedDate":"2023-09-16"},{"lineNumber":92,"author":{"gitId":"lawruixi"},"content":"        Storage.createSaveFile();","lastModifiedDate":"2023-09-16"},{"lineNumber":93,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":94,"author":{"gitId":"lawruixi"},"content":"        // Load tasks from the save file.","lastModifiedDate":"2023-09-16"},{"lineNumber":95,"author":{"gitId":"lawruixi"},"content":"        this.storedTasks \u003d Storage.loadTasksFromFile();","lastModifiedDate":"2023-09-16"},{"lineNumber":96,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":97,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":98,"author":{"gitId":"lawruixi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-16"},{"lineNumber":99,"author":{"gitId":"lawruixi"},"content":"        Duchess duchess \u003d new Duchess();","lastModifiedDate":"2023-09-16"},{"lineNumber":100,"author":{"gitId":"lawruixi"},"content":"        duchess.setCallbackHandler((s) -\u003e System.out.println(s));","lastModifiedDate":"2023-09-16"},{"lineNumber":101,"author":{"gitId":"lawruixi"},"content":"        duchess.run();","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lawruixi":103}},{"path":"src/main/java/duchess/DuchessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"public class DuchessException extends Throwable {","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"    private String message;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"     * Creates a new DuchessException with the given message.","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"     * @param message - the message for the DuchessException.","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"    DuchessException(String message) {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"     * Returns the message of this exception.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     * @return the message for this Exception.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"        return this.message;","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lawruixi":24}},{"path":"src/main/java/duchess/DuchessGUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":" * The main class used to execute Duchess actions.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"public class DuchessGUI {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"    ","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"    private Duchess duchess;","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"    private String responseString \u003d \"\";","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"    public DuchessGUI() {","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"        this.duchess \u003d new Duchess();","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"        this.duchess.setCallbackHandler((s) -\u003e {","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"            this.responseString \u003d s;","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"        });","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"    public void saveTasks() {","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"        this.duchess.saveTasks();","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"    public void loadTasks() {","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"        this.duchess.loadTasks();","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"     * Returns, as a String, the response of DuchessGUI when a user input command is given.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the user\u0027s input.","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"     * @return            the DuchessGUI\u0027s reponse.","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"        this.duchess.parseUserInput(userInput);","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"        return this.responseString;","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lawruixi":40}},{"path":"src/main/java/duchess/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"    private String startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"    private String endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"     * Creates a new Event instance with the provided name, start time, end time and status.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"     * @param name      - the name of the Event.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"     * @param startTime - the startTime in String format.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"     * @param endTime   - the endTime in String format.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"     * @param status    - the current task status of the Event.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"    public Event(String name, String startTime, String endTime, TaskStatus status) {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"        super(name, status);","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"     * Creates a new Event instance with the provided name, start time, end time and status. The status","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"     * will be the default status in Task.","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"     * @param name      - the name of the Event.","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"     * @param startTime - the startTime in String format.","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"     * @param endTime   - the endTime in String format.","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"    public Event(String name, String startTime, String endTime) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"     * Returns the String representation of this Event.","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"     * @return the String representation of this Event.","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"    public String mainString() {","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"        return String.format(\"[E] %s (from: %s to: %s)\", super.mainString(), this.startTime, this.endTime);","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"     * Returns the String representation of this Event, for the purposes of saving.","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"     * @return the String representation of this Event.","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"        String saveString \u003d String.format(\"E|%s|from:%s|to:%s|\", super.toSaveString(), this.startTime, this.endTime);","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"        for (String tag : this.tags) {","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"            saveString +\u003d String.format(\"#%s|\", tag);","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"        saveString \u003d saveString.substring(0, saveString.length() - 1);","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"        return saveString;","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"     * Returns a new Event from a Save String.","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"     * @return the Event that this String is represented by.","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"lawruixi"},"content":"    public static Event fromSaveString(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"lawruixi"},"content":"        String[] splitString \u003d s.split(Task.SAVE_STRING_DELIMITER);","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"lawruixi"},"content":"        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-17"},{"lineNumber":75,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"lawruixi"},"content":"        TaskStatus taskStatus \u003d TaskStatus.UNMARKED;","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"lawruixi"},"content":"        String name \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"lawruixi"},"content":"        String startTime \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"lawruixi"},"content":"        String endTime \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"lawruixi"},"content":"        if (Integer.parseInt(splitString[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"lawruixi"},"content":"            taskStatus \u003d TaskStatus.MARKED;","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"lawruixi"},"content":"        name \u003d splitString[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"lawruixi"},"content":"        if (splitString[3].startsWith(\"from:\")) {","lastModifiedDate":"2023-09-17"},{"lineNumber":88,"author":{"gitId":"lawruixi"},"content":"            startTime \u003d splitString[3].substring(5);","lastModifiedDate":"2023-09-17"},{"lineNumber":89,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":91,"author":{"gitId":"lawruixi"},"content":"        if (splitString[4].startsWith(\"to:\")) {","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"lawruixi"},"content":"            endTime \u003d splitString[4].substring(3);","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"lawruixi"},"content":"        for (int i \u003d 5; i \u003c splitString.length; i++) {","lastModifiedDate":"2023-09-17"},{"lineNumber":96,"author":{"gitId":"lawruixi"},"content":"            String dataString \u003d splitString[i];","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"lawruixi"},"content":"            ","lastModifiedDate":"2023-09-17"},{"lineNumber":98,"author":{"gitId":"lawruixi"},"content":"            if (dataString.startsWith(\"#\")) {","lastModifiedDate":"2023-09-17"},{"lineNumber":99,"author":{"gitId":"lawruixi"},"content":"                tags.add(dataString.substring(1));","lastModifiedDate":"2023-09-17"},{"lineNumber":100,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":101,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":102,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":103,"author":{"gitId":"lawruixi"},"content":"        Event event \u003d new Event(name, startTime, endTime, taskStatus);","lastModifiedDate":"2023-09-17"},{"lineNumber":104,"author":{"gitId":"lawruixi"},"content":"        ","lastModifiedDate":"2023-09-17"},{"lineNumber":105,"author":{"gitId":"lawruixi"},"content":"        for (String tag : tags) {","lastModifiedDate":"2023-09-17"},{"lineNumber":106,"author":{"gitId":"lawruixi"},"content":"            event.addTag(tag);","lastModifiedDate":"2023-09-17"},{"lineNumber":107,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":108,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":109,"author":{"gitId":"lawruixi"},"content":"        return event;","lastModifiedDate":"2023-09-17"},{"lineNumber":110,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lawruixi":111}},{"path":"src/main/java/duchess/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"public class Launcher {","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lawruixi":13}},{"path":"src/main/java/duchess/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"    private DuchessGUI duchessGUI \u003d new DuchessGUI();","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"    private FXMLLoader duchessGUILoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"            duchessGUILoader \u003d new FXMLLoader(Main.class.getResource(\"/view/Duchess.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"            VBox vb \u003d duchessGUILoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"            Scene scene \u003d new Scene(vb);","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"            duchessGUILoader.\u003cMainWindowController\u003egetController().setDuchessGUI(duchessGUI);","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"            duchessGUILoader.\u003cMainWindowController\u003egetController().loadTasksFromFile();","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"            stage.show();","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"    public void stop() {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"        duchessGUILoader.\u003cMainWindowController\u003egetController().saveTasksToFile();","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lawruixi":42}},{"path":"src/main/java/duchess/MainWindowController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"public class MainWindowController extends VBox {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"    private Image userImage  \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"    private Image duchessImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duchess.png\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"    ScrollPane scrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"    VBox chat_vbox; ","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    TextField userinput_textfield;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"    private DuchessGUI duchessGUI;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"    public void setDuchessGUI(DuchessGUI dGUI) {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"        this.duchessGUI \u003d dGUI;","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"    public void loadTasksFromFile() {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"        this.duchessGUI.loadTasks();","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"    private void initialize() {","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"        chat_vbox.heightProperty().addListener(observable -\u003e scrollPane.setVvalue(1D));","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"        chat_vbox.getChildren().addAll(","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"                DialogBox.getDuchessDialog(Ui.printGreeting(), duchessImage)","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"                );","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"        userinput_textfield.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"        String input \u003d userinput_textfield.getText();","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"        String response \u003d duchessGUI.getResponse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"        ","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"        if (Parser.isExitCommand(input)) {","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"            chat_vbox.getChildren().addAll(","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"                    DialogBox.getDuchessDialog(Ui.printFarewell(), duchessImage)","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"                    );","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"            userinput_textfield.clear();","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"            Platform.exit();","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"        chat_vbox.getChildren().addAll(","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"                DialogBox.getDuchessDialog(response, duchessImage)","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"lawruixi"},"content":"                );","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"        userinput_textfield.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"lawruixi"},"content":"    public void saveTasksToFile() {","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"        this.duchessGUI.saveTasks();","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lawruixi":70}},{"path":"src/main/java/duchess/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.command.Command;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.command.CommandType;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":" * A class used to parse user input from the command line.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"     * Returns true if the command would cause Duchess to exit operations.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"     * @param s - the command to check for exit operations","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"     * @return    whether the command is an exit command.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"    public static boolean isExitCommand(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"        return Utility.matchesRegex(s, \"^bye$\", true) || Utility.matchesRegex(s, \"^exit$\", true);","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"     * Returns true if the command is recognized as a \"list text\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"     * @param s - the command to check for \"list text\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"     * @return    whether the command is a list tasks command.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"    public static boolean isListTasksCommand(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"        return Utility.matchesRegex(s, \"^list$\") || Utility.matchesRegex(s, \"^ls$\");","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"     * Returns true if the command is recognized as a \"mark task\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"     * @param s - the command to check for \"mark task\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"     * @return    whether the command is a mark task command.","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"    public static boolean isMarkTaskCommand(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"        return Utility.matchesRegex(s, \"^mark\");","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"     * Parses a mark task command, returning the index of the task to be marked.","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"     * @param s                 - the command to parse for \"mark task\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"     * @return                    an integer describing the index of the task to be marked.","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if any essential arguments to this command are missing.","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"    public static int parseMarkTaskCommand(String s) throws DuchessException {","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"        Matcher m \u003d Utility.parseRegex(s, \"^mark( [0-9]+)?$\");","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"        if (m.group(1) \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, I don\u0027t know which task to mark... ;-;\");","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"        return Integer.parseInt(m.group(1).trim());","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"     * Returns true if the command is recognized as an \"unmark task\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"     * @param s - the command to check for \"unmark task\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"lawruixi"},"content":"     * @return    whether the command is an unmark task command.","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"lawruixi"},"content":"    public static boolean isUnmarkTaskCommand(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"        return Utility.matchesRegex(s, \"^unmark\");","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"lawruixi"},"content":"     * Parses an unmark task command, returning the index of the task to be unmarked.","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"lawruixi"},"content":"     * @param s                 - the command to parse for \"unmark task\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"lawruixi"},"content":"     * @return                    an integer describing the index of the task to be unmarked.","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if any essential arguments to this command are missing.","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"lawruixi"},"content":"    public static int parseUnmarkTaskCommand(String s) throws DuchessException {","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"lawruixi"},"content":"        Matcher m \u003d Utility.parseRegex(s, \"^unmark( [0-9]+)?$\");","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"lawruixi"},"content":"        if (m.group(1) \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, I don\u0027t know which task to unmark... ;-;\");","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"lawruixi"},"content":"        return Integer.parseInt(m.group(1).trim());","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"lawruixi"},"content":"     * Returns true if the command is recognized as an \"delete task\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"lawruixi"},"content":"     * @param s - the command to check for \"delete task\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"lawruixi"},"content":"     * @return    whether the command is an delete task command.","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"lawruixi"},"content":"    public static boolean isDeleteTaskCommand(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"lawruixi"},"content":"        return Utility.matchesRegex(s, \"^delete\") || Utility.matchesRegex(s, \"^rm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"lawruixi"},"content":"     * Parses a delete task command, returning the index of the task to be deleted.","lastModifiedDate":"2023-08-27"},{"lineNumber":101,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":102,"author":{"gitId":"lawruixi"},"content":"     * @param s                 - the command to parse for \"delete task\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":103,"author":{"gitId":"lawruixi"},"content":"     * @return                    an integer describing the index of the task to be deleted.","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if any essential arguments to this command are missing.","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":106,"author":{"gitId":"lawruixi"},"content":"    public static int parseDeleteTaskCommand(String s) throws DuchessException {","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"lawruixi"},"content":"        Matcher m \u003d Utility.parseRegex(s, \"^(?:delete|rm)( [0-9]+)?\");","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"lawruixi"},"content":"        if (m.group(1) \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, I don\u0027t know which task to delete... ;-;\");","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"lawruixi"},"content":"        return Integer.parseInt(m.group(1).trim());","lastModifiedDate":"2023-08-27"},{"lineNumber":114,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":115,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":116,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"lawruixi"},"content":"     * Returns true if the command is recognized as an \"search for task\" command.","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"lawruixi"},"content":"     * @param s - the command to check for \"search for task\" command.","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"lawruixi"},"content":"     * @return    whether the command is an search for task command.","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"lawruixi"},"content":"    public static boolean isSearchTaskCommand(String s) {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"lawruixi"},"content":"        return Utility.matchesRegex(s, \"^find\");","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"lawruixi"},"content":"     * Parses a search task command, returning the index of the tasks that are found.","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"lawruixi"},"content":"     * @param s - the command to parse for \"search task\" command.","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"lawruixi"},"content":"     * @return    a string describing the term to search for.","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"lawruixi"},"content":"    public static String parseSearchTaskCommand(String s) throws DuchessException {","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"lawruixi"},"content":"        Matcher m \u003d Utility.parseRegex(s, \"^find( [A-Za-z0-9_ ]+)?$\");","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"lawruixi"},"content":"        if (m.group(1) \u003d\u003d null) {","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, I don\u0027t know what to search for... ;-;\");","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"lawruixi"},"content":"        return m.group(1).trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":145,"author":{"gitId":"lawruixi"},"content":"     * Returns true if the command is recognized as a \"todo\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":146,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":147,"author":{"gitId":"lawruixi"},"content":"     * @param s - the command to check for \"todo\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":148,"author":{"gitId":"lawruixi"},"content":"     * @return    whether the command is recognized as a ToDo command.","lastModifiedDate":"2023-08-27"},{"lineNumber":149,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":150,"author":{"gitId":"lawruixi"},"content":"    public static boolean isToDoCommand(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":151,"author":{"gitId":"lawruixi"},"content":"        return Utility.matchesRegex(s, \"^todo\");","lastModifiedDate":"2023-08-27"},{"lineNumber":152,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":153,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":154,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"lawruixi"},"content":"     * Parses a ToDo command, returning a ToDo task that was parsed from the command.","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"lawruixi"},"content":"     * @param s                 - the command to parse for \"todo\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"lawruixi"},"content":"     * @return                    the ToDo task.","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if any essential arguments to this command are missing.","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"lawruixi"},"content":"    public static ToDo parseToDoCommand(String s) throws DuchessException {","lastModifiedDate":"2023-08-27"},{"lineNumber":162,"author":{"gitId":"lawruixi"},"content":"        Matcher m \u003d Utility.parseRegex(s, \"^todo( [A-Za-z0-9_ ]+)?$\");","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"lawruixi"},"content":"        if (m.group(1) \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, todo names cannot be empty... ;-;\");","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":167,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":168,"author":{"gitId":"lawruixi"},"content":"        return new ToDo(m.group(1).trim());","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"lawruixi"},"content":"     * Returns true if the command is recognized as an \"deadline\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"lawruixi"},"content":"     * @param s - the command to check for \"deadline\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"lawruixi"},"content":"     * @return    whether the command is recognized as a Deadline command.","lastModifiedDate":"2023-08-27"},{"lineNumber":176,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"lawruixi"},"content":"    public static boolean isDeadlineCommand(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"lawruixi"},"content":"        // This mmatches the start of a string, then the word \"deadline\", then anything afterwards.","lastModifiedDate":"2023-08-27"},{"lineNumber":179,"author":{"gitId":"lawruixi"},"content":"        return Utility.parseRegex(s, \"^deadline\").find(0);","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":181,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":182,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"lawruixi"},"content":"     * Parses a deadline command, returning the deadline object parsed from the command.","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":185,"author":{"gitId":"lawruixi"},"content":"     * @param s                 - the command to parse for \"deadline\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":186,"author":{"gitId":"lawruixi"},"content":"     * @return                    the Deadline task.","lastModifiedDate":"2023-08-27"},{"lineNumber":187,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if any essential arguments to this command are missing.","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":189,"author":{"gitId":"lawruixi"},"content":"    public static Deadline parseDeadlineCommand(String s) throws DuchessException {","lastModifiedDate":"2023-08-27"},{"lineNumber":190,"author":{"gitId":"lawruixi"},"content":"        Matcher m \u003d Utility.parseRegex(s, \"^deadline( [A-Za-z0-9_ ]+)?( /by ([0-9\\\\-]+)?)?$\");","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":192,"author":{"gitId":"lawruixi"},"content":"        if (m.group(1) \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":193,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, deadline names cannot be empty... ;-;\");","lastModifiedDate":"2023-08-27"},{"lineNumber":194,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":195,"author":{"gitId":"lawruixi"},"content":"        if (m.group(2) \u003d\u003d null || m.group(3) \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":196,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, deadlines must have a deadline... ;-;\");","lastModifiedDate":"2023-08-27"},{"lineNumber":197,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":198,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":199,"author":{"gitId":"lawruixi"},"content":"        return new Deadline(m.group(1).trim(), m.group(3).trim());","lastModifiedDate":"2023-08-27"},{"lineNumber":200,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":201,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":202,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":203,"author":{"gitId":"lawruixi"},"content":"     * Returns true if the command is recognized as an \"event\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":204,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":205,"author":{"gitId":"lawruixi"},"content":"     * @param s - the command to check for \"event\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":206,"author":{"gitId":"lawruixi"},"content":"     * @return    whether the command is recognized as an \"event\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":207,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":208,"author":{"gitId":"lawruixi"},"content":"    public static boolean isEventCommand(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":209,"author":{"gitId":"lawruixi"},"content":"        return Utility.matchesRegex(s, \"^event\");","lastModifiedDate":"2023-08-27"},{"lineNumber":210,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":211,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":212,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":213,"author":{"gitId":"lawruixi"},"content":"     * Parses a event command, returning the event object parsed from the command.","lastModifiedDate":"2023-08-27"},{"lineNumber":214,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":215,"author":{"gitId":"lawruixi"},"content":"     * @param s                 - the command to parse for \"event\" command.","lastModifiedDate":"2023-08-27"},{"lineNumber":216,"author":{"gitId":"lawruixi"},"content":"     * @return                    the Event task.","lastModifiedDate":"2023-08-27"},{"lineNumber":217,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if any essential arguments to this command are missing.","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":219,"author":{"gitId":"lawruixi"},"content":"    public static Event parseEventCommand(String s) throws DuchessException {","lastModifiedDate":"2023-08-27"},{"lineNumber":220,"author":{"gitId":"lawruixi"},"content":"        Matcher m \u003d Utility.parseRegex(","lastModifiedDate":"2023-09-03"},{"lineNumber":221,"author":{"gitId":"lawruixi"},"content":"                s, \"^event( [A-Za-z0-9_ ]+)?( /from( [A-Za-z0-9_ ]+)?)?( /to( [A-Za-z0-9_ ]+)?)?$\"","lastModifiedDate":"2023-09-03"},{"lineNumber":222,"author":{"gitId":"lawruixi"},"content":"            );","lastModifiedDate":"2023-09-03"},{"lineNumber":223,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":224,"author":{"gitId":"lawruixi"},"content":"        if (m.group(1) \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":225,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, event names cannot be empty... ;-;\");","lastModifiedDate":"2023-08-27"},{"lineNumber":226,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":227,"author":{"gitId":"lawruixi"},"content":"        if (m.group(2) \u003d\u003d null || m.group(3) \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":228,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, events must have a start time... ;-;\");","lastModifiedDate":"2023-08-27"},{"lineNumber":229,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":230,"author":{"gitId":"lawruixi"},"content":"        if (m.group(4) \u003d\u003d null || m.group(5) \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":231,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, events must have an end time... ;-;\");","lastModifiedDate":"2023-08-27"},{"lineNumber":232,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":233,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":234,"author":{"gitId":"lawruixi"},"content":"        return new Event(m.group(1).trim(), m.group(3).trim(), m.group(5).trim());","lastModifiedDate":"2023-08-27"},{"lineNumber":235,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":236,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":237,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":238,"author":{"gitId":"lawruixi"},"content":"     * Returns true if the command is recognized as an \"add tag\" command.","lastModifiedDate":"2023-09-17"},{"lineNumber":239,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":240,"author":{"gitId":"lawruixi"},"content":"     * @param s - the command to check for \"add tag\" command.","lastModifiedDate":"2023-09-17"},{"lineNumber":241,"author":{"gitId":"lawruixi"},"content":"     * @return    whether the command is recognized as an \"add tag\" command.","lastModifiedDate":"2023-09-17"},{"lineNumber":242,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":243,"author":{"gitId":"lawruixi"},"content":"    public static boolean isAddTagCommand(String s) {","lastModifiedDate":"2023-09-17"},{"lineNumber":244,"author":{"gitId":"lawruixi"},"content":"        return Utility.matchesRegex(s, \"^tag a(?:dd)?\");","lastModifiedDate":"2023-09-17"},{"lineNumber":245,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":246,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":247,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":248,"author":{"gitId":"lawruixi"},"content":"     * Parses an add tag command, returning the index of the task to be tagged from the command.","lastModifiedDate":"2023-09-17"},{"lineNumber":249,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":250,"author":{"gitId":"lawruixi"},"content":"     * @param s                 - the command to parse for \"tag\" command.","lastModifiedDate":"2023-09-14"},{"lineNumber":251,"author":{"gitId":"lawruixi"},"content":"     * @return                    the index of the task to be tagged.","lastModifiedDate":"2023-09-14"},{"lineNumber":252,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if any essential arguments to this command are missing.","lastModifiedDate":"2023-09-14"},{"lineNumber":253,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":254,"author":{"gitId":"lawruixi"},"content":"    public static int parseAddTagCommandIndex(String s) throws DuchessException {","lastModifiedDate":"2023-09-17"},{"lineNumber":255,"author":{"gitId":"lawruixi"},"content":"        // Matches a tag, followed by either \"a\" or \"add\", then an index ","lastModifiedDate":"2023-09-17"},{"lineNumber":256,"author":{"gitId":"lawruixi"},"content":"        // (any number of digits) and then any number of (hashtags (optional) ","lastModifiedDate":"2023-09-17"},{"lineNumber":257,"author":{"gitId":"lawruixi"},"content":"        // and then letters without spaces.) Each tag hence needs to have no spaces inside. ","lastModifiedDate":"2023-09-17"},{"lineNumber":258,"author":{"gitId":"lawruixi"},"content":"        Matcher m \u003d Utility.parseRegex(","lastModifiedDate":"2023-09-14"},{"lineNumber":259,"author":{"gitId":"lawruixi"},"content":"                s, \"^tag a(?:dd)? ([0-9]+)?((?: (?:#)?(?:[A-Za-z0-9_\\\\-]+))*)?\"","lastModifiedDate":"2023-09-18"},{"lineNumber":260,"author":{"gitId":"lawruixi"},"content":"            );","lastModifiedDate":"2023-09-14"},{"lineNumber":261,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":262,"author":{"gitId":"lawruixi"},"content":"        if (m.group(1) \u003d\u003d null) {","lastModifiedDate":"2023-09-18"},{"lineNumber":263,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, I don\u0027t know which task to tag... ;-;\");","lastModifiedDate":"2023-09-14"},{"lineNumber":264,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":265,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":266,"author":{"gitId":"lawruixi"},"content":"        return Integer.parseInt(m.group(1).trim()) - 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":267,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":268,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":269,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":270,"author":{"gitId":"lawruixi"},"content":"     * Parses a tag command, returning the tag strings parsed from the command.","lastModifiedDate":"2023-09-14"},{"lineNumber":271,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":272,"author":{"gitId":"lawruixi"},"content":"     * @param s                 - the command to parse for \"tag\" command.","lastModifiedDate":"2023-09-14"},{"lineNumber":273,"author":{"gitId":"lawruixi"},"content":"     * @return                    the Event task.","lastModifiedDate":"2023-09-14"},{"lineNumber":274,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if any essential arguments to this command are missing.","lastModifiedDate":"2023-09-14"},{"lineNumber":275,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":276,"author":{"gitId":"lawruixi"},"content":"    public static String[] parseAddTagCommandTags(String s) throws DuchessException {","lastModifiedDate":"2023-09-17"},{"lineNumber":277,"author":{"gitId":"lawruixi"},"content":"        // See parseAddTagCommandIndex.","lastModifiedDate":"2023-09-17"},{"lineNumber":278,"author":{"gitId":"lawruixi"},"content":"        Matcher m \u003d Utility.parseRegex(","lastModifiedDate":"2023-09-14"},{"lineNumber":279,"author":{"gitId":"lawruixi"},"content":"                s, \"^tag a(?:dd)? ([0-9]+)?((?: (?:#)?(?:[A-Za-z0-9_\\\\-]+))*)?\"","lastModifiedDate":"2023-09-18"},{"lineNumber":280,"author":{"gitId":"lawruixi"},"content":"            );","lastModifiedDate":"2023-09-17"},{"lineNumber":281,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":282,"author":{"gitId":"lawruixi"},"content":"        if (m.group(1) \u003d\u003d null || m.group(2) \u003d\u003d null || m.group(2).length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-18"},{"lineNumber":283,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, tags cannot be empty... ;-;\");","lastModifiedDate":"2023-09-17"},{"lineNumber":284,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":285,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":286,"author":{"gitId":"lawruixi"},"content":"        String[] tagList \u003d m.group(2).trim().replace(\"#\", \"\").split(\" \");","lastModifiedDate":"2023-09-18"},{"lineNumber":287,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":288,"author":{"gitId":"lawruixi"},"content":"        return tagList;","lastModifiedDate":"2023-09-18"},{"lineNumber":289,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":290,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":291,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":292,"author":{"gitId":"lawruixi"},"content":"     * Returns true if the command is recognized as a \"remove tag\" command.","lastModifiedDate":"2023-09-17"},{"lineNumber":293,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":294,"author":{"gitId":"lawruixi"},"content":"     * @param s - the command to check for \"remove tag\" command.","lastModifiedDate":"2023-09-17"},{"lineNumber":295,"author":{"gitId":"lawruixi"},"content":"     * @return    whether the command is recognized as an \"remove tag\" command.","lastModifiedDate":"2023-09-17"},{"lineNumber":296,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":297,"author":{"gitId":"lawruixi"},"content":"    public static boolean isRemoveTagCommand(String s) {","lastModifiedDate":"2023-09-17"},{"lineNumber":298,"author":{"gitId":"lawruixi"},"content":"        return Utility.matchesRegex(s, \"^tag (?:rm |remove |del |delete )\");","lastModifiedDate":"2023-09-17"},{"lineNumber":299,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":300,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":301,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":302,"author":{"gitId":"lawruixi"},"content":"     * Parses a remove tag command, returning the index of the task for the tag to be removed.","lastModifiedDate":"2023-09-17"},{"lineNumber":303,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":304,"author":{"gitId":"lawruixi"},"content":"     * @param s                 - the command to parse for \"remove tag\" command.","lastModifiedDate":"2023-09-17"},{"lineNumber":305,"author":{"gitId":"lawruixi"},"content":"     * @return                    the index of the task where the tag should be removed.","lastModifiedDate":"2023-09-17"},{"lineNumber":306,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if any essential arguments to this command are missing.","lastModifiedDate":"2023-09-17"},{"lineNumber":307,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":308,"author":{"gitId":"lawruixi"},"content":"    public static int parseRemoveTagCommandIndex(String s) throws DuchessException {","lastModifiedDate":"2023-09-17"},{"lineNumber":309,"author":{"gitId":"lawruixi"},"content":"        // Matches a tag, followed by some variant of \"rm\" or \"del\", then","lastModifiedDate":"2023-09-17"},{"lineNumber":310,"author":{"gitId":"lawruixi"},"content":"        // (any number of digits) and then any number of (hashtags (optional) ","lastModifiedDate":"2023-09-17"},{"lineNumber":311,"author":{"gitId":"lawruixi"},"content":"        // and then letters without spaces.)","lastModifiedDate":"2023-09-17"},{"lineNumber":312,"author":{"gitId":"lawruixi"},"content":"        Matcher m \u003d Utility.parseRegex(","lastModifiedDate":"2023-09-17"},{"lineNumber":313,"author":{"gitId":"lawruixi"},"content":"                s, \"^tag (?:rm|remove|del|delete) ([0-9]+)?((?: (?:#)?(?:[A-Za-z0-9_\\\\-]+))*)?\"","lastModifiedDate":"2023-09-18"},{"lineNumber":314,"author":{"gitId":"lawruixi"},"content":"            );","lastModifiedDate":"2023-09-17"},{"lineNumber":315,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":316,"author":{"gitId":"lawruixi"},"content":"        if (m.group(1) \u003d\u003d null) {","lastModifiedDate":"2023-09-18"},{"lineNumber":317,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, I don\u0027t know which task to remove the tag from... ;-;\");","lastModifiedDate":"2023-09-18"},{"lineNumber":318,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":319,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":320,"author":{"gitId":"lawruixi"},"content":"        return Integer.parseInt(m.group(1).trim()) - 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":321,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":322,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":323,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":324,"author":{"gitId":"lawruixi"},"content":"     * Parses a tag command, returning the tag strings parsed from the command.","lastModifiedDate":"2023-09-17"},{"lineNumber":325,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":326,"author":{"gitId":"lawruixi"},"content":"     * @param s                 - the command to parse for \"tag\" command.","lastModifiedDate":"2023-09-17"},{"lineNumber":327,"author":{"gitId":"lawruixi"},"content":"     * @return                    the Event task.","lastModifiedDate":"2023-09-17"},{"lineNumber":328,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if any essential arguments to this command are missing.","lastModifiedDate":"2023-09-17"},{"lineNumber":329,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":330,"author":{"gitId":"lawruixi"},"content":"    public static String[] parseRemoveTagCommandTags(String s) throws DuchessException {","lastModifiedDate":"2023-09-17"},{"lineNumber":331,"author":{"gitId":"lawruixi"},"content":"        // See parseRemoveTagCommandIndex.","lastModifiedDate":"2023-09-17"},{"lineNumber":332,"author":{"gitId":"lawruixi"},"content":"        Matcher m \u003d Utility.parseRegex(","lastModifiedDate":"2023-09-17"},{"lineNumber":333,"author":{"gitId":"lawruixi"},"content":"                s, \"^tag (?:rm|remove|del|delete) ([0-9]+)?((?: (?:#)?(?:[A-Za-z0-9_\\\\-]+))*)?\"","lastModifiedDate":"2023-09-18"},{"lineNumber":334,"author":{"gitId":"lawruixi"},"content":"            );","lastModifiedDate":"2023-09-14"},{"lineNumber":335,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":336,"author":{"gitId":"lawruixi"},"content":"        if (m.group(1) \u003d\u003d null || m.group(2) \u003d\u003d null || m.group(2).length() \u003d\u003d 0) {","lastModifiedDate":"2023-09-18"},{"lineNumber":337,"author":{"gitId":"lawruixi"},"content":"            throw new DuchessException(\"(´；ω；`) Sorry, tags cannot be empty... ;-;\");","lastModifiedDate":"2023-09-14"},{"lineNumber":338,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":339,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":340,"author":{"gitId":"lawruixi"},"content":"        String[] tagList \u003d m.group(2).trim().replace(\"#\", \"\").split(\" \");","lastModifiedDate":"2023-09-18"},{"lineNumber":341,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":342,"author":{"gitId":"lawruixi"},"content":"        return tagList;","lastModifiedDate":"2023-09-18"},{"lineNumber":343,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":344,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":345,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":346,"author":{"gitId":"lawruixi"},"content":"     * Parses user input, and chooses the correct command to return.","lastModifiedDate":"2023-09-18"},{"lineNumber":347,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":348,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the command the user executed.","lastModifiedDate":"2023-09-18"},{"lineNumber":349,"author":{"gitId":"lawruixi"},"content":"     * @return    the Command object to be .executed(). Returns an UnrecognizedCommand if no commands match.","lastModifiedDate":"2023-09-18"},{"lineNumber":350,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":351,"author":{"gitId":"lawruixi"},"content":"    public static Command parseCommand(String userInput) {","lastModifiedDate":"2023-09-18"},{"lineNumber":352,"author":{"gitId":"lawruixi"},"content":"        // Check if this command is a list.","lastModifiedDate":"2023-09-18"},{"lineNumber":353,"author":{"gitId":"lawruixi"},"content":"        if (Parser.isListTasksCommand(userInput)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":354,"author":{"gitId":"lawruixi"},"content":"            return Command.getCommand(CommandType.LIST);","lastModifiedDate":"2023-09-18"},{"lineNumber":355,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":356,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":357,"author":{"gitId":"lawruixi"},"content":"        // Check if this command is a mark task command.","lastModifiedDate":"2023-09-18"},{"lineNumber":358,"author":{"gitId":"lawruixi"},"content":"        if (Parser.isMarkTaskCommand(userInput)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":359,"author":{"gitId":"lawruixi"},"content":"            return Command.getCommand(CommandType.MARK);","lastModifiedDate":"2023-09-18"},{"lineNumber":360,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":361,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":362,"author":{"gitId":"lawruixi"},"content":"        // Check if this command is an unmarked task command.","lastModifiedDate":"2023-09-18"},{"lineNumber":363,"author":{"gitId":"lawruixi"},"content":"        if (Parser.isUnmarkTaskCommand(userInput)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":364,"author":{"gitId":"lawruixi"},"content":"            return Command.getCommand(CommandType.UNMARK);","lastModifiedDate":"2023-09-18"},{"lineNumber":365,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":366,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":367,"author":{"gitId":"lawruixi"},"content":"        // Check if this command is a delete task command.","lastModifiedDate":"2023-09-18"},{"lineNumber":368,"author":{"gitId":"lawruixi"},"content":"        if (Parser.isDeleteTaskCommand(userInput)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":369,"author":{"gitId":"lawruixi"},"content":"            return Command.getCommand(CommandType.DELETE);","lastModifiedDate":"2023-09-18"},{"lineNumber":370,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":371,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":372,"author":{"gitId":"lawruixi"},"content":"        // Check if this command is a search task command.","lastModifiedDate":"2023-09-18"},{"lineNumber":373,"author":{"gitId":"lawruixi"},"content":"        if (Parser.isSearchTaskCommand(userInput)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":374,"author":{"gitId":"lawruixi"},"content":"            return Command.getCommand(CommandType.SEARCH);","lastModifiedDate":"2023-09-18"},{"lineNumber":375,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":376,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":377,"author":{"gitId":"lawruixi"},"content":"        // Check if this command is a ToDo command.","lastModifiedDate":"2023-09-18"},{"lineNumber":378,"author":{"gitId":"lawruixi"},"content":"        if (Parser.isToDoCommand(userInput)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":379,"author":{"gitId":"lawruixi"},"content":"            return Command.getCommand(CommandType.TODO);","lastModifiedDate":"2023-09-18"},{"lineNumber":380,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":381,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":382,"author":{"gitId":"lawruixi"},"content":"        // Check if this command is a Deadline command.","lastModifiedDate":"2023-09-18"},{"lineNumber":383,"author":{"gitId":"lawruixi"},"content":"        if (Parser.isDeadlineCommand(userInput)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":384,"author":{"gitId":"lawruixi"},"content":"            return Command.getCommand(CommandType.DEADLINE);","lastModifiedDate":"2023-09-18"},{"lineNumber":385,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":386,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":387,"author":{"gitId":"lawruixi"},"content":"        // Check if this command is an Event command.","lastModifiedDate":"2023-09-18"},{"lineNumber":388,"author":{"gitId":"lawruixi"},"content":"        if (Parser.isEventCommand(userInput)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":389,"author":{"gitId":"lawruixi"},"content":"            return Command.getCommand(CommandType.EVENT);","lastModifiedDate":"2023-09-18"},{"lineNumber":390,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":391,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":392,"author":{"gitId":"lawruixi"},"content":"        // Check if this command is an Tag command.","lastModifiedDate":"2023-09-18"},{"lineNumber":393,"author":{"gitId":"lawruixi"},"content":"        if (Parser.isAddTagCommand(userInput)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":394,"author":{"gitId":"lawruixi"},"content":"            return Command.getCommand(CommandType.ADD_TAG);","lastModifiedDate":"2023-09-18"},{"lineNumber":395,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":396,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":397,"author":{"gitId":"lawruixi"},"content":"        // Check if this command is an Tag command.","lastModifiedDate":"2023-09-18"},{"lineNumber":398,"author":{"gitId":"lawruixi"},"content":"        if (Parser.isRemoveTagCommand(userInput)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":399,"author":{"gitId":"lawruixi"},"content":"            return Command.getCommand(CommandType.DELETE_TAG);","lastModifiedDate":"2023-09-18"},{"lineNumber":400,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":401,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":402,"author":{"gitId":"lawruixi"},"content":"        return Command.getCommand(CommandType.UNRECOGNIZED);","lastModifiedDate":"2023-09-18"},{"lineNumber":403,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":404,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":405,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lawruixi":405}},{"path":"src/main/java/duchess/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":" * A class to deal with storage of data, like saving and loading task lists.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"    private static final String DATA_DIRECTORY \u003d \"./\";","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"    private static final String DATA_FILE \u003d \"data.duchess\";","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"     * Creates an empty save file to store the tasks in. This save file is specified by DATA_DIRECTORY and DATA_FILE.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"    public static void createSaveFile() {","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"            File file \u003d new File(DATA_DIRECTORY + DATA_FILE);","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"            // Create a new file if it doesn\u0027t already exist.","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"            file.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"            System.out.println(String.format(\"An error has occurred: %s\", e.getMessage()));","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"     * Saves the specified ArrayList of tasks to the data file specified by DATA_DIRECTORY and DATA_FILE.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"     * If the file does not exist, an error will occur.","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"     * @param tasks - the ArrayList of tasks to be saved.","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"    public static void saveTasksToFile(TaskList tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"            File file \u003d new File(DATA_DIRECTORY + DATA_FILE);","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"                fileWriter.write(tasks.getTask(i).toSaveString());","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"                // Add a newline unless I just wrote the last item.","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"                if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"                    fileWriter.write(\"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"            System.out.println(String.format(\"An error has occurred: %s\", e.getMessage()));","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"     * Loads Tasks from the data file specified by DATA_DIRECTORY and DATA_FILE and returns a TaskList","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"     * of the loaded tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"     * @return a TaskList of tasks that were loaded.","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"    public static TaskList loadTasksFromFile() {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"lawruixi"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"            File file \u003d new File(DATA_DIRECTORY + DATA_FILE);","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"lawruixi"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"lawruixi"},"content":"                Task task \u003d Task.parseSaveString(sc.nextLine());","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"lawruixi"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"lawruixi"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"lawruixi"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"lawruixi"},"content":"            sc.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"lawruixi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"lawruixi"},"content":"            System.out.println(String.format(\"An error has occurred: %s\", e.getMessage()));","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"lawruixi"},"content":"        return tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lawruixi":87}},{"path":"src/main/java/duchess/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":" * An abstract class representing a Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"    public static final String SAVE_STRING_DELIMITER \u003d \"\\\\|\";","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"    private String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"    private TaskStatus status;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"    protected ArrayList\u003cString\u003e tags;","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     * Returns a new Task object with the given parameters.","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     * @param name - the name of the Task.","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * @param TaskStatus - the status of the Task.","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"    Task(String name, TaskStatus status) {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"     * Returns a new Task object with the given parameters and a default TaskStatus of unmarked.","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"     * @param name - the name of the Task.","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"    Task(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"        this(name, TaskStatus.UNMARKED);","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"     * Factory method of Task, creating a Task by parsing a String that represents a Task.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"     * @param s - the String that represents the Task.","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"     * @return    either the Task that was parsed successfully using the String, or null if the string is","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"     *            an invalid Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"    public static Task parseSaveString(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"        String[] splitString \u003d s.split(Task.SAVE_STRING_DELIMITER);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"        // Check for the types","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"        if (splitString[0].equals(\"T\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"            // Not enough arguments; minmally, it needs the Type, the Marked status, and the Name.","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"            return ToDo.fromSaveString(s);","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"        } else if (splitString[0].equals(\"D\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"            // Not enough arguments; minmally, it needs the Type, the Marked status, and the Name.","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"            return Deadline.fromSaveString(s);","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"        } else if (splitString[0].equals(\"E\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"            // Not enough arguments; minmally, it needs the Type, the Marked status, and the Name.","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"            return Event.fromSaveString(s);","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"        return null;","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"     * Changes this Task\u0027s status to the provided TaskStatus.","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"     * @param newStatus - the new TaskStatus for this task\u0027s status to be changed to.","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"    public void changeStatus(TaskStatus newStatus) {","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"        this.status \u003d newStatus;","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"lawruixi"},"content":"     * Returns the name of this Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"lawruixi"},"content":"     * @return the name of this Task.","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"lawruixi"},"content":"    public String getName() {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"lawruixi"},"content":"        return this.name;","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"lawruixi"},"content":"     * Used for formatting the toString. Pre-string will be added before the mainString and the postString, when calling ","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"lawruixi"},"content":"     * toString.","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"lawruixi"},"content":"     * @return the pre-String for this Task.","lastModifiedDate":"2023-09-14"},{"lineNumber":86,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"lawruixi"},"content":"    public String preString() {","lastModifiedDate":"2023-09-14"},{"lineNumber":88,"author":{"gitId":"lawruixi"},"content":"        return \"\";","lastModifiedDate":"2023-09-14"},{"lineNumber":89,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":90,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":91,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":92,"author":{"gitId":"lawruixi"},"content":"     * Used for formatting the toString. mainString will be in between pre-string and post-string when calling toString.","lastModifiedDate":"2023-09-14"},{"lineNumber":93,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":94,"author":{"gitId":"lawruixi"},"content":"     * @return the mainString for this Task.","lastModifiedDate":"2023-09-14"},{"lineNumber":95,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":96,"author":{"gitId":"lawruixi"},"content":"    public String mainString() {","lastModifiedDate":"2023-09-14"},{"lineNumber":97,"author":{"gitId":"lawruixi"},"content":"        String thisString \u003d \"\";","lastModifiedDate":"2023-09-14"},{"lineNumber":98,"author":{"gitId":"lawruixi"},"content":"        if (this.status \u003d\u003d TaskStatus.UNMARKED) {","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"lawruixi"},"content":"            thisString +\u003d String.format(\"[ ] %s\", this.name);","lastModifiedDate":"2023-09-14"},{"lineNumber":100,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"lawruixi"},"content":"        if (this.status \u003d\u003d TaskStatus.MARKED) {","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"lawruixi"},"content":"            thisString +\u003d String.format(\"[X] %s\", this.name);","lastModifiedDate":"2023-09-14"},{"lineNumber":103,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":104,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":105,"author":{"gitId":"lawruixi"},"content":"        return thisString;","lastModifiedDate":"2023-09-14"},{"lineNumber":106,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":108,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":109,"author":{"gitId":"lawruixi"},"content":"     * Used for formatting the toString. post-String will be after main-string and post-string when calling toString.","lastModifiedDate":"2023-09-14"},{"lineNumber":110,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":111,"author":{"gitId":"lawruixi"},"content":"     * @return the post-String for this Task.","lastModifiedDate":"2023-09-14"},{"lineNumber":112,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":113,"author":{"gitId":"lawruixi"},"content":"    public String postString() {","lastModifiedDate":"2023-09-14"},{"lineNumber":114,"author":{"gitId":"lawruixi"},"content":"        if (this.tags.size() \u003c\u003d 0) {","lastModifiedDate":"2023-09-14"},{"lineNumber":115,"author":{"gitId":"lawruixi"},"content":"            return \"\";","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":118,"author":{"gitId":"lawruixi"},"content":"        String postString \u003d \"(\";","lastModifiedDate":"2023-09-14"},{"lineNumber":119,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":120,"author":{"gitId":"lawruixi"},"content":"        for (String s : this.tags) {","lastModifiedDate":"2023-09-14"},{"lineNumber":121,"author":{"gitId":"lawruixi"},"content":"            postString +\u003d \"#\" + s + \" \";","lastModifiedDate":"2023-09-15"},{"lineNumber":122,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":123,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":124,"author":{"gitId":"lawruixi"},"content":"        postString \u003d postString.substring(0, postString.length() - 1);","lastModifiedDate":"2023-09-14"},{"lineNumber":125,"author":{"gitId":"lawruixi"},"content":"        postString +\u003d \")\";","lastModifiedDate":"2023-09-14"},{"lineNumber":126,"author":{"gitId":"lawruixi"},"content":"        return postString;","lastModifiedDate":"2023-09-14"},{"lineNumber":127,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":128,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":129,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":130,"author":{"gitId":"lawruixi"},"content":"     * Returns a String representation of this task.","lastModifiedDate":"2023-09-14"},{"lineNumber":131,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":132,"author":{"gitId":"lawruixi"},"content":"     * @return the String representation of this task.","lastModifiedDate":"2023-09-14"},{"lineNumber":133,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":134,"author":{"gitId":"lawruixi"},"content":"    public String toString() {","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"lawruixi"},"content":"        String thisString \u003d \"\";","lastModifiedDate":"2023-09-15"},{"lineNumber":136,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":137,"author":{"gitId":"lawruixi"},"content":"        String preString \u003d this.preString();","lastModifiedDate":"2023-09-15"},{"lineNumber":138,"author":{"gitId":"lawruixi"},"content":"        String mainString \u003d this.mainString();","lastModifiedDate":"2023-09-15"},{"lineNumber":139,"author":{"gitId":"lawruixi"},"content":"        String postString \u003d this.postString();","lastModifiedDate":"2023-09-15"},{"lineNumber":140,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":141,"author":{"gitId":"lawruixi"},"content":"        if (preString.length() \u003e 0) {","lastModifiedDate":"2023-09-15"},{"lineNumber":142,"author":{"gitId":"lawruixi"},"content":"            thisString +\u003d preString + \" \";","lastModifiedDate":"2023-09-15"},{"lineNumber":143,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":144,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":145,"author":{"gitId":"lawruixi"},"content":"        thisString +\u003d mainString;","lastModifiedDate":"2023-09-15"},{"lineNumber":146,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":147,"author":{"gitId":"lawruixi"},"content":"        if (postString.length() \u003e 0) {","lastModifiedDate":"2023-09-15"},{"lineNumber":148,"author":{"gitId":"lawruixi"},"content":"            thisString +\u003d \" \" + postString;","lastModifiedDate":"2023-09-15"},{"lineNumber":149,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-15"},{"lineNumber":150,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":151,"author":{"gitId":"lawruixi"},"content":"        return thisString;","lastModifiedDate":"2023-09-15"},{"lineNumber":152,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":153,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":154,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":155,"author":{"gitId":"lawruixi"},"content":"     * Returns a String representation of this task, for the purposes of data saving.","lastModifiedDate":"2023-08-27"},{"lineNumber":156,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":157,"author":{"gitId":"lawruixi"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":158,"author":{"gitId":"lawruixi"},"content":"        if (this.status \u003d\u003d TaskStatus.UNMARKED) {","lastModifiedDate":"2023-08-27"},{"lineNumber":159,"author":{"gitId":"lawruixi"},"content":"            return String.format(\"0|%s\", this.name);","lastModifiedDate":"2023-08-27"},{"lineNumber":160,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":161,"author":{"gitId":"lawruixi"},"content":"        if (this.status \u003d\u003d TaskStatus.MARKED) {","lastModifiedDate":"2023-08-27"},{"lineNumber":162,"author":{"gitId":"lawruixi"},"content":"            return String.format(\"1|%s\", this.name);","lastModifiedDate":"2023-08-27"},{"lineNumber":163,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":164,"author":{"gitId":"lawruixi"},"content":"        return \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":165,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":166,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":167,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":168,"author":{"gitId":"lawruixi"},"content":"     * Adds a tag to this Task\u0027s list of tags.","lastModifiedDate":"2023-09-14"},{"lineNumber":169,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-14"},{"lineNumber":170,"author":{"gitId":"lawruixi"},"content":"     * @param tag - tag to be added","lastModifiedDate":"2023-09-14"},{"lineNumber":171,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":172,"author":{"gitId":"lawruixi"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2023-09-14"},{"lineNumber":173,"author":{"gitId":"lawruixi"},"content":"        this.tags.add(tag);","lastModifiedDate":"2023-09-14"},{"lineNumber":174,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":175,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":176,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":177,"author":{"gitId":"lawruixi"},"content":"     * Removes a tag from this Task\u0027s list of tags. If no such ","lastModifiedDate":"2023-09-17"},{"lineNumber":178,"author":{"gitId":"lawruixi"},"content":"     * tag is attached to this Task, does nothing.","lastModifiedDate":"2023-09-17"},{"lineNumber":179,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":180,"author":{"gitId":"lawruixi"},"content":"     * @param tag - tag to be removed.","lastModifiedDate":"2023-09-17"},{"lineNumber":181,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":182,"author":{"gitId":"lawruixi"},"content":"    public void removeTag(String tag) {","lastModifiedDate":"2023-09-17"},{"lineNumber":183,"author":{"gitId":"lawruixi"},"content":"        // Iterate through the tag array in reverse since we are removing the tags.","lastModifiedDate":"2023-09-17"},{"lineNumber":184,"author":{"gitId":"lawruixi"},"content":"        for (int i \u003d tags.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-09-17"},{"lineNumber":185,"author":{"gitId":"lawruixi"},"content":"            String currentTag \u003d this.tags.get(i);","lastModifiedDate":"2023-09-17"},{"lineNumber":186,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":187,"author":{"gitId":"lawruixi"},"content":"            if (currentTag.equals(tag)) {","lastModifiedDate":"2023-09-17"},{"lineNumber":188,"author":{"gitId":"lawruixi"},"content":"                this.tags.remove(i);","lastModifiedDate":"2023-09-17"},{"lineNumber":189,"author":{"gitId":"lawruixi"},"content":"                continue;","lastModifiedDate":"2023-09-17"},{"lineNumber":190,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":191,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":192,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":193,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"lawruixi":193}},{"path":"src/main/java/duchess/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":" * Represents a list of tasks. This is a wrapper around a ArrayList\u0026lt;Task\u0026gt;.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"public class TaskList {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"     * Default constructor. Initializes a Task List with an empty list of tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"    TaskList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"     * Constructor taking in a predefined ArrayList of tasks. Initializes a Task List with the same elements","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"     * as the provided ArrayList.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"     * @param tasksArrayList - an ArrayList of Tasks.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"    TaskList(ArrayList\u003cTask\u003e tasksArrayList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"        for (Task t : tasksArrayList) {","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"            this.addTask(t);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"     * Copy constructor taking in a TaskList. Initializes a new Task List with the same elements as the provided","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"     * TaskList. Tasks are not deepcopied, so both TaskLists will now reference the same Tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"     * @param tasksList - a TaskList.","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"    TaskList(TaskList tasksList) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"        for (Task t : tasksList.tasks) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"            this.addTask(t);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"     * Returns the size of this TaskList.","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"     * @return the size of this TaskList.","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"    public int size() {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"     * Returns the index of a particular Task in this array.","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"     * @param t - the Task to search for in this array.","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lawruixi"},"content":"     * @return    the index of that Task, or -1 if that Task is not present in the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"lawruixi"},"content":"    public int indexOf(Task t) {","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"        return this.tasks.indexOf(t);","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"     * Appends a specified Task to the end of this TaskList.","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"lawruixi"},"content":"     * @param t - the Task to be appended.","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"lawruixi"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"lawruixi"},"content":"        this.tasks.add(t);","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"lawruixi"},"content":"     * Retrieves a Task at a specific index.","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"lawruixi"},"content":"     * @param index - the index of the Task to be retrieved.","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"lawruixi"},"content":"     * @return        the Task that is retrieved.","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"lawruixi"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"lawruixi"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"lawruixi"},"content":"     * Removes a task from this task list at the specified index.","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"lawruixi"},"content":"     * @param index - the index of the Task to be removed.","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"lawruixi"},"content":"     * @return        the Task that was removed.","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"lawruixi"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"lawruixi"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"lawruixi"},"content":"     * Filters this TaskList, returning a new TaskList where elements that do not satisfy the predicate are removed.","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"lawruixi"},"content":"     * @param predicate - the predicate to test for.","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"lawruixi"},"content":"     * @return            the TaskList with the filter applied.","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"lawruixi"},"content":"    public TaskList filter(Predicate\u003c? super Task\u003e predicate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"lawruixi"},"content":"        TaskList newTaskList \u003d new TaskList(this);","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"lawruixi"},"content":"        // Iterate backwards because we are deleting elements from the array while accessing","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"lawruixi"},"content":"        for (int i \u003d newTaskList.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"lawruixi"},"content":"            Task t \u003d this.getTask(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"lawruixi"},"content":"            // Fails the predicate, should be removed.","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"lawruixi"},"content":"            if (!predicate.test(t)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"lawruixi"},"content":"                newTaskList.removeTask(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"lawruixi"},"content":"        return newTaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"lawruixi"},"content":"     * Filters this TaskList, returning a new TaskList where elements that do not satisfy the predicate","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"lawruixi"},"content":"     * are replaced with a null value instead.","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"lawruixi"},"content":"     * @param predicate - the predicate to test for.","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"lawruixi"},"content":"     * @return            the TaskList with the filter applied.","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"lawruixi"},"content":"    public TaskList filterReplaceNull(Predicate\u003c? super Task\u003e predicate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"lawruixi"},"content":"        TaskList newTaskList \u003d new TaskList(this);","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"lawruixi"},"content":"        // Iterate backwards because we are deleting elements from the array while accessing","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"lawruixi"},"content":"        for (int i \u003d newTaskList.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"lawruixi"},"content":"            Task t \u003d this.getTask(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"lawruixi"},"content":"            // Fails the predicate, should be removed.","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"lawruixi"},"content":"            if (!predicate.test(t)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"lawruixi"},"content":"                newTaskList.tasks.set(i, null);","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"lawruixi"},"content":"        return newTaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"lawruixi"},"content":"     * Executes a given function for each element in this array.","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"lawruixi"},"content":"     * @param consumer - the Consumer to be executed.","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"lawruixi"},"content":"    public void forEach(Consumer\u003c? super Task\u003e consumer) {","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"lawruixi"},"content":"        this.tasks.forEach(consumer);","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"lawruixi"},"content":"     * Executes a given function for each (element, index) pair in this array.","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"lawruixi"},"content":"     * @param consumer - the BiConsumer to be executed.","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"lawruixi"},"content":"    public void forEach(BiConsumer\u003c? super Task, ? super Integer\u003e consumer) {","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"lawruixi"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"lawruixi"},"content":"            Task t \u003d this.getTask(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"lawruixi"},"content":"            consumer.accept(t, i);","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lawruixi":164}},{"path":"src/main/java/duchess/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":" * An enum for indicating Task statuses.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"public enum TaskStatus {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"    UNMARKED,","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"    MARKED","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lawruixi":9}},{"path":"src/main/java/duchess/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"     * Creates a new ToDo instance with the provided name and status.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"     * @param name   - the name of the ToDo.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"     * @param status - the current task status of the ToDo.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"    public ToDo(String name, TaskStatus status) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"        super(name, status);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     * Creates a new ToDo instance with the provided name. The status will be the default status in Task.","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * @param name   - the name of the ToDo.","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"     * Returns the String representation of this ToDo.","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"     * @return the String representation of this ToDo.","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"    public String mainString() {","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"        return String.format(\"[T] %s\", super.mainString());","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"     * Returns the String representation of this ToDo, for the purposes of saving.","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"     * @return the String representation of this ToDo.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"        String saveString \u003d String.format(\"T|%s|\", super.toSaveString());","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"        ","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"        for (String tag : this.tags) {","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"            saveString +\u003d String.format(\"#%s|\", tag);","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"        saveString \u003d saveString.substring(0, saveString.length() - 1);","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"        return saveString;","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"     * Returns a new ToDo from a Save String.","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"     * @return the ToDo that this String is represented by.","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"    public static ToDo fromSaveString(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"        String[] splitString \u003d s.split(Task.SAVE_STRING_DELIMITER);","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lawruixi"},"content":"        TaskStatus taskStatus \u003d TaskStatus.UNMARKED;","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"        String name \u003d \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"        if (Integer.parseInt(splitString[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"lawruixi"},"content":"            taskStatus \u003d TaskStatus.MARKED;","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"        name \u003d splitString[2];","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"lawruixi"},"content":"        for (int i \u003d 3; i \u003c splitString.length; i++) {","lastModifiedDate":"2023-09-17"},{"lineNumber":73,"author":{"gitId":"lawruixi"},"content":"            String dataString \u003d splitString[i];","lastModifiedDate":"2023-09-17"},{"lineNumber":74,"author":{"gitId":"lawruixi"},"content":"            ","lastModifiedDate":"2023-09-17"},{"lineNumber":75,"author":{"gitId":"lawruixi"},"content":"            if (dataString.startsWith(\"#\")) {","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"lawruixi"},"content":"                tags.add(dataString.substring(1));","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-17"},{"lineNumber":78,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":79,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":80,"author":{"gitId":"lawruixi"},"content":"        ToDo todo \u003d new ToDo(name, taskStatus);","lastModifiedDate":"2023-09-17"},{"lineNumber":81,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":82,"author":{"gitId":"lawruixi"},"content":"        for (String tag : tags) {","lastModifiedDate":"2023-09-17"},{"lineNumber":83,"author":{"gitId":"lawruixi"},"content":"            todo.addTag(tag);","lastModifiedDate":"2023-09-17"},{"lineNumber":84,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":85,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":86,"author":{"gitId":"lawruixi"},"content":"        return todo;","lastModifiedDate":"2023-09-17"},{"lineNumber":87,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lawruixi":88}},{"path":"src/main/java/duchess/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":" * A class to deal with the UI. This generally involves printing things to the console.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"     * Formats text in a consistent formatting in Duchess style.","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"     * @param s - the string to be formatted.","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"     * @return    the formatted text.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"    public static String duchessFormat(String s) {","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"        return String.format(\"[D]: %s \\n\", s);","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     * Formats greeting to the user and returns.","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * @return the formatted greeting.","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"    public static String printGreeting() {","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"        s +\u003d Ui.duchessFormat(\"(^O^)／ Heya~\");","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"        s +\u003d Ui.duchessFormat(\"I am ~~Duchess~~!!\");","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"        s +\u003d Ui.duchessFormat(\"What can I do for you!! o_O\");","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"        return s;","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"     * Returns farewell/exit message.","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"     * @return the formatted farewell message.","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"    public static String printFarewell() {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"        return Ui.duchessFormat(\"Bye bye!! Hope to see you again (＾▽＾)\");","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lawruixi":38}},{"path":"src/main/java/duchess/Utility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":" * A class to manage Utility functions.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"public class Utility {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"     * Checks whether the given string matches the given regex pattern.","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"     * @param s               - the string to check if it matches the pattern.","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"     * @param patternString   - the pattern to match against.","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     * @param caseInsensitive - whether the match should be performed ignoring the case.","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     * @return                  whether the string matches the pattern.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"    public static boolean matchesRegex(String s, String patternString, boolean caseInsensitive) {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"        return Utility.parseRegex(s, patternString, caseInsensitive).find(0);","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"     * Checks whether the given string matches the given regex pattern. Defaults to case-sensitive matching.","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"     * @param s               - the string to check if it matches the pattern.","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"     * @param patternString   - the pattern to match against.","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"     * @return                  whether the string matches the pattern.","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"    public static boolean matchesRegex(String s, String patternString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"        return Utility.parseRegex(s, patternString).find(0);","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"     * Returns the regex groups that is parsed from the regex pattern.","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"     * @param s               - the string to check if it matches the pattern.","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"     * @param patternString   - the pattern to match against.","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"     * @param caseInsensitive - whether the match should be performed ignoring the case.","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"     * @return                  the matcher containing the parsed regex groups.","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"    public static Matcher parseRegex(String s, String patternString, boolean caseInsensitive) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"        Pattern pattern;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"        if (caseInsensitive) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"            pattern \u003d Pattern.compile(patternString, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"            pattern \u003d Pattern.compile(patternString);","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"        Matcher matcher \u003d pattern.matcher(s);","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"        matcher.find(0);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"        return matcher;","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"     * Returns the regex groups that is parsed from the regex pattern. By default, is case sensitive.","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"     * @param s               - the string to check if it matches the pattern.","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"     * @param patternString   - the pattern to match against.","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"     * @return                  the matcher containing the parsed regex groups.","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"    public static Matcher parseRegex(String s, String patternString) {","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"lawruixi"},"content":"        return Utility.parseRegex(s, patternString, false);","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"     * Converts a date string into a LocalDate.","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"     * Currently supports yyyy-mm-dd format.","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"lawruixi"},"content":"     * @param dateString        - the String to be converted into a LocalDate.","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"lawruixi"},"content":"     * @return                    the LocalDate.","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"lawruixi"},"content":"     * @throws DuchessException   if the dateString is not in any recognized date format.","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"lawruixi"},"content":"    public static LocalDate parseDateString(String dateString) throws DuchessException {","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"lawruixi"},"content":"        if (Utility.matchesRegex(dateString, \"[0-9]{4}-[0-9]{2}-[0-9]{2}\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"lawruixi"},"content":"            // yyyy-mm-dd format.","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"lawruixi"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"lawruixi"},"content":"                DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"lawruixi"},"content":"                LocalDate localDate \u003d LocalDate.parse(dateString, dateTimeFormatter);","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"lawruixi"},"content":"                return localDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"lawruixi"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"lawruixi"},"content":"                // Something went wrong... perhaps date is out of bounds.","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"lawruixi"},"content":"                throw new DuchessException(\"(´；ω；`) Sorry, I don\u0027t recognize that date... ;-;\");","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"lawruixi"},"content":"        throw new DuchessException(\"(´；ω；`) Sorry, I don\u0027t recognize that date... ;-;\");","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"lawruixi":92}},{"path":"src/main/java/duchess/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.DuchessException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.Deadline;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import duchess.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskStatus;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import duchess.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"import duchess.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":" * Class representing an AddDeadline command.","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     * Adds a Deadline task.","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     * @param tasks       the list of tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"     * @return            Duchess\u0027 response to the command.","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"    public String execute(String userInput, TaskList tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"            Deadline deadline \u003d Parser.parseDeadlineCommand(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"            assert deadline !\u003d null : \"Task is null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"Added successfully!! d(*⌒▽⌒*)b\");","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(String.format(\"%d: %s\", tasks.indexOf(deadline) + 1, deadline.toString()));","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"\");","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(String.format(\"Now you have %d task(s)!! ヽ(´▽`)/\", tasks.size()));","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"            return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"(／°▽°)／Try something like this!!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"deadline [name] /by [year-month-date]\");","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"        return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":48}},{"path":"src/main/java/duchess/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.DuchessException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.Event;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import duchess.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskStatus;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import duchess.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"import duchess.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":" * Class representing an AddEvent command.","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     * Adds a Event task.","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     * @param tasks       the list of tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"     * @return            Duchess\u0027 response to the command.","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"    public String execute(String userInput, TaskList tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"            Event event \u003d Parser.parseEventCommand(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"            assert event !\u003d null : \"Event is null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"            tasks.addTask(event);","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"Added successfully!! d(*⌒▽⌒*)b\");","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(String.format(\"%d: %s\", tasks.indexOf(event) + 1, event.toString()));","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"\");","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(String.format(\"Now you have %d task(s)!! ヽ(´▽`)/\", tasks.size()));","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"            return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"(／°▽°)／Try something like this!!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"event [name] /from [start time] /to [end time]\");","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"        return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":48}},{"path":"src/main/java/duchess/command/AddTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.DuchessException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskStatus;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import duchess.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import duchess.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":" * Class representing a AddTag command.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     * Adds tags to a task.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * @param tasks       the list of tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     * @return            Duchess\u0027 response to the command.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    public String execute(String userInput, TaskList tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"            int tagIndex \u003d Parser.parseAddTagCommandIndex(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"            String[] tags \u003d Parser.parseAddTagCommandTags(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"            // Within bounds","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"            if (tagIndex \u003c 0 || tagIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"                response +\u003d Ui.duchessFormat(\"(´；ω；`) Sorry, no such task exists... ;-;\");","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"                return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"            Task task \u003d tasks.getTask(tagIndex);","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"            for (String tag : tags) {","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"                task.addTag(tag);","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"Tags have been added!! (＾▽＾)\");","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(String.format(\"%d: %s\", tasks.indexOf(task) + 1, task.toString()));","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"            return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"(／°▽°)／Try something like this!!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"tag add [task number] [tag name]\");","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"        return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":54}},{"path":"src/main/java/duchess/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.DuchessException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskStatus;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import duchess.ToDo;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import duchess.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"import duchess.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":" * Class representing an AddToDo command.","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     * Adds a ToDo task.","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     * @param tasks       the list of tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"     * @return            Duchess\u0027 response to the command.","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"    public String execute(String userInput, TaskList tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"            ToDo todo \u003d Parser.parseToDoCommand(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"            assert todo !\u003d null : \"Task is null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"Added successfully!! d(*⌒▽⌒*)b\");","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(String.format(\"%d: %s\", tasks.indexOf(todo) + 1, todo.toString()));","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"\");","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(String.format(\"Now you have %d task(s)!! ヽ(´▽`)/\", tasks.size()));","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"            return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"(／°▽°)／Try something like this!!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"todo [name]\");","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"        return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":48}},{"path":"src/main/java/duchess/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":" * A Command class.","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"public abstract class Command implements Executable {","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"     * Factory method to get Commands.","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"    public static Command getCommand(CommandType commandType) {","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"        switch(commandType) {","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"            case LIST:","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"                return new ListTaskCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"            case MARK:","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"                return new MarkTaskCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"                return new UnmarkTaskCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"            case DELETE:","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"                return new DeleteTaskCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"            case SEARCH:","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"                return new SearchTaskCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"            case TODO:","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"                return new AddToDoCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"            case DEADLINE:","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"                return new AddDeadlineCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"            case EVENT:","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"                return new AddEventCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"            case ADD_TAG:","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"                return new AddTagCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"            case DELETE_TAG:","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"                return new DeleteTagCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"            default:","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"                return new UnrecognizedCommand();","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":37}},{"path":"src/main/java/duchess/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":" * An enum for indicating Task statuses.","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"public enum CommandType {","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"    LIST,","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"    MARK,","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"    UNMARK,","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"    DELETE,","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"    SEARCH,","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"    TODO,","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"    DEADLINE,","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"    EVENT,","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"    ADD_TAG,","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"    DELETE_TAG,","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"    UNRECOGNIZED","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":18}},{"path":"src/main/java/duchess/command/DeleteTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.DuchessException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskStatus;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import duchess.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import duchess.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":" * Class representing a DeleteTag command.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"public class DeleteTagCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     * Removes tags from a task.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * @param tasks       the list of tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     * @return            Duchess\u0027 response to the command.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    public String execute(String userInput, TaskList tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"            int tagIndex \u003d Parser.parseRemoveTagCommandIndex(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"            String[] tags \u003d Parser.parseRemoveTagCommandTags(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"            // Within bounds","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"            if (tagIndex \u003c 0 || tagIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"                response +\u003d Ui.duchessFormat(\"(´；ω；`) Sorry, no such task exists... ;-;\");","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"                return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"            Task task \u003d tasks.getTask(tagIndex);","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"            for (String tag : tags) {","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"                task.removeTag(tag);","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"Tags have been removed!! (＾▽＾)\");","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(String.format(\"%d: %s\", tasks.indexOf(task) + 1, task.toString()));","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"            return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"(／°▽°)／Try something like this!!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"tag delete[task number] [tag name]\");","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"        return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":55}},{"path":"src/main/java/duchess/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.DuchessException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskStatus;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import duchess.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import duchess.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":" * Class representing a DeleteTask command.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     * Deletes a task.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * @param tasks       the list of tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     * @return            Duchess\u0027 response to the command.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    public String execute(String userInput, TaskList tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"            int index \u003d Parser.parseDeleteTaskCommand(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"            index -\u003d 1; // 1-indexing for user-facing side","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"                        //","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"                response +\u003d Ui.duchessFormat(\"(´；ω；`) Sorry, no such task exists... ;-;\");","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"                return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"            Task task \u003d tasks.removeTask(index);","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"Deleted successfully!! d(*⌒▽⌒*)b\");","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(String.format(\"%d: %s\", index + 1, task.toString()));","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"\");","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(String.format(\"Now you have %d task(s)!! ヽ(´▽`)/\", tasks.size()));","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"            return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"(／°▽°)／Try something like this!!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"delete [task number]\");","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"        return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":52}},{"path":"src/main/java/duchess/command/Executable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":" * Interface of {@link Command}, or anything that can be executed on a TaskList for Duchess.","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":" * This can also be used to create lambda commands for Duchess.","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"@FunctionalInterface","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"interface Executable {","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"     * The function to be executed when the Executable is run.","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"     * The Executable will operate on the TaskList, and return the response as a String.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"    String execute(String userInput, TaskList taskList);","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":16}},{"path":"src/main/java/duchess/command/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import duchess.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":" * Class representing a ListTask command.","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"     * Prints all stored Tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     * @param s - the string to be stored.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     * @return    Duchess\u0027 response to the command.","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"    public String execute(String userInput, TaskList tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"        // An array of the segments of the response. This is used to prevent the issue where lambdas can only modify final variables.","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"        final ArrayList\u003cString\u003e responsesArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"        responsesArray.add(Ui.duchessFormat(\"Here are the things you said!! ヽ(^o^)丿\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"        tasks.forEach((Task t, Integer index) -\u003e {","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"            responsesArray.add(Ui.duchessFormat(String.format(\"%d: %s\", index + 1, tasks.getTask(index).toString())));","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"        });","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"        for (String responsePart : responsesArray) {","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"            response +\u003d responsePart;","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"        return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":37}},{"path":"src/main/java/duchess/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.DuchessException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskStatus;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import duchess.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import duchess.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":" * Class representing a MarkTask command.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     * Marks a task.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * @param tasks       the list of tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     * @return            Duchess\u0027 response to the command.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    public String execute(String userInput, TaskList tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"            int index \u003d Parser.parseMarkTaskCommand(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"            index -\u003d 1; // 1-indexing for user-facing side","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"                        //","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"            // Within bounds","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"                // TODO: Make this a different exception type","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"                response +\u003d Ui.duchessFormat(\"(´；ω；`) Sorry, no such task exists... ;-;\");","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"                return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"            tasks.getTask(index).changeStatus(TaskStatus.MARKED);","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"Task has been marked!! (＾▽＾)\");","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(String.format(\"%d: %s\", index + 1, tasks.getTask(index).toString()));","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"(／°▽°)／Try something like this!!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"mark [task number]\");","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"        return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":49}},{"path":"src/main/java/duchess/command/SearchTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.DuchessException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskStatus;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import duchess.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import duchess.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":" * Class representing a SearchTask command.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"public class SearchTaskCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     * Searches for all tasks by a specified string and returns the results.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * @param tasks       the list of tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     * @return            Duchess\u0027 response to the command.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    public String execute(String userInput, TaskList tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"            String searchQuery \u003d Parser.parseSearchTaskCommand(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"            // Stores the parts of the responses; workaround for not being able to reassign the constant","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"            // declared outside the lambda for the folowing filter operation","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"            final ArrayList\u003cString\u003e responsesArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"            assert searchQuery !\u003d null : \"Search query is null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"            TaskList newTaskList \u003d tasks.filterReplaceNull((Task t) -\u003e t.getName().contains(searchQuery));","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"            responsesArray.add(Ui.duchessFormat(\"Here are the things I found!! ヽ(^o^)丿\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"            newTaskList.forEach((Task t, Integer index) -\u003e {","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"                if (t !\u003d null) {","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"                    responsesArray.add(Ui.duchessFormat(String.format(\"%d: %s\", index + 1, t.toString())));","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"                }","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"            });","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"            for (String responsePart : responsesArray) {","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"                response +\u003d responsePart;","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"            return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"(／°▽°)／Try something like this!!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"search [query]\");","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"        return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":58}},{"path":"src/main/java/duchess/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.DuchessException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskStatus;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import duchess.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"import duchess.Parser;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":" * Class representing a UnmarkTask command.","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     * Unmarks a task.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"     * @param tasks       the list of tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"     * @return            Duchess\u0027 response to the command.","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"    public String execute(String userInput, TaskList tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"            int index \u003d Parser.parseUnmarkTaskCommand(userInput);","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"            index -\u003d 1; // 1-indexing for user-facing side","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"            if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"                response +\u003d Ui.duchessFormat(\"(´；ω；`) Sorry, no such task exists... ;-;\");","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"                return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"            tasks.getTask(index).changeStatus(TaskStatus.UNMARKED);","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"Task has been unmarked!! (＾▽＾)\");","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(String.format(\"%d: %s\", index + 1, tasks.getTask(index).toString()));","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"(／°▽°)／Try something like this!!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"            response +\u003d Ui.duchessFormat(\"unmark [task number]\");","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"        return response;","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":48}},{"path":"src/main/java/duchess/command/UnrecognizedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess.command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import duchess.Task;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import duchess.TaskList;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import duchess.Ui;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"/**","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":" * Class representing an Unrecognized command.","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":" */","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"public class UnrecognizedCommand extends Command {","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"     * Prints the unrecognized error message.","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"     * @param userInput - the user\u0027s input.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"     * @return            Duchess\u0027 response to the command.","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"    public String execute(String userInput, TaskList tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"        return Ui.duchessFormat(\"(´；ω；`) Oopsies... I don\u0027t know what that means ;-;\");","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":24}},{"path":"src/main/java/run.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"cd duchess/","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"javac command/*.java Deadline.java Duchess.java DuchessException.java Event.java Parser.java Storage.java Task.java TaskList.java TaskStatus.java ToDo.java Ui.java Utility.java","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"cd ..","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"java duchess/Duchess","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"rm duchess/command/*.class","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"rm duchess/*.class","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"lawruixi":6}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"\u003cfx:root alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"960.0\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"128.0\" fitWidth\u003d\"128.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"            \u003cInsets bottom\u003d\"16.0\" left\u003d\"16.0\" right\u003d\"16.0\" top\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"      \u003cPane prefWidth\u003d\"800.0\" style\u003d\"-fx-border-color: black; -fx-border-width: 4px; -fx-border-radius: 32px;\"\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"            \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"128.0\" minWidth\u003d\"-Infinity\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"                  \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"                  \u003cInsets bottom\u003d\"16.0\" left\u003d\"16.0\" right\u003d\"16.0\" top\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"            \u003cInsets bottom\u003d\"16.0\" left\u003d\"16.0\" right\u003d\"16.0\" top\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"      \u003c/Pane\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lawruixi":33}},{"path":"src/main/resources/view/Duchess.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"\u003c!--","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"  Copyright (c) 2015, 2019, Gluon and/or its affiliates.","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"  All rights reserved. Use is subject to license terms.","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"  This file is available and licensed under the following license:","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"  Redistribution and use in source and binary forms, with or without","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"  modification, are permitted provided that the following conditions","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"  are met:","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"  - Redistributions of source code must retain the above copyright","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"    notice, this list of conditions and the following disclaimer.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"  - Redistributions in binary form must reproduce the above copyright","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"    notice, this list of conditions and the following disclaimer in","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"    the documentation and/or other materials provided with the distribution.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"  - Neither the name of Oracle Corporation nor the names of its","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"    contributors may be used to endorse or promote products derived","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"    from this software without specific prior written permission.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"lawruixi"},"content":"  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"lawruixi"},"content":"  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"lawruixi"},"content":"  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"lawruixi"},"content":"  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"lawruixi"},"content":"  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"lawruixi"},"content":"  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"lawruixi"},"content":"  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"lawruixi"},"content":"  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"lawruixi"},"content":"  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"lawruixi"},"content":"  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"lawruixi"},"content":"--\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"lawruixi"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"lawruixi"},"content":"\u003cVBox fx:id\u003d\"mainWindow\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"540.0\" prefWidth\u003d\"960.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duchess.MainWindowController\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"lawruixi"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"lawruixi"},"content":"      \u003cScrollPane fx:id\u003d\"scrollPane\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"lawruixi"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"lawruixi"},"content":"            \u003cVBox fx:id\u003d\"chat_vbox\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"lawruixi"},"content":"         \u003c/content\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"lawruixi"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"lawruixi"},"content":"      \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"lawruixi"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"lawruixi"},"content":"            \u003cTextField fx:id\u003d\"userinput_textfield\" onAction\u003d\"#handleUserInput\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"lawruixi"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"lawruixi"},"content":"                  \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"lawruixi"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"lawruixi"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"lawruixi"},"content":"                  \u003cInsets bottom\u003d\"32.0\" left\u003d\"32.0\" right\u003d\"32.0\" top\u003d\"32.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"lawruixi"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"lawruixi"},"content":"            \u003c/TextField\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"lawruixi"},"content":"            \u003cButton fx:id\u003d\"send_button\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"lawruixi"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"lawruixi"},"content":"                  \u003cInsets bottom\u003d\"32.0\" left\u003d\"32.0\" right\u003d\"32.0\" top\u003d\"32.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"lawruixi"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"lawruixi"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"lawruixi"},"content":"                  \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"lawruixi"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"lawruixi"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"lawruixi"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"lawruixi"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"lawruixi"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"lawruixi"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"lawruixi":71}},{"path":"src/test/java/duchess/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"    public void indexOfTest() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"        ToDo todo \u003d new ToDo(\"Hello World!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"        assertEquals(0, taskList.indexOf(todo));","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"        taskList.removeTask(0);","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"        assertEquals(-1, taskList.indexOf(todo));","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"lawruixi":21}},{"path":"src/test/java/duchess/UtilityTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"package duchess;","lastModifiedDate":"2023-08-28"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"public class UtilityTest {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"    @Test","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"    public void matchesRegexTest() {","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"        assertTrue(Utility.matchesRegex(\"abc\", \"^a\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"        assertTrue(Utility.matchesRegex(\"abc\", \"c$\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"        assertTrue(Utility.matchesRegex(\"abc\", \"[0-9A-Za-z]+\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"        assertFalse(Utility.matchesRegex(\"abc\", \"^a$\"));","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"lawruixi":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lawruixi"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"lawruixi"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"lawruixi"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"lawruixi"},"content":"deadline return book /by 2023-08-27","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"lawruixi"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"lawruixi"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"lawruixi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"lawruixi"},"content":"todo","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"lawruixi"},"content":"deadline abc","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"lawruixi"},"content":"event abc /from def","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"lawruixi"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"lawruixi"},"content":"unmark 5","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"lawruixi"},"content":"mark ","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"lawruixi"},"content":"deadline hello world /by 2023","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"lawruixi"},"content":"event 123","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"lawruixi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"lawruixi"},"content":"delete 1","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"lawruixi"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"lawruixi"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"lawruixi":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"lawruixi"},"content":"java -classpath ../bin Duchess \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lawruixi":1,"-":37}}]
