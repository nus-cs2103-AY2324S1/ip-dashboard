[{"path":"src/main/java/glen/Glen.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":"import glen.util.Parser;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":"import glen.util.Storage;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"import glen.util.TaskList;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"import glen.util.Ui;","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"import glen.Glen;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":" * Glen is a chatbot that helps you keep track of your tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":"public class Glen {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"     * Creates a new Glen object.","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"     * @param filePath The path to the file where the tasks are stored.","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"    public Glen(String filePath) {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"        tasks \u003d storage.read();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"tayian"},"content":"     * Runs the chatbot.","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"tayian"},"content":"    public void run() {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"tayian"},"content":"        System.out.println(ui.intro());","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"tayian"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"tayian"},"content":"        String input \u003d scan.nextLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"tayian"},"content":"        while (!input.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"tayian"},"content":"            String output \u003d new Parser(storage, tasks).parseInput(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"tayian"},"content":"            System.out.println(output);","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"tayian"},"content":"            input \u003d scan.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"tayian"},"content":"        System.out.println(ui.exit());","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"tayian"},"content":"        scan.close();","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"tayian"},"content":"     * Runs the chatbot.","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"tayian"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"tayian"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"tayian"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"tayian"},"content":"        new Glen(\"./data/tasks.txt\").run();","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tayian":56}},{"path":"src/main/java/glen/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":" * Represents a Deadline task","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"    protected String by;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"     * @param isDone      Whether the deadline task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":"     * @param by          The deadline of the deadline task.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"     * Returns the description and deadline of the deadline task, to output to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"     * @return A String, properly formatting the description and deadline of the deadline task.","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"tayian"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"tayian"},"content":"     * Returns the isDone, description, and deadline of the deadline task, to input into the tasks.txt file.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"tayian"},"content":"     * @return A String, properly formatting the description of the deadline task.","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"tayian"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tayian"},"content":"        // Convert task to file format string","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tayian"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"tayian":42}},{"path":"src/main/java/glen/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":" * Represents an Event task","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"    protected String from;","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"    protected String to;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":"     * Constructor for Event class.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"     * @param description Description of event.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":"     * @param isDone      Whether event is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":"     * @param from        Start time of event.","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"     * @param to          End time of event.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-25"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-25"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"     * Returns the description, start time, and end time of the Event, to output to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"     * @return A String, properly formatting the status and description of the Event.","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"tayian"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"tayian"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":32,"author":{"gitId":"tayian"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"tayian"},"content":"     * Returns the isDone, description, start time, and end time of the Event, to input into the tasks.txt file.","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"tayian"},"content":"     * @return A String, properly formatting the description of the event task.","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"tayian"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tayian"},"content":"        // Convert task to file format string","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"tayian"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \"-\" + to;","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"tayian":45}},{"path":"src/main/java/glen/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":" * Represents a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"     * @param isDone      Whether the task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"     * @return Description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"        return this.description; // getter","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"tayian"},"content":"     * Returns the isDone status of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"tayian"},"content":"     * @return Whether the task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"tayian"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tayian"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"tayian"},"content":"     * Returns the status and description of the task, to output to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"tayian"},"content":"     * @return A String, properly formatting the status and description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"tayian"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"tayian"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"tayian"},"content":"     * Toggle the isDone status of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"tayian"},"content":"    public void toggle() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"tayian"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"tayian"},"content":"     * Analyse line of text in tasks.txt and returns the corresponding task.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"tayian"},"content":"     * @param taskLine  Line of text in tasks.txt","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"tayian"},"content":"     * @return The corresponding task","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"tayian"},"content":"    public static Task fromString(String taskLine) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"tayian"},"content":"        if (taskLine.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"tayian"},"content":"            String[] parts \u003d taskLine.split(\"\\\\|\"); // Split the string by the | character","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"tayian"},"content":"            String taskDescription \u003d parts[2].trim(); // Extract and trim the task description","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"tayian"},"content":"            String deadline \u003d parts[3].trim(); // Extract and trim the deadline","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"tayian"},"content":"            int temp \u003d Integer.parseInt(parts[1].trim()); // Extract the isDone status","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"tayian"},"content":"            boolean isDone \u003d (temp \u003d\u003d 1); // Set as boolean","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"tayian"},"content":"            Task newDeadline \u003d new Deadline(taskDescription, isDone, deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"tayian"},"content":"            return newDeadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"tayian"},"content":"        } else if (taskLine.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"tayian"},"content":"            String[] parts \u003d taskLine.split(\"\\\\|\"); // Split the string by the | character","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"tayian"},"content":"            String taskDescription \u003d parts[2].trim(); // Extract and trim the task description","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"tayian"},"content":"            String from \u003d parts[3].trim(); // Extract and trim the \"from\" time","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"tayian"},"content":"            String to \u003d parts[3].trim(); // Extract and trim the \"to\" time","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"tayian"},"content":"            int temp \u003d Integer.parseInt(parts[1].trim()); // Extract the isDone status","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"tayian"},"content":"            boolean isDone \u003d (temp \u003d\u003d 1); // Set as boolean","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"tayian"},"content":"            Task newEvent \u003d new Event(taskDescription, isDone, from, to);","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"tayian"},"content":"            return newEvent;","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"tayian"},"content":"        } else if (taskLine.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"tayian"},"content":"            String[] parts \u003d taskLine.split(\"\\\\|\"); // Split the string by the | character","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"tayian"},"content":"            String taskDescription \u003d parts[2].trim(); // Extract and trim the task description","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"tayian"},"content":"            int temp \u003d Integer.parseInt(parts[1].trim()); // Extract the isDone status","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"tayian"},"content":"            boolean isDone \u003d (temp \u003d\u003d 1); // Set as boolean","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"tayian"},"content":"            Task newTodo \u003d new Todo(taskDescription, isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"tayian"},"content":"            return newTodo; ","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"tayian"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"tayian"},"content":"            return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"tayian":97}},{"path":"src/main/java/glen/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen.task;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":" * Represents a Todo task","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"     * Constructor for Todo.","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":"     * @param isDone      Whether the todo task is done.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"    ","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"     * Returns the description of the todo task, to output to the user.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"     * @return A String, properly formatting the description of the todo task.","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"tayian"},"content":"     * Returns the isDone, and description of the todo task, to input into the tasks.txt file.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"tayian"},"content":"     * @return A String, properly formatting the description of the todo task.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"tayian"},"content":"    public String toFileString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tayian"},"content":"        // Convert task to file format string","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"tayian"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"tayian"},"content":"    ","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"tayian":38}},{"path":"src/main/java/glen/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen.util;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"/**","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":" * Parser class that handles user input and calls the appropriate methods.","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":" */","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"public class Parser {","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"    private static final String HORLINE \u003d \"_____________________________________________________\\n\";","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":"     * Constructor for Parser class.","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"     * @param storage Storage object that handles file I/O.","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":"     * @param tasks   TaskList object that handles the list of tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"    public Parser(Storage storage, TaskList tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"     * Parses the user input and calls the appropriate methods.","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"     * @param input String of user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"     * @return String of output to be printed.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"    public String parseInput(String input) {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"tayian"},"content":"        String low \u003d input.toLowerCase();","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"tayian"},"content":"        if (low.equals(\"list\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"tayian"},"content":"            return tasks.lst();","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"tayian"},"content":"        ","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"tayian"},"content":"        int index \u003d Math.max(0, low.indexOf(\" \"));","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"tayian"},"content":"        String firstWord \u003d low.substring(0, index);","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"tayian"},"content":"        String end \u003d \"\";","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"tayian"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"tayian"},"content":"            end \u003d input.substring(++index);","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"tayian"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"tayian"},"content":"        if (firstWord.equals(\"mark\") || firstWord.equals(\"unmark\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"tayian"},"content":"            return handleMarkUnmark(firstWord, end);","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"tayian"},"content":"        } else if (firstWord.equals(\"find\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"tayian"},"content":"            return tasks.find(end);","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"tayian"},"content":"        } else if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"tayian"},"content":"            return handleDeadline(end);","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"tayian"},"content":"        } else if (firstWord.equals(\"event\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"tayian"},"content":"            return handleEvent(end);","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"tayian"},"content":"        } else if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"tayian"},"content":"            return handleTodo(end);","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"tayian"},"content":"        } else if (firstWord.equals(\"delete\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"tayian"},"content":"            return handleDelete(end);","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"tayian"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"tayian"},"content":"            return HORLINE + \"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + HORLINE;","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"tayian"},"content":"     * Handles the mark/unmark command.","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"tayian"},"content":"     * @param end String of the task index.","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"tayian"},"content":"     * @return String of output to be printed.","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"tayian"},"content":"    private String handleMarkUnmark(String firstWord, String end) {","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"tayian"},"content":"        int taskIndex \u003d -1;","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"tayian"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"tayian"},"content":"            taskIndex \u003d Integer.valueOf(end) - 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"tayian"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"tayian"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"tayian"},"content":"            return tasks.toggle(storage, firstWord, taskIndex);","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"tayian"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"tayian"},"content":"            return HORLINE + \"\\u2639 OOPS!!! Please select a valid item to mark/unmark.\\n\" + HORLINE;","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"tayian"},"content":"     * Handles the deadline command.","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"tayian"},"content":"     * @param end String of the deadline.","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"tayian"},"content":"     * @return String of output to be printed.","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"tayian"},"content":"    private String handleDeadline(String end) {","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"tayian"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"tayian"},"content":"            int separatorIndex \u003d end.indexOf(\"/by\");","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"tayian"},"content":"            String string1 \u003d end.substring(0, separatorIndex).trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"tayian"},"content":"            String string2 \u003d end.substring(separatorIndex + 3).trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"tayian"},"content":"            return tasks.addDeadline(storage, string1, string2);","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"tayian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"tayian"},"content":"            return HORLINE + \"\\u2639 OOPS!!! Your request needs to be formatted as:\\ndeadline \u003ctask name\u003e /by \u003ctime\u003e\\n\" + HORLINE;","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"tayian"},"content":"     * Handles the event command.","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"tayian"},"content":"     * @param end String of the event.","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"tayian"},"content":"     * @return String of output to be printed.","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"tayian"},"content":"    private String handleEvent(String end) {","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"tayian"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"tayian"},"content":"            int fromIndex \u003d end.indexOf(\"/from\");","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"tayian"},"content":"            int toIndex \u003d end.indexOf(\"/to\");","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"tayian"},"content":"            String string1 \u003d end.substring(0, fromIndex).trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"tayian"},"content":"            String string2 \u003d end.substring(fromIndex + 6, toIndex).trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"tayian"},"content":"            String string3 \u003d end.substring(toIndex + 4).trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"tayian"},"content":"            return tasks.addEvent(storage, string1, string2, string3);","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"tayian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"tayian"},"content":"            return HORLINE + \"\\u2639 OOPS!!! Your request needs to be formatted as:\\nevent \u003cevent name\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\\n\" + HORLINE;","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"tayian"},"content":"     * Handles the todo command.","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"tayian"},"content":"     * @param end String of the todo.","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"tayian"},"content":"     * @return String of output to be printed.","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"tayian"},"content":"    private String handleTodo(String end) {","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"tayian"},"content":"        String trimmed \u003d end.trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"tayian"},"content":"        if (trimmed.equals(\"\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"tayian"},"content":"            return HORLINE + \"\\u2639 OOPS!!! The description of a todo cannot be empty.\\n\" + HORLINE;","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"tayian"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"tayian"},"content":"            return tasks.addTodo(storage, trimmed);","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"tayian"},"content":"     * Handles the delete command.","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"tayian"},"content":"     * @param end String of the task index.","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"tayian"},"content":"     * @return String of output to be printed.","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"tayian"},"content":"    private String handleDelete(String end) {","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"tayian"},"content":"        int taskIndex \u003d -1;","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"tayian"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"tayian"},"content":"            taskIndex \u003d Integer.valueOf(end) - 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"tayian"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"tayian"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"tayian"},"content":"            return tasks.del(storage, taskIndex);","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"tayian"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":154,"author":{"gitId":"tayian"},"content":"            return HORLINE + \"\\u2639 OOPS!!! Please select a valid item to delete.\\n\" + HORLINE;","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"tayian":157}},{"path":"src/main/java/glen/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen.util;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"import glen.task.Deadline;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":"import glen.task.Event;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":"import glen.task.Todo;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":" * Handles reading and writing tasks to the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"    private File file;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"     * @param path The path to the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"tayian"},"content":"     * Reads tasks from the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"tayian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"tayian"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"tayian"},"content":"    public TaskList read() {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"tayian"},"content":"        ","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"tayian"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"tayian"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"tayian"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"tayian"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"tayian"},"content":"                try {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"tayian"},"content":"                    String temp \u003d sc.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"tayian"},"content":"                    String[] task \u003d temp.split(\"\\\\|\");","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"tayian"},"content":"                    if (temp.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"tayian"},"content":"                        taskList.add(new Deadline(task[2].trim(), task[1].trim().equals(\"1\"), task[3].trim()));","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"tayian"},"content":"                    } else if (temp.charAt(0) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"tayian"},"content":"                        String[] timeframe \u003d task[3].split(\"-\");","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"tayian"},"content":"                        taskList.add(new Event(task[2].trim(), task[1].trim().equals(\"1\"), timeframe[0].trim(), timeframe[1].trim()));","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"tayian"},"content":"                    } else if (temp.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"tayian"},"content":"                        taskList.add(new Todo(task[2].trim(), task[1].trim().equals(\"1\")));","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"tayian"},"content":"                    } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"tayian"},"content":"                        System.out.println(\"Unknown task type: \" + temp.charAt(0));","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"tayian"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"tayian"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"tayian"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"tayian"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"tayian"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"tayian"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"tayian"},"content":"            System.out.println(e);","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"tayian"},"content":"            createFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"tayian"},"content":"        return taskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"tayian"},"content":"     * Creates a new file if it does not exist","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"tayian"},"content":"     * Creates parent directories if needed.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"tayian"},"content":"     */    ","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"tayian"},"content":"    private void createFile() {","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"tayian"},"content":"        this.file.getParentFile().mkdir();","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"tayian"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"tayian"},"content":"            if (this.file.createNewFile()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"tayian"},"content":"                System.out.println(\"File has been created successfully: \" + this.file.getPath());","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"tayian"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"tayian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"tayian"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"tayian"},"content":"            System.out.println(\"There is an error creating the file.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"tayian"},"content":"     * Adds a task in String format to the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"tayian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"tayian"},"content":"     * @param fileFormat The formatted task to add.","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"tayian"},"content":"    public void addTask(String fileFormat) {","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"tayian"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"tayian"},"content":"            FileWriter fw \u003d new FileWriter(this.file, true);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"tayian"},"content":"            if (this.file.length() !\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"tayian"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"tayian"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"tayian"},"content":"            fw.write(fileFormat);","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"tayian"},"content":"            fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"tayian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"tayian"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"tayian"},"content":"     * Updates a task in the storage file.","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"tayian"},"content":"     * When updatedFile is null, this method also deletes a task in the storage file.","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"tayian"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"tayian"},"content":"     * @param index The index of the task to update.","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"tayian"},"content":"     * @param updatedFile The updated task in intended String format.","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"tayian"},"content":"     */    ","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"tayian"},"content":"    public void updateTask(int index, String updatedFile) {","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"tayian"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"tayian"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"tayian"},"content":"            ArrayList\u003cString\u003e updatedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"tayian"},"content":"            int indx \u003d 0;","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"tayian"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"tayian"},"content":"                String currTask \u003d sc.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"tayian"},"content":"                if (indx !\u003d index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"tayian"},"content":"                    updatedTaskList.add(currTask);","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"tayian"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"tayian"},"content":"                    if (updatedFile !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"tayian"},"content":"                        updatedTaskList.add(updatedFile);","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"tayian"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"tayian"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"tayian"},"content":"                indx++;","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"tayian"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"tayian"},"content":"            sc.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"tayian"},"content":"            FileWriter filewriter \u003d new FileWriter(this.file);","lastModifiedDate":"2023-09-02"},{"lineNumber":136,"author":{"gitId":"tayian"},"content":"            filewriter.write(String.join(\"\\n\", updatedTaskList));","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"tayian"},"content":"            filewriter.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"tayian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"tayian"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":141,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"tayian"},"content":"   ","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"tayian":143}},{"path":"src/main/java/glen/util/StringToDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen.util;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"import java.util.Locale;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"public class StringToDateTime {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"    protected String dateString;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":"    public StringToDateTime(String dateString) {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":"        this.dateString \u003d dateString;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":"    public LocalDateTime converter() {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"        DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd h:mm a\", Locale.ENGLISH),","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MMM-dd h:mm a\", Locale.ENGLISH),","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\", Locale.ENGLISH),","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy\")  // month short forms","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"        };","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"        LocalDateTime dateTime \u003d null;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"            try {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"                dateTime \u003d LocalDateTime.parse(dateString, formatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"                break; // Break if parsing is successful with a formatter","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"tayian"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"tayian"},"content":"                try {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"tayian"},"content":"                    dateTime \u003d LocalDate.parse(dateString, formatter).atStartOfDay();","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"tayian"},"content":"                    break; // Break if parsing is successful with a formatter","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"tayian"},"content":"                } catch (Exception f) {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"tayian"},"content":"                    try {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"tayian"},"content":"                        String[] parts \u003d dateString.split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"tayian"},"content":"                        String temp \u003d parts[0].trim() + \" \" + parts[1].trim().substring(0, 3) + \" \" + parts[2].trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"tayian"},"content":"                        dateTime \u003d LocalDate.parse(temp, formatter).atStartOfDay();","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"tayian"},"content":"                        break; // Break if parsing is successful with a formatter","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"tayian"},"content":"                    } catch (Exception g) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"tayian"},"content":"                        // Ignore and move on to next ","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"tayian"},"content":"                    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"tayian"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"tayian"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"tayian"},"content":"        return dateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"tayian":49}},{"path":"src/main/java/glen/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen.util;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"import glen.task.Deadline;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":"import glen.task.Event;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":"import glen.task.Task;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"import glen.task.Todo;","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":" * TaskList class that stores the list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":" * Contains methods to add, delete, and list tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"public class TaskList {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":"    private static final String HORLINE \u003d \"_____________________________________________________\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"     * Creates a new ArrayList of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"tayian"},"content":"     * @param storage   Storage object that handles the writing to the file.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"tayian"},"content":"     * @param taskIndex Index of the task to be deleted.","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"tayian"},"content":"     * @return String that confirms the deletion of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"tayian"},"content":"    String del(Storage storage, int taskIndex) {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"tayian"},"content":"        assert taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size() : \"Invalid task index.\";","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"tayian"},"content":"        String temp \u003d tasks.get(taskIndex).toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"tayian"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"tayian"},"content":"        ","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"tayian"},"content":"        // short of defining a separate storage.delete method (with very similar code), the best way is to updateTask to null","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"tayian"},"content":"        storage.updateTask(taskIndex, null);","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"tayian"},"content":"        return HORLINE + \"Noted. I\u0027ve removed this task:\\n  \" + temp + \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\" + HORLINE;","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"tayian"},"content":"     * Adds a Deadline task to the list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"tayian"},"content":"     * @param storage   Storage object that handles the writing to the file.","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"tayian"},"content":"     * @param inp       Description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"tayian"},"content":"     * @param by        Deadline of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"tayian"},"content":"     * @return String that confirms the addition of the Deadline task.","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"tayian"},"content":"    String addDeadline(Storage storage, String inp, String by) {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"tayian"},"content":"        assert inp !\u003d null \u0026\u0026 !inp.trim().isEmpty() : \"Task description cannot be empty\";","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"tayian"},"content":"        Deadline newTask \u003d new Deadline(inp, false, by);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"tayian"},"content":"        String newTaskString \u003d newTask.toFileString();","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"tayian"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"tayian"},"content":"        storage.addTask(newTaskString);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"tayian"},"content":"        return HORLINE + \"Got it. I\u0027ve added this task:\\n  \" + newTask.toString() + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + HORLINE;","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"tayian"},"content":"     * Adds an Event task to the list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"tayian"},"content":"     * @param storage   Storage object that handles the writing to the file.","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"tayian"},"content":"     * @param inp       Description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"tayian"},"content":"     * @param from      Start time of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"tayian"},"content":"     * @param to        End time of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"tayian"},"content":"     * @return String that confirms the addition of the Event task.","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":69,"author":{"gitId":"tayian"},"content":"    String addEvent(Storage storage, String inp, String from, String to) {","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"tayian"},"content":"        assert inp !\u003d null \u0026\u0026 !inp.trim().isEmpty() : \"Task description cannot be empty\";","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"tayian"},"content":"        Event newTask \u003d new Event(inp, false, from, to);","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"tayian"},"content":"        String newTaskString \u003d newTask.toFileString();","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"tayian"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"tayian"},"content":"        storage.addTask(newTaskString);","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"tayian"},"content":"        return HORLINE + \"Got it. I\u0027ve added this task:\\n  \" + newTask.toString() + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + HORLINE;","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"tayian"},"content":"     * Adds a Todo task to the list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":81,"author":{"gitId":"tayian"},"content":"     * @param storage   Storage object that handles the writing to the file.","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"tayian"},"content":"     * @param inp       Description of the task.","lastModifiedDate":"2023-09-09"},{"lineNumber":83,"author":{"gitId":"tayian"},"content":"     * @return String that confirms the addition of the Todo task.","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"tayian"},"content":"    String addTodo(Storage storage, String inp) {","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"tayian"},"content":"        assert inp !\u003d null \u0026\u0026 !inp.trim().isEmpty() : \"Task description cannot be empty\";","lastModifiedDate":"2023-09-14"},{"lineNumber":87,"author":{"gitId":"tayian"},"content":"        Todo newTask \u003d new Todo(inp, false);","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"tayian"},"content":"        String newTaskString \u003d newTask.toFileString();","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"tayian"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"tayian"},"content":"        storage.addTask(newTaskString);","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"tayian"},"content":"        return HORLINE + \"Got it. I\u0027ve added this task:\\n  \" + newTask.toString() + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + HORLINE;","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":95,"author":{"gitId":"tayian"},"content":"     * Toggles the status of a task.","lastModifiedDate":"2023-09-09"},{"lineNumber":96,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":97,"author":{"gitId":"tayian"},"content":"     * @param storage       Storage object that handles the writing to the file.","lastModifiedDate":"2023-09-09"},{"lineNumber":98,"author":{"gitId":"tayian"},"content":"     * @param requestType   Type of request (mark/unmark).","lastModifiedDate":"2023-09-09"},{"lineNumber":99,"author":{"gitId":"tayian"},"content":"     * @param taskIndex     Index of the task to be toggled.","lastModifiedDate":"2023-09-09"},{"lineNumber":100,"author":{"gitId":"tayian"},"content":"     * @return String that confirms that the task has been marked/unmarked.","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":102,"author":{"gitId":"tayian"},"content":"    String toggle(Storage storage, String requestType, int taskIndex) {","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"tayian"},"content":"        if (taskIndex \u003e tasks.size()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"tayian"},"content":"            return \"Invalid item selected. Please try again.\";","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"tayian"},"content":"        } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"tayian"},"content":"            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"tayian"},"content":"            if (requestType.equals(\"mark\") \u0026\u0026 task.getStatusIcon().equals(\"[X] \")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"tayian"},"content":"                return HORLINE + \"Task is currently marked. Did you mean to unmark the task?\\n\" + HORLINE;","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"tayian"},"content":"            } else if (requestType.equals(\"unmark\") \u0026\u0026 task.getStatusIcon().equals(\"[ ] \")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":110,"author":{"gitId":"tayian"},"content":"                return HORLINE + \"Task is currently unmarked. Did you mean to mark the task?\\n\" + HORLINE;","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"tayian"},"content":"            } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"tayian"},"content":"                task.toggle();","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"tayian"},"content":"                String updatedTaskString \u003d \"\";","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"tayian"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"tayian"},"content":"                    updatedTaskString \u003d ((Deadline) task).toFileString();","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"tayian"},"content":"                } else if (task instanceof Todo) {","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"tayian"},"content":"                    updatedTaskString \u003d ((Todo) task).toFileString();","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"tayian"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"tayian"},"content":"                    updatedTaskString \u003d ((Event) task).toFileString();","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"tayian"},"content":"                }","lastModifiedDate":"2023-09-08"},{"lineNumber":121,"author":{"gitId":"tayian"},"content":"                storage.updateTask(taskIndex, updatedTaskString);","lastModifiedDate":"2023-09-08"},{"lineNumber":122,"author":{"gitId":"tayian"},"content":"                if (task.getStatusIcon().equals(\"[X] \")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"tayian"},"content":"                    return HORLINE + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"tayian"},"content":"                         + \"  [X] \" + task.getDescription() + \"\\n\" + HORLINE;","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"tayian"},"content":"                } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"tayian"},"content":"                    return HORLINE + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"tayian"},"content":"                         + \"  [ ] \" + task.getDescription() + \"\\n\" + HORLINE;","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"tayian"},"content":"                }","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"tayian"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":130,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":131,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":132,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":134,"author":{"gitId":"tayian"},"content":"     * Finds all the tasks that contain the keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":135,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":136,"author":{"gitId":"tayian"},"content":"     * @param keyword   Keyword to be searched for.","lastModifiedDate":"2023-09-09"},{"lineNumber":137,"author":{"gitId":"tayian"},"content":"     * @return String that lists all the tasks that contain the keyword.","lastModifiedDate":"2023-09-09"},{"lineNumber":138,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":139,"author":{"gitId":"tayian"},"content":"    String find(String keyword) {","lastModifiedDate":"2023-09-09"},{"lineNumber":140,"author":{"gitId":"tayian"},"content":"        assert keyword.trim() !\u003d null : \"Keyword for task search cannot be null.\";","lastModifiedDate":"2023-09-14"},{"lineNumber":141,"author":{"gitId":"tayian"},"content":"        String temp \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":142,"author":{"gitId":"tayian"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-09"},{"lineNumber":143,"author":{"gitId":"tayian"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-09"},{"lineNumber":144,"author":{"gitId":"tayian"},"content":"            Task tempTask \u003d tasks.get(i);","lastModifiedDate":"2023-09-09"},{"lineNumber":145,"author":{"gitId":"tayian"},"content":"            if (tempTask.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-09"},{"lineNumber":146,"author":{"gitId":"tayian"},"content":"                temp +\u003d String.valueOf(i + 1) + \".\" + tempTask.toString() + \"\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":147,"author":{"gitId":"tayian"},"content":"                count++;","lastModifiedDate":"2023-09-09"},{"lineNumber":148,"author":{"gitId":"tayian"},"content":"            }","lastModifiedDate":"2023-09-09"},{"lineNumber":149,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":150,"author":{"gitId":"tayian"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2023-09-09"},{"lineNumber":151,"author":{"gitId":"tayian"},"content":"            return HORLINE + \"No matching tasks found.\\n\" + HORLINE;","lastModifiedDate":"2023-09-09"},{"lineNumber":152,"author":{"gitId":"tayian"},"content":"        } else {","lastModifiedDate":"2023-09-09"},{"lineNumber":153,"author":{"gitId":"tayian"},"content":"            return HORLINE + temp + HORLINE;","lastModifiedDate":"2023-09-09"},{"lineNumber":154,"author":{"gitId":"tayian"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":155,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":156,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":157,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":158,"author":{"gitId":"tayian"},"content":"     * Lists all the tasks in the list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":159,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":160,"author":{"gitId":"tayian"},"content":"     * @return String that lists all the tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":161,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":162,"author":{"gitId":"tayian"},"content":"    String lst() {","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"tayian"},"content":"        String temp \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":164,"author":{"gitId":"tayian"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":165,"author":{"gitId":"tayian"},"content":"            Task tempTask \u003d tasks.get(i);","lastModifiedDate":"2023-09-08"},{"lineNumber":166,"author":{"gitId":"tayian"},"content":"            temp +\u003d String.valueOf(i + 1) + \".\" + tempTask.toString() + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":167,"author":{"gitId":"tayian"},"content":"        }  ","lastModifiedDate":"2023-09-08"},{"lineNumber":168,"author":{"gitId":"tayian"},"content":"        return HORLINE + temp + HORLINE;","lastModifiedDate":"2023-09-08"},{"lineNumber":169,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":170,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":171,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":172,"author":{"gitId":"tayian"},"content":"     * Extends .add method in ArrayList class to TaskList class.","lastModifiedDate":"2023-09-09"},{"lineNumber":173,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":174,"author":{"gitId":"tayian"},"content":"     * @param task  Task to be added to the list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":175,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":176,"author":{"gitId":"tayian"},"content":"    void add(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":177,"author":{"gitId":"tayian"},"content":"        assert task !\u003d null : \"Task to be added cannot be null.\";","lastModifiedDate":"2023-09-14"},{"lineNumber":178,"author":{"gitId":"tayian"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":179,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":180,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":181,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":182,"author":{"gitId":"tayian"},"content":"     * Extends .get method in ArrayList class to TaskList class.","lastModifiedDate":"2023-09-09"},{"lineNumber":183,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":184,"author":{"gitId":"tayian"},"content":"     * @return Size of the list of tasks.","lastModifiedDate":"2023-09-09"},{"lineNumber":185,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":186,"author":{"gitId":"tayian"},"content":"    int size() {","lastModifiedDate":"2023-09-08"},{"lineNumber":187,"author":{"gitId":"tayian"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-08"},{"lineNumber":188,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":189,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"tayian":189}},{"path":"src/main/java/glen/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen.util;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":" * Ui class that handles the user interface.","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"public class Ui {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"    private static final String HORLINE \u003d \"_____________________________________________________\\n\";","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"     * Returns the introduction text.","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":"     * @return String of introduction text.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"    public static String intro() {","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":"        String logo \u003d \"  _____ _            \\n\" +","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":"                      \" / ____| |           \\n\" +","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"                      \"| |  __| | ___ _ __  \\n\" +","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"                      \"| | |_ | |/ _ \\\\  _ \\\\ \\n\" +","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"                      \"| |__| | |  __/ | | |\\n\" +","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"                      \" \\\\_____|_|\\\\___|_| |_|\\n\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"        String introText \u003d \"Hello, I\u0027m Glen!\\n\" + ","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"                           \"What can I do for you?\\n\";","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"        return HORLINE + logo + introText + HORLINE;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"     * Returns the exit text.","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"     * ","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"tayian"},"content":"     * @return String of exit text.","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"tayian"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"tayian"},"content":"    public static String exit() {","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"tayian"},"content":"        return HORLINE + \"Bye. Hope to see you again soon!\\n\" + HORLINE;","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"tayian":34}},{"path":"src/test/java/glen/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen.util;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"    @Test","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"    void parseInput_shouldHandleMarkCommand() {","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"        Storage storage \u003d new Storage(\"test/tasks.txt\");","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":"        storage.addTask(\"T | 0 | Test Task\");","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"        TaskList taskList \u003d storage.read();","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":"        Parser parser \u003d new Parser(storage, taskList);","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"        String result \u003d parser.parseInput(\"mark 1\");","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"        assertEquals(\"_____________________________________________________\\n\" +","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"                \"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"                \"  [X] Test Task\\n\" +","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"                \"_____________________________________________________\\n\", result);","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"        // Validate that the task is marked as done","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"        assertTrue(taskList.lst().contains(\"[X] Test Task\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"        // reset test/tasks.txt to an empty file.","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"        storage.updateTask(0, null);","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"tayian":30}},{"path":"src/test/java/glen/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen.util;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"    @Test","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"    void holisticTest() {","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":"        Storage storage \u003d new Storage(\"test/tasks.txt\");","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":"        storage.addTask(\"T | 0 | Test Task\");","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"        storage.addTask(\"D | 0 | Test Deadline | 2023-09-15\");","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":"        TaskList taskList \u003d storage.read();","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"        // Validate that the tasks are read correctly from the file","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"        assertTrue(taskList.lst().contains(\"[T][ ] Test Task\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"        assertTrue(taskList.lst().contains(\"[D][ ] Test Deadline (by: 2023-09-15)\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"        // reset test/tasks.txt to an empty file.","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"        storage.updateTask(0, null);","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"        storage.updateTask(0, null);","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"tayian":28}},{"path":"src/test/java/glen/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"package glen.util;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"import glen.task.Todo;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"    @Test","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":"    void addTodo_shouldAddNewTodoToList() {","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"tayian"},"content":"        Storage storage \u003d new Storage(\"test/tasks.txt\");","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"tayian"},"content":"        String result \u003d taskList.addTodo(storage, \"Test Todo\");","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"tayian"},"content":"        assertEquals(\"_____________________________________________________\\n\" +","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"tayian"},"content":"                \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"                \"  [T][ ] Test Todo\\n\" +","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"tayian"},"content":"                \"Now you have 1 tasks in the list.\\n\" +","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"tayian"},"content":"                \"_____________________________________________________\\n\", result);","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"tayian"},"content":"        // Validate the list has the new Todo","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"tayian"},"content":"        assertTrue(taskList.lst().contains(\"Test Todo\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"tayian"},"content":"        // reset test/tasks.txt to an empty file.","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"tayian"},"content":"        storage.updateTask(0, null);","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"tayian"},"content":"    @Test","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"tayian"},"content":"    void toggle_shouldToggleTaskStatus() {","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"tayian"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"tayian"},"content":"        Storage storage \u003d new Storage(\"test/tasks.txt\");","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"tayian"},"content":"        taskList.add(new Todo(\"Test Todo\", false));","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"tayian"},"content":"        String result \u003d taskList.toggle(storage, \"mark\", 0);","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"tayian"},"content":"        assertEquals(\"_____________________________________________________\\n\" +","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"tayian"},"content":"                \"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"tayian"},"content":"                \"  [X] Test Todo\\n\" +","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"tayian"},"content":"                \"_____________________________________________________\\n\", result);","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"tayian"},"content":"        // Validate the status is toggled","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"tayian"},"content":"        assertTrue(taskList.lst().contains(\"[X] Test Todo\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"tayian"},"content":"        // reset test/tasks.txt to an empty file.","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"tayian"},"content":"        storage.updateTask(0, null);","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"tayian"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"tayian"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"tayian"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"tayian":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tayian"},"content":"todo borrow book","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"tayian"},"content":"list","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"tayian"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"tayian"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"tayian"},"content":"todo","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"tayian"},"content":"blah","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"tayian"},"content":"mark 99","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"tayian"},"content":"deadline return book","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"tayian"},"content":"delete","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"tayian"},"content":"delete 0","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"tayian"},"content":"delete 3","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"tayian"},"content":"bye","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"tayian":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tayian"},"content":"java -classpath ..\\bin Glen \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tayian":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tayian"},"content":"java -classpath ../bin Glen \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tayian":1,"-":37}}]
