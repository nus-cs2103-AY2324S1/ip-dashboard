[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"    protected String deadline ;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"    public Deadline(String name, String deadline){","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"    // Override toString method","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"    @Override public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"remuslum":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"        //Initiate Scanner to handle user input","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"        // Introduction Message","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"        System.out.println(ErrorMessages.INTRODUCTION.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"        System.out.println();","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"        // Task List Storage","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"        // Saving User input into a list","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"            String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"            // If user types bye, goodbye message is printed.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"                // Program terminates if user types \"bye\" and only \"bye\"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"                if (userInput.contains(\"bye\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"                    // Check if only \"bye\" is typed and not \"bye bye\" (Example)","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"                    if (userInput.length() \u003d\u003d 3){","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"                        System.out.println(ErrorMessages.GOODBYE_MESSAGE.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"                        throw new DukeException(ErrorMessages.INVALID_INPUT.getMessage() + \" \u0027bye\u0027 ?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"                // If user types list, the list is printed. Otherwise, an exception is thrown.","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"                else if (userInput.contains(\"list\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"                    // Check if only list is typed and not \"list my items\" (Example)","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"remuslum"},"content":"                    if (userInput.length() \u003d\u003d 4){","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"remuslum"},"content":"                        System.out.println(\"Here are the tasks for your list:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"remuslum"},"content":"                        for (int i \u003d 0; i \u003c taskList.size(); i++){","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"remuslum"},"content":"                            System.out.println(Integer.toString(i+1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"remuslum"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"remuslum"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"remuslum"},"content":"                        throw new DukeException(ErrorMessages.INVALID_INPUT.getMessage() + \" \u0027list\u0027 ?\");","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"remuslum"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"remuslum"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"remuslum"},"content":"                // If user types mark command, we mark the event","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"remuslum"},"content":"                else if (userInput.contains(\"mark\") \u0026\u0026 !userInput.contains(\"unmark\")){","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"remuslum"},"content":"                    if(userInput.length() \u003d\u003d 4){","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"remuslum"},"content":"                        // Check if task number is present","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"remuslum"},"content":"                        throw new DukeException(ErrorMessages.MISSING_TASK_NUMBER.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"remuslum"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"remuslum"},"content":"                        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"remuslum"},"content":"                            int taskNumber \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"remuslum"},"content":"                            Task taskToBeMarked \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"remuslum"},"content":"                            if (taskToBeMarked.isTaskCompleted()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"remuslum"},"content":"                                // If task is already completed, prompt user.","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"remuslum"},"content":"                                throw new DukeException(\"Task has already been marked as completed.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"remuslum"},"content":"                            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"remuslum"},"content":"                                // Mark task as completed.","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"remuslum"},"content":"                                taskToBeMarked.markTaskCompleted();","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"remuslum"},"content":"                                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"remuslum"},"content":"                                System.out.println(taskToBeMarked.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"remuslum"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"remuslum"},"content":"                        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"remuslum"},"content":"                            // Check if task number provided is within size of task list.","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"remuslum"},"content":"                            throw new DukeException(ErrorMessages.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"remuslum"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"remuslum"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"remuslum"},"content":"                    // If user types unmark command, we unmark the event","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"remuslum"},"content":"                } else if (userInput.contains(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"remuslum"},"content":"                    if (userInput.length() \u003d\u003d 6){","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"remuslum"},"content":"                        throw new DukeException(ErrorMessages.MISSING_TASK_NUMBER.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"remuslum"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"remuslum"},"content":"                        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"remuslum"},"content":"                            int taskNumber2 \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"remuslum"},"content":"                            Task taskToBeUnmarked \u003d taskList.get(taskNumber2);","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"remuslum"},"content":"                            // If the task has already been unmarked, prompt the user","lastModifiedDate":"2023-08-23"},{"lineNumber":82,"author":{"gitId":"remuslum"},"content":"                            if (!taskToBeUnmarked.isTaskCompleted()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":83,"author":{"gitId":"remuslum"},"content":"                                throw new DukeException(\"Task has already been marked as uncompleted.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"remuslum"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"remuslum"},"content":"                            else {","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"remuslum"},"content":"                                // Mark task as uncompleted","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"remuslum"},"content":"                                taskToBeUnmarked.markTaskUncompleted();","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"remuslum"},"content":"                                System.out.println(\"OK, I\u0027ve marked this task as not done yet\");","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"remuslum"},"content":"                                System.out.println(taskToBeUnmarked.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"remuslum"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"remuslum"},"content":"                        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"remuslum"},"content":"                            throw new DukeException(ErrorMessages.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"remuslum"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"remuslum"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"remuslum"},"content":"                } else if (userInput.contains(\"delete\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"remuslum"},"content":"                    // Check if task number is present, otherwise prompt the user to include.","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"remuslum"},"content":"                    if (userInput.length() \u003d\u003d 6){","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"remuslum"},"content":"                        throw new DukeException(ErrorMessages.MISSING_TASK_NUMBER.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"remuslum"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"remuslum"},"content":"                        try{","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"remuslum"},"content":"                            int taskNumber3 \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"remuslum"},"content":"                            Task taskToBeDeleted \u003d taskList.get(taskNumber3);","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"remuslum"},"content":"                            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"remuslum"},"content":"                            System.out.println(taskToBeDeleted.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"remuslum"},"content":"                            taskList.remove(taskNumber3);","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"remuslum"},"content":"                            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"remuslum"},"content":"                        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"remuslum"},"content":"                            // Check if task number is within the size of task list.","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"remuslum"},"content":"                            throw new DukeException(ErrorMessages.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"remuslum"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"remuslum"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"remuslum"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"remuslum"},"content":"                // Identify type of task and add it to the list","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"remuslum"},"content":"                else {","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"remuslum"},"content":"                    if (userInput.contains(\"todo\")){","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"remuslum"},"content":"                        // Check if event description is present.","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"remuslum"},"content":"                        if (userInput.length() \u003d\u003d 4){","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"remuslum"},"content":"                            throw new DukeException(ErrorMessages.EMPTY_DESCRIPTION_HEAD.getMessage() + \"todo\" + ErrorMessages.EMPTY_DESCRIPTION_TAIL.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"remuslum"},"content":"                        } else{","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"remuslum"},"content":"                            Todo toDoTask \u003d new Todo(userInput.substring(5));","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"remuslum"},"content":"                            taskList.add(toDoTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"remuslum"},"content":"                            System.out.println(ErrorMessages.TASK_ADDED.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":123,"author":{"gitId":"remuslum"},"content":"                            System.out.println(toDoTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"remuslum"},"content":"                            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"remuslum"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"remuslum"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"remuslum"},"content":"                    else if (userInput.contains(\"deadline\")){","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"remuslum"},"content":"                        if (userInput.length() \u003d\u003d 8){","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"remuslum"},"content":"                            throw new DukeException(ErrorMessages.EMPTY_DESCRIPTION_HEAD.getMessage() + \"deadline\" + ErrorMessages.EMPTY_DESCRIPTION_TAIL.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"remuslum"},"content":"                        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":131,"author":{"gitId":"remuslum"},"content":"                            String[] deadlineString \u003d userInput.substring(9).split(\"/\");","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"remuslum"},"content":"                            if (deadlineString.length \u003d\u003d 1){","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"remuslum"},"content":"                                // Check if deadline is present.","lastModifiedDate":"2023-08-24"},{"lineNumber":134,"author":{"gitId":"remuslum"},"content":"                                throw new DukeException(\"Deadline is not provided. Please indicate your deadline by placing a \u0027/by\u0027 before the deadline.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"remuslum"},"content":"                            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"remuslum"},"content":"                                Deadline deadlineTask \u003d new Deadline(deadlineString[0].trim(), deadlineString[1].substring(3));","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"remuslum"},"content":"                                taskList.add(deadlineTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"remuslum"},"content":"                                System.out.println(ErrorMessages.TASK_ADDED.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"remuslum"},"content":"                                System.out.println(deadlineTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"remuslum"},"content":"                                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"remuslum"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"remuslum"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"remuslum"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"remuslum"},"content":"                    else if (userInput.contains(\"event\")){","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"remuslum"},"content":"                        if (userInput.length() \u003d\u003d 5){","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"remuslum"},"content":"                            throw new DukeException(ErrorMessages.EMPTY_DESCRIPTION_HEAD.getMessage() + \"event\" + ErrorMessages.EMPTY_DESCRIPTION_TAIL.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"remuslum"},"content":"                        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"remuslum"},"content":"                            String[] eventString \u003d userInput.substring(6).split(\"/\");","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"remuslum"},"content":"                            // Check if a start and end time has been provided.","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"remuslum"},"content":"                            if (eventString.length \u003c 3){","lastModifiedDate":"2023-08-24"},{"lineNumber":151,"author":{"gitId":"remuslum"},"content":"                                throw new DukeException(\"I\u0027m sorry, you seem to have forgotten to enter a start/end time. \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":152,"author":{"gitId":"remuslum"},"content":"                                        \"Please indicate the start time starting with /from and the end time starting with /to.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"remuslum"},"content":"                            } else if (eventString.length \u003e 3){","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"remuslum"},"content":"                                throw new DukeException(\"I\u0027m sorry, you seem to have entered too many timings.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"remuslum"},"content":"                            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":156,"author":{"gitId":"remuslum"},"content":"                                Event eventTask \u003d new Event(eventString[0].trim(), eventString[1].substring(5).trim(), eventString[2].substring(3));","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"remuslum"},"content":"                                taskList.add(eventTask);","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"remuslum"},"content":"                                System.out.println(ErrorMessages.TASK_ADDED.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"remuslum"},"content":"                                System.out.println(eventTask.toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"remuslum"},"content":"                                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"remuslum"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"remuslum"},"content":"                        }","lastModifiedDate":"2023-08-24"},{"lineNumber":163,"author":{"gitId":"remuslum"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":164,"author":{"gitId":"remuslum"},"content":"                    else {","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"remuslum"},"content":"                        throw new DukeException(ErrorMessages.INCOMPREHENSIBLE_TASK.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":166,"author":{"gitId":"remuslum"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"remuslum"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"remuslum"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-08-24"},{"lineNumber":169,"author":{"gitId":"remuslum"},"content":"                System.out.println(exception.getMessage() + \"\\n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":170,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"remuslum"},"content":"            scanner.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":8,"remuslum":166}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"    public DukeException(String message){","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"remuslum":5}},{"path":"src/main/java/ErrorMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"enum ErrorMessages {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"    INVALID_INPUT(\"I\u0027m sorry, I don\u0027t understand this command. Did you mean to type \"),","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"    GOODBYE_MESSAGE(\"Bye. Hope to see you again soon!\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"    INTRODUCTION(\"Hello! I\u0027m Chad. \\n\" + \"What can I do for you?\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"    MISSING_TASK_NUMBER(\"I\u0027m sorry, you seem to have forgotten to enter the task number.\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"    INVALID_TASK_NUMBER(\"I\u0027m sorry, the task number you have entered a number that exceeds the size of your task list.\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"    EMPTY_DESCRIPTION_HEAD(\"I\u0027m sorry, the description of a \"),","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"    EMPTY_DESCRIPTION_TAIL(\" cannot be empty\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"    TASK_ADDED(\"Got it. I\u0027ve added this task:\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"    INCOMPREHENSIBLE_TASK(\"I\u0027m sorry, I don\u0027t understand this task.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    private final String message ;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    ErrorMessages(String message){","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"    public String getMessage(){","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"        return this.message ;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"remuslum":21}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"    protected String start ;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"    protected String end ;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"    public Event(String name, String start, String end){","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"    //toString method","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    @Override public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"remuslum":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"    protected String name ;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"    protected boolean status ;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"    //Constructors","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"    public Task(String name){","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"        this.name \u003d name ;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"    private Task(String name, boolean status){","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"        this.name \u003d name ;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"        this.status \u003d status ;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"    //Getters","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"    public String getTaskName(){","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"        return this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"    public boolean isTaskCompleted(){","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"        return this.status;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"    // Setters","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"    public void markTaskCompleted(){","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"        this.status \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"    public void markTaskUncompleted(){","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"    public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"        if (this.status){","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"            return \"[X] \" + this.name ;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"            return \"[ ] \" + this.name ;","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"remuslum":40}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"    public Todo(String name){","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"    // Override toString method","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"    @Override public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"remuslum":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"bye","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"remuslum":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":32,"remuslum":1}}]
