[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"remuslum"},"content":"javafx {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"remuslum"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"remuslum"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":64,"author":{"gitId":"remuslum"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"-":41,"remuslum":30}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"[D] [ ] return book (by: Aug 31 2023 4PM)","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"[E] [ ] project meeting (from: Aug 31 2023 2PM to: Sep 1 2023 1PM)","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"[T] [ ] return book","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"[D] [ ] return book (by: Aug 31 2023 4PM)","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"[E] [ ] project meeting (from: Aug 31 2023 2PM to: Sep 1 2023 1PM)","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"[T] [ ] return book","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"[E] [ ] project meeting (from: Aug 31 2023 2PM to: Sep 1 2023 1PM)","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"[T] [ ] return book","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"remuslum":8}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import duke.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"remuslum":9}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"remuslum"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"remuslum"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"remuslum"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"remuslum"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"remuslum"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"remuslum"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"remuslum"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"remuslum"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"remuslum"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"remuslum"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"remuslum"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"remuslum"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"remuslum":65}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":" * Main class of the application.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"public class Duke extends Application{","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"    private String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bulbasaur.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Charmander.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"remuslum"},"content":"    public Duke() throws IOException {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"remuslum"},"content":"        this(\"data/duke.txt\");","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"remuslum"},"content":"    public Duke (String filePath){","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"remuslum"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"remuslum"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"remuslum"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"remuslum"},"content":"        try{","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"remuslum"},"content":"            ArrayList\u003cString\u003e taskStringList \u003d this.storage.load();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"remuslum"},"content":"            this.taskList \u003d new TaskList(taskStringList);","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"remuslum"},"content":"        } catch (DukeException e){","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"remuslum"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"remuslum"},"content":"     * Runs the chatBot.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"remuslum"},"content":"     * @throws DukeException if the filepath is incorrectly provided","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"remuslum"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"remuslum"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"remuslum"},"content":"        System.out.println(ui.showWelcome());","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"remuslum"},"content":"        System.out.println(ui.showListMessage(taskList));","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"remuslum"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"remuslum"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"remuslum"},"content":"            // If user types bye, goodbye message is printed.","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"remuslum"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"remuslum"},"content":"                String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"remuslum"},"content":"                Command c \u003d parser.parse(userInput);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"remuslum"},"content":"                String response \u003d c.execute(taskList, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"remuslum"},"content":"                System.out.println(response);","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"remuslum"},"content":"                if (c instanceof ExitCommand) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"remuslum"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"remuslum"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"remuslum"},"content":"            } catch (DukeException e){","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"remuslum"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"remuslum"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"remuslum"},"content":"        boolean isFileDeleted \u003d file.delete();","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"remuslum"},"content":"        if (isFileDeleted){","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"remuslum"},"content":"            storage.update(this.taskList, this.filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"remuslum"},"content":"        scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"remuslum"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"remuslum"},"content":"    public void start(Stage stage){","lastModifiedDate":"2023-09-06"},{"lineNumber":92,"author":{"gitId":"remuslum"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":93,"author":{"gitId":"remuslum"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-06"},{"lineNumber":94,"author":{"gitId":"remuslum"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"remuslum"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-06"},{"lineNumber":97,"author":{"gitId":"remuslum"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-06"},{"lineNumber":98,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"remuslum"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"remuslum"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-06"},{"lineNumber":101,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"remuslum"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-06"},{"lineNumber":103,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":104,"author":{"gitId":"remuslum"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-06"},{"lineNumber":105,"author":{"gitId":"remuslum"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-06"},{"lineNumber":106,"author":{"gitId":"remuslum"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":107,"author":{"gitId":"remuslum"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":108,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":109,"author":{"gitId":"remuslum"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":110,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":111,"author":{"gitId":"remuslum"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-06"},{"lineNumber":112,"author":{"gitId":"remuslum"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-06"},{"lineNumber":113,"author":{"gitId":"remuslum"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-06"},{"lineNumber":114,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":115,"author":{"gitId":"remuslum"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":116,"author":{"gitId":"remuslum"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":117,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":118,"author":{"gitId":"remuslum"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-06"},{"lineNumber":119,"author":{"gitId":"remuslum"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-06"},{"lineNumber":120,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":121,"author":{"gitId":"remuslum"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":122,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":123,"author":{"gitId":"remuslum"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":124,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":125,"author":{"gitId":"remuslum"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":126,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":127,"author":{"gitId":"remuslum"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":128,"author":{"gitId":"remuslum"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":129,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":130,"author":{"gitId":"remuslum"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"remuslum"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-06"},{"lineNumber":132,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":133,"author":{"gitId":"remuslum"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":134,"author":{"gitId":"remuslum"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":135,"author":{"gitId":"remuslum"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":136,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":137,"author":{"gitId":"remuslum"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-06"},{"lineNumber":138,"author":{"gitId":"remuslum"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-06"},{"lineNumber":139,"author":{"gitId":"remuslum"},"content":"        });","lastModifiedDate":"2023-09-06"},{"lineNumber":140,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":141,"author":{"gitId":"remuslum"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-06"},{"lineNumber":142,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":143,"author":{"gitId":"remuslum"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":144,"author":{"gitId":"remuslum"},"content":"        stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":145,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":146,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"remuslum"},"content":"     * Iteration 1:","lastModifiedDate":"2023-09-06"},{"lineNumber":149,"author":{"gitId":"remuslum"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-06"},{"lineNumber":150,"author":{"gitId":"remuslum"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-09-06"},{"lineNumber":151,"author":{"gitId":"remuslum"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-06"},{"lineNumber":152,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":153,"author":{"gitId":"remuslum"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-06"},{"lineNumber":154,"author":{"gitId":"remuslum"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-09-06"},{"lineNumber":155,"author":{"gitId":"remuslum"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":156,"author":{"gitId":"remuslum"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-06"},{"lineNumber":157,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":158,"author":{"gitId":"remuslum"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-06"},{"lineNumber":159,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":160,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":161,"author":{"gitId":"remuslum"},"content":"     * Iteration 2:","lastModifiedDate":"2023-09-06"},{"lineNumber":162,"author":{"gitId":"remuslum"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":163,"author":{"gitId":"remuslum"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":164,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":165,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":166,"author":{"gitId":"remuslum"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":167,"author":{"gitId":"remuslum"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":168,"author":{"gitId":"remuslum"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":169,"author":{"gitId":"remuslum"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":170,"author":{"gitId":"remuslum"},"content":"                DialogBox.getUserDialog(input, user),","lastModifiedDate":"2023-09-06"},{"lineNumber":171,"author":{"gitId":"remuslum"},"content":"                DialogBox.getDukeDialog(response, duke)","lastModifiedDate":"2023-09-06"},{"lineNumber":172,"author":{"gitId":"remuslum"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":173,"author":{"gitId":"remuslum"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":174,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":175,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":176,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":177,"author":{"gitId":"remuslum"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-06"},{"lineNumber":178,"author":{"gitId":"remuslum"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-06"},{"lineNumber":179,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":180,"author":{"gitId":"remuslum"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":181,"author":{"gitId":"remuslum"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-07"},{"lineNumber":182,"author":{"gitId":"remuslum"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"remuslum"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"remuslum"},"content":"            return c.execute(taskList, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":185,"author":{"gitId":"remuslum"},"content":"        } catch (DukeException e){","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"remuslum"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":189,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":190,"author":{"gitId":"remuslum"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2023-09-06"},{"lineNumber":191,"author":{"gitId":"remuslum"},"content":"        new Duke().run();","lastModifiedDate":"2023-09-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"remuslum":191}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":" * An exception class that handles and parses the type of error.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"    public DukeException(String message){","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"remuslum":10}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bulbasaur.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Charmander.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"remuslum"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"remuslum"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"remuslum"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"remuslum"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"remuslum"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"remuslum"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"remuslum"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"remuslum"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"remuslum"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"remuslum":54}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.command.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.messages.ErrorMessages;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import duke.messages.Messages;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import duke.task.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":" * Parses the user input into the respective command.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"     * Returns the appropriate command to be executed.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"     * @param command the command inputted by the user","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"     * @return the appropriate command to be executed","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"     * @throws DukeException if command is not recognised, an error is thrown","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"    public Command parse(String command) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"        if (command.contains(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"            if (command.trim().length() \u003d\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"                throw new DukeException(ErrorMessages.INVALID_INPUT.getMessage() + \" \u0027bye\u0027 ?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"        } else if (command.contains(\"list\")){","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"            if (command.trim().length() \u003d\u003d 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"                return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"                throw new DukeException(ErrorMessages.INVALID_INPUT.getMessage() + \" \u0027list\u0027 ?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"        } else if (command.contains(\"delete\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"            if (command.trim().length() \u003d\u003d 6) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"                throw new DukeException(ErrorMessages.MISSING_TASK_NUMBER.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"                return new DeleteCommand(Integer.parseInt(command.substring(7)));","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"remuslum"},"content":"        } else if (command.contains(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"remuslum"},"content":"            if (command.trim().length() \u003d\u003d 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"remuslum"},"content":"                throw new DukeException(ErrorMessages.EMPTY_DESCRIPTION_HEAD.getMessage() + \"todo\"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"remuslum"},"content":"                        + ErrorMessages.EMPTY_DESCRIPTION_TAIL.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"remuslum"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"remuslum"},"content":"                Todo toDoTask \u003d new Todo(command.substring(5));","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"remuslum"},"content":"                return new AddCommand(toDoTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"remuslum"},"content":"        } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"remuslum"},"content":"            if (command.trim().length() \u003d\u003d 8) {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"remuslum"},"content":"                throw new DukeException(ErrorMessages.EMPTY_DESCRIPTION_HEAD.getMessage() +","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"remuslum"},"content":"                        \"deadline\" + ErrorMessages.EMPTY_DESCRIPTION_TAIL.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"remuslum"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"remuslum"},"content":"                String[] deadlineString \u003d command.substring(9).split(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"remuslum"},"content":"                if (deadlineString.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"remuslum"},"content":"                    // Check if deadline is present.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"remuslum"},"content":"                    throw new DukeException(ErrorMessages.MISSING_DEADLINE.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"remuslum"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"remuslum"},"content":"                    // Deal with DateTimeParseException","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"remuslum"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(Messages.DATE_FORMAT.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"remuslum"},"content":"                    LocalDateTime deadlineDate \u003d LocalDateTime.parse(deadlineString[1].substring(3),","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"remuslum"},"content":"                            formatter);","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"remuslum"},"content":"                    Deadline deadlineTask \u003d new Deadline(deadlineString[0].trim(), deadlineDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"remuslum"},"content":"                    return new AddCommand(deadlineTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"remuslum"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"remuslum"},"content":"        } else if (command.contains(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"remuslum"},"content":"            if (command.trim().length() \u003d\u003d 5) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"remuslum"},"content":"                throw new DukeException(ErrorMessages.EMPTY_DESCRIPTION_HEAD.getMessage() + \"event\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"remuslum"},"content":"                        ErrorMessages.EMPTY_DESCRIPTION_TAIL.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"remuslum"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"remuslum"},"content":"                String[] eventString \u003d command.substring(6).split(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"remuslum"},"content":"                // Check if a start and end time has been provided.","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"remuslum"},"content":"                if (eventString.length \u003c 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"remuslum"},"content":"                    throw new DukeException(ErrorMessages.MISSING_EVENT_TIMING.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"remuslum"},"content":"                } else if (eventString.length \u003e 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"remuslum"},"content":"                    throw new DukeException(ErrorMessages.TOO_MANY_EVENT_TIMINGS.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"remuslum"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"remuslum"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(Messages.DATE_FORMAT.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"remuslum"},"content":"                    LocalDateTime startDate \u003d LocalDateTime.parse(eventString[1].substring(5).trim(), formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"remuslum"},"content":"                    LocalDateTime endDate \u003d LocalDateTime.parse(eventString[2].substring(3).trim(), formatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"remuslum"},"content":"                    if (endDate.isBefore(startDate)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"remuslum"},"content":"                        throw new DukeException(ErrorMessages.INVALID_END_DATE.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"remuslum"},"content":"                    } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"remuslum"},"content":"                        Event eventTask \u003d new Event(eventString[0].trim(), startDate, endDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"remuslum"},"content":"                        return new AddCommand(eventTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"remuslum"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"remuslum"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"remuslum"},"content":"        } else if (command.contains(\"mark\") \u0026\u0026 !command.contains(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"remuslum"},"content":"            if (command.trim().length() \u003d\u003d 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"remuslum"},"content":"                throw new DukeException(ErrorMessages.MISSING_TASK_NUMBER.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"remuslum"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"remuslum"},"content":"                int taskNumber \u003d Integer.parseInt(command.substring(5).trim());","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"remuslum"},"content":"                return new MarkCommand(taskNumber);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"remuslum"},"content":"        } else if (command.contains(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"remuslum"},"content":"            if (command.trim().length() \u003d\u003d 6) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"remuslum"},"content":"                throw new DukeException(ErrorMessages.MISSING_TASK_NUMBER.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"remuslum"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"remuslum"},"content":"                int taskNumber \u003d Integer.parseInt(command.substring(7).trim());","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"remuslum"},"content":"                return new UnmarkCommand(taskNumber);","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"remuslum"},"content":"        } else if (command.contains(\"find\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"remuslum"},"content":"            if (command.trim().length() \u003d\u003d 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"remuslum"},"content":"                throw new DukeException(ErrorMessages.NO_KEYWORD_PROVIDED.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"remuslum"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"remuslum"},"content":"                String input \u003d command.substring(5).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"remuslum"},"content":"                return new FindCommand(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"remuslum"},"content":"        else {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"remuslum"},"content":"            throw new DukeException(ErrorMessages.INCOMPREHENSIBLE_TASK.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"remuslum":118}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import java.io.*;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":" * Handles the textfile provided by the user and loads all tasks from previous sessions.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"    protected File file;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    protected String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"     * Load textfile into an arraylist of the tasks in String format.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"     * @return an ArrayList of the existing tasks in String format","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"     * @throws DukeException if the filepath is incorrectly inputted","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"    public ArrayList\u003cString\u003e load() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"        ArrayList\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"            FileReader fileReader \u003d new FileReader(this.filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"            String line;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"                taskList.add(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"            throw new DukeException(\"Unable to Load\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"        return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"remuslum"},"content":"     * At the end of the session, the textfile is properly updated.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"remuslum"},"content":"     * @param taskList the final task list before ending the session","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"remuslum"},"content":"     * @param filePath the path of the updated textfile","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"remuslum"},"content":"     * @throws DukeException if the filepath is incorrectly inputted","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"remuslum"},"content":"    public void update(TaskList taskList, String filePath) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"remuslum"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"remuslum"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"remuslum"},"content":"            for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"remuslum"},"content":"                fileWriter.write(task.toString() + \u0027\\n\u0027);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"remuslum"},"content":"            fileWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"remuslum"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"remuslum"},"content":"            throw new DukeException(\"Unable to locate file.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"remuslum":60}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":" * Handles all operations of the taskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"    public TaskList(ArrayList\u003cString\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"        for (String task: tasks){","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"            if (task.contains(\"T\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"                Todo convertedToDoTask \u003d new Todo(task.substring(8));","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"                this.taskList.add(convertedToDoTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"            } else if (task.contains(\"D\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"                String[] deadlineString \u003d task.substring(8).split(\"\\\\(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy ha\");","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"                LocalDateTime deadlineDate \u003d LocalDateTime.parse(deadlineString[1]","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"                        .substring(4, deadlineString[1].length() - 1).trim(), formatter);","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"                Deadline deadlineTask \u003d new Deadline(deadlineString[0].trim(), deadlineDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"                this.taskList.add(deadlineTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"            } else if (task.contains(\"E\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"                String[] eventString \u003d task.substring(8).split(\"\\\\(\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"                String[] timelineString \u003d eventString[1].split(\"to:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy ha\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"                LocalDateTime startDate \u003d LocalDateTime.parse(timelineString[0]","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"                        .substring(6).trim(), formatter);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"                LocalDateTime endDate \u003d LocalDateTime.parse(timelineString[1].substring(0,","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"                        timelineString[1].length() - 1).trim(), formatter);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"                Event eventTask \u003d new Event(eventString[0].trim(), startDate, endDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"                this.taskList.add(eventTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"remuslum"},"content":"     * Obtain the task list in arraylist format.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"remuslum"},"content":"     * @return the ArrayList","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"remuslum"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"remuslum"},"content":"        return this.taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"remuslum"},"content":"     * Get the length of the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"remuslum"},"content":"     * @return an integer of the list\u0027s length","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"remuslum"},"content":"    public int getLengthOfTaskList(){","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"remuslum"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"remuslum"},"content":"     * Obtain a specific task from the list","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"remuslum"},"content":"     * @param taskNumber the index of the task in the list","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"remuslum"},"content":"     * @return the specified task","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"remuslum"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"remuslum"},"content":"        return this.taskList.get(taskNumber);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"remuslum"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"remuslum"},"content":"     * @param task the task to be added","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"remuslum"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"remuslum"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"remuslum"},"content":"     * Removes the specified task from the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"remuslum"},"content":"     * @param taskNumber the index of the task to be removed","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"remuslum"},"content":"    public void removeTask(int taskNumber){","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"remuslum"},"content":"        this.taskList.remove(taskNumber);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"remuslum":86}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.messages.Messages;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":" * Shows all appropriate messages to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"        // Introduction Message","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"        return Messages.INTRODUCTION.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"    public String showExitMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"        return Messages.GOODBYE_MESSAGE.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"    public String showListMessage(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"        StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"        for (int i \u003d 0 ; i \u003c taskList.getLengthOfTaskList() ; i++){","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"            if (i \u003d\u003d taskList.getLengthOfTaskList() - 1){","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"                tasks.append((i + 1)).append(\". \").append(taskList.getTaskList().get(i));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"            } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"                tasks.append((i + 1)).append(\". \").append(taskList.getTaskList().get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"        return Messages.LIST_COMMAND.getMessage() + \"\\n\" + tasks ;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"    public String showMarkMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"        return Messages.MARK_COMMAND.getMessage() + \"\\n\" + task;","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"    public String showUnmarkMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"        return Messages.UNMARK_COMMAND.getMessage() + \"\\n\" + task;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"remuslum"},"content":"    public String showDeletedMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"remuslum"},"content":"        return Messages.DELETED_COMMAND.getMessage() + \"\\n\" + task + \"\\n\" + showTaskListSize(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"remuslum"},"content":"    public String showAddedMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"remuslum"},"content":"        return Messages.TASK_ADDED.getMessage() + \"\\n\" + task + \"\\n\" + showTaskListSize(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"remuslum"},"content":"    public String showFoundMessages(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"remuslum"},"content":"        StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"remuslum"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"remuslum"},"content":"            if (i \u003d\u003d taskList.size() - 1){","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"remuslum"},"content":"                tasks.append((i + 1)).append(\". \").append(taskList.get(i));","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"remuslum"},"content":"            } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"remuslum"},"content":"                tasks.append((i + 1)).append(\". \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"remuslum"},"content":"        return Messages.FOUND_TASKS.getMessage() + \"\\n\" + tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"remuslum"},"content":"    public String showTaskListSize(TaskList taskList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"remuslum"},"content":"        return (\"Now you have \" + taskList.getTaskList().size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"remuslum":66}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":" * Represents a command that adds a task to the existing task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"    protected Task taskToBeAdded ;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    public AddCommand(Task taskToBeAdded){","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"        this.taskToBeAdded \u003d taskToBeAdded ;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"     * Modifies the existing list by adding the task provided by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"     * @param taskList the existing task list of the user","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"     * @param ui the ui that handles successful/unsuccessful messages","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"    public String execute(TaskList taskList, Ui ui){","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(this.taskToBeAdded);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"        return ui.showAddedMessage(taskToBeAdded, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"remuslum":26}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":" * Represents a command to be executed on the task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"    public abstract String execute(TaskList taskList, Ui ui) throws DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"remuslum":13}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import duke.messages.ErrorMessages;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":" * Represents a command that deletes a task from the existing task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    protected int taskNumber;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    public DeleteCommand(int taskNumber){","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"        this.taskNumber \u003d taskNumber ;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"     * Modifies the existing list by deleting the task provided by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"     * @param taskList the existing task list","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"     * @param ui the ui that handles successful/unsuccessful messages","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"     * @throws DukeException if the task number provided is not in the bounds of the list, an error is thrown","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"    public String execute (TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"        try{","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"            Task taskToBeDeleted \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"            taskList.removeTask(taskNumber);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"            return ui.showDeletedMessage(taskToBeDeleted, taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"            // Check if task number is within the size of task list.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"            throw new DukeException(ErrorMessages.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"remuslum":34}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":" * A command that allows the user to exit the app.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"     * SHows the goodbye message to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"     * @param taskList the existing task list of the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"     * @param ui the ui that handles successful/unsuccessful messages","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"    public String execute(TaskList taskList, Ui ui){","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"            new Storage(\"data/duke.txt\").update(taskList, \"data/duke.txt\");","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"        } catch (DukeException e){","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"        return ui.showExitMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"remuslum":24}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import duke.messages.ErrorMessages;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"import duke.messages.Messages;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":" * A command that lists all task associated with the keyword inputted by the user","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"    String keyword ;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"    public FindCommand(String input){","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"        this.keyword \u003d input ;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"     * Finds all tasks related to the keyword provided.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"     * @param taskList the existing task list of the user","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"     * @param ui the ui that handles successful/unsuccessful messages","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"     * @throws DukeException if no task is found, throw an error","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"    public String execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"        for (Task task : taskList.getTaskList()){","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"            if (task.getName().contains(this.keyword)){","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"        if (matchingTasks.isEmpty()){","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"            throw new DukeException(ErrorMessages.KEYWORD_NOT_FOUND.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"        else {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"            return ui.showFoundMessages(matchingTasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"remuslum":41}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":" * Display all tasks in the current task list","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"     * Shows all tasks in the current task list.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"     * @param taskList the existing task list of the user","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"     * @param ui the ui that handles successful/unsuccessful messages","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"    public String execute(TaskList taskList, Ui ui){","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"        return ui.showListMessage(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"remuslum":19}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import duke.messages.ErrorMessages;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":" * A command that marks a specified task as Completed","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"    protected int taskNumber;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"    public MarkCommand(int taskNumber){","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"     * Marks the specific task provided by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"     * @param taskList the existing task list","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"     * @param ui the ui that handles successful/unsuccessful messages","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"     * @throws DukeException If the task has already been marked, an error is thrown","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"    public String execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"            Task taskToBeMarked\u003d taskList.getTask(this.taskNumber - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"            if (taskToBeMarked.isTaskCompleted()){","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"                throw new DukeException(\"Task has already been marked as completed.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"            else {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"                taskToBeMarked.markTaskCompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"                return ui.showMarkMessage(taskToBeMarked);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"            throw new DukeException(ErrorMessages.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"remuslum":40}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import duke.messages.ErrorMessages;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":" * A command that unmarks a specified task","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"    protected int taskNumber;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"    public UnmarkCommand(int taskNumber){","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"     * Unmarks the specific task provided by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"     * @param taskList the existing task list","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"     * @param ui the ui that handles successful/unsuccessful messages","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"     * @throws DukeException If the task has already been unmarked, an error is thrown","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"    public String execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"            Task taskToBeUnmarked \u003d taskList.getTask(this.taskNumber - 1);","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"            if (!taskToBeUnmarked.isTaskCompleted()){","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"                throw new DukeException(\"Task has already been marked as uncompleted.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"            } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"                taskToBeUnmarked.markTaskUncompleted();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"                return ui.showUnmarkMessage(taskToBeUnmarked);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"            throw new DukeException(ErrorMessages.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"remuslum":40}},{"path":"src/main/java/duke/messages/ErrorMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.messages;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":" * An enum class that states all the error messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"public enum ErrorMessages {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"    INVALID_INPUT(\"I\u0027m sorry, I don\u0027t understand this command. Did you mean to type \"),","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"    MISSING_TASK_NUMBER(\"I\u0027m sorry, you seem to have forgotten to enter the task number.\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"    INVALID_TASK_NUMBER(\"I\u0027m sorry, the task number you have entered a number \" +","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"            \"that exceeds the size of your task list.\"),","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"    EMPTY_DESCRIPTION_HEAD(\"I\u0027m sorry, the description of a \"),","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    EMPTY_DESCRIPTION_TAIL(\" cannot be empty\"),","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"    INCOMPREHENSIBLE_TASK(\"I\u0027m sorry, I don\u0027t understand this task.\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    MISSING_DEADLINE(\"Deadline is not provided. Please indicate your deadline by placing a \" +","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"            \"\u0027/by\u0027 before the deadline.\"),","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"    MISSING_EVENT_TIMING(\"I\u0027m sorry, you seem to have forgotten to enter a start/end time. \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"            \"Please indicate the start time starting with /from and the end time starting with /to.\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"    TOO_MANY_EVENT_TIMINGS(\"I\u0027m sorry, you seem to have entered too many timings.\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"    INVALID_END_DATE(\"End date cannot be before start date!\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"    KEYWORD_NOT_FOUND(\"I\u0027m sorry, I could not find task with this word in it.\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"    NO_KEYWORD_PROVIDED(\"I\u0027m sorry. Did you forget to enter a keyword?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"    private final String message;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"    ErrorMessages(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"        return this.message;","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"remuslum":32}},{"path":"src/main/java/duke/messages/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.messages;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":" * An enum class that states all general messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"public enum Messages {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"    INTRODUCTION(\"Hello! I\u0027m Chad. \\n\" + \"What can I do for you?\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"    LIST_COMMAND(\"Here are the tasks on your list: \"),","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"    MARK_COMMAND(\"Nice! I\u0027ve marked this task as done:\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"    UNMARK_COMMAND(\"OK, I\u0027ve marked this task as not done yet.\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"    DELETED_COMMAND(\"Noted. I\u0027ve removed this task:\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    GOODBYE_MESSAGE(\"Bye. Hope to see you again soon!\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"    TASK_ADDED(\"Got it. I\u0027ve added this task:\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    DATE_FORMAT(\"yyyy-MM-dd ha\"),","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"    FOUND_TASKS(\"Here are the matching tasks in your list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"    private final String MESSAGE;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"    Messages(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"        this.MESSAGE \u003d message;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"    public String getMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"        return this.MESSAGE;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"remuslum":26}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":" * Represents a Deadline Task","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    public Deadline(String name, LocalDateTime deadline) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"    // Override toString method","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"    @Override public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy ha\")) + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"remuslum":22}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":" * Represents an Event Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    public Event(String name, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"    //toString method","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"    @Override public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy ha\")) +","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"                \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy ha\")) + \")\";","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"remuslum":26}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":" * Represents a task to be added by the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"    protected String name;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"    protected boolean status;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"    //Constructors","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"    public String getName() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"        return this.name;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"    public boolean isTaskCompleted() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"        return this.status;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"    public void markTaskCompleted() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"        this.status \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"    public void markTaskUncompleted() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"    public String toString(){","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"        if (this.status){","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"remuslum":39}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"package duke.task;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":" * Represents a Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    // Override toString method","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"    @Override public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"remuslum":16}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"remuslum":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"remuslum":20}},{"path":"src/test/java/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.messages.Messages;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"    public void execute_addToDo_success() {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask \u003d new Todo(\"return book\");","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"        ArrayList\u003cString\u003e taskListString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"        TaskList taskList \u003d new TaskList(taskListString);","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"        String successMessage \u003d Messages.TASK_ADDED.getMessage() + \"\\n\" + toDoTask + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"        assertEquals(successMessage, new AddCommand(toDoTask).execute(taskList, ui));","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"remuslum":25}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    public void deadlineStringConversion() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"        LocalDateTime deadlineDate \u003d LocalDateTime.parse(\"2023-08-31 4PM\",","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd ha\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"        String deadlineTaskName \u003d \"return book\";","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"        assertEquals(\"[D] [ ] return book (by: Aug 31 2023 4PM)\",","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"                new Deadline(deadlineTaskName, deadlineDate).toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"remuslum":19}},{"path":"src/test/java/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    public void execute_delete_success() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask \u003d new Todo(\"return book\");","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask2 \u003d new Todo(\"run 5km\");","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"        ArrayList\u003cString\u003e taskListString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"        TaskList taskList \u003d new TaskList(taskListString);","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask2);","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"        String successMessage \u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\" + toDoTask + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"        assertEquals(successMessage, new DeleteCommand(1).execute(taskList, ui));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"    public void execute_delete_indexOutOfBoundsExceptionThrown() {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask \u003d new Todo(\"return book\");","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask2 \u003d new Todo(\"run 5km\");","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"        ArrayList\u003cString\u003e taskListString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"        TaskList taskList \u003d new TaskList(taskListString);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask2);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"        String successMessage \u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\" + toDoTask + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"remuslum"},"content":"            assertEquals(successMessage, new DeleteCommand(3).execute(taskList, ui));","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"remuslum"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"remuslum"},"content":"            assertEquals(\"I\u0027m sorry, the task number you have entered a number that exceeds the size \"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"remuslum"},"content":"                    + \"of your task list.\", e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"remuslum":47}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"    public void EventStringConversion() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd ha\");","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(\"2023-08-31 2PM\", formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(\"2023-09-01 1PM\", formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"        String taskName \u003d \"project meeting\";","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"        assertEquals(\"[E] [ ] project meeting (from: Aug 31 2023 2PM to: Sep 1 2023 1PM)\",","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"                new Event(taskName, startDate, endDate).toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"remuslum":20}},{"path":"src/test/java/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    public void execute_mark_success() throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask \u003d new Todo(\"return book\");","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask2 \u003d new Todo(\"run 5km\");","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"        ArrayList\u003cString\u003e taskListString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"        TaskList taskList \u003d new TaskList(taskListString);","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask2);","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"        Todo toDoTaskCompleted \u003d new Todo(\"return book\");","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"        toDoTaskCompleted.markTaskCompleted();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"        String successMessage \u003d ui.showMarkMessage(toDoTaskCompleted);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"        assertEquals(successMessage, new MarkCommand(1).execute(taskList, ui));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"    public void execute_mark_alreadyMarkedExceptionThrown() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask \u003d new Todo(\"return book\");","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask2 \u003d new Todo(\"run 5km\");","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"        ArrayList\u003cString\u003e taskListString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"        TaskList taskList \u003d new TaskList(taskListString);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask2);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"        toDoTask.markTaskCompleted();","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"        String successMessage \u003d ui.showMarkMessage(toDoTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"remuslum"},"content":"            assertEquals(successMessage, new MarkCommand(1).execute(taskList, ui));","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"remuslum"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"remuslum"},"content":"            assertEquals(\"Task has already been marked as completed.\", e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"remuslum"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"remuslum"},"content":"    public void execute_mark_indexOutOfBoundsExceptionThrown() {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask \u003d new Todo(\"return book\");","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask2 \u003d new Todo(\"run 5km\");","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"remuslum"},"content":"        ArrayList\u003cString\u003e taskListString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"remuslum"},"content":"        TaskList taskList \u003d new TaskList(taskListString);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask2);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"remuslum"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"remuslum"},"content":"        toDoTask.markTaskCompleted();","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"remuslum"},"content":"        String successMessage \u003d ui.showMarkMessage(toDoTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"remuslum"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"remuslum"},"content":"            assertEquals(successMessage, new MarkCommand(3).execute(taskList, ui));","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"remuslum"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"remuslum"},"content":"            assertEquals(\"I\u0027m sorry, the task number you have entered a number that exceeds the size of \"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"remuslum"},"content":"                    + \"your task list.\", e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"remuslum":64}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"    public void ToDoStringConversion() {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"        String taskName \u003d \"return book\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"        assertEquals(\"[T] [ ] return book\", new Todo(taskName).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"remuslum":12}},{"path":"src/test/java/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"import duke.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"remuslum"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"remuslum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"remuslum"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"remuslum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"remuslum"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"remuslum"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"remuslum"},"content":"    public void execute_unmark_success() throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask \u003d new Todo(\"return book\");","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"remuslum"},"content":"        toDoTask.markTaskCompleted();","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask2 \u003d new Todo(\"run 5km\");","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"remuslum"},"content":"        ArrayList\u003cString\u003e taskListString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"remuslum"},"content":"        TaskList taskList \u003d new TaskList(taskListString);","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask2);","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"remuslum"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"        Todo toDoTaskUncompleted \u003d new Todo(\"return book\");","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"remuslum"},"content":"        String successMessage \u003d ui.showUnmarkMessage(toDoTaskUncompleted);","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"remuslum"},"content":"        assertEquals(successMessage, new UnmarkCommand(1).execute(taskList, ui));","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"remuslum"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"remuslum"},"content":"    public void execute_unmark_alreadyUnmarkedExceptionThrown() {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask \u003d new Todo(\"return book\");","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask2 \u003d new Todo(\"run 5km\");","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"remuslum"},"content":"        ArrayList\u003cString\u003e taskListString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"remuslum"},"content":"        TaskList taskList \u003d new TaskList(taskListString);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask2);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"remuslum"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"remuslum"},"content":"        String successMessage \u003d ui.showUnmarkMessage(toDoTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"remuslum"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"remuslum"},"content":"            assertEquals(successMessage, new UnmarkCommand(1).execute(taskList, ui));","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"remuslum"},"content":"        } catch (Exception e){","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"remuslum"},"content":"            assertEquals(\"Task has already been marked as uncompleted.\", e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"remuslum"},"content":"    @Test","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"remuslum"},"content":"    public void execute_unmark_indexOutOfBoundsExceptionThrown() {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask \u003d new Todo(\"return book\");","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"remuslum"},"content":"        Todo toDoTask2 \u003d new Todo(\"run 5km\");","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"remuslum"},"content":"        ArrayList\u003cString\u003e taskListString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"remuslum"},"content":"        TaskList taskList \u003d new TaskList(taskListString);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"remuslum"},"content":"        taskList.addTask(toDoTask2);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"remuslum"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"remuslum"},"content":"        String successMessage \u003d ui.showUnmarkMessage(toDoTask);","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"remuslum"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"remuslum"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"remuslum"},"content":"            assertEquals(successMessage, new UnmarkCommand(4).execute(taskList, ui));","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"remuslum"},"content":"        } catch (Exception e){","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"remuslum"},"content":"            assertEquals(\"I\u0027m sorry, the task number you have entered a number that exceeds the size \" +","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"remuslum"},"content":"                    \"of your task list.\", e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"remuslum"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"remuslum"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"remuslum"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"remuslum":67}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"remuslum"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"remuslum"},"content":"deadline return book /by 2023-09-01 4PM","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"remuslum"},"content":"event project meeting /from 2023-09-02 2PM /to 2023-09-03 4PM","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"remuslum"},"content":"bye","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"remuslum":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"remuslum"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":32,"remuslum":1}}]
