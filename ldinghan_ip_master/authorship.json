[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"public enum Command {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"    TODO,","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"    DEADLINE,","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"    EVENT,","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"    LIST,","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"    MARK,","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"    UNMARK,","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"    DELETE,","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"    BYE","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"ldinghan":10}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":" * This class extends the Task class and adds a deadline to it.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"     * The deadline for this task.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"    protected String by;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"     * @param by The deadline for the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"     * @return A formatted string including the task type, description, and deadline.","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ldinghan":31}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"        System.out.println(","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"                \"Hello! I\u0027m Ding!\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"                \"____________________________________________________________\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"        String str \u003d sc.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"        while (!str.equals(\"bye\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"            try {","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"                String command_word \u003d str.split(\" \")[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"                Command command \u003d Command.valueOf(command_word.toUpperCase());","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"                switch (command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"                    case LIST:","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"                        System.out.println(\"Ding: These are your tasks... If I remember correctly:\");","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"                        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(String.format(\"%d. %s\", i + 1, tasks.get(i)));","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"                    case MARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"                        if (str.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"                            int taskIndex \u003d Integer.parseInt(str.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"                            if (taskIndex + 1 \u003e tasks.size() || taskIndex \u003c 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"                                System.out.println(\"Ding: I can\u0027t find that task :( I may have lost it...\");","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"                                throw new InvalidTaskIndexException(\"Invalid Task Index.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"                            }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"                            tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(String.format(\"Ding: Okay, I marked this task as done, but I have no idea what that means:\\n %s\", tasks.get(taskIndex)));","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(\"Ding: Which task do you want to mark as done?\");","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"                            throw new MissingTaskIndexException(\"Task Index Missing.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"                    case UNMARK:","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"                        if (str.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"                            int taskIndex \u003d Integer.parseInt(str.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"                            if (taskIndex + 1 \u003e tasks.size() || taskIndex \u003c 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"                                System.out.println(\"Ding: I can\u0027t find that task :( I may have lost it...\");","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"                                throw new InvalidTaskIndexException(\"Invalid Task Index.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"                            }","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"                            tasks.get(taskIndex).markAsUndone();","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(String.format(\"Ding: Okay, I marked this task as undone, but I have no idea what that means:\\n %s\", tasks.get(taskIndex)));","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(\"Ding: Which task do you want to mark as undone?\");","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"                            throw new MissingTaskIndexException(\"Task Index Missing.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"                    case TODO:","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"                        if (str.split(\" \").length \u003e 1) {","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"                            ToDo todo \u003d new ToDo(str.split(\" \")[1]);","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"                            tasks.add(todo);","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(String.format(\"Ding: What does \u0027%s\u0027 mean? I\u0027ll just add it anyway.\\n You have like %d tasks now\", str, tasks.size()));","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"ldinghan"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(\"Ding: I seriously have no idea what I need to do here\");","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"ldinghan"},"content":"                            throw new InvalidDescriptionException(\"Invalid description.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"ldinghan"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"ldinghan"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"ldinghan"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"ldinghan"},"content":"                        if (str.split(\" \").length \u003e 3) {","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"ldinghan"},"content":"                            String fullTaskDescription \u003d str.split(\" \", 2)[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"ldinghan"},"content":"                            String description \u003d fullTaskDescription.split(\" /by \")[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"ldinghan"},"content":"                            String by \u003d fullTaskDescription.split(\" /by \")[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"ldinghan"},"content":"                            Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"ldinghan"},"content":"                            tasks.add(deadline);","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(String.format(\"Ding: What does \u0027%s\u0027 mean? I\u0027ll just add it anyway.\\n You have like %d tasks now\", str, tasks.size()));","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"ldinghan"},"content":"                        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(\"Ding: I seriously have no idea what I need to do here\");","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"ldinghan"},"content":"                            throw new InvalidDescriptionException(\"Invalid description.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"ldinghan"},"content":"                        }","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"ldinghan"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"ldinghan"},"content":"                    case EVENT:","lastModifiedDate":"2023-08-23"},{"lineNumber":78,"author":{"gitId":"ldinghan"},"content":"                        if (str.split(\" \").length \u003e 4) {","lastModifiedDate":"2023-08-22"},{"lineNumber":79,"author":{"gitId":"ldinghan"},"content":"                            String fullTaskDescription \u003d str.split(\" \", 2)[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"ldinghan"},"content":"                            String description \u003d fullTaskDescription.split(\" /from \")[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"ldinghan"},"content":"                            String from \u003d String.join(\"\", fullTaskDescription.split(\" /from \")[1]).split(\" /to \")[0];","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"ldinghan"},"content":"                            String to \u003d fullTaskDescription.split(\" /to \")[1];","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"ldinghan"},"content":"                            Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"ldinghan"},"content":"                            tasks.add(event);","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(String.format(\"Ding: What does \u0027%s\u0027 mean? I\u0027ll just add it anyway.\\n You have like %d tasks now\", str, tasks.size()));","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"ldinghan"},"content":"                        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":88,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(\"Ding: I seriously have no idea what I need to do here\");","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"ldinghan"},"content":"                            throw new InvalidDescriptionException(\"Invalid description.\");","lastModifiedDate":"2023-08-22"},{"lineNumber":90,"author":{"gitId":"ldinghan"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":91,"author":{"gitId":"ldinghan"},"content":"                        break;","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"ldinghan"},"content":"                    case DELETE:","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"ldinghan"},"content":"                        if (str.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"ldinghan"},"content":"                            int taskIndex \u003d Integer.parseInt(str.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"ldinghan"},"content":"                            if (taskIndex + 1 \u003e tasks.size() || taskIndex \u003c 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"ldinghan"},"content":"                                System.out.println(\"Ding: I can\u0027t find that task :( I may have lost it...\");","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"ldinghan"},"content":"                                throw new InvalidTaskIndexException(\"Invalid Task Index.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"ldinghan"},"content":"                            }","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"ldinghan"},"content":"                            Task toRemove \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"ldinghan"},"content":"                            tasks.remove(taskIndex);","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(String.format(\"Ding: Okay, I\u0027ve forgotten this task, so don\u0027t expect me to remember it:\\n %s\", toRemove));","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(String.format(\"Ding: Right so now you have like %d tasks left\", tasks.size()));","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"ldinghan"},"content":"                        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"ldinghan"},"content":"                            System.out.println(\"Ding: Which task do you want delete?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"ldinghan"},"content":"                            throw new MissingTaskIndexException(\"Task Index Missing.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"ldinghan"},"content":"                        }","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"ldinghan"},"content":"                        break;","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"ldinghan"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":109,"author":{"gitId":"ldinghan"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"ldinghan"},"content":"                System.out.println(\"Ding: I seriously have no idea what I need to do here\");","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"ldinghan"},"content":"                System.out.println(\"Ding: No way you forgot to even input a proper command...\");","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"ldinghan"},"content":"                System.out.println(\"Ding: Available commands are \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027delete\u0027, \u0027bye\u0027\");","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"ldinghan"},"content":"            } catch (InvalidDescriptionException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":114,"author":{"gitId":"ldinghan"},"content":"                System.out.println(\"Ding: I may be forgetful but you\u0027re so bad you even forgot the task description...\");","lastModifiedDate":"2023-08-22"},{"lineNumber":115,"author":{"gitId":"ldinghan"},"content":"                System.out.println(\"Ding: For ToDos, input \u0027todo (task)\u0027\");","lastModifiedDate":"2023-08-22"},{"lineNumber":116,"author":{"gitId":"ldinghan"},"content":"                System.out.println(\"Ding: For Deadlines, input \u0027deadline (task) /by (date or time)\");","lastModifiedDate":"2023-08-22"},{"lineNumber":117,"author":{"gitId":"ldinghan"},"content":"                System.out.println(\"Ding: For Events, input \u0027event (task) /from (date or time) /to (date or time)\");","lastModifiedDate":"2023-08-22"},{"lineNumber":118,"author":{"gitId":"ldinghan"},"content":"            } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":119,"author":{"gitId":"ldinghan"},"content":"                System.out.println(\"Ding: Oh wait it\u0027s not lost, the task number you gave just doesn\u0027t exist in your list...\");","lastModifiedDate":"2023-08-22"},{"lineNumber":120,"author":{"gitId":"ldinghan"},"content":"                if (tasks.size() \u003e 0) {","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"ldinghan"},"content":"                    System.out.println(String.format(\"Ding: Please input a task number from 1 to %d\", tasks.size()));","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"ldinghan"},"content":"                } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":123,"author":{"gitId":"ldinghan"},"content":"                    System.out.println(\"Ding: You have nothing in your task list... What are you even trying to get me to do?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"ldinghan"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":125,"author":{"gitId":"ldinghan"},"content":"            } catch (MissingTaskIndexException e) {","lastModifiedDate":"2023-08-22"},{"lineNumber":126,"author":{"gitId":"ldinghan"},"content":"                System.out.println(\"Ding: I don\u0027t quite understand what you want to do...\");","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"ldinghan"},"content":"                System.out.println(\"Ding: Please input \u0027(command) (task number)\u0027...\");","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"ldinghan"},"content":"            } finally {","lastModifiedDate":"2023-08-22"},{"lineNumber":129,"author":{"gitId":"ldinghan"},"content":"                System.out.println(\"\\n____________________________________________________________\\n\");","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"ldinghan"},"content":"                str \u003d sc.nextLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"ldinghan"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"ldinghan"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":133,"author":{"gitId":"ldinghan"},"content":"        System.out.println(","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"ldinghan"},"content":"                \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"ldinghan"},"content":"                \"Ding: Bye. Hopefully I get to see you again soon!\\n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"ldinghan"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":139,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ldinghan":136,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":" * Represents an event task that occurs within a specified time range.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":" * This class extends the Task class and adds the event\u0027s start and end times.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"     * The start time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"    protected String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"     * The end time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"    protected String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"     * Constructs an Event object with the given description, start time, and end time.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"     * @return A formatted string including the task type, description, start time, and end time.","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ldinghan":37}},{"path":"src/main/java/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":" * An exception class that represents an invalid task description in a task management application.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":" * This exception is thrown when an operation encounters an invalid or empty task description.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"public class InvalidDescriptionException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"     * Constructs an InvalidDescriptionException with the specified detail message.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"     * @param message The detail message explaining the cause of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"    public InvalidDescriptionException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ldinghan":14}},{"path":"src/main/java/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":" * An exception class that represents an invalid task index in a task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":" * This exception is thrown when an operation encounters an index that is out of bounds or not valid.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"public class InvalidTaskIndexException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"     * Constructs an InvalidTaskIndexException with the specified detail message.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"     * @param message The detail message explaining the cause of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"    public InvalidTaskIndexException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ldinghan":14}},{"path":"src/main/java/MissingTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":" * An exception class that represents a missing task index in a task list.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":" * This exception is thrown when an operation expects a valid task index but none is provided.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"public class MissingTaskIndexException extends Exception {","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"     * Constructs a MissingTaskIndexException with the specified detail message.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"     * @param message The detail message explaining the cause of the exception.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"    public MissingTaskIndexException(String message) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"        super(message);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ldinghan":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":" * This class provides basic functionality for managing tasks.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"     * The description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"     * Indicates whether the task is done or not.","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"ldinghan"},"content":"     * Returns an icon representing the completion status of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"ldinghan"},"content":"     * @return An \"X\" if the task is done, or a space if it\u0027s not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"ldinghan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"ldinghan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"ldinghan"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"ldinghan"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"ldinghan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"ldinghan"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"ldinghan"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"ldinghan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"ldinghan"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"ldinghan"},"content":"     * @return A formatted string including the completion status icon and description.","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"ldinghan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"ldinghan"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"ldinghan":57}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":" * Represents a to-do task without any specific time constraints.","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":" * This class extends the Task class and represents a simple to-do item.","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"     * Constructs a ToDo object with the given description.","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"ldinghan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"ldinghan"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"ldinghan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"ldinghan"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"ldinghan"},"content":"     * Returns a string representation of the ToDo object.","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"ldinghan"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"ldinghan"},"content":"     * @return A formatted string including the task type and description.","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"ldinghan"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"ldinghan"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"ldinghan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"ldinghan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"ldinghan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"ldinghan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ldinghan":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ldinghan"},"content":"todo go to the library","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"ldinghan"},"content":"deadline sleep and shower /by 10pm","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"ldinghan"},"content":"event visit the museum /from Wed 10am /to Wed 1pm","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"ldinghan"},"content":"deadline return book /by Sat 10pm","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"ldinghan"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"ldinghan"},"content":"mark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"ldinghan"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"ldinghan"},"content":"unmark 2","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"ldinghan"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"ldinghan"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"ldinghan":10}}]
