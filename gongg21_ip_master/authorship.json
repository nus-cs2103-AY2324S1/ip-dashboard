[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"# GBot Project","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"This is a greenfield Java project. It\u0027s named the _GBot_. Given below are instructions on how to use it.","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run GBot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"   Hello I\u0027m GBot!","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"   What can I do for you?","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":15,"gongg21":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"    mainClass.set(\"gbot.Launcher\")","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"    archiveBaseName \u003d \"GBot\"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"gongg21":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"# GBot User Guide","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"GBot is the **ultimate task-tracking chatbot** that you can use. ","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"Optimised via a Command Line Interface (CLI), plus the aesthetic benefit of a","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"Graphical User Interface (GUI), GBot helps you keep track of your","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"tasks diligently.","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"#### Asking for a help guide: `help`","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"#### Listing all existing tasks: `list`","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"#### Adding a task to do: `todo`","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"#### Adding a task with a deadline: `deadline`","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"#### Adding an event to complete: `event`","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"#### Marking a task as done: `mark`","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"#### Marking all tasks as done: `markAll`","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"#### Unmarking a task: `unmark`","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"#### Unmarking all tasks: `unmarkAll`","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"#### Deleting a task: `delete`","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"#### Deleting all existing tasks: `deleteAll`","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"#### Finding a task: `find`","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"#### Exiting the program: `bye`","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"## Usage","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"### `help` - asking for a help guide from GBot","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"Format: `help`","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will display a list of commands for the user to view.","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"Here are some commands for me to better assist you with:","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"1) list (eg. list): display the current tasks you have","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"2) todo (eg. todo read book): adds a Todo task","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"...","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"### `list` - listing all existing tasks in the task list","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"Format: `list`","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will display the list of existing tasks for the user to view.","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"Here are the tasks in your magnificent list:","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"1. [T][ ] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"...","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"### `todo` - adding a task to do into the task list","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"- `DESCRIPTION` is the task description in String.","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"Example usage: `todo read book`","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will add the Todo task into the task list and ","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"display a success message.","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"Yet another task to do, you\u0027re amazing. Have added this:","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"    [T][ ] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"### `deadline` - adding a task with a deadline into the task list","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"gongg21"},"content":"Format: `deadline DESCRIPTION /by DEADLINE`","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"gongg21"},"content":"- `DESCRIPTION` is the task description in String.","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"gongg21"},"content":"- `DEADLINE` is in the format `YYYY-MM-DD`.","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"gongg21"},"content":"Example usage: `deadline return book /by 2023-09-21`","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will add the Deadline task into the task list and ","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"gongg21"},"content":"display a success message.","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"gongg21"},"content":"No rush on this but do take note of the deadline. Have added this:","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"gongg21"},"content":"    [D][ ] return book (by: Sep 21 2023)","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"gongg21"},"content":"### `event` - adding an event to complete into the task list","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"gongg21"},"content":"Format: `event DESCRIPTION /from FROM_DATE /to TO_DATE`","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"gongg21"},"content":"- `DESCRIPTION` is the task description in String.","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"gongg21"},"content":"- `FROM_DATE` and `TO_DATE` are in the format `YYYY-MM-DD`.","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"gongg21"},"content":"Example usage: `event attend meeting /from 2023-09-21 /to 2023-09-22`","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will add the Event task into the task list and ","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"gongg21"},"content":"display a success message.","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"gongg21"},"content":"Events are the norm of the upper echelon. Have added this event:","lastModifiedDate":"2023-09-18"},{"lineNumber":86,"author":{"gitId":"gongg21"},"content":"    [E][ ] attend meeting (from: Sep 21 2023 to: Sep 22 2023)","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"gongg21"},"content":"### `mark` - marking an existing task as done","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"gongg21"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"gongg21"},"content":"- Marks the task at the specified `INDEX` as done.","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"gongg21"},"content":"- The index refers to the index number of the task in the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"gongg21"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"gongg21"},"content":"Example usage: `list` followed by `mark 1` marks the first task in the list as done.","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will mark the specified task as done and","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"gongg21"},"content":"display a success message.","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"gongg21"},"content":"Awesome. I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"gongg21"},"content":"    [T][X] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"gongg21"},"content":"### `markAll` - marking all existing tasks in the task list as done","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"gongg21"},"content":"Format: `markAll`","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"gongg21"},"content":"Example usage: `list` followed by `markAll` marks all tasks in the list as done.","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will mark all tasks as done and","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"gongg21"},"content":"display a success message.","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"gongg21"},"content":"Simply wonderful. All tasks have been marked as done. You\u0027re just too good.","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"gongg21"},"content":"### `unmark` - unmarking an existing task in the list","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"gongg21"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"gongg21"},"content":"- Unmarks the task at the specified `INDEX`.","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"gongg21"},"content":"- The index refers to the index number of the task in the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"gongg21"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"gongg21"},"content":"Example usage: `list` followed by `unmark 1` unmarks the first task in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will unmark the specified task as done and","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"gongg21"},"content":"display a success message.","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"gongg21"},"content":"No worries, this probably isn\u0027t important. I\u0027ve unmarked this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"gongg21"},"content":"    [T][ ] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"gongg21"},"content":"### `unmarkAll` - unmarking all existing tasks in the task list","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"gongg21"},"content":"Format: `unmarkAll`","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"gongg21"},"content":"Example usage: `list` followed by `unmarkAll` unmarks all tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will unmark all tasks and display a success message.","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"gongg21"},"content":"Of course, a busy person needs their time. All tasks have been unmarked.","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"gongg21"},"content":"### `delete` - deleting an existing task from the list","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"gongg21"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"gongg21"},"content":"- Deletes the task at the specified `INDEX`.","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"gongg21"},"content":"- The index refers to the index number of the task in the task list.","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"gongg21"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"gongg21"},"content":"Example usage: `list` followed by `delete 1` deletes the first task in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will delete the specified task and","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"gongg21"},"content":"display a success message.","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"gongg21"},"content":"Just clearing up I see. I got you, I\u0027ve removed this task:","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"gongg21"},"content":"    [T][ ] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"gongg21"},"content":"You now have 1 task(s) to do.","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"gongg21"},"content":"### `deleteAll` - deleting all existing tasks in the list","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"gongg21"},"content":"Format: `deleteAll`","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"gongg21"},"content":"Example usage: `list` followed by `deleteAll` deletes all tasks in the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":166,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will delete all tasks and","lastModifiedDate":"2023-09-18"},{"lineNumber":167,"author":{"gitId":"gongg21"},"content":"display a success message.","lastModifiedDate":"2023-09-18"},{"lineNumber":168,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"gongg21"},"content":"Already done? Amazing. I\u0027ve removed all existing tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":171,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":173,"author":{"gitId":"gongg21"},"content":"### `find` - finding an existing task in the list","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"gongg21"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"gongg21"},"content":"- `KEYWORD` is a keyword to refer to in String.","lastModifiedDate":"2023-09-18"},{"lineNumber":176,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":177,"author":{"gitId":"gongg21"},"content":"Example usage: `find read` will return all tasks containing the keyword `read`.","lastModifiedDate":"2023-09-18"},{"lineNumber":178,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":179,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will list all tasks containing the keyword.","lastModifiedDate":"2023-09-18"},{"lineNumber":180,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":181,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":182,"author":{"gitId":"gongg21"},"content":"Here are the matching tasks in your beautiful list:","lastModifiedDate":"2023-09-18"},{"lineNumber":183,"author":{"gitId":"gongg21"},"content":"1. [T][ ] read book","lastModifiedDate":"2023-09-18"},{"lineNumber":184,"author":{"gitId":"gongg21"},"content":"...","lastModifiedDate":"2023-09-18"},{"lineNumber":185,"author":{"gitId":"gongg21"},"content":"```","lastModifiedDate":"2023-09-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":187,"author":{"gitId":"gongg21"},"content":"### `bye` - exiting the program","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"gongg21"},"content":"Format: `bye`","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":190,"author":{"gitId":"gongg21"},"content":"Expected outcome: GBot will display an ending message and end the program.","lastModifiedDate":"2023-09-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":193,"author":{"gitId":"gongg21"},"content":"Thank you for your time G. I\u0027ll be of your service at any time.","lastModifiedDate":"2023-09-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":24,"gongg21":170}},{"path":"src/main/java/exceptions/GBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":" * The main chatbot exception for invalid commands and other general errors.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":" * @author Gallen Ong","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"public class GBotException extends RuntimeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"     * Initialises an invalid command exception.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"    public GBotException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"        super(\"Sorry. My command range is simply limited, I don\u0027t understand the command.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"     * Initalises a general chatbot exception.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"     * @param message The error message to be printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"    public GBotException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"gongg21":25}},{"path":"src/main/java/exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package exceptions;","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":" * The exception class for Tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":" * @author Gallen Ong","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"public class TaskException extends RuntimeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"     * Initialises a task exception for invalid task numbers.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"    public TaskException() {","lastModifiedDate":"2023-08-25"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"        super(\"Invalid task provided.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"gongg21":15}},{"path":"src/main/java/gbot/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package gbot;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":" * Adapted from https://se-education.org/guides/tutorials/javaFxPart3.html","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"    private Text dialog;","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"gongg21":62}},{"path":"src/main/java/gbot/GBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package gbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import exceptions.GBotException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":" * The chatbot GBot that helps keep track of tasks for users.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":" * @author Gallen Ong","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"public class GBot {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"     * Initialises the chatbot GBot.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"     * @param filePath The filepath to be written into or updated.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"    public GBot(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"        tasks \u003d new TaskList(storage);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"    private void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"        Ui.greetUser();","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"        while (true) {","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"            String message \u003d inputScanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"            if (message.strip().equals(\"bye\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"                inputScanner.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"                Ui.displayExitMessage();","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"                return;","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"                Ui.print(Parser.parse(message, tasks));","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"            } catch (GBotException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"                Ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"     * Generates a response from the chatbot.","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"gongg21"},"content":"            return \"Thank you for your time G. I\u0027ll be of your service at any time.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"            return Parser.parse(input, tasks);","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"        } catch (GBotException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"gongg21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"gongg21"},"content":"        new GBot(\"./data/tasks.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-08-25"},{"lineNumber":65,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"gongg21":65}},{"path":"src/main/java/gbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package gbot;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"     * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"     * Adapted from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"gongg21":13}},{"path":"src/main/java/gbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package gbot;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":" * A GUI for GBot using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":" * Adapted from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"    private final GBot gbot \u003d new GBot(\"./data/tasks.txt\");","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setGBot(gbot);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"gongg21":31}},{"path":"src/main/java/gbot/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package gbot;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":" * Adapted from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"    @FXML","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"    private GBot gbot;","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserImage.png\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"    private final Image gbotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/GBotImage.png\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"                DialogBox.getDukeDialog(\"Hello I\u0027m GBot.\\nHow may I assist you today?\", gbotImage)","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"    public void setGBot(GBot g) {","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"        gbot \u003d g;","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-23"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"     * Creates a dialog box, containing message from Zean and appending it to the dialog container.","lastModifiedDate":"2023-09-23"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-23"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"     * @param msg The message to be displayed.","lastModifiedDate":"2023-09-23"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-23"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"    public void showMessage(String msg) {","lastModifiedDate":"2023-09-23"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-23"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"                DialogBox.getDukeDialog(msg, gbotImage)","lastModifiedDate":"2023-09-23"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"        );","lastModifiedDate":"2023-09-23"},{"lineNumber":52,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"gongg21"},"content":"        String response \u003d gbot.getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"gongg21"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":63,"author":{"gitId":"gongg21"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":64,"author":{"gitId":"gongg21"},"content":"                DialogBox.getDukeDialog(response, gbotImage)","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"gongg21"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"gongg21"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":67,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":68,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"gongg21":68}},{"path":"src/main/java/gbot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package gbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import exceptions.*;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"import tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"import tasks.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":" * The chatbot parser for the command inputs of users.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":" * @author Gallen Ong","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"    private static final String INVALID_TASK \u003d \"Although you might not be wrong, I simply do not understand...\\n\" +","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"                                              \"Kindly enter a valid task number.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"    private static final String INVALID_INDEX \u003d \"I apologise, that task does not exist.\";","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"    private static final String INVALID_FORMAT \u003d \"I must apologise for correcting you.\\n\" +","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"                                                 \"Kindly enter a valid date in the YYYY-MM-DD format.\";","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"     * Returns corresponding methods after parsing user inputs.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"     * @param message The user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"     * @param tasks The TaskList object that stores tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"    public static String parse(String message, TaskList tasks) throws GBotException {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"        if (message.isBlank()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"            throw new GBotException(\"Please enter a command.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"        switch (message.strip()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"        case \"list\":","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"            return tasks.listTasks();","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"        case \"deleteAll\":","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"            return tasks.deleteAllTasks();","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"        case \"markAll\":","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"            return tasks.markAllTasks();","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"        case \"unmarkAll\":","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"            return tasks.unmarkAllTasks();","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"        default:","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"            return checkPrefix(message, tasks);","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"     * Returns corresponding methods after parsing user inputs, given it is","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"     * not a single command.","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"gongg21"},"content":"     * @param message The user input.","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"     * @param tasks The TaskList object that stores tasks.","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"     * @throws GBotException If user command is invalid.","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"    private static String checkPrefix(String message, TaskList tasks) throws RuntimeException {","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"        assert !message.isBlank();","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"        String prefix \u003d message.split(\" \")[0];","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"        switch (prefix) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"        case \"help\":","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"gongg21"},"content":"            return Ui.getHelpMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"gongg21"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"gongg21"},"content":"            return parseMark(message, tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"gongg21"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"gongg21"},"content":"            return parseUnmark(message, tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"gongg21"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"gongg21"},"content":"            return parseTodo(message, tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"gongg21"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"gongg21"},"content":"            return parseDeadline(message, tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"gongg21"},"content":"        case \"event\":","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"gongg21"},"content":"            return parseEvent(message, tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"gongg21"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"gongg21"},"content":"            return parseDelete(message, tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"gongg21"},"content":"        case \"find\":","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"gongg21"},"content":"            return parseFind(message, tasks);","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"gongg21"},"content":"        default: // if invalid command provided","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"gongg21"},"content":"            throw new GBotException();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"gongg21"},"content":"     * Returns response for Mark after parsing input.","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"gongg21"},"content":"     * @param message The user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"gongg21"},"content":"     * @param tasks The TaskList object that stores tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"gongg21"},"content":"    private static String parseMark(String message, TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"gongg21"},"content":"        String[] words \u003d message.split(\" \");","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"gongg21"},"content":"        if (words.length !\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"gongg21"},"content":"            return INVALID_TASK;","lastModifiedDate":"2023-09-23"},{"lineNumber":91,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"gongg21"},"content":"            return tasks.markTask(Integer.parseInt(words[1]));","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"gongg21"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"gongg21"},"content":"            throw new GBotException(INVALID_TASK);","lastModifiedDate":"2023-09-23"},{"lineNumber":96,"author":{"gitId":"gongg21"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2023-09-23"},{"lineNumber":97,"author":{"gitId":"gongg21"},"content":"            throw new GBotException(INVALID_INDEX);","lastModifiedDate":"2023-09-23"},{"lineNumber":98,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"gongg21"},"content":"     * Returns response for Unmark after parsing input.","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"gongg21"},"content":"     * @param message The user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"gongg21"},"content":"     * @param tasks The TaskList object that stores tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"gongg21"},"content":"    private static String parseUnmark(String message, TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"gongg21"},"content":"        String[] words \u003d message.split(\" \");","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"gongg21"},"content":"        if (words.length !\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"gongg21"},"content":"            return INVALID_TASK;","lastModifiedDate":"2023-09-23"},{"lineNumber":111,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"gongg21"},"content":"            return tasks.unmarkTask(Integer.parseInt(words[1]));","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"gongg21"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"gongg21"},"content":"            throw new GBotException(INVALID_TASK);","lastModifiedDate":"2023-09-23"},{"lineNumber":116,"author":{"gitId":"gongg21"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2023-09-23"},{"lineNumber":117,"author":{"gitId":"gongg21"},"content":"            throw new GBotException(INVALID_INDEX);","lastModifiedDate":"2023-09-23"},{"lineNumber":118,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"gongg21"},"content":"     * Returns response for adding a Todo task after parsing input.","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"gongg21"},"content":"     * @param message The user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"gongg21"},"content":"     * @param tasks The TaskList object that stores tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"gongg21"},"content":"    private static String parseTodo(String message, TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"gongg21"},"content":"        String desc \u003d message.substring(4);","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"gongg21"},"content":"        if (desc.isBlank()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"gongg21"},"content":"            return \"I apologise. Kindly input a task description.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"gongg21"},"content":"        return tasks.addTodo(desc.strip());","lastModifiedDate":"2023-09-23"},{"lineNumber":133,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"gongg21"},"content":"     * Returns response for adding a Deadline task after parsing input.","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"gongg21"},"content":"     * @param message The user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"gongg21"},"content":"     * @param tasks The TaskList object that stores tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"gongg21"},"content":"    private static String parseDeadline(String message, TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"gongg21"},"content":"        String details \u003d message.substring(8);","lastModifiedDate":"2023-09-23"},{"lineNumber":143,"author":{"gitId":"gongg21"},"content":"        String[] taskDesc \u003d details.split(\" /by \");","lastModifiedDate":"2023-09-23"},{"lineNumber":144,"author":{"gitId":"gongg21"},"content":"        if (taskDesc.length !\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"gongg21"},"content":"            return \"I apologise for correcting you. Kindly follow the following:\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"gongg21"},"content":"                   \"deadline (task) /by (deadline in YYYY-MM-DD)\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"gongg21"},"content":"                   \"eg. deadline return book /by 2023-09-21\";","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":150,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-23"},{"lineNumber":151,"author":{"gitId":"gongg21"},"content":"            return tasks.addDeadline(taskDesc[0].strip(), taskDesc[1].strip());","lastModifiedDate":"2023-09-23"},{"lineNumber":152,"author":{"gitId":"gongg21"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-23"},{"lineNumber":153,"author":{"gitId":"gongg21"},"content":"            throw new GBotException(INVALID_FORMAT);","lastModifiedDate":"2023-09-23"},{"lineNumber":154,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":155,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":156,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":158,"author":{"gitId":"gongg21"},"content":"     * Returns response for adding an Event task after parsing input.","lastModifiedDate":"2023-09-21"},{"lineNumber":159,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":160,"author":{"gitId":"gongg21"},"content":"     * @param message The user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":161,"author":{"gitId":"gongg21"},"content":"     * @param tasks The TaskList object that stores tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"gongg21"},"content":"    private static String parseEvent(String message, TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":164,"author":{"gitId":"gongg21"},"content":"        String details \u003d message.substring(5);","lastModifiedDate":"2023-09-23"},{"lineNumber":165,"author":{"gitId":"gongg21"},"content":"        String[] inputSplitByFrom \u003d details.split(\" /from\");","lastModifiedDate":"2023-09-23"},{"lineNumber":166,"author":{"gitId":"gongg21"},"content":"        String[] inputSplitByTo \u003d details.split(\" /to\");","lastModifiedDate":"2023-09-23"},{"lineNumber":167,"author":{"gitId":"gongg21"},"content":"        if (inputSplitByFrom.length !\u003d 2 || inputSplitByTo.length !\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":168,"author":{"gitId":"gongg21"},"content":"            return \"I apologise for correcting you. Kindly follow the following:\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"gongg21"},"content":"                    \"event (task) /from (start in YYYY-MM-DD) /to (end in YYYY-MM-DD)\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":170,"author":{"gitId":"gongg21"},"content":"                    \"eg. event attend meeting /from 2023-09-21 /to 2023-09-22\";","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"gongg21"},"content":"        String[] inputAfterFrom \u003d inputSplitByFrom[1].split(\" /to\");","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"gongg21"},"content":"        String desc;","lastModifiedDate":"2023-09-21"},{"lineNumber":175,"author":{"gitId":"gongg21"},"content":"        String fromDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":176,"author":{"gitId":"gongg21"},"content":"        String toDate;","lastModifiedDate":"2023-09-21"},{"lineNumber":177,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"gongg21"},"content":"        if (inputAfterFrom.length \u003d\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":179,"author":{"gitId":"gongg21"},"content":"            System.out.println(inputAfterFrom.length);","lastModifiedDate":"2023-09-23"},{"lineNumber":180,"author":{"gitId":"gongg21"},"content":"            desc \u003d inputSplitByFrom[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":181,"author":{"gitId":"gongg21"},"content":"            fromDate \u003d inputAfterFrom[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":182,"author":{"gitId":"gongg21"},"content":"            toDate \u003d inputAfterFrom[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":183,"author":{"gitId":"gongg21"},"content":"        } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"gongg21"},"content":"            desc \u003d inputSplitByTo[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"gongg21"},"content":"            fromDate \u003d inputSplitByTo[1].split(\" /from\")[1];","lastModifiedDate":"2023-09-21"},{"lineNumber":186,"author":{"gitId":"gongg21"},"content":"            toDate \u003d inputSplitByTo[1].split(\" /from\")[0];","lastModifiedDate":"2023-09-21"},{"lineNumber":187,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":188,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":189,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-23"},{"lineNumber":190,"author":{"gitId":"gongg21"},"content":"            return tasks.addEvent(desc.strip(), fromDate.strip(), toDate.strip());","lastModifiedDate":"2023-09-23"},{"lineNumber":191,"author":{"gitId":"gongg21"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-23"},{"lineNumber":192,"author":{"gitId":"gongg21"},"content":"            throw new GBotException(INVALID_FORMAT);","lastModifiedDate":"2023-09-23"},{"lineNumber":193,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":194,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":195,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":196,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":197,"author":{"gitId":"gongg21"},"content":"     * Returns response for deleting a task after parsing input.","lastModifiedDate":"2023-09-21"},{"lineNumber":198,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":199,"author":{"gitId":"gongg21"},"content":"     * @param message The user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":200,"author":{"gitId":"gongg21"},"content":"     * @param tasks The TaskList object that stores tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":201,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":202,"author":{"gitId":"gongg21"},"content":"    private static String parseDelete(String message, TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":203,"author":{"gitId":"gongg21"},"content":"        String[] words \u003d message.split(\" \");","lastModifiedDate":"2023-09-21"},{"lineNumber":204,"author":{"gitId":"gongg21"},"content":"        if (words.length !\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":205,"author":{"gitId":"gongg21"},"content":"            return INVALID_TASK;","lastModifiedDate":"2023-09-23"},{"lineNumber":206,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":207,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":208,"author":{"gitId":"gongg21"},"content":"            return tasks.deleteTask(Integer.parseInt(words[1]));","lastModifiedDate":"2023-09-21"},{"lineNumber":209,"author":{"gitId":"gongg21"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":210,"author":{"gitId":"gongg21"},"content":"            throw new GBotException(INVALID_TASK);","lastModifiedDate":"2023-09-23"},{"lineNumber":211,"author":{"gitId":"gongg21"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2023-09-23"},{"lineNumber":212,"author":{"gitId":"gongg21"},"content":"            throw new GBotException(INVALID_INDEX);","lastModifiedDate":"2023-09-23"},{"lineNumber":213,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":214,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":215,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":216,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":217,"author":{"gitId":"gongg21"},"content":"     * Returns response for finding a task based on keyword after parsing input.","lastModifiedDate":"2023-09-21"},{"lineNumber":218,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":219,"author":{"gitId":"gongg21"},"content":"     * @param message The user input.","lastModifiedDate":"2023-09-21"},{"lineNumber":220,"author":{"gitId":"gongg21"},"content":"     * @param tasks The TaskList object that stores tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":221,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":222,"author":{"gitId":"gongg21"},"content":"    private static String parseFind(String message, TaskList tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":223,"author":{"gitId":"gongg21"},"content":"        String[] words \u003d message.split(\" \");","lastModifiedDate":"2023-09-21"},{"lineNumber":224,"author":{"gitId":"gongg21"},"content":"        if (words.length !\u003d 2) {","lastModifiedDate":"2023-09-21"},{"lineNumber":225,"author":{"gitId":"gongg21"},"content":"            return \"I wish I could read minds like you. Do kindly enter a keyword though.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":226,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":227,"author":{"gitId":"gongg21"},"content":"        return tasks.find(message.substring(4));","lastModifiedDate":"2023-09-21"},{"lineNumber":228,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":231,"author":{"gitId":"gongg21"},"content":"     * Loads tasks line by line from file provided and adds to task list provided.","lastModifiedDate":"2023-09-02"},{"lineNumber":232,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":233,"author":{"gitId":"gongg21"},"content":"     * @param taskInFile The current task line in the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":234,"author":{"gitId":"gongg21"},"content":"     * @param tasks The task list provided and to be updated.","lastModifiedDate":"2023-09-02"},{"lineNumber":235,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":236,"author":{"gitId":"gongg21"},"content":"    public static void loadTaskFromFile(String taskInFile, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":237,"author":{"gitId":"gongg21"},"content":"        String[] fields \u003d taskInFile.split(\" \\\\| \");","lastModifiedDate":"2023-09-21"},{"lineNumber":238,"author":{"gitId":"gongg21"},"content":"        switch (fields[0]) {","lastModifiedDate":"2023-09-21"},{"lineNumber":239,"author":{"gitId":"gongg21"},"content":"        case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":240,"author":{"gitId":"gongg21"},"content":"            tasks.add(new Todo(fields[1], fields[2]));","lastModifiedDate":"2023-09-21"},{"lineNumber":241,"author":{"gitId":"gongg21"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":242,"author":{"gitId":"gongg21"},"content":"        case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":243,"author":{"gitId":"gongg21"},"content":"            tasks.add(new Deadline(fields[1], fields[2], fields[3]));","lastModifiedDate":"2023-09-21"},{"lineNumber":244,"author":{"gitId":"gongg21"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":245,"author":{"gitId":"gongg21"},"content":"        case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":246,"author":{"gitId":"gongg21"},"content":"            tasks.add(new Event(fields[1], fields[2], fields[3], fields[4]));","lastModifiedDate":"2023-09-21"},{"lineNumber":247,"author":{"gitId":"gongg21"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":248,"author":{"gitId":"gongg21"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":249,"author":{"gitId":"gongg21"},"content":"            break;","lastModifiedDate":"2023-08-30"},{"lineNumber":250,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":251,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":252,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"gongg21":252}},{"path":"src/main/java/gbot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package gbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import exceptions.GBotException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":" * The storage class of the chatbot that deals with file operations.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":" * @author Gallen Ong","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"    private File fList;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"    private String path;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"     * Creates a Storage object that refers to the filepath provided.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"     * @param path The filepath provided by user.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"        File dir \u003d new File(\"./data\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"                dir.mkdir();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"                Ui.showError(\"File cannot be created.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"        fList \u003d new File(this.path);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"        if (!fList.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"                fList.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"                Ui.showError(\"File cannot be created.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"     * Empty constructor for the testing purposes.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"    public Storage() {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"gongg21"},"content":"        // no effect","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"     * Returns an ArrayList object with the tasks present in the existing file.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"     * @return An ArrayList object with existing tasks in file.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"    public ArrayList\u003cTask\u003e loadFile() {","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"gongg21"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"gongg21"},"content":"        Scanner fScanner;","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"gongg21"},"content":"            fScanner \u003d new Scanner(this.fList);","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"gongg21"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"gongg21"},"content":"            Ui.showError(\"File not found. Please check.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"gongg21"},"content":"            return list;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"gongg21"},"content":"        while (fScanner.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"gongg21"},"content":"            Parser.loadTaskFromFile(fScanner.nextLine(), list);","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"gongg21"},"content":"        fScanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"gongg21"},"content":"        return list;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"gongg21"},"content":"     * Adds new tasks to the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"gongg21"},"content":"     * @param message The task to be added in string format.","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"gongg21"},"content":"    public void writeToFile(String message) {","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"gongg21"},"content":"            FileWriter fWriter \u003d new FileWriter(this.fList, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"gongg21"},"content":"            fWriter.write(message + System.lineSeparator());","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"gongg21"},"content":"            fWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"gongg21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"gongg21"},"content":"            throw new GBotException(\"File Writing Error!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"gongg21"},"content":"     * Updates (with overwriting) tasks in the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"gongg21"},"content":"     * @param list The list of tasks to update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"gongg21"},"content":"    public void rewriteFile(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"gongg21"},"content":"            FileWriter fWriter \u003d new FileWriter(this.fList);","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"gongg21"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"gongg21"},"content":"                Task curr \u003d list.get(i);","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"gongg21"},"content":"                fWriter.write(curr.toStringForFile() + System.lineSeparator());","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"gongg21"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"gongg21"},"content":"            fWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"gongg21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"gongg21"},"content":"            throw new GBotException(\"File Rewrite Error!\");","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"gongg21":109}},{"path":"src/main/java/gbot/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package gbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":" * A storage class for the purpose of testing.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":" * @author Gallen Ong","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"     * Initialises a StorageStub object.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"    public StorageStub() {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"        super();","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"     * Returns an empty ArrayList object.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"     * @return An empty ArrayList.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"    public ArrayList\u003cTask\u003e loadFile() {","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"     * Consumes the task provided.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"     * @param message The task to be added in string format.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"    public void writeToFile(String message) {","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"        // no effect","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"     * Consumes the task list provided.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"     * @param list The list of tasks to update the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"    public void rewriteFile(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"        // no effect","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"gongg21":48}},{"path":"src/main/java/gbot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package gbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import exceptions.TaskException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"import tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"import tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"import tasks.Todo;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":" * The class that contains all task operations for the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":" * @author Gallen Ong","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"    private int taskCount;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"     * Initialises a TaskList objects that loads tasks from a given Storage object.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"     * @param storage The Storage object to load tasks from.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"        this.list \u003d storage.loadFile();","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"        this.taskCount \u003d this.list.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"     * Empty constructor for testing purposes.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"     * Returns the list of existing tasks in the TaskList.","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"    public String listTasks() {","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"            return \"No tasks available at the moment as you are amazingly prompt.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"            StringBuilder message \u003d new StringBuilder(\"Here are the tasks in your magnificent list:\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"                message.append(i + 1).append(\". \").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"gongg21"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"            return message.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"     * Marks the corresponding task as done and updates the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"     * @param taskNum The task number provided by the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"gongg21"},"content":"    public String markTask(int taskNum) {","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"gongg21"},"content":"        if (taskNum \u003e list.size() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"gongg21"},"content":"            throw new TaskException();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"gongg21"},"content":"        Task curr \u003d list.get(taskNum - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"gongg21"},"content":"        curr.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"gongg21"},"content":"        storage.rewriteFile(list);","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"gongg21"},"content":"        return \"Awesome. I\u0027ve marked this task as done:\\n\" + curr;","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"gongg21"},"content":"     * Marks all tasks as done and updates the file.","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"gongg21"},"content":"    public String markAllTasks() {","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"gongg21"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"gongg21"},"content":"            list.get(i).markAsDone();","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"gongg21"},"content":"        return \"Simply wonderful. All tasks have been marked as done. You\u0027re just too good.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"gongg21"},"content":"     * Unmarks the corresponding task as not done and updates the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"gongg21"},"content":"     * @param taskNum The task number provided by the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"gongg21"},"content":"    public String unmarkTask(int taskNum) {","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"gongg21"},"content":"        if (taskNum \u003e list.size() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"gongg21"},"content":"            throw new TaskException();","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"gongg21"},"content":"        Task curr \u003d list.get(taskNum - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"gongg21"},"content":"        curr.markAsUndone();","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"gongg21"},"content":"        storage.rewriteFile(list);","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"gongg21"},"content":"        return \"No worries, this probably isn\u0027t important. I\u0027ve unmarked this task:\\n\" + curr;","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"gongg21"},"content":"     * Unmarks all tasks and updates the file.","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"gongg21"},"content":"    public String unmarkAllTasks() {","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"gongg21"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"gongg21"},"content":"            list.get(i).markAsUndone();","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":106,"author":{"gitId":"gongg21"},"content":"        storage.rewriteFile(list);","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"gongg21"},"content":"        return \"Of course, a busy person needs their time. All tasks have been unmarked.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"gongg21"},"content":"     * Adds a Todo task object to the task list and updates the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"gongg21"},"content":"     * @param str The Todo task description to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"gongg21"},"content":"    public String addTodo(String str) {","lastModifiedDate":"2023-09-04"},{"lineNumber":116,"author":{"gitId":"gongg21"},"content":"        Todo newTodo \u003d new Todo(str);","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"gongg21"},"content":"        list.add(newTodo);","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"gongg21"},"content":"        storage.writeToFile(newTodo.toStringForFile());","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"gongg21"},"content":"        taskCount++;","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"gongg21"},"content":"        String count \u003d \"\\nYou now have \" + taskCount + \" task(s) to do.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"gongg21"},"content":"        return \"Yet another task to do, you\u0027re amazing. Have added this:\\n\" + newTodo + count;","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"gongg21"},"content":"     * Adds a Deadline task object to the task list and updates the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"gongg21"},"content":"     * @param desc The Deadline task description to be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"gongg21"},"content":"     * @param deadline The deadline to be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"gongg21"},"content":"    public String addDeadline(String desc, String deadline) {","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"gongg21"},"content":"        if (desc.isBlank() || deadline.isBlank()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"gongg21"},"content":"            return \"It appears you may be missing some details, do kindly enter.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"gongg21"},"content":"        Deadline newDeadline \u003d new Deadline(desc, deadline.strip());","lastModifiedDate":"2023-09-23"},{"lineNumber":137,"author":{"gitId":"gongg21"},"content":"        list.add(newDeadline);","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"gongg21"},"content":"        storage.writeToFile(newDeadline.toStringForFile());","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"gongg21"},"content":"        taskCount++;","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"gongg21"},"content":"        String count \u003d \"\\nYou now have \" + taskCount + \" task(s) to do.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"gongg21"},"content":"        return \"No rush on this but do take note of the deadline. Have added this:\\n\" + newDeadline.toString() + count;","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":146,"author":{"gitId":"gongg21"},"content":"     * Adds an Event task object to the task list and updates the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"gongg21"},"content":"     * @param desc The Event task description to be added.","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"gongg21"},"content":"     * @param fromDate The start date of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"gongg21"},"content":"     * @param toDate The end date of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"gongg21"},"content":"    public String addEvent(String desc, String fromDate, String toDate) {","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"gongg21"},"content":"        if (desc.isBlank() || fromDate.isBlank() || toDate.isBlank()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"gongg21"},"content":"            return \"It appears you may be missing some details, do kindly enter.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"gongg21"},"content":"        Event newEvent \u003d new Event(desc, fromDate, toDate);","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"gongg21"},"content":"        list.add(newEvent);","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"gongg21"},"content":"        storage.writeToFile(newEvent.toStringForFile());","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"gongg21"},"content":"        taskCount++;","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"gongg21"},"content":"        String count \u003d \"\\nYou now have \" + taskCount + \" task(s) to do.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"gongg21"},"content":"        return \"Events are the norm of the upper echelon. Have added this event:\\n\" + newEvent + count;","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"gongg21"},"content":"     * Deletes the corresponding task from the task list and updates the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"gongg21"},"content":"     * @param taskNum The task number provided by the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":169,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":170,"author":{"gitId":"gongg21"},"content":"    public String deleteTask(int taskNum) {","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"gongg21"},"content":"        if (taskNum \u003e list.size() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"gongg21"},"content":"            throw new TaskException();","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"gongg21"},"content":"        Task toDelete \u003d list.get(taskNum - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"gongg21"},"content":"        list.remove(taskNum - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"gongg21"},"content":"        storage.rewriteFile(list);","lastModifiedDate":"2023-09-18"},{"lineNumber":178,"author":{"gitId":"gongg21"},"content":"        taskCount--;","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"gongg21"},"content":"        String count \u003d \"\\nYou now have \" + taskCount + \" task(s) to do.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":181,"author":{"gitId":"gongg21"},"content":"        return \"Just clearing up I see. I got you, I\u0027ve removed this task:\\n\" + toDelete + count;","lastModifiedDate":"2023-09-18"},{"lineNumber":182,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":185,"author":{"gitId":"gongg21"},"content":"     * Deletes all tasks and updates the file.","lastModifiedDate":"2023-09-18"},{"lineNumber":186,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":187,"author":{"gitId":"gongg21"},"content":"    public String deleteAllTasks() {","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"gongg21"},"content":"        list.clear();","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"gongg21"},"content":"        storage.rewriteFile(list);","lastModifiedDate":"2023-09-18"},{"lineNumber":190,"author":{"gitId":"gongg21"},"content":"        taskCount \u003d 0;","lastModifiedDate":"2023-09-18"},{"lineNumber":191,"author":{"gitId":"gongg21"},"content":"        return \"Already done? Amazing. I\u0027ve removed all existing tasks.\\n\";","lastModifiedDate":"2023-09-18"},{"lineNumber":192,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":193,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":194,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":195,"author":{"gitId":"gongg21"},"content":"     * Finds and prints matching tasks in the task list with the given keyword.","lastModifiedDate":"2023-09-02"},{"lineNumber":196,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":197,"author":{"gitId":"gongg21"},"content":"     * @param keyword The keyword given by user.","lastModifiedDate":"2023-09-21"},{"lineNumber":198,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":199,"author":{"gitId":"gongg21"},"content":"    public String find(String keyword) {","lastModifiedDate":"2023-09-21"},{"lineNumber":200,"author":{"gitId":"gongg21"},"content":"        assert keyword !\u003d null;","lastModifiedDate":"2023-09-23"},{"lineNumber":201,"author":{"gitId":"gongg21"},"content":"        ArrayList\u003cTask\u003e matchList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":202,"author":{"gitId":"gongg21"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":203,"author":{"gitId":"gongg21"},"content":"            Task curr \u003d list.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"gongg21"},"content":"            if (curr.getDescription().toLowerCase().contains(keyword.strip())) {","lastModifiedDate":"2023-09-23"},{"lineNumber":205,"author":{"gitId":"gongg21"},"content":"                matchList.add(curr);","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"gongg21"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":208,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":209,"author":{"gitId":"gongg21"},"content":"        if (matchList.isEmpty()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"gongg21"},"content":"            return \"I must apologise. There are no matching tasks.\";","lastModifiedDate":"2023-09-18"},{"lineNumber":211,"author":{"gitId":"gongg21"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":212,"author":{"gitId":"gongg21"},"content":"            StringBuilder message \u003d new StringBuilder(\"Here are the matching tasks in your beautiful list:\\n\");","lastModifiedDate":"2023-09-18"},{"lineNumber":213,"author":{"gitId":"gongg21"},"content":"            for (int i \u003d 0; i \u003c matchList.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":214,"author":{"gitId":"gongg21"},"content":"                message.append(i + 1).append(\". \").append(matchList.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"gongg21"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":216,"author":{"gitId":"gongg21"},"content":"            return message.toString();","lastModifiedDate":"2023-09-04"},{"lineNumber":217,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":218,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":219,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"gongg21":219}},{"path":"src/main/java/gbot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package gbot;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":" * The user interface of the chatbot.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":" * @author Gallen Ong","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"     * Prints a message in between two lines.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"    public static void print(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"        System.out.println(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"     * Prints the initial greeting to user.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"        print(\"Hello I\u0027m GBot.\\nHow may I assist you today?\");","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"     * Prints the closing message to user.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"    public static void displayExitMessage() {","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"        print(\"Thank you for your time G. I\u0027ll be of your service at any time.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"     * Prints a help guide with commands to user.","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"        return \"Here are some commands for me to better assist you with:\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"                  \"1) list (eg. list): display the current tasks you have\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"                  \"2) todo (eg. todo read book): adds a Todo task\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"                  \"3) deadline (eg. deadline return book /by 2023-09-21): adds a Deadline task\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"                  \"4) event (eg. event meeting /from 2023-09-21 /to 2023-09-22): adds an Event task\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"                  \"5) mark (eg. mark 1): marks a task based on index as done\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"                  \"6) markAll (eg. markAll): marks all existing tasks as done\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"                  \"7) unmark (eg. unmark 1): marks a task based on index as NOT done\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"                  \"8) unmarkAll (eg. unmarkAll): unmarks all existing tasks\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"                  \"9) delete (eg. delete 1): deletes a task based on index\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"                  \"10) deleteAll (eg. deleteAll): deletes all existing tasks in the list\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"                  \"11) find (eg. find book): displays a list of tasks containing the provided keyword\\n\" +","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"gongg21"},"content":"                  \"12) bye (eg. bye): exits the program\";","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"     * Prints out an error message.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"     * @param message The error message to be printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"    public static void showError(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"gongg21"},"content":"        print(message);","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"gongg21":63}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":" * The class representing a Deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":" * @author Gallen Ong","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"     * Initialises a Deadline task with a description and deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"     * @param description The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"     * @param deadline The task deadline.","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"        super(description.strip());","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"     * Initialises a Deadline Task by retrieving task from existing file.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"     * @param status The task status retrieved.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"     * @param description The task description retrieved.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"     * @param by The task deadline retrieved.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"    public Deadline(String status, String description, String by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"        this.deadline \u003d LocalDate.parse(by);","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"        if (status.equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"     * @return The Deadline task in string format.","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"        String strBy \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + strBy + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"gongg21"},"content":"     * Returns a string representation of the Deadline task to be added to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"     * @return The Deadline task in string format, specific for file operations.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"    public String toStringForFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"        return \"D | \" + super.toStringForFile() + \" | \" + this.deadline;","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"gongg21":60}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":" * The class representing an Event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":" * @author Gallen Ong","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"     * Initialises an Event task with a description, start and end time.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"     * @param description The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"     * @param from The task start time.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"     * @param to The task end time.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"        this.fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"        this.toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"     * Initialises an Event task by retrieving from existing file.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"     * @param status The task status retrieved.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"     * @param description The task description retrieved.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"     * @param from The task start time retrieved.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"     * @param to The task end time retrieved.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"    public Event(String status, String description, String from, String to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"        this.fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"        this.toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"        if (status.equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"     * @return The Event task in string format.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"gongg21"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"        String strFrom \u003d this.fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"        String strTo \u003d this.toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + strFrom + \" to: \" + strTo + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"     * Returns a string representation of the Event task to be added to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"gongg21"},"content":"     * @return The Event task in string format, specific for file operations.","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"gongg21"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"gongg21"},"content":"    public String toStringForFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"gongg21"},"content":"        return \"E | \" + super.toStringForFile() + \" | \" + this.fromDate + \" | \" + this.toDate;","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"gongg21":67}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":" * The class representing a Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":" * @author Gallen Ong","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"public class Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"    protected String description;","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"     * Initialises a Task object with a task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"     * @param description The task description.","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-25"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"     * Returns the symbol corresponding to the Task status.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"     * @return The status icon of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2023-08-25"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"     * Returns the description of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"     * @return The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"        return this.description;","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"     * Updates the status of the Task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-25"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"     * Updates the status of the Task as not done.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-25"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-25"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":52,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"     * Returns a string representation of the Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"     * @return The Task in string format.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-08-25"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":61,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"gongg21"},"content":"     * Returns a string representation of the Task to be added to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"gongg21"},"content":"     * @return The Task in string format, specific for file operations.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"gongg21"},"content":"    public String toStringForFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"gongg21"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"gongg21"},"content":"        return status + \" | \" + description;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"gongg21":71}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"package tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":" * The class representing a Todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":" *","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":" * @author Gallen Ong","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"     * Initialises a Todo task with a description.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"     * @param description The task description.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"     * Initialises a Todo task by retrieving from existing file.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"     * @param status The task status retrieved.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"     * @param description The task description retrieved.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"    public Todo(String status, String description) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"        super(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"        if (status.equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"     * @return The Todo task in string format.","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"    @Override","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"     * Returns a string representation of the Todo task to be added to a file.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"     * @return The Todo task in string format, specific for file operations.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"    public String toStringForFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"        return \"T | \" + super.toStringForFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"gongg21":50}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"\u003c!-- Adapted from https://se-education.org/guides/tutorials/javaFxPart4.html--\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"155.0\" prefWidth\u003d\"402.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"        \u003cText fx:id\u003d\"dialog\" text\u003d\"text\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"114.0\" fitWidth\u003d\"112.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"gongg21":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"\u003c!-- Adapted from https://se-education.org/guides/tutorials/javaFxPart4.html--\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"608.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gbot.MainWindow\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"7.0\" layoutY\u003d\"559.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"31.0\" prefWidth\u003d\"501.0\" AnchorPane.bottomAnchor\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"517.0\" layoutY\u003d\"559.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"31.0\" prefWidth\u003d\"77.0\" text\u003d\"Enter\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"551.0\" prefWidth\u003d\"607.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"gongg21":21}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"import gbot.Parser;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"import gbot.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"import exceptions.GBotException;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"    public void emptyCommandTest() {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"\", Parser.parse(\"\", new TaskList()));","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"        } catch (GBotException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"Please enter a command.\", e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"    public void parse_invalidCommand_errorMessageShown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"\", Parser.parse(\"invalid \", new TaskList()));","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"        } catch (GBotException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"Sorry. My command range is simply limited, I don\u0027t understand the command.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"                    e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"    public void parseMark_emptyField_errorMessageShown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"        assertEquals(\"Although you might not be wrong, I simply do not understand...\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"                \"Kindly enter a valid task number.\", Parser.parse(\"mark \", new TaskList()));","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"    public void parseMark_invalidTask_errorMessageShown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"\", Parser.parse(\"mark invalid \", new TaskList()));","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"        } catch (GBotException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"Although you might not be wrong, I simply do not understand...\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"                    \"Kindly enter a valid task number.\", e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"    public void parseUnmark_emptyField_errorMessageShown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"        assertEquals(\"Although you might not be wrong, I simply do not understand...\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"                \"Kindly enter a valid task number.\", Parser.parse(\"unmark \", new TaskList()));","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"    public void parseUnmark_invalidTask_errorMessageShown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"\", Parser.parse(\"unmark invalid \", new TaskList()));","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"        } catch (GBotException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"Although you might not be wrong, I simply do not understand...\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"                    \"Kindly enter a valid task number.\", e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"    public void parseTodo_emptyField_GBotExceptionThrown() {","lastModifiedDate":"2023-09-23"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"        assertEquals(\"I apologise. Kindly input a task description.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"gongg21"},"content":"                Parser.parse(\"todo \", new TaskList()));","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"gongg21"},"content":"    public void parseDeadline_emptyField_GBotExceptionThrown() {","lastModifiedDate":"2023-09-23"},{"lineNumber":65,"author":{"gitId":"gongg21"},"content":"        assertEquals(\"I apologise for correcting you. Kindly follow the following:\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"gongg21"},"content":"                \"deadline (task) /by (deadline in YYYY-MM-DD)\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"gongg21"},"content":"                \"eg. deadline return book /by 2023-09-21\",","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"gongg21"},"content":"                Parser.parse(\"deadline \", new TaskList()));","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"gongg21"},"content":"    public void parseDeadline_invalidFormat_GBotExceptionThrown() {","lastModifiedDate":"2023-09-23"},{"lineNumber":72,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-23"},{"lineNumber":73,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"\", Parser.parse(\"deadline return /by tomorrow\", new TaskList()));","lastModifiedDate":"2023-09-23"},{"lineNumber":74,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-23"},{"lineNumber":75,"author":{"gitId":"gongg21"},"content":"        } catch (GBotException e) {","lastModifiedDate":"2023-09-23"},{"lineNumber":76,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"I must apologise for correcting you.\\n\" +","lastModifiedDate":"2023-09-23"},{"lineNumber":77,"author":{"gitId":"gongg21"},"content":"                    \"Kindly enter a valid date in the YYYY-MM-DD format.\", e.getMessage());","lastModifiedDate":"2023-09-23"},{"lineNumber":78,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":79,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":80,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-23"},{"lineNumber":81,"author":{"gitId":"gongg21"},"content":"    public void parseDeadline_missingDetails_errorMessageShown() {","lastModifiedDate":"2023-09-23"},{"lineNumber":82,"author":{"gitId":"gongg21"},"content":"        assertEquals(\"It appears you may be missing some details, do kindly enter.\",","lastModifiedDate":"2023-09-23"},{"lineNumber":83,"author":{"gitId":"gongg21"},"content":"                Parser.parse(\"deadline /by tomorrow\", new TaskList()));","lastModifiedDate":"2023-09-23"},{"lineNumber":84,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":85,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-23"},{"lineNumber":86,"author":{"gitId":"gongg21"},"content":"    public void parseEvent_emptyField_eventExceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":87,"author":{"gitId":"gongg21"},"content":"        assertEquals(\"I apologise for correcting you. Kindly follow the following:\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"gongg21"},"content":"                \"event (task) /from (start in YYYY-MM-DD) /to (end in YYYY-MM-DD)\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"gongg21"},"content":"                \"eg. event attend meeting /from 2023-09-21 /to 2023-09-22\",","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"gongg21"},"content":"                Parser.parse(\"event \", new TaskList()));","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"gongg21"},"content":"    public void parseEvent_invalidFormat_GBotExceptionThrown() {","lastModifiedDate":"2023-09-23"},{"lineNumber":94,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-23"},{"lineNumber":95,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"\", Parser.parse(\"event meeting /from now /to later\", new TaskList()));","lastModifiedDate":"2023-09-23"},{"lineNumber":96,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-23"},{"lineNumber":97,"author":{"gitId":"gongg21"},"content":"        } catch (GBotException e) {","lastModifiedDate":"2023-09-23"},{"lineNumber":98,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"I must apologise for correcting you.\\n\" +","lastModifiedDate":"2023-09-23"},{"lineNumber":99,"author":{"gitId":"gongg21"},"content":"                    \"Kindly enter a valid date in the YYYY-MM-DD format.\", e.getMessage());","lastModifiedDate":"2023-09-23"},{"lineNumber":100,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-23"},{"lineNumber":101,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":102,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-23"},{"lineNumber":103,"author":{"gitId":"gongg21"},"content":"    public void parseEvent_missingDetails_errorMessageShown() {","lastModifiedDate":"2023-09-23"},{"lineNumber":104,"author":{"gitId":"gongg21"},"content":"        assertEquals(\"It appears you may be missing some details, do kindly enter.\",","lastModifiedDate":"2023-09-23"},{"lineNumber":105,"author":{"gitId":"gongg21"},"content":"                Parser.parse(\"event /from 2023-09-21 /to \", new TaskList()));","lastModifiedDate":"2023-09-23"},{"lineNumber":106,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-23"},{"lineNumber":107,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-23"},{"lineNumber":108,"author":{"gitId":"gongg21"},"content":"    public void parseDelete_emptyField_errorMessageShown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":109,"author":{"gitId":"gongg21"},"content":"        assertEquals(\"Although you might not be wrong, I simply do not understand...\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"gongg21"},"content":"                \"Kindly enter a valid task number.\", Parser.parse(\"delete \", new TaskList()));","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"gongg21"},"content":"    public void parseDelete_invalidTask_errorMessageShown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":114,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"\", Parser.parse(\"delete invalid\", new TaskList()));","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"gongg21"},"content":"        } catch (GBotException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"Although you might not be wrong, I simply do not understand...\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"gongg21"},"content":"                    \"Kindly enter a valid task number.\", e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"gongg21":122}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"import gbot.StorageStub;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"import gbot.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":"import exceptions.TaskException;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"gongg21"},"content":"    public void mark_invalidTaskIndex_taskExceptionThrown () {","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"gongg21"},"content":"            Assertions.assertEquals(\"\", new TaskList(new StorageStub()).markTask(1));","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"gongg21"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"Invalid task provided.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"gongg21"},"content":"    public void mark_negativeTaskIndex_taskExceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"\", new TaskList(new StorageStub()).markTask(-1));","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"gongg21"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"Invalid task provided.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"gongg21"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"gongg21"},"content":"    public void unmark_invalidTaskIndex_taskExceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"\", new TaskList(new StorageStub()).unmarkTask(1));","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"gongg21"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"Invalid task provided.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"gongg21"},"content":"    public void unmark_negativeTaskIndex_taskExceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"\", new TaskList(new StorageStub()).unmarkTask(-1));","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"gongg21"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"Invalid task provided.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"gongg21"},"content":"    public void delete_invalidTaskIndex_taskExceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"\", new TaskList(new StorageStub()).deleteTask(1));","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"gongg21"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"Invalid task provided.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"gongg21"},"content":"    public void delete_negativeTaskIndex_taskExceptionThrown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"gongg21"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"\", new TaskList(new StorageStub()).deleteTask(-1));","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"gongg21"},"content":"            fail();","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"gongg21"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"gongg21"},"content":"            assertEquals(\"Invalid task provided.\", e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"gongg21"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"gongg21"},"content":"    public void todo_validInput_successMessageShown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"gongg21"},"content":"        String todoStr \u003d \"Yet another task to do, you\u0027re amazing. Have added this:\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"gongg21"},"content":"                            + \"[T][ ] borrow book\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"gongg21"},"content":"                            + \"You now have 1 task(s) to do.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"gongg21"},"content":"        assertEquals(todoStr, new TaskList(new StorageStub()).addTodo(\"borrow book\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"gongg21"},"content":"    public void deadline_validInput_successMessageShown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"gongg21"},"content":"        String deadlineStr \u003d \"No rush on this but do take note of the deadline. Have added this:\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"gongg21"},"content":"                            + \"[D][ ] return book (by: Sep 21 2023)\"","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"gongg21"},"content":"                            + \"\\nYou now have 1 task(s) to do.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"gongg21"},"content":"        assertEquals(deadlineStr, new TaskList(new StorageStub())","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"gongg21"},"content":"                                .addDeadline(\"return book\", \"2023-09-21\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"gongg21"},"content":"    public void deadline_invalidInput_successMessageShown() {","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"gongg21"},"content":"        assertEquals(\"It appears you may be missing some details, do kindly enter.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"gongg21"},"content":"                new TaskList(new StorageStub()).addDeadline(\"\", \"2023-09-21\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"gongg21"},"content":"    public void event_validInput_successMessageShown() {","lastModifiedDate":"2023-09-04"},{"lineNumber":88,"author":{"gitId":"gongg21"},"content":"        String eventStr \u003d \"Events are the norm of the upper echelon. Have added this event:\\n\"","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"gongg21"},"content":"                            + \"[E][ ] meeting (from: Sep 21 2023 to: Sep 22 2023)\"","lastModifiedDate":"2023-09-04"},{"lineNumber":90,"author":{"gitId":"gongg21"},"content":"                            + \"\\nYou now have 1 task(s) to do.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"gongg21"},"content":"        assertEquals(eventStr, new TaskList(new StorageStub())","lastModifiedDate":"2023-09-04"},{"lineNumber":92,"author":{"gitId":"gongg21"},"content":"                                .addEvent(\"meeting\", \"2023-09-21\", \"2023-09-22\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"gongg21"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"gongg21"},"content":"    public void event_invalidInput_successMessageShown() {","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"gongg21"},"content":"        assertEquals(\"It appears you may be missing some details, do kindly enter.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"gongg21"},"content":"                new TaskList(new StorageStub()).addEvent(\"\", \"2023-09-21\", \"\"));","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"gongg21"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"gongg21"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"gongg21":99}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gongg21"},"content":"todo borrow book","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"gongg21"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"gongg21"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"gongg21"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"gongg21"},"content":"mark 2","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"gongg21"},"content":"mark 3","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"gongg21"},"content":"unmark 2","lastModifiedDate":"2023-08-25"},{"lineNumber":8,"author":{"gitId":"gongg21"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":9,"author":{"gitId":"gongg21"},"content":"delete 2","lastModifiedDate":"2023-08-25"},{"lineNumber":10,"author":{"gitId":"gongg21"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":11,"author":{"gitId":"gongg21"},"content":"bye","lastModifiedDate":"2023-08-25"}],"authorContributionMap":{"gongg21":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"gongg21"},"content":"java -classpath ../bin GBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"gongg21"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":32,"gongg21":2}}]
