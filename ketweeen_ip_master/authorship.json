[{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":" * A class for Deadlines tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"public class Deadlines extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"    /** Class field by that tells when the deadline is due. */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"    protected LocalDate deadlineDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"     * Constructor to initialize the Deadlines class.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"     * @param description Describes the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * @param deadlineDate When the task is due.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    public Deadlines(String description, LocalDate deadlineDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"        String doneStatus \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        String formattedDate \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"D | %s | %s | %s\", doneStatus, this.description, formattedDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"        String formattedDate \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", this.getStatusIcon(), this.description, formattedDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ketweeen":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"     * The file path for storing and retrieving tasks. */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"    private static final String DATA_FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"        // Welcome","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        Ui.showWelcome();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"        // Creates data folder if doesn\u0027t exist","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"        File dataDirectory \u003d new File(\"./data\");","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"            if (dataDirectory.mkdir()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"                System.out.println(\"        Data directory created successfully.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"                System.out.println(\"        Failed to create data directory.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"            Ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"        // Check user input","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"        List\u003cTask\u003e userList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"        TaskList taskList \u003d new TaskList(userList);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"        this.storage.loadTasks(taskList); // Load tasks to list","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"                // Exit the loop if the user types \"bye\"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"                storage.saveTasks(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"                Ui.showExit();","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"            Parser.parseUserInput(userInput, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"        new Duke(DATA_FILE_PATH).run();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ketweeen":55,"-":3}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":" * A class for Events tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"    /** Class field by that tells when the event is from. */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"    /** Class field by that tells until when the event is done. */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"     * Constructor to initialize the Events class.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"     * @param description Describes the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"     * @param from When the event is from.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * @param to Until when the event is to.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    public Events(String description, String from,  String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        String doneStatus \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"E | %s | %s | %s | %s\", doneStatus, this.description, this.from, this.to);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\", this.getStatusIcon(), this.description, this.from, this.to);","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ketweeen":40}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"    public static void parseUserInput(String userInput, TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"            // If user wants to check list","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"            Ui.showList(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"            // If user wants to mark something","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"            String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"                    int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"                    taskList.markTask(taskList.getTask(index));","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"                    Ui.showError(\"Invalid task number\");","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"                // Invalid command format","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"                Ui.showError(\"Invalid command format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"            // If user wants to unmark something","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"            String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"                    int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"                    taskList.unmarkTask(taskList.getTask(index));","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"                    Ui.showError(\"Invalid task number\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"                // Invalid command format","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"                Ui.showError(\"Invalid command format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"        } else if (userInput.startsWith(\"todo\") || userInput.startsWith(\"deadline\") || userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"            // User creates a task","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"            Task newTask \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"            if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"                // If user wants to create a ToDos task","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"                if (userInput.length() \u003c 5) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"                    // Incorrect input format for todos","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"                    Ui.showError(\"Incorrect input format for todo\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"                    String description \u003d userInput.substring(5).trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"                    if (description.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"                        // If there\u0027s do description","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"                        Ui.showError(\"The description of a todo cannot be empty\");","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"                    } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"                        newTask \u003d new ToDos(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"                        taskList.addTask(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"                // If user wants to create a Deadlines task","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"                String[] parts \u003d userInput.split(\"/by\");","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"                if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"                    // Makes sure deadline format is followed (e.g. there\u0027s /by)","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"                    String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"                    String by \u003d parts[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"                    // Parse the date and time","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"                    LocalDate deadlineDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"                    if (description.isBlank() || by.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"                        // If description or by is empty","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"                        Ui.showError(\"The description or by of a deadline cannot be empty\");","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"                    } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"                        newTask \u003d new Deadlines(description, deadlineDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"                        taskList.addTask(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"                    // Incorrect input format for deadline","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"                    Ui.showError(\"Incorrect input format for deadline\");","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ketweeen"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"ketweeen"},"content":"                // If user wants to create an Events task","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"ketweeen"},"content":"                String[] parts \u003d userInput.split(\"/from|/to\");","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ketweeen"},"content":"                if (parts.length \u003d\u003d 3) {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ketweeen"},"content":"                    // Makes sure deadline format is followed (e.g. there\u0027s /from and /to)","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ketweeen"},"content":"                    String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ketweeen"},"content":"                    String from \u003d parts[1].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"ketweeen"},"content":"                    String to \u003d parts[2].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"ketweeen"},"content":"                    if (description.isBlank() || from.isBlank() || to.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"ketweeen"},"content":"                        // If description, from, or to is empty","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"ketweeen"},"content":"                        Ui.showError(\"The description or from or to of an event cannot be empty\");","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"ketweeen"},"content":"                    } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"ketweeen"},"content":"                        newTask \u003d new Events(description, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"ketweeen"},"content":"                        taskList.addTask(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"ketweeen"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"ketweeen"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"ketweeen"},"content":"                    // Incorrect input format for events","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"ketweeen"},"content":"                    Ui.showError(\"Incorrect input format for event\");","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"ketweeen"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"ketweeen"},"content":"            if (newTask !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"ketweeen"},"content":"                // If task is initialized","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"ketweeen"},"content":"                Ui.showAddedTask(newTask, taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"ketweeen"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"ketweeen"},"content":"            // If user wants to delete a task","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"ketweeen"},"content":"            String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"ketweeen"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"ketweeen"},"content":"                try {","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"ketweeen"},"content":"                    int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"ketweeen"},"content":"                    taskList.deleteTask(taskList.getTask(index));","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"ketweeen"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"ketweeen"},"content":"                    Ui.showError(\"Invalid task number\");","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"ketweeen"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"ketweeen"},"content":"            } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"ketweeen"},"content":"                // Invalid command format","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"ketweeen"},"content":"                Ui.showError(\"Invalid command format\");","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"ketweeen"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"ketweeen"},"content":"            // Other inputs","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"ketweeen"},"content":"            Ui.showError(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ketweeen":132}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"    private final String filepath;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"     * Loads tasks from a file and populates the provided list with the loaded tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * This method reads tasks from a file specified by the DATA_FILE_PATH and adds them to","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     * the provided list of tasks. If the file does not exist, it will be created.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"     * @param list The list to which loaded tasks will be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    public void loadTasks(TaskList list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"            // Create a File object representing the data file","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"            // Create the file if it doesn\u0027t exist and print a message","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"                System.out.println(\"        New File Created\");","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"                Ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"            // Use a Scanner to read tasks from the file","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"            try (Scanner sc \u003d new Scanner(file)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"                    // Read each line from the file","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"                    String line \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"                    // Convert the line to a Task object using Task.fromString","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"                    Task task \u003d Task.fromString(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"                    // Add the task to the provided list if it\u0027s not null","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"                        list.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"            // Handle IO exception by printing an error message","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"            Ui.showError(\" An error occurred while loading tasks\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"     * Saves tasks from a list to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"     * This method writes tasks from the provided list to a file specified by the DATA_FILE_PATH.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"     * The tasks are converted to their file representation using the toFileString method of","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"     * the Task class. If an error occurs during the file writing process, an error message","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"     * is printed.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"     * @param list The list of tasks to be saved to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"    public void saveTasks(TaskList list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"            // Create a File object representing the data file","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"            // Create a FileWriter to write tasks to the file","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"            // Write each task\u0027s file representation to the file","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"                writer.write(list.getTask(i).toFileString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"            // Close the FileWriter","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"            // Handle IO exception by printing an error message","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"            Ui.showError(\" An error occurred while saving tasks\");","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ketweeen":83}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":" * A class for Tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"    /** Class field description that describes the task. */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    /** Class field isDone that tells whether the task is marked. */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * Constructor to initialize the Task class.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"     * @param description Describes the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"     * Method to get the status icon of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"     * @return String \"X\" if task\u0027s isDone is true, \" \" otherwise.","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"     * Method that sets the task\u0027s isDone to true.","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"     * Method that sets the task\u0027s isDone to false.","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"     * Parses a string representation of a task and creates a Task object.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"     * This method takes a string representation of a task in a specific format","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"     * and parses it to create a corresponding Task object. The input string is","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"     * split using the \"|\" delimiter and the task type, status, description, and","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"     * other relevant information are extracted to create the appropriate task.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"     * The created task object is then returned.","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"     * @param line The string representation of a task to be parsed.","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"     * @return A Task object created from the parsed string representation.","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"    public static Task fromString(String line) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"        switch (type) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"        case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"            task \u003d new ToDos(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"        case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"            String by \u003d parts[3].trim();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"            // Parse the date and time","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"            task \u003d new Deadlines(description, deadlineDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"        case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"            String from \u003d parts[3].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"            String to \u003d parts[4].trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"            task \u003d new Events(description, from, to);","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"ketweeen"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"ketweeen"},"content":"        if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ketweeen"},"content":"            task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ketweeen"},"content":"        return task;","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"ketweeen"},"content":"     * Generates a string representation of the task for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"ketweeen"},"content":"     * @return A formatted string representation of the task for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"ketweeen"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"ketweeen"},"content":"        String doneStatus \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"  | %s | %s\", doneStatus, this.description);","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"ketweeen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ketweeen":112}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"    private final List\u003cTask\u003e userList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"        this.userList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"        userList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"        Ui.showMarkedTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"        Ui.showUnmarkedTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"        userList.remove(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"        Ui.showDeletedTask(task, this);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"        return userList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"        return userList.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ketweeen":38}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":" * A class for ToDos tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"     * Constructor to initialize the ToDos class.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"     * @param description Describes the todos task.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"    public ToDos(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"        String doneStatus \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"T | %s | %s\", doneStatus, this.description);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"[T][%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ketweeen":31}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"    /** Divider constant */","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"    private static final String DIVIDER \u003d \"      ____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"    public static void showLine() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"    public static void showWelcome() {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"        Hello! I\u0027m Valerie!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"        What can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    public static void showError(String error) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"        ERROR: \" + error + \"!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"    public static void showMarkedTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"        Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"            \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"    public static void showUnmarkedTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"         OK! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"            \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"    public static void showAddedTask(Task task, TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"        Got it! I\u0027ve added this task: \");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"            \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"        Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"    public static void showDeletedTask(Task task, TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"        Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"            \" + task);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"        Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"    public static void showList(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"        Sure! Here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"            String str \u003d String.format(\"            %d. %s\", i + 1, taskList.getTask(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"            System.out.println(str);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"        Ui.showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"    public static void showExit() {","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"        System.out.println(\"        Bye ~ Hope to see you again soon ~\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"        showLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ketweeen":70}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ketweeen":8}}]
