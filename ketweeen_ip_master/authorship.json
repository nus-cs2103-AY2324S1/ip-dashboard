[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"    archiveBaseName \u003d \"valerie\"","lastModifiedDate":"2023-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ketweeen":22,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"T | 0 | 1","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"D | 0 | yes | Nov 01 2020","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"E | 0 | cry | now | eternity","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"ketweeen":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"# ValerieBot User Guide","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"Welcome to ValerieBot! ValerieBot is a command-line task management application designed","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"to help you keep track of your tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"This user guide will walk you through the various features and commands you can use with ValerieBot.","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"## Getting Started","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"To get started with ValerieBot, follow these steps:","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"1. Make sure you have the Java Development Kit (JDK) installed on your computer. You can download it from [Oracle](https://www.oracle.com/java/technologies/javase-downloads.html).","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"2. Download or clone the ValerieBot project to your local machine.","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"3. Open your command line or terminal and navigate to the project directory containing the `Launcher.java` file.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"4. Compile the `Launcher.java` file and run the ValerieBot application by running the following command:","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"   ```","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"   javac Launcher.java","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"   java Launcher","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"   ```","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"The ValerieBot chatbot application will start, and you will see a command-line interface where you can interact with the chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"Now, you\u0027re ready to use ValerieBot! ♡","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"ValerieBot provides a wide range of features to manage your tasks effectively :","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"### Listing Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"To view your list of tasks, use the `list` command:","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"list","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"ValerieBot will display all your tasks, including their descriptions and completion status.","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"### Adding a Task","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"You can add tasks to your list using the following commands:","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"- `todo` `\u003cdescription\u003e` : Add a ToDo task.","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"todo Buy groceries","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"- `deadline` `\u003cdescription\u003e` /by `\u003cdate\u003e` : Add a Deadline task with a due date.","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"deadline Finish report /by 2023-09-30","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"- `event` `\u003cdescription\u003e` /from `\u003cstart\u003e` /to `\u003cend\u003e` : Add an Event task with start and end times.","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"event Team meeting /from 14:00 /to 15:30","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"### Deleting Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"If you want to remove a task from your list, use the delete command.","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"Replace \u003ctask-number\u003e with the number of the task you want to delete:","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"delete 3","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"### Marking Tasks as Done","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"You can mark tasks as done using the mark command. For example, to mark the first task as done, use:","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"mark 1","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"### Unmarking Tasks as Done","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"If you want to unmark a previously marked task, use the unmark command. For example, to unmark the second task, use:","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"unmark 2","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"### Finding Tasks","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"To search for tasks containing a specific keyword in their descriptions, use the find command. Replace \u003ckeyword\u003e with your search term:","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"find groceries","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"ketweeen"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"ketweeen"},"content":"### Getting Help","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"ketweeen"},"content":"If you need assistance or want to see a list of available commands, use the help command:","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":91,"author":{"gitId":"ketweeen"},"content":"help","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":93,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"ketweeen"},"content":"### Exiting the Application","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"ketweeen"},"content":"To exit ValerieBot, simply type `bye`, and the application will save your tasks and close.","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"ketweeen":67,"-":28}},{"path":"src/main/java/valerie/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":" * A class for Deadlines tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"    /** Class field by that tells when the deadline is due. */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"    protected LocalDate deadlineDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"     * Constructor to initialize the Deadlines class.","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"     * @param description Describes the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * @param deadlineDate When the task is due.","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    public Deadlines(String description, LocalDate deadlineDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"        String doneStatus \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        String formattedDate \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"D | %s | %s | %s\", doneStatus, this.description, formattedDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"        String formattedDate \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", this.getStatusIcon(), this.description, formattedDate);","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ketweeen":41}},{"path":"src/main/java/valerie/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":" * Custom JavaFX component representing a dialog box that contains a message and an image.","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"     * Private constructor for creating a DialogBox.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"     * @param text The text message to display in the dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"     * @param img  The image to display in the dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"     * Create a DialogBox for user input.","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"     * @param text The text message to display in the dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"     * @param img  The image to display in the dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"     * @return A DialogBox with the user\u0027s message.","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"     * Create a DialogBox for Valerie\u0027s response.","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"     * @param text The text message to display in the dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"     * @param img  The image to display in the dialog.","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"     * @return A DialogBox with Valerie\u0027s message.","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"    public static DialogBox getValerieDialog(String text, Image img) {","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ketweeen":79}},{"path":"src/main/java/valerie/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":" * A class for Events tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"    /** Class field by that tells when the event is from. */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"    /** Class field by that tells until when the event is done. */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"     * Constructor to initialize the Events class.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"     * @param description Describes the event.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"     * @param from When the event is from.","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * @param to Until when the event is to.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    public Events(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        String doneStatus \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"E | %s | %s | %s | %s\", doneStatus, this.description, this.from, this.to);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\", this.getStatusIcon(), this.description,","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"                this.from, this.to);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ketweeen":41}},{"path":"src/main/java/valerie/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"    // Entry point of the application, launches the Main class.","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ketweeen":13}},{"path":"src/main/java/valerie/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import java.util.List;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":" * A GUI for Valerie using FXML.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"    private final List\u003cTask\u003e userList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    private final TaskList taskList \u003d new TaskList(userList);","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"    private final Valerie valerie \u003d new Valerie(\"./data/valerie.txt\", taskList);","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"        try {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setValerie(valerie);","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"            stage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ketweeen":37}},{"path":"src/main/java/valerie/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"    private Valerie valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"    private Image valerieImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Valerie.jpg\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"     * Initializes the dialog container and sets up the initial dialog message.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"                DialogBox.getValerieDialog(\"Hi! I\u0027m Valerie. What can I do for you today? \"","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"                        + \"\\nPlease type \u0027help\u0027 to access a list of available commands!\", valerieImage)","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"    public void setValerie(Valerie v) {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"        valerie \u003d v;","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"    @FXML","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"        // User\u0027s response","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"        ArrayList\u003cString\u003e responses \u003d valerie.getResponse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"        // Valerie\u0027s response","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"        for (String response : responses) {","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"            sb.append(response);","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"        String fullResponse \u003d sb.toString();","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"                DialogBox.getUserDialog(input, userImage), // User\u0027s response","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"                DialogBox.getValerieDialog(fullResponse, valerieImage) // Valerie\u0027s response","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ketweeen":74}},{"path":"src/main/java/valerie/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":" * The Parser class is responsible for parsing user input and file input","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":" * to create and manipulate tasks in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"    private static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    private static final int COMMAND_ID_INDEX \u003d 1; // Index of command\u0027s additional information (e.g. number or keyword)","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"    private static final int COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"    private static final String DATE_FORMAT_PATTERN \u003d \"MMM d yyyy\";","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    private static final int TASK_PARTS_DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"     * Parses user input and performs corresponding actions on the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"     * @param userInput The user\u0027s input command.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"     * @param taskList  The list of tasks to be manipulated.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    public static ArrayList\u003cString\u003e parseUserInput(String userInput, TaskList taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"        String command \u003d parts[COMMAND_INDEX];","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"        switch (command) {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        case \"list\":","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"            return handleListCommand(taskList);","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"            return handleMarkCommand(parts, taskList);","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"            return handleUnmarkCommand(parts, taskList);","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"            return handleTodoCommand(userInput, taskList);","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"            return handleDeadlineCommand(userInput, taskList);","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"        case \"event\":","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"            return handleEventCommand(userInput, taskList);","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"            return handleDeleteCommand(parts, taskList);","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"        case \"find\":","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"            return handleFindCommand(parts, taskList);","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"        case \"help\":","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"            return handleHelpCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"        default:","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"I\u0027m sorry, but I don\u0027t know what that means!\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"                    + \"Please type \u0027help\u0027 to access a list of available commands\");","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"     * Parses a string representation of a task and creates a Task object.","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"     * @param line The string representation of a task to be parsed.","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"     * @return A Task object created from the parsed string representation.","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"    public static Task parseFileInput(String line) {","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"        final int FILE_TASK_DONE_STATUS_INDEX \u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"        final int FILE_TASK_DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"        final int FILE_DEADLINE_DATE_INDEX \u003d 3;","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"        final int FILE_EVENT_FROM_INDEX \u003d 3;","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"        final int FILE_EVENT_TO_INDEX \u003d 4;","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"        String type \u003d parts[COMMAND_INDEX].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"        boolean isDone \u003d parts[FILE_TASK_DONE_STATUS_INDEX].trim().equals(\"1\");","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"        String description \u003d parts[FILE_TASK_DESCRIPTION_INDEX].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"        switch (type) {","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"        case \"T\":","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"            task \u003d new ToDos(description);","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"ketweeen"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"ketweeen"},"content":"        case \"D\":","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"ketweeen"},"content":"            String by \u003d parts[FILE_DEADLINE_DATE_INDEX].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"ketweeen"},"content":"            // Parse the date and time","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"ketweeen"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(DATE_FORMAT_PATTERN));","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"ketweeen"},"content":"            task \u003d new Deadlines(description, deadlineDate);","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"ketweeen"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"ketweeen"},"content":"        case \"E\":","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"ketweeen"},"content":"            String from \u003d parts[FILE_EVENT_FROM_INDEX].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"ketweeen"},"content":"            String to \u003d parts[FILE_EVENT_TO_INDEX].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"ketweeen"},"content":"            task \u003d new Events(description, from, to);","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"ketweeen"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"ketweeen"},"content":"        default:","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"ketweeen"},"content":"            break;","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"ketweeen"},"content":"        if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"ketweeen"},"content":"            task.markAsDone();","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"ketweeen"},"content":"        return task;","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"ketweeen"},"content":"     * Handles the \"list\" command, displaying the list of tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"ketweeen"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList of strings representing the task list.","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"ketweeen"},"content":"    private static ArrayList\u003cString\u003e handleListCommand(TaskList taskList) {","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"ketweeen"},"content":"        return Ui.showList(taskList);","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"ketweeen"},"content":"     * Handles the \"mark\" command, marking a task as done.","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"ketweeen"},"content":"     * @param parts    The array of command parts.","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"ketweeen"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList of strings with the result of the mark operation or an error message.","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"ketweeen"},"content":"    private static ArrayList\u003cString\u003e handleMarkCommand(String[] parts, TaskList taskList) {","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"ketweeen"},"content":"        if (parts.length !\u003d COMMAND_LENGTH) {","lastModifiedDate":"2023-09-13"},{"lineNumber":130,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"Invalid command format\");","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"ketweeen"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"ketweeen"},"content":"            int index \u003d Integer.parseInt(parts[COMMAND_ID_INDEX]) - 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"ketweeen"},"content":"            return taskList.markTask(taskList.getTask(index));","lastModifiedDate":"2023-09-08"},{"lineNumber":136,"author":{"gitId":"ketweeen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"Invalid task number\");","lastModifiedDate":"2023-09-08"},{"lineNumber":138,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"ketweeen"},"content":"     * Handles the \"unmark\" command, unmarking a task as done.","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"ketweeen"},"content":"     * @param parts    The array of command parts.","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"ketweeen"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList of strings with the result of the unmark operation or an error message.","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"ketweeen"},"content":"    private static ArrayList\u003cString\u003e handleUnmarkCommand(String[] parts, TaskList taskList) {","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"ketweeen"},"content":"        if (parts.length !\u003d COMMAND_LENGTH) {","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"Invalid command format\");","lastModifiedDate":"2023-09-08"},{"lineNumber":151,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"ketweeen"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"ketweeen"},"content":"            int index \u003d Integer.parseInt(parts[COMMAND_ID_INDEX]) - 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"ketweeen"},"content":"            return taskList.unmarkTask(taskList.getTask(index));","lastModifiedDate":"2023-09-08"},{"lineNumber":156,"author":{"gitId":"ketweeen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"Invalid task number\");","lastModifiedDate":"2023-09-08"},{"lineNumber":158,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":162,"author":{"gitId":"ketweeen"},"content":"     * Handles the \"todos\" command, adding a new ToDos task.","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":164,"author":{"gitId":"ketweeen"},"content":"     * @param userInput The user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":165,"author":{"gitId":"ketweeen"},"content":"     * @param taskList  The TaskList containing the tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":166,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList of strings with the result of adding the task or an error message.","lastModifiedDate":"2023-09-12"},{"lineNumber":167,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":168,"author":{"gitId":"ketweeen"},"content":"    private static ArrayList\u003cString\u003e handleTodoCommand(String userInput, TaskList taskList) {","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"ketweeen"},"content":"        final int TODOS_MIN_LENGTH \u003d 5;","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"ketweeen"},"content":"        if (userInput.length() \u003c TODOS_MIN_LENGTH) {","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"ketweeen"},"content":"            // Incorrect input format for todos","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"Incorrect input format for todo\");","lastModifiedDate":"2023-09-08"},{"lineNumber":173,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"ketweeen"},"content":"        String description \u003d userInput.substring(TODOS_MIN_LENGTH).trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"ketweeen"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"The description of a todo cannot be empty\");","lastModifiedDate":"2023-09-08"},{"lineNumber":179,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"ketweeen"},"content":"        Task newTask \u003d new ToDos(description);","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"ketweeen"},"content":"        return taskList.addTask(newTask);","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"ketweeen"},"content":"     * Handles the \"deadline\" command, adding a new Deadline task.","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"ketweeen"},"content":"     * @param userInput The user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"ketweeen"},"content":"     * @param taskList  The TaskList containing the tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList of strings with the result of adding the task or an error message.","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"ketweeen"},"content":"    private static ArrayList\u003cString\u003e handleDeadlineCommand(String userInput, TaskList taskList) {","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"ketweeen"},"content":"        final int DEADLINE_MIN_LENGTH \u003d 9;","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"ketweeen"},"content":"        final int DEADLINE_PARTS_LENGTH \u003d 2;","lastModifiedDate":"2023-09-13"},{"lineNumber":195,"author":{"gitId":"ketweeen"},"content":"        final int DEADLINE_PARTS_BY_INDEX \u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"ketweeen"},"content":"        String[] parts \u003d userInput.split(\"/by\");","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"ketweeen"},"content":"        if (parts.length !\u003d DEADLINE_PARTS_LENGTH) {","lastModifiedDate":"2023-09-13"},{"lineNumber":200,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"Incorrect input format for deadline\");","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":202,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"ketweeen"},"content":"        String description \u003d parts[TASK_PARTS_DESCRIPTION_INDEX].substring(DEADLINE_MIN_LENGTH).trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":204,"author":{"gitId":"ketweeen"},"content":"        String by \u003d parts[DEADLINE_PARTS_BY_INDEX].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":205,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":206,"author":{"gitId":"ketweeen"},"content":"        if (description.isBlank() || by.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"The description or by of a deadline cannot be empty\");","lastModifiedDate":"2023-09-08"},{"lineNumber":208,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"ketweeen"},"content":"        LocalDate deadlineDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"ketweeen"},"content":"        Task newTask \u003d new Deadlines(description, deadlineDate);","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"ketweeen"},"content":"        return taskList.addTask(newTask);","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":214,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":215,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":216,"author":{"gitId":"ketweeen"},"content":"     * Handles the \"event\" command, adding a new Event task.","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"ketweeen"},"content":"     * @param userInput The user input.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"ketweeen"},"content":"     * @param taskList  The TaskList containing the tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList of strings with the result of adding the task or an error message.","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"ketweeen"},"content":"    private static ArrayList\u003cString\u003e handleEventCommand(String userInput, TaskList taskList) {","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"ketweeen"},"content":"        final int EVENT_MIN_LENGTH \u003d 6;","lastModifiedDate":"2023-09-13"},{"lineNumber":224,"author":{"gitId":"ketweeen"},"content":"        final int EVENT_PARTS_LENGTH \u003d 3;","lastModifiedDate":"2023-09-13"},{"lineNumber":225,"author":{"gitId":"ketweeen"},"content":"        final int EVENT_PARTS_FROM_INDEX \u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":226,"author":{"gitId":"ketweeen"},"content":"        final int EVENT_PARTS_TO_INDEX \u003d 2;","lastModifiedDate":"2023-09-13"},{"lineNumber":227,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":228,"author":{"gitId":"ketweeen"},"content":"        String[] parts \u003d userInput.split(\"/from|/to\");","lastModifiedDate":"2023-08-30"},{"lineNumber":229,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":230,"author":{"gitId":"ketweeen"},"content":"        if (parts.length !\u003d EVENT_PARTS_LENGTH) {","lastModifiedDate":"2023-09-13"},{"lineNumber":231,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"Incorrect input format for event\");","lastModifiedDate":"2023-09-12"},{"lineNumber":232,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"ketweeen"},"content":"        String description \u003d parts[TASK_PARTS_DESCRIPTION_INDEX].substring(EVENT_MIN_LENGTH).trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":235,"author":{"gitId":"ketweeen"},"content":"        String from \u003d parts[EVENT_PARTS_FROM_INDEX].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":236,"author":{"gitId":"ketweeen"},"content":"        String to \u003d parts[EVENT_PARTS_TO_INDEX].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":237,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":238,"author":{"gitId":"ketweeen"},"content":"        if (description.isBlank() || from.isBlank() || to.isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":239,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"The description or from or to of an event cannot be empty\");","lastModifiedDate":"2023-09-08"},{"lineNumber":240,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":241,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":242,"author":{"gitId":"ketweeen"},"content":"        Task newTask \u003d new Events(description, from, to);","lastModifiedDate":"2023-09-12"},{"lineNumber":243,"author":{"gitId":"ketweeen"},"content":"        return taskList.addTask(newTask);","lastModifiedDate":"2023-09-12"},{"lineNumber":244,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":245,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":246,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":247,"author":{"gitId":"ketweeen"},"content":"     * Handles the \"delete\" command, deleting a task.","lastModifiedDate":"2023-09-12"},{"lineNumber":248,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":249,"author":{"gitId":"ketweeen"},"content":"     * @param parts    The array of command parts.","lastModifiedDate":"2023-09-12"},{"lineNumber":250,"author":{"gitId":"ketweeen"},"content":"     * @param taskList The TaskList containing the tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":251,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList of strings with the result of the delete operation or an error message.","lastModifiedDate":"2023-09-12"},{"lineNumber":252,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":253,"author":{"gitId":"ketweeen"},"content":"    private static ArrayList\u003cString\u003e handleDeleteCommand(String[] parts, TaskList taskList) {","lastModifiedDate":"2023-09-12"},{"lineNumber":254,"author":{"gitId":"ketweeen"},"content":"        if (parts.length !\u003d COMMAND_LENGTH) {","lastModifiedDate":"2023-09-13"},{"lineNumber":255,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"Invalid command format\");","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":258,"author":{"gitId":"ketweeen"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":259,"author":{"gitId":"ketweeen"},"content":"            int index \u003d Integer.parseInt(parts[COMMAND_ID_INDEX]) - 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":260,"author":{"gitId":"ketweeen"},"content":"            return taskList.deleteTask(taskList.getTask(index));","lastModifiedDate":"2023-09-08"},{"lineNumber":261,"author":{"gitId":"ketweeen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":262,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"Invalid task number\");","lastModifiedDate":"2023-09-08"},{"lineNumber":263,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":264,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":265,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":266,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":267,"author":{"gitId":"ketweeen"},"content":"     * Handles the \"find\" command, searching for tasks containing a keyword.","lastModifiedDate":"2023-09-12"},{"lineNumber":268,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":269,"author":{"gitId":"ketweeen"},"content":"     * @param parts     The array of command parts.","lastModifiedDate":"2023-09-13"},{"lineNumber":270,"author":{"gitId":"ketweeen"},"content":"     * @param taskList  The TaskList containing the tasks.","lastModifiedDate":"2023-09-12"},{"lineNumber":271,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList of strings with the result of the find operation.","lastModifiedDate":"2023-09-12"},{"lineNumber":272,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":273,"author":{"gitId":"ketweeen"},"content":"    private static ArrayList\u003cString\u003e handleFindCommand(String[] parts, TaskList taskList) {","lastModifiedDate":"2023-09-13"},{"lineNumber":274,"author":{"gitId":"ketweeen"},"content":"        if (parts.length !\u003d COMMAND_LENGTH) {","lastModifiedDate":"2023-09-13"},{"lineNumber":275,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"Invalid command format\");","lastModifiedDate":"2023-09-13"},{"lineNumber":276,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":277,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":278,"author":{"gitId":"ketweeen"},"content":"        String keyword \u003d parts[COMMAND_ID_INDEX].trim();","lastModifiedDate":"2023-09-13"},{"lineNumber":279,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":280,"author":{"gitId":"ketweeen"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":281,"author":{"gitId":"ketweeen"},"content":"            return Ui.showError(\"Please provide a keyword for the \u0027find\u0027 command.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":282,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":283,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":284,"author":{"gitId":"ketweeen"},"content":"        return taskList.findTasks(keyword);","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":286,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":287,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":288,"author":{"gitId":"ketweeen"},"content":"     * Handles the \"help\" command, displaying information about available commands.","lastModifiedDate":"2023-09-13"},{"lineNumber":289,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":290,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList of strings with information about available commands.","lastModifiedDate":"2023-09-13"},{"lineNumber":291,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":292,"author":{"gitId":"ketweeen"},"content":"    private static ArrayList\u003cString\u003e handleHelpCommand() {","lastModifiedDate":"2023-09-13"},{"lineNumber":293,"author":{"gitId":"ketweeen"},"content":"        ArrayList\u003cString\u003e helpText \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":294,"author":{"gitId":"ketweeen"},"content":"        helpText.add(\"Here are the available commands:\");","lastModifiedDate":"2023-09-13"},{"lineNumber":295,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":296,"author":{"gitId":"ketweeen"},"content":"        String[] commands \u003d {","lastModifiedDate":"2023-09-13"},{"lineNumber":297,"author":{"gitId":"ketweeen"},"content":"            \"list - Show list of tasks\",","lastModifiedDate":"2023-09-13"},{"lineNumber":298,"author":{"gitId":"ketweeen"},"content":"            \"mark - Mark a task\",","lastModifiedDate":"2023-09-13"},{"lineNumber":299,"author":{"gitId":"ketweeen"},"content":"            \"unmark - Unmark a task\",","lastModifiedDate":"2023-09-13"},{"lineNumber":300,"author":{"gitId":"ketweeen"},"content":"            \"todo [task description] - Create a todos task\",","lastModifiedDate":"2023-09-13"},{"lineNumber":301,"author":{"gitId":"ketweeen"},"content":"            \"deadline [task description] /by [YYYY-MM-DD] - Create a deadline task due by [YYYY-MM-DD]\",","lastModifiedDate":"2023-09-13"},{"lineNumber":302,"author":{"gitId":"ketweeen"},"content":"            \"event [task description] /from [start] /to [end] - Create an event task from [start] to [end]\",","lastModifiedDate":"2023-09-13"},{"lineNumber":303,"author":{"gitId":"ketweeen"},"content":"            \"find - Find a task with matching description\",","lastModifiedDate":"2023-09-13"},{"lineNumber":304,"author":{"gitId":"ketweeen"},"content":"            \"delete - Delete a task\",","lastModifiedDate":"2023-09-13"},{"lineNumber":305,"author":{"gitId":"ketweeen"},"content":"            \"bye - Save list of tasks and exit application\"","lastModifiedDate":"2023-09-13"},{"lineNumber":306,"author":{"gitId":"ketweeen"},"content":"        };","lastModifiedDate":"2023-09-13"},{"lineNumber":307,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":308,"author":{"gitId":"ketweeen"},"content":"        for (int i \u003d 0; i \u003c commands.length; i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":309,"author":{"gitId":"ketweeen"},"content":"            helpText.add((i + 1) + \". \" + commands[i]);","lastModifiedDate":"2023-09-13"},{"lineNumber":310,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":311,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":312,"author":{"gitId":"ketweeen"},"content":"        return helpText;","lastModifiedDate":"2023-09-13"},{"lineNumber":313,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":314,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ketweeen":314}},{"path":"src/main/java/valerie/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":" * The Storage class is responsible for loading and saving tasks to a file in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":" * It provides methods to read tasks from a file and write tasks to a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    private final String filepath;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     * @param filepath The path to the file used for storing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"     * Loads tasks from a file and populates the provided list with the loaded tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"     * This method reads tasks from a file specified by the DATA_FILE_PATH and adds them to","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"     * the provided list of tasks. If the file does not exist, it will be created.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"     * @param list The list to which loaded tasks will be added.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"    public void loadTasks(TaskList list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"            // Create a File object representing the data file","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"            // Assert that the file exists","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"            assert file.exists() : \"Data file does not exist\";","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"            // Create the file if it doesn\u0027t exist and print a message","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"                System.out.println(\"        New File Created\");","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"            // Use a Scanner to read tasks from the file","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"            try (Scanner sc \u003d new Scanner(file)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"                    // Read each line from the file","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"                    String line \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"                    // Convert the line to a Task object using Task.fromString","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"                    Task task \u003d Parser.parseFileInput(line);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"                    // Add the task to the provided list if it\u0027s not null","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"                        list.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"            // Handle IO exception by printing an error message","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"            Ui.showError(\"An error occurred while loading tasks\");","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"     * Saves tasks from a list to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"     * This method writes tasks from the provided list to a file specified by the DATA_FILE_PATH.","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"     * The tasks are converted to their file representation using the toFileString method of","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"     * the Task class. If an error occurs during the file writing process, an error message","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"     * is printed.","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"     * @param list The list of tasks to be saved to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"    public void saveTasks(TaskList list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"            // Create a File object representing the data file","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"            // Assert that the file exists","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"            assert file.exists() : \"Data file does not exist\";","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"            // Create a FileWriter to write tasks to the file","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"            // Write each task\u0027s file representation to the file","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ketweeen"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"ketweeen"},"content":"                writer.write(list.getTask(i).toFileString() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ketweeen"},"content":"            // Close the FileWriter","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ketweeen"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ketweeen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"ketweeen"},"content":"            // Handle IO exception by printing an error message","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"ketweeen"},"content":"            Ui.showError(\"An error occurred while saving tasks\");","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ketweeen":97}},{"path":"src/main/java/valerie/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":" * The Task class represents a task in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":" * It contains fields and methods to manage task descriptions, completion status,","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":" * and generating formatted string representations for display and storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"    /** Class field description that describes the task. */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"    /** Class field isDone that tells whether the task is marked. */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"     * Constructor to initialize the Task class.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * @param description Describes the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"        // Add an assertion to check if description is not null","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        assert description !\u003d null : \"Description cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"     * Method to get the status icon of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"     * @return String \"X\" if task\u0027s isDone is true, \" \" otherwise.","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"     * Checks if the task is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"     * @return `true` if the task is done, otherwise `false`.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"     * Method that sets the task\u0027s isDone to true.","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"     * Method that sets the task\u0027s isDone to false.","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"     * Generates a string representation of the task for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"     * @return A formatted string representation of the task for file storage.","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"        String doneStatus \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"  | %s | %s\", doneStatus, this.description);","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ketweeen":85}},{"path":"src/main/java/valerie/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":" * The TaskList class represents a list of tasks in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":" * It provides methods to manipulate and interact with the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"    private final List\u003cTask\u003e userList;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"     * Constructs a TaskList instance with the provided list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"     * @param taskList The list of tasks to be managed by the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"        this.userList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    public ArrayList\u003cString\u003e addTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"        assert task !\u003d null : \"Task cannot be null\"; // Check if task is not null","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        userList.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"        return Ui.showAddedTask(task, this);","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"     * Marks a task as done in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"     * @param task The task to be marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"    public ArrayList\u003cString\u003e markTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"        assert task !\u003d null : \"Task cannot be null\"; // Check if task is not null","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"        return Ui.showMarkedTask(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"     * Marks a task as not done in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"     * @param task The task to be marked as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"    public ArrayList\u003cString\u003e unmarkTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"        assert task !\u003d null : \"Task cannot be null\"; // Check if task is not null","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"        return Ui.showUnmarkedTask(task);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"     * @param task The task to be deleted from the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"    public ArrayList\u003cString\u003e deleteTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"        assert task !\u003d null : \"Task cannot be null\"; // Check if task is not null","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"        userList.remove(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"        return Ui.showDeletedTask(task, this);","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"     * Finds and displays tasks that contain the specified keyword in their description.","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"    public ArrayList\u003cString\u003e findTasks(String keyword) {","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"        TaskList matchingTasksList \u003d new TaskList(matchingTasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"        for (Task task : userList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"                matchingTasksList.addTask(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"        return Ui.showMatchingTasks(matchingTasksList);","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"ketweeen"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"ketweeen"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"ketweeen"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ketweeen"},"content":"        return userList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"ketweeen"},"content":"     * Returns the task at the specified index in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"ketweeen"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"ketweeen"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"ketweeen"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"ketweeen"},"content":"        return userList.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ketweeen":102}},{"path":"src/main/java/valerie/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":" * A class for ToDos tasks.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"     * Constructor to initialize the ToDos class.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"     * @param description Describes the todos task.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"    public ToDos(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"        String doneStatus \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"T | %s | %s\", doneStatus, this.description);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"        return String.format(\"[T][%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ketweeen":31}},{"path":"src/main/java/valerie/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":" * The Ui class handles user interface interactions in the Duke application.","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":" * It provides methods to display messages, errors, and task-related information","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":" * to the user using the console.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"public class Ui {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"     * Generates an error message as an ArrayList of strings.","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"     * @param error The error message to be formatted and returned.","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList containing the formatted error message.","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"    public static ArrayList\u003cString\u003e showError(String error) {","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"        ArrayList\u003cString\u003e errorMessage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"        errorMessage.add(String.format(\"%s!\", error));","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        return errorMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"     * Generates a message to indicate a task has been marked as done and returns it as an ArrayList of strings.","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"     * @param task The task to be marked as done and included in the message.","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList containing the message indicating the marked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"    public static ArrayList\u003cString\u003e showMarkedTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"        ArrayList\u003cString\u003e markedTaskMessage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"        markedTaskMessage.add(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"        markedTaskMessage.add(task.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"        return markedTaskMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"     * Generates a message to indicate a task has been marked as not done yet and returns it as an ArrayList of strings.","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"     * @param task The task to be marked as not done yet and included in the message.","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList containing the message indicating the unmarked task.","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"    public static ArrayList\u003cString\u003e showUnmarkedTask(Task task) {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"        ArrayList\u003cString\u003e unmarkedTaskMessage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"        unmarkedTaskMessage.add(\"OK! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"        unmarkedTaskMessage.add(task.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"        return unmarkedTaskMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"     * Generates a message to indicate a task has been added to a task list and returns it as an ArrayList of strings.","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"     * @param task The task to be added and included in the message.","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"     * @param taskList The task list to which the task is added.","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList containing the message indicating the added task and the updated task count.","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"ketweeen"},"content":"    public static ArrayList\u003cString\u003e showAddedTask(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"ketweeen"},"content":"        ArrayList\u003cString\u003e addedTaskMessage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"ketweeen"},"content":"        addedTaskMessage.add(\"Got it! I\u0027ve added this task:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"ketweeen"},"content":"        addedTaskMessage.add(task.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"ketweeen"},"content":"        addedTaskMessage.add(String.format(\"Now you have %d tasks in the list\", taskList.getSize()));","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"ketweeen"},"content":"        return addedTaskMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"ketweeen"},"content":"     * Generates a message to indicate a task has been deleted from a task list","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"ketweeen"},"content":"     * and returns it as an ArrayList of strings.","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"ketweeen"},"content":"     * @param task The task to be deleted and included in the message.","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"ketweeen"},"content":"     * @param taskList The task list from which the task is removed.","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList containing the message indicating the deleted task and the updated task count.","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"ketweeen"},"content":"    public static ArrayList\u003cString\u003e showDeletedTask(Task task, TaskList taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"ketweeen"},"content":"        ArrayList\u003cString\u003e deletedTaskMessage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"ketweeen"},"content":"        deletedTaskMessage.add(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"ketweeen"},"content":"        deletedTaskMessage.add(task.toString());","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"ketweeen"},"content":"        deletedTaskMessage.add(String.format(\"Now you have %d tasks in the list\", taskList.getSize()));","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"ketweeen"},"content":"        return deletedTaskMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"ketweeen"},"content":"     * Generates a message displaying the tasks in a task list and returns it as an ArrayList of strings.","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"ketweeen"},"content":"     * @param taskList The task list from which tasks are retrieved for display.","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList containing the message displaying the tasks in the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"ketweeen"},"content":"    public static ArrayList\u003cString\u003e showList(TaskList taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"ketweeen"},"content":"        ArrayList\u003cString\u003e listMessage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"ketweeen"},"content":"        listMessage.add(\"Sure! Here are the tasks in your list\");","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"ketweeen"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"ketweeen"},"content":"            String str \u003d String.format(\"%d. %s\", i + 1, taskList.getTask(i));","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"ketweeen"},"content":"            listMessage.add(str);","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"ketweeen"},"content":"        return listMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"ketweeen"},"content":"     * Generates a message displaying the tasks that match a certain criteria from a task list","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"ketweeen"},"content":"     * and returns it as an ArrayList of strings.","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"ketweeen"},"content":"     * @param matchingTasks The task list containing matching tasks to be displayed.","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList containing the message displaying the matching tasks in the list.","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"ketweeen"},"content":"    public static ArrayList\u003cString\u003e showMatchingTasks(TaskList matchingTasks) {","lastModifiedDate":"2023-09-08"},{"lineNumber":110,"author":{"gitId":"ketweeen"},"content":"        ArrayList\u003cString\u003e matchingTasksMessage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":111,"author":{"gitId":"ketweeen"},"content":"        matchingTasksMessage.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"ketweeen"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.getSize(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"ketweeen"},"content":"            String str \u003d String.format(\"%d. %s\", i + 1, matchingTasks.getTask(i));","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"ketweeen"},"content":"            matchingTasksMessage.add(str);","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"ketweeen"},"content":"        return matchingTasksMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"ketweeen"},"content":"     * Generates a farewell message for program exit and returns it as an ArrayList of strings.","lastModifiedDate":"2023-09-08"},{"lineNumber":121,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":122,"author":{"gitId":"ketweeen"},"content":"     * @return An ArrayList containing the farewell message for program exit.","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":124,"author":{"gitId":"ketweeen"},"content":"    public static ArrayList\u003cString\u003e showExit() {","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"ketweeen"},"content":"        ArrayList\u003cString\u003e exitMessage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"ketweeen"},"content":"        exitMessage.add(\"Bye ~ Hope to see you again soon ~\");","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":128,"author":{"gitId":"ketweeen"},"content":"        return exitMessage;","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":130,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ketweeen":130}},{"path":"src/main/java/valerie/Valerie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import java.io.File;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":" * The Valerie class represents a simple task management chatbot application.","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":" * It allows users to interact with a list of tasks and store them in a file.","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"public class Valerie {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"     * Constructs a Duke instance with the specified file path.","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"     * @param filepath The path to the file used for storing tasks.","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"    public Valerie(String filepath, TaskList taskList) {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"        this.storage.loadTasks(taskList); // Load tasks to list","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"ketweeen"},"content":"        // Add an assert statement to check if taskList is not null","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"ketweeen"},"content":"        assert taskList !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"ketweeen"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"ketweeen"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"ketweeen"},"content":"    public ArrayList\u003cString\u003e getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"ketweeen"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"ketweeen"},"content":"        File dataDirectory \u003d new File(\"./data\");","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"ketweeen"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"ketweeen"},"content":"            if (dataDirectory.mkdir()) {","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"ketweeen"},"content":"                response.add(\"Data directory created successfully\");","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"ketweeen"},"content":"            } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"ketweeen"},"content":"                response.add(\"Failed to create data directory.\");","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"ketweeen"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"ketweeen"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"ketweeen"},"content":"            // Exit the loop if the user types \"bye\"","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"ketweeen"},"content":"            this.storage.saveTasks(this.taskList);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"ketweeen"},"content":"            return Ui.showExit();","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"ketweeen"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"ketweeen"},"content":"        response.addAll(Parser.parseUserInput(input, this.taskList));","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"ketweeen"},"content":"        return response;","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ketweeen":57}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ketweeen":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"valerie.MainWindow\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"ketweeen":19}},{"path":"src/test/java/valerie/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":" * The ParserTest class contains test cases for the Parser class in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":" * It verifies the correctness of the parseFileInput method using JUnit tests.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"     * Tests the parsing of a \"todos\" task representation from a file input string.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"    public void testParseFileInput_TodoTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"        String line \u003d \"T | 0 | Buy groceries\";","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"        Task result \u003d Parser.parseFileInput(line);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"        assertTrue(result instanceof ToDos);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"ketweeen"},"content":"        assertEquals(\"Buy groceries\", result.getDescription());","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"ketweeen"},"content":"        assertFalse(result.isDone());","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ketweeen":24}},{"path":"src/test/java/valerie/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"package valerie;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":" * The TaskTest class contains test cases for the Task class in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":" * It verifies the correctness of the toFileString method using JUnit tests.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"ketweeen"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ketweeen"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"ketweeen"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ketweeen"},"content":"     * Tests the conversion of a task to its file representation string.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ketweeen"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ketweeen"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"ketweeen"},"content":"    public void testFileStringConversion() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"ketweeen"},"content":"        Task task \u003d new Task(\"Test\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"ketweeen"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"ketweeen"},"content":"        assertEquals(\"  | 1 | Test\", task.toFileString());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"ketweeen"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"ketweeen"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"ketweeen":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ketweeen"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ketweeen"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ketweeen"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ketweeen"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ketweeen"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"ketweeen"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ketweeen"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ketweeen"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ketweeen":8}}]
