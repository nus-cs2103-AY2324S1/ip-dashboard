[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"chonguschonguschongus":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"chonguschonguschongus":22}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"T | 0 | go beat Adam","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"chonguschonguschongus":1}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"    private Task taskToAdd;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs an AddCommand object with the task to add.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskToAdd The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"    public AddCommand(Task taskToAdd) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"        super(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"     * Executes the add command, adding the task to the task list and updating storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param storage  The storage handler for reading/writing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"        taskList.addTask(this.taskToAdd);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        storage.writeListToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"        String s \u003d String.format(\"Roger! I have added the following task to the list:\\n %s\\n %s\",","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"                this.taskToAdd.toString(), taskList.NumberOfTaskListInString());","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"        return s;","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chonguschonguschongus":39}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":" * The base class for all command implementations in the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":" * Represents a command that can be executed on the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"    private Boolean isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs a Command object.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param isExit Indicates whether the command is an exit command.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"    public Boolean isExit() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"     * Executes the command on the specified task list, storage, and user interface.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param storage  The storage handler for reading/writing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"    public abstract String execute(TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chonguschonguschongus":42}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"    private int taskToDeleteIndex;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs a DeleteCommand object with the task index to delete.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param fullCommand The full command string containing the task index.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"    public DeleteCommand(int response) {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"        super(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"        this.taskToDeleteIndex \u003d response;","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"     * Executes the delete command, removing the task from the task list and updating storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param storage  The storage handler for reading/writing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"            String taskRemoved \u003d taskList.getTaskInString(taskToDeleteIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"            taskList.deleteTask(taskToDeleteIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"            storage.writeListToFile(taskList);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"            String s \u003d String.format(\"Okay! I have removed the following task from the list:\\n %s\\n %s\",","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"                    taskRemoved, taskList.NumberOfTaskListInString());","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"            return s;","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"This task does not exist! Try again!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chonguschonguschongus":45}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.Ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":" * Represents a command to exit the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs an ExitCommand object.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"        super(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"     * Executes the exit command, displaying a farewell message.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskList The task list (not used in this command).","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param storage  The storage handler (not used in this command).","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"        return \"Bye! Have a nice day!\";","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chonguschonguschongus":30}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":" * Represents a command to find a task with a query.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"    private String query;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs a FindCommand object.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"        super(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"        int split \u003d fullCommand.indexOf(\" \");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"        this.query \u003d fullCommand.substring(split + 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"     * Executes the find command, displaying the list of tasks matching query.","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param storage  The storage handler (not used in this command).","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"        TaskList queryList \u003d taskList.findTask(this.query);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"        String s \u003d String.format(\"%s\\n %d task(s) match your query\",","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"                queryList.getListInString(), queryList.getLength());","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"        return s;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"chonguschonguschongus":34}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":" * Represents a command to list tasks in the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs a ListCommand object.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"    public ListCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"        super(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"     * Executes the list command, displaying the list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param storage  The storage handler (not used in this command).","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"        if (taskList.getListInString().equals(\"\")) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"            return taskList.NumberOfTaskListInString();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"        return taskList.getListInString();","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chonguschonguschongus":32}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs a MarkCommand object with the task index to mark.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param fullCommand The full command string containing the task index.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"    public MarkCommand(int response) {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"        super(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"        this.index \u003d response;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"     * Executes the mark command, marking the task as done and updating storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param storage  The storage handler for reading/writing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"            taskList.markTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"This task does not exist! Try again!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"        storage.writeListToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"        String s \u003d String.format(\"Good Job! I have marked this task as done!\\n %s\",","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"                taskList.getTaskInString(index));","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"        return s;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chonguschonguschongus":44}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package command;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.TaskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":" * Represents a command to unmark a task (mark as not done).","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"    private int index;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs an UnmarkCommand object with the task index to unmark.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param fullCommand The full command string containing the task index.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"    public UnmarkCommand(int response) {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"        super(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"        this.index \u003d response;","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"     * Executes the unmark command, unmarking the task and updating storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param storage  The storage handler for reading/writing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"            taskList.unmarkTask(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"This task does not exist! Try again!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"        storage.writeListToFile(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"        String s \u003d String.format(\"Aw man! I have marked this task as undone. We go again!\\n %s\",","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"                taskList.getTaskInString(index));","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"        return s;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chonguschonguschongus":44}},{"path":"src/main/java/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package command;","lastModifiedDate":"2023-09-14"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-09-14"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-09-14"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"    private int index;","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"    private String editType;","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"    private String edit;","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"    public UpdateCommand(String response) {","lastModifiedDate":"2023-09-14"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"        super(false);","lastModifiedDate":"2023-09-14"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"        String[] parts \u003d response.split(\" \", 3);","lastModifiedDate":"2023-09-14"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"        assert parts.length \u003d\u003d 3;","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"        this.index \u003d Integer.parseInt(parts[0]) - 1;","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"        this.editType \u003d parts[1];","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"        this.edit \u003d parts[2].substring(1);","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"        switch (editType) {","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"title\":","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"                taskList.getTask(index).editTitle(edit);","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"                storage.writeListToFile(taskList);","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"                return \"Task title successfully updated\";","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"                taskList.getTask(index).editDeadline(edit);","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"                storage.writeListToFile(taskList);","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"                return \"Task deadline successfully updated\";","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"start\":","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"                taskList.getTask(index).editStart(edit);","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"                storage.writeListToFile(taskList);","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"                return \"Task start time successfully updated\";","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"end\":","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"                taskList.getTask(index).editEnd(edit);","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"                storage.writeListToFile(taskList);","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"                return \"Task end time successfully updated\";","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"            default:","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"                return \"Please check your inputs again!\";","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-09-14"}],"authorContributionMap":{"chonguschonguschongus":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import dukeutilities.Parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":" * The Duke class initializes the Duke application and manages its execution.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":" * It handles user commands, interacts with the file \u0027duke.txt\u0027, and maintains the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"public class Duke {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"     * Duke constructor initializes all required fields such as Ui, Storage and TaskList","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"    public Duke() {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"        storage \u003d new Storage(\"duke.txt\", \"data\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"        tasks \u003d TaskList.readFromFile(\"data/duke.txt\");","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"     * Runs the Duke application, handling user input and executing commands.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"        storage \u003d new Storage(\"duke.txt\", \"data\");","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"     * Dukey\u0027s chatbot logic, generates a response based on input","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param String input","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"        if (input.equals(\"sexy time\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"            return \"Oh Johnny boy is always ready for sexy times.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"            return c.execute(tasks, storage);","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"chonguschonguschongus"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"chonguschonguschongus"},"content":"            return \"Incorrect format input\";","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"chonguschonguschongus"},"content":"     * Entry point of the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"chonguschonguschongus"},"content":"     * Creates a new instance of Duke and starts the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param args Command-line arguments (unused in this context).","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"chonguschonguschongus"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"chonguschonguschongus"},"content":"        new Duke().run();","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chonguschonguschongus":73}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import gui.Main;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"chonguschonguschongus":11}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import dukeutilities.FileHandler;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":" * The Storage class manages the file handling for task data storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":" * It creates directories and files if not present and writes task data to files.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"    private FileHandler taskFile;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"     * Storage constrictor creates \u0027Data\u0027 directory if not found and \u0027Duke.txt\u0027 if not found.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"    public Storage(String fileName, String directoryName) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"        this.taskFile \u003d new FileHandler(fileName, directoryName);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"        taskFile.createDirectoryIfNotPresent();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"        taskFile.createFileIfNotPresent();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"     * Writes the task list to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskList The task list to be written to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"    public void writeListToFile(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"        taskFile.writeListToFile(taskList.getList());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chonguschonguschongus":30}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import dukeutilities.Parser;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.List;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":" * The TaskList class represents a list of tasks and provides methods to manage tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":" * It can add, delete, mark tasks as done, and provide information about the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"    private List\u003cTask\u003e todoList;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs a TaskList object, initializing an empty list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"        this.todoList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"    public String getListInString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"        for (Task task : this.todoList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"            list.append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"        return list.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"     * Returns the list object in the TaskList","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return The list","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"        return this.todoList;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"chonguschonguschongus"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"        return this.todoList.get(index);","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"chonguschonguschongus"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"chonguschonguschongus"},"content":"    public int getLength() {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"        return this.todoList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"chonguschonguschongus"},"content":"     * Retrieves a string representation of a task at the specified index.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param index The index of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return The formatted string representing the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"chonguschonguschongus"},"content":"    public String getTaskInString(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"chonguschonguschongus"},"content":"        return this.todoList.get(index).toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"chonguschonguschongus"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"chonguschonguschongus"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"chonguschonguschongus"},"content":"        this.todoList.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"chonguschonguschongus"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskToDeleteIndex The index of the task to be deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"chonguschonguschongus"},"content":"    public void deleteTask(int taskToDeleteIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"chonguschonguschongus"},"content":"        this.todoList.remove(taskToDeleteIndex);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"chonguschonguschongus"},"content":"     * Marks a task as done in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskToMarkIndex The index of the task to be marked as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"chonguschonguschongus"},"content":"    public void markTask(int taskToMarkIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"chonguschonguschongus"},"content":"        this.todoList.get(taskToMarkIndex).markDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"chonguschonguschongus"},"content":"     * Marks a task as undone in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskToUnmarkIndex The index of the task to be marked as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"chonguschonguschongus"},"content":"    public void unmarkTask(int taskToUnmarkIndex) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"chonguschonguschongus"},"content":"        this.todoList.get(taskToUnmarkIndex).markUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"chonguschonguschongus"},"content":"     * Marks a task as undone in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param query The string to be located","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return A TaskList object of the matching tasks","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"chonguschonguschongus"},"content":"    public TaskList findTask(String query) {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"chonguschonguschongus"},"content":"        TaskList queryList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"chonguschonguschongus"},"content":"        for (Task t : this.todoList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"chonguschonguschongus"},"content":"            if (t.compareTitle(query)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"chonguschonguschongus"},"content":"                queryList.addTask(t);","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"chonguschonguschongus"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"chonguschonguschongus"},"content":"        return queryList;","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"chonguschonguschongus"},"content":"     * Displays the total number of tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":126,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"chonguschonguschongus"},"content":"    public void printTaskListInString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"chonguschonguschongus"},"content":"        System.out.println(String.format(\"You have %d task(s) currently in the list\",","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"chonguschonguschongus"},"content":"                todoList.size()));","lastModifiedDate":"2023-09-01"},{"lineNumber":130,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"chonguschonguschongus"},"content":"     * Returns the total number of tasks in the TaskList in String form.","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"chonguschonguschongus"},"content":"    public String NumberOfTaskListInString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"chonguschonguschongus"},"content":"        String s \u003d String.format(\"You have %d task(s) currently in the list\",","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"chonguschonguschongus"},"content":"                todoList.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"chonguschonguschongus"},"content":"        return s;","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"chonguschonguschongus"},"content":"    public static TaskList readFromFile(String filePath) {","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"chonguschonguschongus"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":144,"author":{"gitId":"chonguschonguschongus"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"chonguschonguschongus"},"content":"            String line;","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":147,"author":{"gitId":"chonguschonguschongus"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-13"},{"lineNumber":148,"author":{"gitId":"chonguschonguschongus"},"content":"                Task parsedTask \u003d Parser.parseLine(line);","lastModifiedDate":"2023-09-13"},{"lineNumber":149,"author":{"gitId":"chonguschonguschongus"},"content":"                list.addTask(parsedTask);","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":151,"author":{"gitId":"chonguschonguschongus"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"chonguschonguschongus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"chonguschonguschongus"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"chonguschonguschongus"},"content":"        return list;","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chonguschonguschongus":159}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"    private static String logo \u003d","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"            \" ___________________\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"                    \":\u0027 ,__________,  \u0027:  `.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"| \u0027            `  |    `.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"| |  Dukey     |  |      `.\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"| |            |  |        \\\\\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"| |  Hello!!!  |  |         ]\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"| |            |  |~~~~~~.  )\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"| `,__________,\u0027  |\\\\__O\\\\_| ,\u0027\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"|    _______      |     \\\\.`\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"|\u003c\u003e [___\u003d___](@)\u003c\u003e|    .\u0027\\\\\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"\u0027:________________/__.\u0027   )\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"   (____________)        /\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"                        /\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"              _________/\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"  ___________/______\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"                    \" /\u0027\u0027\u0027\u0027\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u0027(@)\\\\___\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"                    \" |[][][][][][][][][]|   \\\\ _______\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"                    \" |[][][][][][][][][]|    \\\\__     \\\\\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"                    \" |[][][][][][][][][]|    |  \\\\..  |\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"                    \" \\\\------------------/    | ( # ) |\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"                         |  \u0027\u0027\u0027  |\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"                    \"                         \\\\_______/\";","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return The user-entered command.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"     * Displays a welcome message to the user upon starting the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"        System.out.println(\"Hello! I am Dukey.\\n\"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"     * Displays a line separator.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"chonguschonguschongus"},"content":"    public void showLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"        System.out.println(\"_______\");","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"     * Displays a message after marking or unmarking a task, indicating the task\u0027s new status.","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskMarked The task that was marked or unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param isMark     Whether the task was marked (true) or unmarked (false).","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"chonguschonguschongus"},"content":"    public void showMarkTaskMessage(String taskMarked, Boolean isMark) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"chonguschonguschongus"},"content":"        if (isMark \u003d true) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"chonguschonguschongus"},"content":"            System.out.println(\"Good Job! I have marked this task as done!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"chonguschonguschongus"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"chonguschonguschongus"},"content":"            System.out.println(\"Aw man! I have marked this task as undone. We go again!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"chonguschonguschongus"},"content":"        System.out.println(taskMarked);","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"chonguschonguschongus"},"content":"     * Displays an error message to the user in case of an exception or incorrect input.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"chonguschonguschongus"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"chonguschonguschongus"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"chonguschonguschongus"},"content":"     * Displays the list of tasks in a formatted manner, along with the total task count.","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskList The TaskList containing tasks to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"chonguschonguschongus"},"content":"    public void showList(TaskList taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"chonguschonguschongus"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"chonguschonguschongus"},"content":"        taskList.printTaskListInString();","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"chonguschonguschongus"},"content":"     * Displays the list of matching query tasks in a formatted manner,","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"chonguschonguschongus"},"content":"     * along with the total matching task count.","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskList The TaskList containing tasks to be displayed.","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"chonguschonguschongus"},"content":"    public void showQueryList(TaskList taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"chonguschonguschongus"},"content":"        for (int i \u003d 1; i \u003c taskList.getLength() + 1; i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"chonguschonguschongus"},"content":"            System.out.println(i + \". \" + taskList.getTaskInString(i - 1));","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"chonguschonguschongus"},"content":"        System.out.println(String.format(\"%d task(s) match your query\",","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"chonguschonguschongus"},"content":"                taskList.getLength()));","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"chonguschonguschongus":105}},{"path":"src/main/java/dukeutilities/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package dukeutilities;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import task.Task;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.List;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":" * The FileHandler class manages file operations such as creating directories,","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":" * files, and writing task lists to files.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"public class FileHandler {","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"    private String fileName;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"    private String directoryName;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs a FileHandler object with the specified file and directory names.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param fileName      The name of the file to be handled.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param directoryName The name of the directory where the file resides.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"    public FileHandler(String fileName, String directoryName) {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"        this.directoryName \u003d directoryName;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"     * Creates the specified directory if it doesn\u0027t exist.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"    public void createDirectoryIfNotPresent() {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        File directory \u003d new File(directoryName);","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"            if (directory.mkdir()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"                System.err.println(\"Error creating directory\");","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"     * Creates the specified file if it doesn\u0027t exist.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"    public void createFileIfNotPresent() {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"chonguschonguschongus"},"content":"        File file \u003d new File(directoryName, fileName);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"chonguschonguschongus"},"content":"                System.out.println(\"Error generating task list\");","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"chonguschonguschongus"},"content":"     * Writes the list of tasks to the file, each task on a separate line.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param taskList The list of tasks to be written to the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"chonguschonguschongus"},"content":"     * @throws IOException If unable to write successfully.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"chonguschonguschongus"},"content":"    public void writeListToFile(List\u003cTask\u003e tasklist) {","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"chonguschonguschongus"},"content":"        try (FileWriter writer \u003d new FileWriter(fileName)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"chonguschonguschongus"},"content":"            for (Task t : tasklist) {","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"chonguschonguschongus"},"content":"                writer.write(t.toFileString());","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"chonguschonguschongus"},"content":"                writer.write(System.lineSeparator()); // Add a new line after each string","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"chonguschonguschongus"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"chonguschonguschongus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"chonguschonguschongus"},"content":"            System.err.println(\"Error writing task list to file: \" + e.getMessage());","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"chonguschonguschongus":73}},{"path":"src/main/java/dukeutilities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package dukeutilities;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import command.AddCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import command.Command;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import command.ExitCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"import command.FindCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"import command.ListCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"import command.UpdateCommand;","lastModifiedDate":"2023-09-14"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"import task.Task;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"import task.Deadline;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"import task.Event;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"import task.ToDo;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":" * The Parser class parses user input to create appropriate Command objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":" * It handles different types of user commands and returns corresponding Command objects.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"    public static Task parseLine(String line) {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"        String[] sections \u003d line.split(\" | \");","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"        int type \u003d parseType(sections[0]);","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"        assert type \u003e\u003d 1 \u0026\u0026 type \u003c\u003d 3;","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"        boolean isDone \u003d parseDone(sections[1]);","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"        String title \u003d sections[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"        String details \u003d sections[3];","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"        switch (type) {","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"            case 1:","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"                return new ToDo(title, isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"            case 2:","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"                return new Deadline(title, isDone, details);","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"            default:","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"                String[] startEnd \u003d details.split(\" - \");","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"                assert startEnd.length \u003d\u003d 2;","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"                return new Event(title, isDone, startEnd[0], startEnd[1]);","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"    private static int parseType(String letter) {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"        switch (letter) {","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"T\":","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"                return 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"D\":","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"                return 2;","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"E\":","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"chonguschonguschongus"},"content":"                return 3;","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"            default:","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"chonguschonguschongus"},"content":"                assert false;","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"chonguschonguschongus"},"content":"                return 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"chonguschonguschongus"},"content":"    private static Boolean parseDone(String number) {","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"chonguschonguschongus"},"content":"        int isComplete \u003d Integer.parseInt(number);","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"chonguschonguschongus"},"content":"        assert (isComplete \u003d\u003d 1 || isComplete \u003d\u003d 0);","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"chonguschonguschongus"},"content":"        return isComplete \u003d\u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"chonguschonguschongus"},"content":"     * Parses the user\u0027s full command and returns the corresponding Command object.","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param fullCommand The full command entered by the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"chonguschonguschongus"},"content":"     * @throws DukeException If the command cannot be parsed or is invalid.","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"chonguschonguschongus"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"chonguschonguschongus"},"content":"        if (fullCommand.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"You entered nothing! Try again!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":77,"author":{"gitId":"chonguschonguschongus"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"chonguschonguschongus"},"content":"        String commandType \u003d parts[0].toLowerCase();","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"chonguschonguschongus"},"content":"        String commandArgs \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"chonguschonguschongus"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"list\":","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"chonguschonguschongus"},"content":"                return new ListCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"find\":","lastModifiedDate":"2023-09-13"},{"lineNumber":85,"author":{"gitId":"chonguschonguschongus"},"content":"                return new FindCommand(commandArgs);","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"chonguschonguschongus"},"content":"                return createTaskCommand(commandArgs, \"todo\");","lastModifiedDate":"2023-09-13"},{"lineNumber":88,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"chonguschonguschongus"},"content":"                return createTaskCommand(commandArgs, \"deadline\");","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"event\":","lastModifiedDate":"2023-09-13"},{"lineNumber":91,"author":{"gitId":"chonguschonguschongus"},"content":"                return createTaskCommand(commandArgs, \"event\");","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"chonguschonguschongus"},"content":"                return createEditCommand(commandArgs, \"delete\");","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"chonguschonguschongus"},"content":"                return createEditCommand(commandArgs, \"mark\");","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-13"},{"lineNumber":97,"author":{"gitId":"chonguschonguschongus"},"content":"                return createEditCommand(commandArgs, \"unmark\");","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"update\":","lastModifiedDate":"2023-09-14"},{"lineNumber":99,"author":{"gitId":"chonguschonguschongus"},"content":"                return createEditCommand(commandArgs, \"update\");","lastModifiedDate":"2023-09-14"},{"lineNumber":100,"author":{"gitId":"chonguschonguschongus"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"chonguschonguschongus"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"chonguschonguschongus"},"content":"            default:","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"chonguschonguschongus"},"content":"                throw new DukeException(\"Sorry! Don\u0027t know what that is!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":107,"author":{"gitId":"chonguschonguschongus"},"content":"    private static Command createTaskCommand(String commandArgs, String type) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"chonguschonguschongus"},"content":"        if (commandArgs.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"Description cannot be empty!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"chonguschonguschongus"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"chonguschonguschongus"},"content":"            switch (type) {","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"chonguschonguschongus"},"content":"                case \"todo\":","lastModifiedDate":"2023-09-13"},{"lineNumber":115,"author":{"gitId":"chonguschonguschongus"},"content":"                    return new AddCommand(new ToDo(commandArgs));","lastModifiedDate":"2023-09-13"},{"lineNumber":116,"author":{"gitId":"chonguschonguschongus"},"content":"                case \"deadline\":","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"chonguschonguschongus"},"content":"                    return new AddCommand(new Deadline(commandArgs));","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"chonguschonguschongus"},"content":"                case \"event\":","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"chonguschonguschongus"},"content":"                    return new AddCommand(new Event(commandArgs));","lastModifiedDate":"2023-09-13"},{"lineNumber":120,"author":{"gitId":"chonguschonguschongus"},"content":"                default:","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"chonguschonguschongus"},"content":"                    throw new DukeException(\"Invalid task type: \" + type);","lastModifiedDate":"2023-09-13"},{"lineNumber":122,"author":{"gitId":"chonguschonguschongus"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"chonguschonguschongus"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"Please specify the deadline or event time!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"chonguschonguschongus"},"content":"    private static Command createEditCommand(String commandArgs, String type) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"chonguschonguschongus"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"chonguschonguschongus"},"content":"            if (type.equals(\"unmark\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"chonguschonguschongus"},"content":"                return new UnmarkCommand(Integer.parseInt(commandArgs) - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"chonguschonguschongus"},"content":"            } else if (type.equals(\"mark\")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"chonguschonguschongus"},"content":"                return new MarkCommand(Integer.parseInt(commandArgs) - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"chonguschonguschongus"},"content":"            } else if (type.equals(\"delete\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":135,"author":{"gitId":"chonguschonguschongus"},"content":"                return new DeleteCommand(Integer.parseInt(commandArgs) - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"chonguschonguschongus"},"content":"            } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":137,"author":{"gitId":"chonguschonguschongus"},"content":"                return new UpdateCommand(commandArgs);","lastModifiedDate":"2023-09-14"},{"lineNumber":138,"author":{"gitId":"chonguschonguschongus"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"chonguschonguschongus"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"Please input a valid numeric value for \" + type + \" command!\");","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chonguschonguschongus":143}},{"path":"src/main/java/dukeutilities/TimeFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package dukeutilities;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":" * The TimeFormatter class provides methods to parse and format date and time information.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":" * It converts date and time strings into LocalDateTime objects and formats them for display.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"public class TimeFormatter {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"    private String dateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"    private LocalDateTime convertedDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs a TimeFormatter object with the specified date and time string.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param dateTime The date and time string to be formatted.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"    public TimeFormatter(String dateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"        this.convertedDateTime \u003d LocalDateTime.parse(dateTime, inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"     * Returns the LocalDateTime representation of the parsed date and time.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"        return this.convertedDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"     * Formats the LocalDateTime object into a formatted date and time string.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return The formatted date and time string.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"    public String formatDate() {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy, h:mm a\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"        return this.convertedDateTime.format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"chonguschonguschongus":45}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package exceptions;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":" * The DukeException class represents exceptions specific to the Duke application.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":" * It provides a custom exception message to describe the nature of the exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param message The error message explaining the exception.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"        super(message);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"chonguschonguschongus":17}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"chonguschonguschongus"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"chonguschonguschongus"},"content":"     * Creates a DialogBox form the user.","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"chonguschonguschongus"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"chonguschonguschongus"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"chonguschonguschongus"},"content":"     * Creates a DialogBox form Dukey.","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"chonguschonguschongus"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"chonguschonguschongus"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"chonguschonguschongus"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"chonguschonguschongus"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"chonguschonguschongus":67}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"chonguschonguschongus":32}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package gui;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/teacher sins.png\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/suit sins.png\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"     * Initialises the scrollPane for MainWindow.","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"     * Set the Duke application","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"chonguschonguschongus"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"chonguschonguschongus"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"chonguschonguschongus"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"chonguschonguschongus"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"chonguschonguschongus"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"chonguschonguschongus":60}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import dukeutilities.TimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":" * The Deadline class represents a task with a specific due date.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":" * It provides methods to create a Deadline task and generate file and display strings.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"    private String title;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"    private String deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs a Deadline object with the specified response string, parsing time and title","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param response The user\u0027s input representing the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"    public Deadline(String response) {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"        super(false);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"        int info \u003d response.indexOf(\"/\");","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"        this.title \u003d response.substring(0, info - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"        TimeFormatter time \u003d new TimeFormatter(response.substring(info + 4));","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"        this.deadline \u003d time.formatDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"    public Deadline(String title, Boolean isDone, String deadline) {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"        super(isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editTitle(String newTitle) {","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"        this.title \u003d newTitle;","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editDeadline(String newDeadline) {","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"        TimeFormatter newTime \u003d new TimeFormatter(newDeadline);","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"        this.deadline \u003d newTime.formatDate();","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editStart(String newStart) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"        if (!false) {","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"This task does not have a start end!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editEnd(String newEnd) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"        if (!false) {","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"This task does not have an end time!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"chonguschonguschongus"},"content":"     * Generates a string representation of the Deadline task for storage in a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return A formatted string representing the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"chonguschonguschongus"},"content":"    public Boolean compareTitle(String query) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"chonguschonguschongus"},"content":"        return this.title.contains(query);","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"chonguschonguschongus"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"chonguschonguschongus"},"content":"        if (this.done) {","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"chonguschonguschongus"},"content":"            return \"D | 1 | \" + this.title + \" | \" + this.deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"chonguschonguschongus"},"content":"        return \"D | 0 | \" + this.title + \" | \" + this.deadline;","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"chonguschonguschongus"},"content":"     * Generates a string representation of the Deadline task for display purposes.","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return A formatted string representing the Deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"chonguschonguschongus"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"chonguschonguschongus"},"content":"        String s \u003d String.format(\"| DUE: %s |\", this.deadline);","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"chonguschonguschongus"},"content":"        if (this.done) {","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"chonguschonguschongus"},"content":"            return \"[D] \" + \"[X] \" + this.title + \" \" + s;","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"chonguschonguschongus"},"content":"        return \"[D] \" + \"[ ] \" + this.title + \" \" + s;","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":92,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"chonguschonguschongus":92}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import dukeutilities.TimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":" * The Event class represents a task that occurs within a specified time range.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":" * It provides methods to create an Event task and generate file and display strings.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"    private String title;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"    private String start;","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"    private String end;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs an Event object with the specified response string, parsing title and time","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param response The user\u0027s input representing the event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"    public Event(String response) {","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"        super(false);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"        int info \u003d response.indexOf(\"/\");","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"        this.title \u003d response.substring(0, info - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"        Pattern startPattern \u003d Pattern.compile(\"/from (\\\\d+/\\\\d+/\\\\d+ \\\\d+)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"        Pattern endPattern \u003d Pattern.compile(\"/to (\\\\d+/\\\\d+/\\\\d+ \\\\d+)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"        Matcher startMatcher \u003d startPattern.matcher(response);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"        Matcher endMatcher \u003d endPattern.matcher(response);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"        if (startMatcher.find() \u0026\u0026 endMatcher.find()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"            String startDateTime \u003d startMatcher.group(1);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"            String endDateTime \u003d endMatcher.group(1);","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"            TimeFormatter first \u003d new TimeFormatter(startDateTime);","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"            TimeFormatter last \u003d new TimeFormatter(endDateTime);","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"            this.start \u003d first.formatDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"            this.end \u003d last.formatDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"            System.out.println(\"Incorrect format of date and time inputted\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"    public Event(String title, Boolean isDone, String start, String end) {","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"        super(isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"chonguschonguschongus"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editTitle(String newTitle) {","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"chonguschonguschongus"},"content":"        this.title \u003d newTitle;","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editDeadline(String newDeadline) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"        if (!false) {","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"This task does not have a deadline!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editStart(String newStart) {","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"chonguschonguschongus"},"content":"        TimeFormatter newStartTime \u003d new TimeFormatter(newStart);","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"chonguschonguschongus"},"content":"        this.start \u003d newStartTime.formatDate();","lastModifiedDate":"2023-09-14"},{"lineNumber":65,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":67,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editEnd(String newEnd) {","lastModifiedDate":"2023-09-14"},{"lineNumber":68,"author":{"gitId":"chonguschonguschongus"},"content":"        TimeFormatter newEndTime \u003d new TimeFormatter(newEnd);","lastModifiedDate":"2023-09-14"},{"lineNumber":69,"author":{"gitId":"chonguschonguschongus"},"content":"        this.end \u003d newEndTime.formatDate();","lastModifiedDate":"2023-09-14"},{"lineNumber":70,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":71,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":72,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"chonguschonguschongus"},"content":"     * Generates a string representation of the Event task for storage in a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return A formatted string representing the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"chonguschonguschongus"},"content":"    public Boolean compareTitle(String query) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"chonguschonguschongus"},"content":"        return this.title.contains(query);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"chonguschonguschongus"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"chonguschonguschongus"},"content":"        if (this.done) {","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"chonguschonguschongus"},"content":"            return \"D | 1 | \" + this.title + \" | \" + this.start +","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"chonguschonguschongus"},"content":"                    \" - \" + this.end;","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"chonguschonguschongus"},"content":"        return \"D | 0 | \" + this.title + \" | \" + this.start +","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"chonguschonguschongus"},"content":"                \" - \" + this.end;","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"chonguschonguschongus"},"content":"     * Generates a string representation of the Event task for display purposes.","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return A formatted string representing the Event task.","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":99,"author":{"gitId":"chonguschonguschongus"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":100,"author":{"gitId":"chonguschonguschongus"},"content":"        String s \u003d String.format(\"| FROM: %s TO: %s |\", start, end);","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"chonguschonguschongus"},"content":"        if (this.done) {","lastModifiedDate":"2023-09-14"},{"lineNumber":102,"author":{"gitId":"chonguschonguschongus"},"content":"            return \"[E] \" + \"[X] \" + this.title + \" \" + s;","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":104,"author":{"gitId":"chonguschonguschongus"},"content":"        return \"[E] \" + \"[ ] \" + this.title + \" \" + s;","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":106,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-22"},{"lineNumber":107,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":108,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chonguschonguschongus":108}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":" * The Task class is an abstract base class for different types of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":" * It provides methods to mark tasks as done and generate file strings.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"    protected Boolean done;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs a Task object with the specified done status.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param done The done status of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"    public Task(boolean done) {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"     * Checks if title of task contains the query.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return A Boolean value representing if title contains query.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"    public abstract Boolean compareTitle(String query);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"     * Generates a string representation of the task for storage in a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"        return \"task\";","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editTitle(String edit) {","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":56,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editDeadline(String newDeadline) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":58,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":59,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editStart(String newStart) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editEnd(String newEnd) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"chonguschonguschongus":64}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"package task;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-09-14"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":" * The ToDo class represents a simple task without a specific due date or time.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":" * It provides methods to create a ToDo task and generate file and display strings.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"    private String title;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"     * Constructs a ToDo object with the specified response string.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"     * @param response The user\u0027s input representing the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"    public ToDo(String response) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"        super(false);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"        this.title \u003d response;","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"    public ToDo(String title, Boolean isDone) {","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"        super(isDone);","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editTitle(String newTitle) {","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"chonguschonguschongus"},"content":"        this.title \u003d newTitle;","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editDeadline(String newDeadline) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"chonguschonguschongus"},"content":"        if (!false) {","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"This task does not have a deadline!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":37,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":39,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editStart(String newStart) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"chonguschonguschongus"},"content":"        if (!false) {","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"This task does not have a start end!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"chonguschonguschongus"},"content":"    public void editEnd(String newEnd) throws DukeException {","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"chonguschonguschongus"},"content":"        if (!false) {","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"chonguschonguschongus"},"content":"            throw new DukeException(\"This task does not have an end time!\");","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"chonguschonguschongus"},"content":"     * Generates a string representation of the ToDo task for storage in a file.","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return A formatted string representing the ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"chonguschonguschongus"},"content":"    public Boolean compareTitle(String query) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"chonguschonguschongus"},"content":"        return this.title.contains(query);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"chonguschonguschongus"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"chonguschonguschongus"},"content":"        if (this.done) {","lastModifiedDate":"2023-09-14"},{"lineNumber":66,"author":{"gitId":"chonguschonguschongus"},"content":"            return \"T | 1 | \" + this.title;","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"chonguschonguschongus"},"content":"        return \"T | 0 | \" + this.title;","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"chonguschonguschongus"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"chonguschonguschongus"},"content":"     * Generates a string representation of the ToDo task for display purposes.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"chonguschonguschongus"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"chonguschonguschongus"},"content":"     * @return A formatted string representing the ToDo task.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"chonguschonguschongus"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"chonguschonguschongus"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"chonguschonguschongus"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"chonguschonguschongus"},"content":"        if (this.done) {","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"chonguschonguschongus"},"content":"            return \"[T] \" + \"[X] \" + this.title;","lastModifiedDate":"2023-08-22"},{"lineNumber":80,"author":{"gitId":"chonguschonguschongus"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":81,"author":{"gitId":"chonguschonguschongus"},"content":"        return \"[T] \" + \"[ ] \" + this.title;","lastModifiedDate":"2023-08-22"},{"lineNumber":82,"author":{"gitId":"chonguschonguschongus"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":83,"author":{"gitId":"chonguschonguschongus"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"chonguschonguschongus":83}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"         spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"            \u003cclip\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"                \u003cCircle centerX\u003d\"45.0\" centerY\u003d\"45.0\" radius\u003d\"45.0\"/\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"chonguschonguschongus":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"            fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"chonguschonguschongus"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"chonguschonguschongus":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chonguschonguschongus"},"content":"blah","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"chonguschonguschongus"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"chonguschonguschongus"},"content":"deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"chonguschonguschongus"},"content":"event","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"chonguschonguschongus"},"content":"deadline go gym","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"chonguschonguschongus"},"content":"event go gym","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"chonguschonguschongus"},"content":"event go gym /from 2pm","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"chonguschonguschongus"},"content":"todo go gym","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"chonguschonguschongus"},"content":"deadline go gym /by 2pm","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"chonguschonguschongus"},"content":"event: go gym /from 2pm /to 3pm","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"chonguschonguschongus"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"chonguschonguschongus"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"chonguschonguschongus"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"chonguschonguschongus"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"chonguschonguschongus"},"content":"mark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"chonguschonguschongus"},"content":"unmark 4","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"chonguschonguschongus"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"chonguschonguschongus"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"chonguschonguschongus"},"content":"delete 4","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"chonguschonguschongus"},"content":"delete 3","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"chonguschonguschongus"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"chonguschonguschongus"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"chonguschonguschongus":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chonguschonguschongus"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"chonguschonguschongus":1}}]
