[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"instructions on how to use it.","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"   first)","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"   like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"richiehx":10,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"richiehx":1,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"    public static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"    private static Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"    private static final String FILEPATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"    private void handleCommand() {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"        String commandString;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"        Command command;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"        while (true) {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"            commandString \u003d ui.getInput();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"            Parser parseLine \u003d new Parser(commandString);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"            command \u003d parseLine.getCommand();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"            if (command \u003d\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"                ui.printInvalidCommandError();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"                continue;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"                switch (command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"                    case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"                        ui.printBye();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"                        return;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"                    case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"                        ui.printOutput(tasks.formatList());","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"                    case MARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"                    case UNMARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"                        ui.printOutput(tasks.handleMarking(parseLine.getArguments(), command.getCommandName()));","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"                    case DELETE:","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"                        ui.printOutput(tasks.handleDelete(parseLine.getArguments()));","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"                    case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"                        String todoData \u003d parseLine.parseToDoArguments();","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"                        ui.printOutput(tasks.handleToDo(todoData));","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"                        String[] deadlineData \u003d parseLine.parseDeadlineArguments();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"                        ui.printOutput(tasks.handleDeadline(deadlineData[0], deadlineData[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"                    case EVENT:","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"                        String[] eventData \u003d parseLine.parseEventArguments();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"                        ui.printOutput(tasks.handleEvent(eventData[0], eventData[1], eventData[2]));","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"                    default:","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"                        ui.printOutput(\"I don\u0027t understand what you\u0027re saying.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"                        break;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"                }","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"                ui.printOutput(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"    public void run() {","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"        storage \u003d new Storage(FILEPATH);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"        ui.printGreeting();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"            tasks \u003d new TaskList(storage.load(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"            System.out.println(\"--- No Data Stored ---\");","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"richiehx"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"richiehx"},"content":"        handleCommand();","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":89,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"richiehx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"richiehx"},"content":"        new Duke().run();","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"richiehx":90,"-":3}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.command;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"public enum Command {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"    EVENT(\"event\");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"    private String value;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"    Command(String value) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"    public static Command getCommand(String value) {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"        for (Command cmd : Command.values()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"            if (cmd.value.equals(value)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"                return cmd;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"        return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    public String getCommandName() {","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"        return this.value;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"richiehx":31}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.exception;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"        super(message);","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"richiehx":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import duke.command.Command;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"    private Command command;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"    private String arguments \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"    public Parser(String rawData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"            this.command \u003d parseCommand(rawData);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"    public Command parseCommand(String rawData) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"        String[] commandArray \u003d rawData.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"        if (commandArray.length \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Hey, Type Something!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"        } else if (commandArray.length \u003e 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"            this.arguments \u003d commandArray[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"        return Command.getCommand(commandArray[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"    public Command getCommand() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"        return this.command;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"    public String getArguments() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"        return this.arguments;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"    public String parseToDoArguments() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Hey! The task description cannot be empty!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"        return arguments;","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"    public String[] parseDeadlineArguments() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"        if (this.arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Hey! The task description cannot be empty!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"        String[] arr \u003d this.arguments.split(\" /by \");","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"        if (arr.length !\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Hey, the Deadline given is Invalid! \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"                    \"Make sure that you follow this format:\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"                    Duke.INDENTATION + \"\u0027taskDescription /by time\u0027\");","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"        return arr;","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"    public String[] parseEventArguments() throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"        if (this.arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Hey! The task description cannot be empty!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"        String[] arr \u003d this.arguments.split(\" /from \");","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"        if (arr.length !\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Hey, the Event given is Invalid!\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"                    \" Make sure that you follow this format:\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"                    Duke.INDENTATION + \" \u0027eventDescription /from startTime /to endTime\u0027\");","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"        String desc \u003d arr[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"        String[] startEnd \u003d arr[1].split(\" /to \");","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"        if (startEnd.length !\u003d 2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Hey, the Event given is Invalid!\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"                    \" Make sure that you follow this format:\\n\" +","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"                    Duke.INDENTATION + \" \u0027eventDescription /from startTime /to endTime\u0027\");","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"        String start \u003d startEnd[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"        String end \u003d startEnd[1];","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"        return new String[]{desc, start, end};","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"richiehx":85}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"    private ArrayList\u003cTask\u003e store \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"    private String filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"    private DateTimeFormatter storeTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"    DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"    public void saveData(String data) {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"                file.createNewFile();","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-08-28"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"            fw.write(data);","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"            fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"//            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"            System.out.println(\"Could not save data to storage!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"                // Process file line input","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"                String newLine \u003d s.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"                String[] taskComponents \u003d newLine.split(\" \\\\| \");","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"                String type \u003d taskComponents[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"                String isCompleted \u003d taskComponents[1];","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"                String desc \u003d taskComponents[2];","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"                    Task item \u003d new ToDo(taskComponents[2]);","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"                    if (isCompleted.equals(\"X\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"                        item.markTask();","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"                    store.add(item);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"                    if (taskComponents.length \u003c 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"                        throw new DukeException(\"Invalid Deadline Format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"                    LocalDateTime buffer \u003d LocalDateTime.parse(taskComponents[3], storeTimeFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"                    Task item \u003d new Deadline(desc, buffer.format(inputFormatter));","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"                    if (isCompleted.equals(\"X\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"                        item.markTask();","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"                    store.add(item);","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"                    if (taskComponents.length \u003c 3) {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"                        throw new DukeException(\"Invalid Event Format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"richiehx"},"content":"                    String[] timeComponents \u003d taskComponents[3].split(\"-\", 2);","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"richiehx"},"content":"                    if (taskComponents.length \u003c 2) {","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"richiehx"},"content":"                        throw new DukeException(\"Invalid Event Format!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"richiehx"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"richiehx"},"content":"                    LocalDateTime bufferStart \u003d LocalDateTime.parse(timeComponents[0], storeTimeFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"richiehx"},"content":"                    LocalDateTime bufferEnd \u003d LocalDateTime.parse(timeComponents[1], storeTimeFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"richiehx"},"content":"                    Task item \u003d new Event(desc, bufferStart.format(inputFormatter), bufferEnd.format(inputFormatter));","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"richiehx"},"content":"                    if (isCompleted.equals(\"X\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":91,"author":{"gitId":"richiehx"},"content":"                        item.markTask();","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"richiehx"},"content":"                    }","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"richiehx"},"content":"                    store.add(item);","lastModifiedDate":"2023-08-28"},{"lineNumber":94,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"richiehx"},"content":"                }","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"richiehx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":98,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"File not Found!\");","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"richiehx"},"content":"        return store;","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"richiehx":104}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"    protected String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"    private DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"    private DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"    public Deadline(String description, String date) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"            LocalDateTime d1 \u003d LocalDateTime.parse(date, inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"            by \u003d d1.format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Deadline time must be in this format: yyyy-mm-dd hh:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"    public String exportData() {","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"        return \"D | \" + this.getStatusIcon() + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"richiehx":35}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"    protected String start;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"    protected String end;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"    private DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"    private DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"    public Event(String description, String startTime, String endTime) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"            LocalDateTime parseStart \u003d LocalDateTime.parse(startTime, inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"            LocalDateTime parseEnd \u003d LocalDateTime.parse(endTime, inputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"            start \u003d parseStart.format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"            end \u003d parseEnd.format(outputFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Event times must be in this format: yyyy-mm-dd HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"    public String exportData() {","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"        return \"E | \" + this.getStatusIcon() + \" | \" + this.description + \" | \" + this.start + \"-\" + this.end;","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"richiehx":38}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"    public void markTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    public String exportData() {","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"        return this.getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"richiehx":34}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"    private static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList, Storage storage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-08-28"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"    public String formatList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"        int len \u003d taskList.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"            str \u003d str + (i + 1) + \". \" + taskList.get(i);","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"            if (i !\u003d (len - 1)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"                str +\u003d \"\\n \" + INDENTATION;","lastModifiedDate":"2023-08-28"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"        return str;","lastModifiedDate":"2023-08-28"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"    public String handleMarking(String commandNum, String status) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"            int index \u003d Integer.parseInt(commandNum) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"            String buffer \u003d \"\";","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"            if (index \u003e taskList.size() - 1 || index \u003c 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"                throw new DukeException(\"Invalid duke.tasks.Task Index provided!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"            Task selectedTask \u003d taskList.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"            if (status.equals(\"mark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"                selectedTask.markTask();","lastModifiedDate":"2023-08-28"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"                buffer \u003d \"Nice! I\u0027ve marked the task as done:\\n   \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"                        INDENTATION + selectedTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"            } else if (status.equals(\"unmark\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"                selectedTask.unmarkTask();","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"                buffer \u003d \"OK, I\u0027ve marked this task as not done yet:\\n   \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"                        INDENTATION + selectedTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"            this.saveList();","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"            return buffer;","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Invalid duke.tasks.Task Index provided!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"    public String handleDelete(String commandNum) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"            int index \u003d Integer.parseInt(commandNum) - 1;","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"            if (index \u003e taskList.size() - 1 || index \u003c 0) {","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"                throw new DukeException(\"Invalid duke.tasks.Task Index provided!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"            Task selectedTask \u003d taskList.remove(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"            this.saveList();","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"            return \"Noted. I\u0027ve removed this task:\\n   \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"                    INDENTATION + selectedTask + \"\\n \" + INDENTATION + \"Now you have \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"                    taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"            throw new DukeException(\"Invalid duke.tasks.Task Index provided!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"    public String handleToDo(String task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"        ToDo item \u003d new ToDo(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"        taskList.add(item);","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"        this.saveList();","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"        return \"Got it. I\u0027ve added this task:\\n   \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"                INDENTATION + item + \"\\n \" + INDENTATION + \"Now you have \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"                taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":83,"author":{"gitId":"richiehx"},"content":"    public String handleDeadline(String desc, String by) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"richiehx"},"content":"        Deadline item \u003d new Deadline(desc, by);","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"richiehx"},"content":"        taskList.add(item);","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"richiehx"},"content":"        this.saveList();","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"richiehx"},"content":"        return \"Got it. I\u0027ve added this task:\\n   \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"richiehx"},"content":"                INDENTATION + item + \"\\n \" + INDENTATION + \"Now you have \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":90,"author":{"gitId":"richiehx"},"content":"                taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":92,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":93,"author":{"gitId":"richiehx"},"content":"    public String handleEvent(String desc, String start, String end) throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"richiehx"},"content":"        Event item \u003d new Event(desc, start, end);","lastModifiedDate":"2023-08-28"},{"lineNumber":95,"author":{"gitId":"richiehx"},"content":"        taskList.add(item);","lastModifiedDate":"2023-08-28"},{"lineNumber":96,"author":{"gitId":"richiehx"},"content":"        this.saveList();","lastModifiedDate":"2023-08-28"},{"lineNumber":97,"author":{"gitId":"richiehx"},"content":"        return \"Got it. I\u0027ve added this task:\\n   \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"richiehx"},"content":"                INDENTATION + item + \"\\n \" + INDENTATION + \"Now you have \" +","lastModifiedDate":"2023-08-28"},{"lineNumber":99,"author":{"gitId":"richiehx"},"content":"                taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":102,"author":{"gitId":"richiehx"},"content":"    public String exportList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"richiehx"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"richiehx"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-08-28"},{"lineNumber":105,"author":{"gitId":"richiehx"},"content":"            sb.append(task.exportData()).append(\"\\n\");","lastModifiedDate":"2023-08-28"},{"lineNumber":106,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":107,"author":{"gitId":"richiehx"},"content":"        return sb.toString();","lastModifiedDate":"2023-08-28"},{"lineNumber":108,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":109,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":110,"author":{"gitId":"richiehx"},"content":"    public void saveList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":111,"author":{"gitId":"richiehx"},"content":"        String data \u003d this.exportList();","lastModifiedDate":"2023-08-28"},{"lineNumber":112,"author":{"gitId":"richiehx"},"content":"        storage.saveData(data);","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"richiehx":116}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"    public String exportData() {","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"        return \"T | \" + this.getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"richiehx":17}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"    public static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"    public String getInput() {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"    private static String formatOutput(String output) {","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"        String horizontalLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"        return INDENTATION + horizontalLine + \"\\n \" +","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"                INDENTATION + output + \u0027\\n\u0027 + INDENTATION + horizontalLine + \u0027\\n\u0027;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"        System.out.println(formatOutput(\"Hello! I\u0027m Nano\\n\" + INDENTATION + \" What can I do for you?\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    public void printBye() {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"        System.out.println(formatOutput(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"    public void printInvalidCommandError() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"        System.out.println(formatOutput(\"I don\u0027t understand what you\u0027re saying.\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"    public void printOutput(String rawOutput) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"        System.out.println(formatOutput(rawOutput));","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"richiehx":37}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import duke.Duke;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"    public void parseToDoSuccess() {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"todo boo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"        String actual \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"            actual \u003d parseLine.parseToDoArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"            fail(\"parse failure\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"boo\";","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected,actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"    public void parseDeadlineSuccess() {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"deadline boo /by 2001-12-10 11:11\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"        String[] actual \u003d {};","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"            actual \u003d parseLine.parseDeadlineArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"            fail(\"parse failure\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"        String expectedName \u003d \"boo\";","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"        String expectedBy \u003d \"2001-12-10 11:11\";","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedName ,actual[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedBy, actual[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"    public void testParseDeadlineError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"deadline boo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"            parseLine.parseDeadlineArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Hey, the Deadline given is Invalid! \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"                \"Make sure that you follow this format:\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"                Duke.INDENTATION + \"\u0027taskDescription /by time\u0027\";","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"    public void parseEventSuccess() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"event boo /from 2001-12-10 11:11 /to 2001-12-10 11:12\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"        String[] actual \u003d {};","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"            actual \u003d parseLine.parseEventArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"            fail(\"parse failure\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"        String expectedName \u003d \"boo\";","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"        String expectedFrom \u003d \"2001-12-10 11:11\";","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"        String expectedTo \u003d \"2001-12-10 11:12\";","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedName ,actual[0]);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedFrom, actual[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"        assertEquals(expectedTo, actual[2]);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"    public void testParseEventError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"        Parser parseLine \u003d new Parser(\"event boo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"            parseLine.parseEventArguments();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Hey, the Event given is Invalid!\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"                \" Make sure that you follow this format:\\n\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"                Duke.INDENTATION + \" \u0027eventDescription /from startTime /to endTime\u0027\";","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"richiehx":82}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"package duke.tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"    public static final String INDENTATION \u003d \"    \";","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"richiehx"},"content":"    public void testAddToDoSuccess() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"richiehx"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"        TaskList testList \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"richiehx"},"content":"        String actual \u003d testList.handleToDo(\"test desc\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Got it. I\u0027ve added this task:\\n   \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"richiehx"},"content":"                INDENTATION + \"[T][ ] test desc\" + \"\\n \" + INDENTATION + \"Now you have \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"richiehx"},"content":"                1 + \" tasks in the list.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"richiehx"},"content":"    public void testAddDeadlineSuccess() {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"richiehx"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"richiehx"},"content":"        TaskList testList \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"richiehx"},"content":"        String actual \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"richiehx"},"content":"            actual \u003d testList.handleDeadline(\"boo\", \"2001-10-22 11:12\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"richiehx"},"content":"            fail(\"Did not add Deadline successfully\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Got it. I\u0027ve added this task:\\n   \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"richiehx"},"content":"                INDENTATION + \"[D][ ] boo (by: 22 October 2001 11:12)\" + \"\\n \" + INDENTATION + \"Now you have \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"richiehx"},"content":"                1 + \" tasks in the list.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"richiehx"},"content":"    public void testAddDeadlineError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"richiehx"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"richiehx"},"content":"        TaskList testList \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"richiehx"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"richiehx"},"content":"            testList.handleDeadline(\"boo\", \"2001-10-22\");","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"richiehx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Deadline time must be in this format: yyyy-mm-dd hh:mm\";","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"richiehx"},"content":"    public void testAddEventSuccess() {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"richiehx"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"richiehx"},"content":"        TaskList testList \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"richiehx"},"content":"        String actual \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"richiehx"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"richiehx"},"content":"            actual \u003d testList.handleEvent(\"boo\", \"2001-10-22 11:12\", \"2001-11-22 11:12\");","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"richiehx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"richiehx"},"content":"            fail(\"Did not add Event successfully\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"richiehx"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Got it. I\u0027ve added this task:\\n   \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"richiehx"},"content":"                INDENTATION + \"[E][ ] boo (from: 22 October 2001 11:12 to: 22 November 2001 11:12)\" + \"\\n \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"richiehx"},"content":"                INDENTATION + \"Now you have \" + 1 + \" tasks in the list.\";","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"richiehx"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"richiehx"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"richiehx"},"content":"    public void testAddEventError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"richiehx"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"richiehx"},"content":"        TaskList testList \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"richiehx"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"richiehx"},"content":"            testList.handleEvent(\"boo\", \"2001-10-22 11:12\", \"2001-11-22\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"richiehx"},"content":"        });","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"richiehx"},"content":"        String expected \u003d \"Event times must be in this format: yyyy-mm-dd HH:mm\";","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"richiehx"},"content":"        assertEquals(expected, exception.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"richiehx"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"richiehx"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"richiehx":79}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"T |   | boo1","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"D |   | return book | 01 December 2021 11:11","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"E |   | project meeting | 01 December 2021 11:11-01 December 2021 11:12","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"richiehx":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"richiehx"},"content":"todo boo1","lastModifiedDate":"2023-08-25"},{"lineNumber":2,"author":{"gitId":"richiehx"},"content":"todo boo2","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"richiehx"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"richiehx"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"richiehx"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"richiehx"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"richiehx"},"content":"delete 2","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"richiehx"},"content":"deadline return book /by 2021-12-01 11:11","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"richiehx"},"content":"event project meeting /from 2021-12-01 11:11 /to 2021-12-01 11:12","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"richiehx"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"richiehx"},"content":"delete 2","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"richiehx"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"richiehx":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"richiehx"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"richiehx"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"richiehx":2,"-":19}}]
